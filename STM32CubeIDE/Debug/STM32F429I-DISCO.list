
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001e860  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002124  0801ea10  0801ea10  0002ea10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000a52  08020b34  08020b34  00030b34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000020  08021588  08021588  00031588  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000006c  080215a8  080215a8  000315a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0004d060  08021614  08021614  00031614  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0806e674  0806e674  0008016c  2**0
                  CONTENTS
  8 .ARM          00000008  0806e674  0806e674  0007e674  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0806e67c  0806e67c  0008016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0806e67c  0806e67c  0007e67c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  0806e690  0806e690  0007e690  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  0806e698  00080000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00012fcc  2000016c  0806e804  0008016c  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20013138  0806e804  00083138  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  0008016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00090000  2**2
                  ALLOC
 17 .debug_line   0005768f  00000000  00000000  0008019c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000d7df0  00000000  00000000  000d782b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00017cc9  00000000  00000000  001af61b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000033d0  00000000  00000000  001c72e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    00114fb0  00000000  00000000  001ca6b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00005b40  00000000  00000000  002df668  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    0002f250  00000000  00000000  002e51a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00031bdb  00000000  00000000  003143f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  00345fd3  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00009228  00000000  00000000  003460a4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801e9f8 	.word	0x0801e9f8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	0801e9f8 	.word	0x0801e9f8

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f004 fae5 	bl	8004b8c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f01d f9b3 	bl	801d92c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 ff61 	bl	800148c <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	0806e698 	.word	0x0806e698
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005dc:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005e0:	20013138 	.word	0x20013138

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80005e6:	4770      	bx	lr

080005e8 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80005e8:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80005ea:	f000 fd2b 	bl	8001044 <touchgfx_components_init>
  touchgfx_init();
}
 80005ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80005f2:	f000 bcb7 	b.w	8000f64 <touchgfx_init>

080005f6 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005f6:	f000 bd27 	b.w	8001048 <touchgfx_taskEntry>

080005fa <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005fa:	4770      	bx	lr

080005fc <_ZN20STM32TouchControllerD0Ev>:
 80005fc:	b510      	push	{r4, lr}
 80005fe:	2104      	movs	r1, #4
 8000600:	4604      	mov	r4, r0
 8000602:	f01d f91a 	bl	801d83a <_ZdlPvj>
 8000606:	4620      	mov	r0, r4
 8000608:	bd10      	pop	{r4, pc}
	...

0800060c <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 800060c:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800060e:	4b0c      	ldr	r3, [pc, #48]	; (8000640 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000610:	4c0c      	ldr	r4, [pc, #48]	; (8000644 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000612:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000614:	4b0c      	ldr	r3, [pc, #48]	; (8000648 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000616:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000618:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800061a:	6863      	ldr	r3, [r4, #4]
 800061c:	4798      	blx	r3
 800061e:	f640 0311 	movw	r3, #2065	; 0x811
 8000622:	4298      	cmp	r0, r3
 8000624:	d10a      	bne.n	800063c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000626:	4d09      	ldr	r5, [pc, #36]	; (800064c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000628:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800062a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 800062c:	2082      	movs	r0, #130	; 0x82
 800062e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000630:	682b      	ldr	r3, [r5, #0]
 8000632:	2082      	movs	r0, #130	; 0x82
 8000634:	68db      	ldr	r3, [r3, #12]
 8000636:	4798      	blx	r3
 8000638:	2000      	movs	r0, #0
    }

    return ret;
}
 800063a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 800063c:	2001      	movs	r0, #1
 800063e:	e7fc      	b.n	800063a <_Z11BSP_TS_Inittt+0x2e>
 8000640:	20000188 	.word	0x20000188
 8000644:	2000004c 	.word	0x2000004c
 8000648:	2000018a 	.word	0x2000018a
 800064c:	2000018c 	.word	0x2000018c

08000650 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000650:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000654:	20f0      	movs	r0, #240	; 0xf0
 8000656:	f7ff bfd9 	b.w	800060c <_Z11BSP_TS_Inittt>
	...

0800065c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 800065c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800065e:	4d34      	ldr	r5, [pc, #208]	; (8000730 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000660:	682b      	ldr	r3, [r5, #0]
{
 8000662:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000664:	691b      	ldr	r3, [r3, #16]
 8000666:	2082      	movs	r0, #130	; 0x82
 8000668:	4798      	blx	r3
 800066a:	b280      	uxth	r0, r0
 800066c:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800066e:	2800      	cmp	r0, #0
 8000670:	d04c      	beq.n	800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000672:	682b      	ldr	r3, [r5, #0]
 8000674:	f10d 0206 	add.w	r2, sp, #6
 8000678:	695b      	ldr	r3, [r3, #20]
 800067a:	a901      	add	r1, sp, #4
 800067c:	2082      	movs	r0, #130	; 0x82
 800067e:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8000680:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000684:	f640 6274 	movw	r2, #3700	; 0xe74
 8000688:	4293      	cmp	r3, r2
 800068a:	d941      	bls.n	8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb4>
        {
            y = 3700;
 800068c:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8000690:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000694:	f5c2 6267 	rsb	r2, r2, #3696	; 0xe70
 8000698:	3204      	adds	r2, #4
 800069a:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800069c:	2a0a      	cmp	r2, #10
 800069e:	d93d      	bls.n	800071c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        yr = y / 11;
 80006a0:	230b      	movs	r3, #11
 80006a2:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 80006a6:	4b23      	ldr	r3, [pc, #140]	; (8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 80006a8:	881b      	ldrh	r3, [r3, #0]
 80006aa:	429a      	cmp	r2, r3
 80006ac:	d901      	bls.n	80006b2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x56>
        {
            yr = TsYBoundary - 1;
 80006ae:	3b01      	subs	r3, #1
 80006b0:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80006b2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80006b6:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80006ba:	428b      	cmp	r3, r1
 80006bc:	d830      	bhi.n	8000720 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>
        {
            x = 3870 - x;
 80006be:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006c2:	330e      	adds	r3, #14
 80006c4:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006c6:	210f      	movs	r1, #15
 80006c8:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006cc:	491a      	ldr	r1, [pc, #104]	; (8000738 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
 80006ce:	8809      	ldrh	r1, [r1, #0]
 80006d0:	428b      	cmp	r3, r1
 80006d2:	d901      	bls.n	80006d8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7c>
        {
            xr = TsXBoundary - 1;
 80006d4:	1e4b      	subs	r3, r1, #1
 80006d6:	b29b      	uxth	r3, r3
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d8:	4e18      	ldr	r6, [pc, #96]	; (800073c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006da:	4d19      	ldr	r5, [pc, #100]	; (8000740 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe4>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006dc:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006de:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006e0:	4283      	cmp	r3, r0
 80006e2:	b281      	uxth	r1, r0
 80006e4:	bf8c      	ite	hi
 80006e6:	1a59      	subhi	r1, r3, r1
 80006e8:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006ea:	b2b8      	uxth	r0, r7
 80006ec:	42ba      	cmp	r2, r7
 80006ee:	bf8c      	ite	hi
 80006f0:	1a10      	subhi	r0, r2, r0
 80006f2:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006f4:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006f6:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006f8:	4401      	add	r1, r0
 80006fa:	2905      	cmp	r1, #5
        {
            _x = x;
 80006fc:	bfc8      	it	gt
 80006fe:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8000700:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8000702:	bfc8      	it	gt
 8000704:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8000706:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000708:	682b      	ldr	r3, [r5, #0]
 800070a:	80a3      	strh	r3, [r4, #4]
    }
}
 800070c:	b003      	add	sp, #12
 800070e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8000710:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8000712:	bf9c      	itt	ls
 8000714:	23b4      	movls	r3, #180	; 0xb4
 8000716:	f8ad 3006 	strhls.w	r3, [sp, #6]
 800071a:	e7b9      	b.n	8000690 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 800071c:	2200      	movs	r2, #0
 800071e:	e7c8      	b.n	80006b2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x56>
            x = 3800 - x;
 8000720:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8000724:	3308      	adds	r3, #8
 8000726:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000728:	2b0e      	cmp	r3, #14
 800072a:	d8cc      	bhi.n	80006c6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
            xr = 0;
 800072c:	2300      	movs	r3, #0
 800072e:	e7d3      	b.n	80006d8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7c>
 8000730:	2000018c 	.word	0x2000018c
 8000734:	2000018a 	.word	0x2000018a
 8000738:	20000188 	.word	0x20000188
 800073c:	20000190 	.word	0x20000190
 8000740:	20000194 	.word	0x20000194

08000744 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000744:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000746:	4668      	mov	r0, sp
{
 8000748:	460d      	mov	r5, r1
 800074a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 800074c:	f7ff ff86 	bl	800065c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000750:	f8bd 0000 	ldrh.w	r0, [sp]
 8000754:	b130      	cbz	r0, 8000764 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000756:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800075a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800075c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000760:	6023      	str	r3, [r4, #0]
        return true;
 8000762:	2001      	movs	r0, #1
}
 8000764:	b003      	add	sp, #12
 8000766:	bd30      	pop	{r4, r5, pc}

08000768 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000768:	2803      	cmp	r0, #3
 800076a:	d821      	bhi.n	80007b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 800076c:	e8df f000 	tbb	[pc, r0]
 8000770:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000774:	4b0f      	ldr	r3, [pc, #60]	; (80007b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000776:	681a      	ldr	r2, [r3, #0]
 8000778:	fab2 f282 	clz	r2, r2
 800077c:	0952      	lsrs	r2, r2, #5
 800077e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000780:	480d      	ldr	r0, [pc, #52]	; (80007b8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000782:	f004 be6f 	b.w	8005464 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000786:	4b0b      	ldr	r3, [pc, #44]	; (80007b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000788:	685a      	ldr	r2, [r3, #4]
 800078a:	fab2 f282 	clz	r2, r2
 800078e:	0952      	lsrs	r2, r2, #5
 8000790:	2108      	movs	r1, #8
 8000792:	e7f5      	b.n	8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000794:	4b07      	ldr	r3, [pc, #28]	; (80007b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000796:	689a      	ldr	r2, [r3, #8]
 8000798:	fab2 f282 	clz	r2, r2
 800079c:	0952      	lsrs	r2, r2, #5
 800079e:	2110      	movs	r1, #16
 80007a0:	e7ee      	b.n	8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80007a2:	4b04      	ldr	r3, [pc, #16]	; (80007b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80007a4:	68da      	ldr	r2, [r3, #12]
 80007a6:	fab2 f282 	clz	r2, r2
 80007aa:	0952      	lsrs	r2, r2, #5
 80007ac:	2120      	movs	r1, #32
 80007ae:	e7e7      	b.n	8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80007b0:	4770      	bx	lr
 80007b2:	bf00      	nop
 80007b4:	20000198 	.word	0x20000198
 80007b8:	40021000 	.word	0x40021000

080007bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80007bc:	2803      	cmp	r0, #3
 80007be:	d821      	bhi.n	8000804 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 80007c0:	e8df f000 	tbb	[pc, r0]
 80007c4:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007c8:	4b0f      	ldr	r3, [pc, #60]	; (8000808 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007ca:	681a      	ldr	r2, [r3, #0]
 80007cc:	3a00      	subs	r2, #0
 80007ce:	bf18      	it	ne
 80007d0:	2201      	movne	r2, #1
 80007d2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007d4:	480d      	ldr	r0, [pc, #52]	; (800080c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80007d6:	f004 be45 	b.w	8005464 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007da:	4b0b      	ldr	r3, [pc, #44]	; (8000808 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007dc:	685a      	ldr	r2, [r3, #4]
 80007de:	3a00      	subs	r2, #0
 80007e0:	bf18      	it	ne
 80007e2:	2201      	movne	r2, #1
 80007e4:	2108      	movs	r1, #8
 80007e6:	e7f5      	b.n	80007d4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80007e8:	4b07      	ldr	r3, [pc, #28]	; (8000808 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007ea:	689a      	ldr	r2, [r3, #8]
 80007ec:	3a00      	subs	r2, #0
 80007ee:	bf18      	it	ne
 80007f0:	2201      	movne	r2, #1
 80007f2:	2110      	movs	r1, #16
 80007f4:	e7ee      	b.n	80007d4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007f6:	4b04      	ldr	r3, [pc, #16]	; (8000808 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007f8:	68da      	ldr	r2, [r3, #12]
 80007fa:	3a00      	subs	r2, #0
 80007fc:	bf18      	it	ne
 80007fe:	2201      	movne	r2, #1
 8000800:	2120      	movs	r1, #32
 8000802:	e7e7      	b.n	80007d4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000804:	4770      	bx	lr
 8000806:	bf00      	nop
 8000808:	20000198 	.word	0x20000198
 800080c:	40021000 	.word	0x40021000

08000810 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000810:	2803      	cmp	r0, #3
 8000812:	d80d      	bhi.n	8000830 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 8000814:	e8df f000 	tbb	[pc, r0]
 8000818:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800081c:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800081e:	4805      	ldr	r0, [pc, #20]	; (8000834 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000820:	f004 be25 	b.w	800546e <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000824:	2108      	movs	r1, #8
 8000826:	e7fa      	b.n	800081e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000828:	2110      	movs	r1, #16
 800082a:	e7f8      	b.n	800081e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800082c:	2120      	movs	r1, #32
 800082e:	e7f6      	b.n	800081e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000830:	4770      	bx	lr
 8000832:	bf00      	nop
 8000834:	40021000 	.word	0x40021000

08000838 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000838:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800083a:	2803      	cmp	r0, #3
 800083c:	d811      	bhi.n	8000862 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 800083e:	e8df f000 	tbb	[pc, r0]
 8000842:	0a02      	.short	0x0a02
 8000844:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000846:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000848:	4807      	ldr	r0, [pc, #28]	; (8000868 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 800084a:	f004 fe05 	bl	8005458 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 800084e:	1e43      	subs	r3, r0, #1
 8000850:	4258      	negs	r0, r3
 8000852:	4158      	adcs	r0, r3
 8000854:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000856:	2108      	movs	r1, #8
 8000858:	e7f6      	b.n	8000848 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800085a:	2110      	movs	r1, #16
 800085c:	e7f4      	b.n	8000848 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800085e:	2120      	movs	r1, #32
 8000860:	e7f2      	b.n	8000848 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000862:	2000      	movs	r0, #0
 8000864:	e7f3      	b.n	800084e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000866:	bf00      	nop
 8000868:	40021000 	.word	0x40021000

0800086c <_ZN8touchgfx4GPIO4initEv>:
{
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	4d08      	ldr	r5, [pc, #32]	; (8000890 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000870:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000872:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000874:	b2e0      	uxtb	r0, r4
 8000876:	f7ff ffdf 	bl	8000838 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800087a:	b118      	cbz	r0, 8000884 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 800087c:	682b      	ldr	r3, [r5, #0]
 800087e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000880:	bf18      	it	ne
 8000882:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000884:	3401      	adds	r4, #1
 8000886:	2c05      	cmp	r4, #5
 8000888:	f105 0504 	add.w	r5, r5, #4
 800088c:	d1f2      	bne.n	8000874 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800088e:	bd70      	pop	{r4, r5, r6, pc}
 8000890:	20000198 	.word	0x20000198

08000894 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000894:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000896:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 800089a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 800089e:	4770      	bx	lr

080008a0 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80008a0:	2000      	movs	r0, #0
 80008a2:	4770      	bx	lr

080008a4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80008a4:	4b03      	ldr	r3, [pc, #12]	; (80008b4 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80008a6:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80008a8:	3900      	subs	r1, #0
 80008aa:	bf18      	it	ne
 80008ac:	2101      	movne	r1, #1
 80008ae:	7019      	strb	r1, [r3, #0]
    }
 80008b0:	4770      	bx	lr
 80008b2:	bf00      	nop
 80008b4:	20012643 	.word	0x20012643

080008b8 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80008b8:	2000      	movs	r0, #0
 80008ba:	4770      	bx	lr

080008bc <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80008bc:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80008be:	b10b      	cbz	r3, 80008c4 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80008c0:	4608      	mov	r0, r1
 80008c2:	4718      	bx	r3
        }
    }
 80008c4:	4770      	bx	lr

080008c6 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80008c6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80008ca:	4770      	bx	lr

080008cc <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80008cc:	6840      	ldr	r0, [r0, #4]
 80008ce:	6803      	ldr	r3, [r0, #0]
 80008d0:	699b      	ldr	r3, [r3, #24]
 80008d2:	4718      	bx	r3

080008d4 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80008d4:	4770      	bx	lr

080008d6 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80008d6:	4770      	bx	lr

080008d8 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80008d8:	4770      	bx	lr
	...

080008dc <_ZN11TouchGFXHAL10initializeEv>:

LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");

void TouchGFXHAL::initialize()
{
 80008dc:	b570      	push	{r4, r5, r6, lr}
 80008de:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80008e0:	f000 fc80 	bl	80011e4 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // existing frame buffers are re-used. just add animation storage
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 80008e4:	6823      	ldr	r3, [r4, #0]
 80008e6:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80008ea:	4b04      	ldr	r3, [pc, #16]	; (80008fc <_ZN11TouchGFXHAL10initializeEv+0x20>)
 80008ec:	e9d4 120f 	ldrd	r1, r2, [r4, #60]	; 0x3c
 80008f0:	4620      	mov	r0, r4
 80008f2:	46ac      	mov	ip, r5
}
 80008f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 80008f8:	4760      	bx	ip
 80008fa:	bf00      	nop
 80008fc:	d0000000 	.word	0xd0000000

08000900 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000900:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000902:	6803      	ldr	r3, [r0, #0]
{
 8000904:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000906:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800090a:	4798      	blx	r3
    enableInterrupts();
 800090c:	6823      	ldr	r3, [r4, #0]
 800090e:	4620      	mov	r0, r4
 8000910:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000912:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000914:	f000 f8ec 	bl	8000af0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000918:	6823      	ldr	r3, [r4, #0]
 800091a:	4620      	mov	r0, r4
 800091c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800091e:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000920:	2029      	movs	r0, #41	; 0x29
 8000922:	f001 f85b 	bl	80019dc <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000926:	f000 f8e3 	bl	8000af0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 800092a:	6823      	ldr	r3, [r4, #0]
 800092c:	4620      	mov	r0, r4
 800092e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000930:	4798      	blx	r3
    for (;;)
 8000932:	e7f8      	b.n	8000926 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000934 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000934:	b510      	push	{r4, lr}
 8000936:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000938:	f009 ff56 	bl	800a7e8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800093c:	6823      	ldr	r3, [r4, #0]
 800093e:	4620      	mov	r0, r4
 8000940:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000944:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000948:	4718      	bx	r3

0800094a <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800094a:	f000 bc3d 	b.w	80011c8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

0800094e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800094e:	f000 bc41 	b.w	80011d4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000952 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000952:	f000 bc65 	b.w	8001220 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000956 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000956:	f000 bc13 	b.w	8001180 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

0800095a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800095a:	f000 bc6d 	b.w	8001238 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800095e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800095e:	f000 bc75 	b.w	800124c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000962 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000962:	f000 bc17 	b.w	8001194 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000966 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000966:	f009 b9ab 	b.w	8009cc0 <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800096a <_ZN11TouchGFXHALD0Ev>:
 800096a:	b510      	push	{r4, lr}
 800096c:	217c      	movs	r1, #124	; 0x7c
 800096e:	4604      	mov	r4, r0
 8000970:	f01c ff63 	bl	801d83a <_ZdlPvj>
 8000974:	4620      	mov	r0, r4
 8000976:	bd10      	pop	{r4, pc}

08000978 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8000978:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 800097c:	b11b      	cbz	r3, 8000986 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 800097e:	6840      	ldr	r0, [r0, #4]
 8000980:	6803      	ldr	r3, [r0, #0]
 8000982:	681b      	ldr	r3, [r3, #0]
 8000984:	4718      	bx	r3
    }
 8000986:	4618      	mov	r0, r3
 8000988:	4770      	bx	lr
	...

0800098c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800098c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800098e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000992:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8000996:	4b0c      	ldr	r3, [pc, #48]	; (80009c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000998:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800099a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800099c:	d009      	beq.n	80009b2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800099e:	b93a      	cbnz	r2, 80009b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009a0:	4a0a      	ldr	r2, [pc, #40]	; (80009cc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009a2:	490b      	ldr	r1, [pc, #44]	; (80009d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009a4:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009a6:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009a8:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009aa:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80009ac:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80009ae:	701a      	strb	r2, [r3, #0]
    }
 80009b0:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80009b2:	2a00      	cmp	r2, #0
 80009b4:	d0fc      	beq.n	80009b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009b6:	4a05      	ldr	r2, [pc, #20]	; (80009cc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009b8:	4905      	ldr	r1, [pc, #20]	; (80009d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009ba:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009bc:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80009be:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009c0:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80009c2:	2200      	movs	r2, #0
 80009c4:	e7f3      	b.n	80009ae <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80009c6:	bf00      	nop
 80009c8:	2001263c 	.word	0x2001263c
 80009cc:	20012638 	.word	0x20012638
 80009d0:	2001263a 	.word	0x2001263a

080009d4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80009d4:	b570      	push	{r4, r5, r6, lr}
 80009d6:	460d      	mov	r5, r1
 80009d8:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009da:	b935      	cbnz	r5, 80009ea <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80009dc:	4b09      	ldr	r3, [pc, #36]	; (8000a04 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80009de:	4a0a      	ldr	r2, [pc, #40]	; (8000a08 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80009e0:	480a      	ldr	r0, [pc, #40]	; (8000a0c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80009e2:	f240 21d2 	movw	r1, #722	; 0x2d2
 80009e6:	f01c ff57 	bl	801d898 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009ea:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009ee:	4b08      	ldr	r3, [pc, #32]	; (8000a10 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80009f0:	3a00      	subs	r2, #0
 80009f2:	bf18      	it	ne
 80009f4:	2201      	movne	r2, #1
 80009f6:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80009f8:	6803      	ldr	r3, [r0, #0]
    }
 80009fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80009fe:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000a02:	4718      	bx	r3
 8000a04:	0801ea68 	.word	0x0801ea68
 8000a08:	0801eaa0 	.word	0x0801eaa0
 8000a0c:	0801eaee 	.word	0x0801eaee
 8000a10:	20012642 	.word	0x20012642

08000a14 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000a14:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000a16:	4b09      	ldr	r3, [pc, #36]	; (8000a3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000a18:	881b      	ldrh	r3, [r3, #0]
 8000a1a:	428b      	cmp	r3, r1
 8000a1c:	d803      	bhi.n	8000a26 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a1e:	4b08      	ldr	r3, [pc, #32]	; (8000a40 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a20:	881b      	ldrh	r3, [r3, #0]
 8000a22:	4293      	cmp	r3, r2
 8000a24:	d905      	bls.n	8000a32 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a26:	4b07      	ldr	r3, [pc, #28]	; (8000a44 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a28:	4a07      	ldr	r2, [pc, #28]	; (8000a48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a2a:	4808      	ldr	r0, [pc, #32]	; (8000a4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a2c:	219e      	movs	r1, #158	; 0x9e
 8000a2e:	f01c ff33 	bl	801d898 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a32:	4b07      	ldr	r3, [pc, #28]	; (8000a50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a34:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a36:	4b07      	ldr	r3, [pc, #28]	; (8000a54 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a38:	801a      	strh	r2, [r3, #0]
    }
 8000a3a:	bd08      	pop	{r3, pc}
 8000a3c:	20012638 	.word	0x20012638
 8000a40:	2001263a 	.word	0x2001263a
 8000a44:	0801eb33 	.word	0x0801eb33
 8000a48:	0801eb96 	.word	0x0801eb96
 8000a4c:	0801eaee 	.word	0x0801eaee
 8000a50:	2001263e 	.word	0x2001263e
 8000a54:	20012640 	.word	0x20012640

08000a58 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000a58:	2101      	movs	r1, #1
{
 8000a5a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000a5c:	2200      	movs	r2, #0
 8000a5e:	4608      	mov	r0, r1
 8000a60:	f006 fdb9 	bl	80075d6 <osSemaphoreNew>
 8000a64:	4b0a      	ldr	r3, [pc, #40]	; (8000a90 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000a66:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000a68:	b928      	cbnz	r0, 8000a76 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000a6a:	4b0a      	ldr	r3, [pc, #40]	; (8000a94 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000a6c:	4a0a      	ldr	r2, [pc, #40]	; (8000a98 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a6e:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a70:	480a      	ldr	r0, [pc, #40]	; (8000a9c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000a72:	f01c ff11 	bl	801d898 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000a76:	2200      	movs	r2, #0
 8000a78:	2104      	movs	r1, #4
 8000a7a:	2001      	movs	r0, #1
 8000a7c:	f006 fe51 	bl	8007722 <osMessageQueueNew>
 8000a80:	4b07      	ldr	r3, [pc, #28]	; (8000aa0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000a82:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a84:	b918      	cbnz	r0, 8000a8e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000a86:	4b07      	ldr	r3, [pc, #28]	; (8000aa4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000a88:	4a03      	ldr	r2, [pc, #12]	; (8000a98 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a8a:	212c      	movs	r1, #44	; 0x2c
 8000a8c:	e7f0      	b.n	8000a70 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000a8e:	bd08      	pop	{r3, pc}
 8000a90:	200001ac 	.word	0x200001ac
 8000a94:	0801ecb4 	.word	0x0801ecb4
 8000a98:	0801ecfd 	.word	0x0801ecfd
 8000a9c:	0801ed2c 	.word	0x0801ed2c
 8000aa0:	200001a8 	.word	0x200001a8
 8000aa4:	0801ed6a 	.word	0x0801ed6a

08000aa8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000aa8:	4b02      	ldr	r3, [pc, #8]	; (8000ab4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000aaa:	f04f 31ff 	mov.w	r1, #4294967295
 8000aae:	6818      	ldr	r0, [r3, #0]
 8000ab0:	f006 bddb 	b.w	800766a <osSemaphoreAcquire>
 8000ab4:	200001ac 	.word	0x200001ac

08000ab8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000ab8:	4b01      	ldr	r3, [pc, #4]	; (8000ac0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000aba:	6818      	ldr	r0, [r3, #0]
 8000abc:	f006 be00 	b.w	80076c0 <osSemaphoreRelease>
 8000ac0:	200001ac 	.word	0x200001ac

08000ac4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000ac4:	4b02      	ldr	r3, [pc, #8]	; (8000ad0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000ac6:	2100      	movs	r1, #0
 8000ac8:	6818      	ldr	r0, [r3, #0]
 8000aca:	f006 bdce 	b.w	800766a <osSemaphoreAcquire>
 8000ace:	bf00      	nop
 8000ad0:	200001ac 	.word	0x200001ac

08000ad4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000ad4:	f7ff bff0 	b.w	8000ab8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000ad8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000ad8:	4803      	ldr	r0, [pc, #12]	; (8000ae8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000ada:	4904      	ldr	r1, [pc, #16]	; (8000aec <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000adc:	6800      	ldr	r0, [r0, #0]
 8000ade:	2300      	movs	r3, #0
 8000ae0:	461a      	mov	r2, r3
 8000ae2:	f006 be59 	b.w	8007798 <osMessageQueuePut>
 8000ae6:	bf00      	nop
 8000ae8:	200001a8 	.word	0x200001a8
 8000aec:	20000004 	.word	0x20000004

08000af0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000af0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000af2:	4c08      	ldr	r4, [pc, #32]	; (8000b14 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000af4:	2300      	movs	r3, #0
 8000af6:	461a      	mov	r2, r3
 8000af8:	a901      	add	r1, sp, #4
 8000afa:	6820      	ldr	r0, [r4, #0]
 8000afc:	f006 fe7c 	bl	80077f8 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000b00:	6820      	ldr	r0, [r4, #0]
 8000b02:	f04f 33ff 	mov.w	r3, #4294967295
 8000b06:	2200      	movs	r2, #0
 8000b08:	a901      	add	r1, sp, #4
 8000b0a:	f006 fe75 	bl	80077f8 <osMessageQueueGet>
}
 8000b0e:	b002      	add	sp, #8
 8000b10:	bd10      	pop	{r4, pc}
 8000b12:	bf00      	nop
 8000b14:	200001a8 	.word	0x200001a8

08000b18 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000b18:	6803      	ldr	r3, [r0, #0]
 8000b1a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000b1c:	4718      	bx	r3

08000b1e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000b1e:	2001      	movs	r0, #1
 8000b20:	4770      	bx	lr

08000b22 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000b22:	6803      	ldr	r3, [r0, #0]
 8000b24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000b26:	4718      	bx	r3

08000b28 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000b28:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000b2a:	2300      	movs	r3, #0
 8000b2c:	9301      	str	r3, [sp, #4]
 8000b2e:	4b0d      	ldr	r3, [pc, #52]	; (8000b64 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000b30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000b32:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000b36:	631a      	str	r2, [r3, #48]	; 0x30
 8000b38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000b3a:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000b3e:	9201      	str	r2, [sp, #4]
 8000b40:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000b42:	691a      	ldr	r2, [r3, #16]
 8000b44:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000b48:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000b4a:	691a      	ldr	r2, [r3, #16]
 8000b4c:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000b50:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000b52:	4b05      	ldr	r3, [pc, #20]	; (8000b68 <_ZN8STM32DMA10initializeEv+0x40>)
 8000b54:	4a05      	ldr	r2, [pc, #20]	; (8000b6c <_ZN8STM32DMA10initializeEv+0x44>)
 8000b56:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b58:	4b05      	ldr	r3, [pc, #20]	; (8000b70 <_ZN8STM32DMA10initializeEv+0x48>)
 8000b5a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000b5e:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000b60:	b002      	add	sp, #8
 8000b62:	4770      	bx	lr
 8000b64:	40023800 	.word	0x40023800
 8000b68:	20001564 	.word	0x20001564
 8000b6c:	08000bb5 	.word	0x08000bb5
 8000b70:	e000e100 	.word	0xe000e100

08000b74 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000b74:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000b78:	4770      	bx	lr
	...

08000b7c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000b7c:	4b05      	ldr	r3, [pc, #20]	; (8000b94 <_ZN8STM32DMAD1Ev+0x18>)
 8000b7e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b80:	4b05      	ldr	r3, [pc, #20]	; (8000b98 <_ZN8STM32DMAD1Ev+0x1c>)
 8000b82:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000b86:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000b8a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000b8e:	f3bf 8f6f 	isb	sy
}
 8000b92:	4770      	bx	lr
 8000b94:	0801eef8 	.word	0x0801eef8
 8000b98:	e000e100 	.word	0xe000e100

08000b9c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000b9c:	b510      	push	{r4, lr}
 8000b9e:	4604      	mov	r4, r0
}
 8000ba0:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000ba4:	f7ff ffea 	bl	8000b7c <_ZN8STM32DMAD1Ev>
 8000ba8:	4620      	mov	r0, r4
 8000baa:	f01c fe46 	bl	801d83a <_ZdlPvj>
 8000bae:	4620      	mov	r0, r4
 8000bb0:	bd10      	pop	{r4, pc}
	...

08000bb4 <DMA2D_XferCpltCallback>:
        return instance;
 8000bb4:	4b02      	ldr	r3, [pc, #8]	; (8000bc0 <DMA2D_XferCpltCallback+0xc>)
 8000bb6:	681b      	ldr	r3, [r3, #0]
 8000bb8:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000bba:	6803      	ldr	r3, [r0, #0]
 8000bbc:	695b      	ldr	r3, [r3, #20]
 8000bbe:	4718      	bx	r3
 8000bc0:	20012644 	.word	0x20012644

08000bc4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000bc4:	b570      	push	{r4, r5, r6, lr}
 8000bc6:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000bc8:	4625      	mov	r5, r4
 8000bca:	4b0a      	ldr	r3, [pc, #40]	; (8000bf4 <_ZN8STM32DMAC1Ev+0x30>)
 8000bcc:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000bce:	2600      	movs	r6, #0
 8000bd0:	6060      	str	r0, [r4, #4]
 8000bd2:	7226      	strb	r6, [r4, #8]
 8000bd4:	7266      	strb	r6, [r4, #9]
 8000bd6:	f845 3b20 	str.w	r3, [r5], #32
 8000bda:	2260      	movs	r2, #96	; 0x60
 8000bdc:	4629      	mov	r1, r5
 8000bde:	f009 ff41 	bl	800aa64 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000be2:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000be6:	60ee      	str	r6, [r5, #12]
 8000be8:	3524      	adds	r5, #36	; 0x24
 8000bea:	42ab      	cmp	r3, r5
 8000bec:	d1fb      	bne.n	8000be6 <_ZN8STM32DMAC1Ev+0x22>
}
 8000bee:	4620      	mov	r0, r4
 8000bf0:	bd70      	pop	{r4, r5, r6, pc}
 8000bf2:	bf00      	nop
 8000bf4:	0801eef8 	.word	0x0801eef8

08000bf8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000bf8:	b508      	push	{r3, lr}
    switch (format)
 8000bfa:	290b      	cmp	r1, #11
 8000bfc:	d80b      	bhi.n	8000c16 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000bfe:	e8df f001 	tbb	[pc, r1]
 8000c02:	0612      	.short	0x0612
 8000c04:	0a0a0a10 	.word	0x0a0a0a10
 8000c08:	0808080a 	.word	0x0808080a
 8000c0c:	0808      	.short	0x0808
 8000c0e:	2001      	movs	r0, #1
}
 8000c10:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000c12:	2005      	movs	r0, #5
        break;
 8000c14:	e7fc      	b.n	8000c10 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000c16:	4b05      	ldr	r3, [pc, #20]	; (8000c2c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000c18:	4a05      	ldr	r2, [pc, #20]	; (8000c30 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000c1a:	4806      	ldr	r0, [pc, #24]	; (8000c34 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000c1c:	2165      	movs	r1, #101	; 0x65
 8000c1e:	f01c fe3b 	bl	801d898 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000c22:	2000      	movs	r0, #0
 8000c24:	e7f4      	b.n	8000c10 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000c26:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000c28:	e7f2      	b.n	8000c10 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000c2a:	bf00      	nop
 8000c2c:	0801edac 	.word	0x0801edac
 8000c30:	0801edc7 	.word	0x0801edc7
 8000c34:	0801ee11 	.word	0x0801ee11

08000c38 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000c38:	b508      	push	{r3, lr}
    switch (format)
 8000c3a:	290a      	cmp	r1, #10
 8000c3c:	d809      	bhi.n	8000c52 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000c3e:	e8df f001 	tbb	[pc, r1]
 8000c42:	0610      	.short	0x0610
 8000c44:	0808080e 	.word	0x0808080e
 8000c48:	06060608 	.word	0x06060608
 8000c4c:	06          	.byte	0x06
 8000c4d:	00          	.byte	0x00
 8000c4e:	2001      	movs	r0, #1
}
 8000c50:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000c52:	4b05      	ldr	r3, [pc, #20]	; (8000c68 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000c54:	4a05      	ldr	r2, [pc, #20]	; (8000c6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000c56:	4806      	ldr	r0, [pc, #24]	; (8000c70 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000c58:	2186      	movs	r1, #134	; 0x86
 8000c5a:	f01c fe1d 	bl	801d898 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000c5e:	2000      	movs	r0, #0
 8000c60:	e7f6      	b.n	8000c50 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000c62:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000c64:	e7f4      	b.n	8000c50 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000c66:	bf00      	nop
 8000c68:	0801edac 	.word	0x0801edac
 8000c6c:	0801ee4d 	.word	0x0801ee4d
 8000c70:	0801ee11 	.word	0x0801ee11

08000c74 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000c74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c78:	7f4f      	ldrb	r7, [r1, #29]
{
 8000c7a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c7c:	4639      	mov	r1, r7
{
 8000c7e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c80:	f7ff ffba 	bl	8000bf8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c84:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c88:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c8a:	4641      	mov	r1, r8
 8000c8c:	4648      	mov	r0, r9
 8000c8e:	f7ff ffb3 	bl	8000bf8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c92:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c94:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c96:	4648      	mov	r0, r9
 8000c98:	f7ff ffce 	bl	8000c38 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c9c:	8aa1      	ldrh	r1, [r4, #20]
 8000c9e:	8b62      	ldrh	r2, [r4, #26]
 8000ca0:	4b42      	ldr	r3, [pc, #264]	; (8000dac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000ca2:	1a52      	subs	r2, r2, r1
 8000ca4:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000ca6:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000ca8:	8b22      	ldrh	r2, [r4, #24]
 8000caa:	1a52      	subs	r2, r2, r1
 8000cac:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cae:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cb0:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cb2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000cb6:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cb8:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000cba:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cbc:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000cbe:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000cc0:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cc2:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000cc6:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cc8:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000ccc:	d026      	beq.n	8000d1c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000cce:	d810      	bhi.n	8000cf2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000cd0:	2920      	cmp	r1, #32
 8000cd2:	ea45 0402 	orr.w	r4, r5, r2
 8000cd6:	d061      	beq.n	8000d9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000cd8:	2940      	cmp	r1, #64	; 0x40
 8000cda:	d05f      	beq.n	8000d9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000cdc:	2904      	cmp	r1, #4
 8000cde:	d05d      	beq.n	8000d9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ce0:	4b32      	ldr	r3, [pc, #200]	; (8000dac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000ce2:	432a      	orrs	r2, r5
 8000ce4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000ce8:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cea:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000cec:	d05a      	beq.n	8000da4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000cee:	4a30      	ldr	r2, [pc, #192]	; (8000db0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000cf0:	e040      	b.n	8000d74 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000cf2:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000cf6:	d007      	beq.n	8000d08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000cf8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000cfc:	d1f0      	bne.n	8000ce0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cfe:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000d02:	f042 0209 	orr.w	r2, r2, #9
 8000d06:	e003      	b.n	8000d10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d08:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000d0c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d10:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000d12:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d14:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d16:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d18:	6158      	str	r0, [r3, #20]
 8000d1a:	e02a      	b.n	8000d72 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000d1c:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d1e:	432a      	orrs	r2, r5
 8000d20:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000d24:	1d21      	adds	r1, r4, #4
 8000d26:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d28:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000d2a:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d2c:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d2e:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000d30:	b142      	cbz	r2, 8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000d32:	2a01      	cmp	r2, #1
 8000d34:	d021      	beq.n	8000d7a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000d36:	4b1f      	ldr	r3, [pc, #124]	; (8000db4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000d38:	4a1f      	ldr	r2, [pc, #124]	; (8000db8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000d3a:	4820      	ldr	r0, [pc, #128]	; (8000dbc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000d3c:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000d40:	f01c fdaa 	bl	801d898 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d44:	69da      	ldr	r2, [r3, #28]
 8000d46:	8861      	ldrh	r1, [r4, #2]
 8000d48:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000d4c:	3901      	subs	r1, #1
 8000d4e:	f022 0210 	bic.w	r2, r2, #16
 8000d52:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000d56:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000d58:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000d5a:	4b14      	ldr	r3, [pc, #80]	; (8000dac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000d5c:	69da      	ldr	r2, [r3, #28]
 8000d5e:	f042 0220 	orr.w	r2, r2, #32
 8000d62:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000d64:	69da      	ldr	r2, [r3, #28]
 8000d66:	0692      	lsls	r2, r2, #26
 8000d68:	d4fc      	bmi.n	8000d64 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000d6a:	2210      	movs	r2, #16
 8000d6c:	609a      	str	r2, [r3, #8]
            if (blend)
 8000d6e:	2800      	cmp	r0, #0
 8000d70:	d0bd      	beq.n	8000cee <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000d72:	4a13      	ldr	r2, [pc, #76]	; (8000dc0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d74:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000d76:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d7a:	8862      	ldrh	r2, [r4, #2]
 8000d7c:	69d9      	ldr	r1, [r3, #28]
 8000d7e:	1e54      	subs	r4, r2, #1
 8000d80:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000d84:	f022 0210 	bic.w	r2, r2, #16
 8000d88:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if (blitOp.alpha == 255)
 8000d8c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d90:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000d94:	bf18      	it	ne
 8000d96:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d98:	61da      	str	r2, [r3, #28]
                break;
 8000d9a:	e7de      	b.n	8000d5a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d9c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000da0:	61dc      	str	r4, [r3, #28]
 8000da2:	e7b8      	b.n	8000d16 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000da4:	f240 2201 	movw	r2, #513	; 0x201
 8000da8:	e7e4      	b.n	8000d74 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000daa:	bf00      	nop
 8000dac:	4002b000 	.word	0x4002b000
 8000db0:	00010201 	.word	0x00010201
 8000db4:	0801ee98 	.word	0x0801ee98
 8000db8:	0801eeb2 	.word	0x0801eeb2
 8000dbc:	0801ee11 	.word	0x0801ee11
 8000dc0:	00020201 	.word	0x00020201

08000dc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000dc4:	b570      	push	{r4, r5, r6, lr}
 8000dc6:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000dc8:	7f89      	ldrb	r1, [r1, #30]
 8000dca:	f7ff ff35 	bl	8000c38 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dce:	8aa6      	ldrh	r6, [r4, #20]
 8000dd0:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dd2:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000dd4:	4b15      	ldr	r3, [pc, #84]	; (8000e2c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000dd6:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000dd8:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dda:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dde:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000de0:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000de2:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000de4:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000de6:	6826      	ldr	r6, [r4, #0]
 8000de8:	68e1      	ldr	r1, [r4, #12]
 8000dea:	2e08      	cmp	r6, #8
 8000dec:	d10d      	bne.n	8000e0a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dee:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000df0:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000df2:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000df4:	7f20      	ldrb	r0, [r4, #28]
 8000df6:	4a0e      	ldr	r2, [pc, #56]	; (8000e30 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000df8:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000dfc:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000dfe:	4a0d      	ldr	r2, [pc, #52]	; (8000e34 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000e00:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e02:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e04:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000e06:	601a      	str	r2, [r3, #0]
    }
}
 8000e08:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000e0a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000e0c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000e0e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000e10:	0948      	lsrs	r0, r1, #5
 8000e12:	0a0a      	lsrs	r2, r1, #8
 8000e14:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000e18:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000e1c:	4302      	orrs	r2, r0
 8000e1e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000e22:	430a      	orrs	r2, r1
 8000e24:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000e26:	4a04      	ldr	r2, [pc, #16]	; (8000e38 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000e28:	e7ed      	b.n	8000e06 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000e2a:	bf00      	nop
 8000e2c:	4002b000 	.word	0x4002b000
 8000e30:	00010009 	.word	0x00010009
 8000e34:	00020201 	.word	0x00020201
 8000e38:	00030201 	.word	0x00030201

08000e3c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000e3c:	2001      	movs	r0, #1
 8000e3e:	4770      	bx	lr

08000e40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000e40:	2038      	movs	r0, #56	; 0x38
 8000e42:	4770      	bx	lr

08000e44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000e44:	2338      	movs	r3, #56	; 0x38
 8000e46:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e4a:	3008      	adds	r0, #8
 8000e4c:	4770      	bx	lr

08000e4e <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000e4e:	2338      	movs	r3, #56	; 0x38
 8000e50:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e54:	3008      	adds	r0, #8
 8000e56:	4770      	bx	lr

08000e58 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e58:	2001      	movs	r0, #1
 8000e5a:	4770      	bx	lr

08000e5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e5c:	f44f 7043 	mov.w	r0, #780	; 0x30c
 8000e60:	4770      	bx	lr

08000e62 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e62:	f44f 7343 	mov.w	r3, #780	; 0x30c
 8000e66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e6a:	3008      	adds	r0, #8
 8000e6c:	4770      	bx	lr

08000e6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e6e:	f44f 7343 	mov.w	r3, #780	; 0x30c
 8000e72:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e76:	3008      	adds	r0, #8
 8000e78:	4770      	bx	lr

08000e7a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e7a:	2001      	movs	r0, #1
 8000e7c:	4770      	bx	lr

08000e7e <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e7e:	2010      	movs	r0, #16
 8000e80:	4770      	bx	lr

08000e82 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e82:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e86:	3008      	adds	r0, #8
 8000e88:	4770      	bx	lr

08000e8a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e8a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e8e:	3008      	adds	r0, #8
 8000e90:	4770      	bx	lr

08000e92 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000e92:	4608      	mov	r0, r1
 8000e94:	f001 be42 	b.w	8002b1c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000e98 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000e98:	b510      	push	{r4, lr}
 8000e9a:	4b03      	ldr	r3, [pc, #12]	; (8000ea8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000e9c:	6003      	str	r3, [r0, #0]
 8000e9e:	4604      	mov	r4, r0
 8000ea0:	f008 fc65 	bl	800976e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ea4:	4620      	mov	r0, r4
 8000ea6:	bd10      	pop	{r4, pc}
 8000ea8:	0801efb0 	.word	0x0801efb0

08000eac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000eac:	b510      	push	{r4, lr}
 8000eae:	4604      	mov	r4, r0
 8000eb0:	f7ff fff2 	bl	8000e98 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000eb4:	4620      	mov	r0, r4
 8000eb6:	2140      	movs	r1, #64	; 0x40
 8000eb8:	f01c fcbf 	bl	801d83a <_ZdlPvj>
 8000ebc:	4620      	mov	r0, r4
 8000ebe:	bd10      	pop	{r4, pc}

08000ec0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ec0:	b510      	push	{r4, lr}
 8000ec2:	4b03      	ldr	r3, [pc, #12]	; (8000ed0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ec4:	6003      	str	r3, [r0, #0]
 8000ec6:	4604      	mov	r4, r0
 8000ec8:	f008 fc51 	bl	800976e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ecc:	4620      	mov	r0, r4
 8000ece:	bd10      	pop	{r4, pc}
 8000ed0:	0801ef7c 	.word	0x0801ef7c

08000ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ed4:	b510      	push	{r4, lr}
 8000ed6:	4604      	mov	r4, r0
 8000ed8:	f7ff fff2 	bl	8000ec0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000edc:	4620      	mov	r0, r4
 8000ede:	f44f 7145 	mov.w	r1, #788	; 0x314
 8000ee2:	f01c fcaa 	bl	801d83a <_ZdlPvj>
 8000ee6:	4620      	mov	r0, r4
 8000ee8:	bd10      	pop	{r4, pc}
	...

08000eec <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000eec:	b510      	push	{r4, lr}
 8000eee:	4b03      	ldr	r3, [pc, #12]	; (8000efc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ef0:	6003      	str	r3, [r0, #0]
 8000ef2:	4604      	mov	r4, r0
 8000ef4:	f008 fc3b 	bl	800976e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ef8:	4620      	mov	r0, r4
 8000efa:	bd10      	pop	{r4, pc}
 8000efc:	0801ef48 	.word	0x0801ef48

08000f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000f00:	b510      	push	{r4, lr}
 8000f02:	4604      	mov	r4, r0
 8000f04:	f7ff fff2 	bl	8000eec <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f08:	4620      	mov	r0, r4
 8000f0a:	2118      	movs	r1, #24
 8000f0c:	f01c fc95 	bl	801d83a <_ZdlPvj>
 8000f10:	4620      	mov	r0, r4
 8000f12:	bd10      	pop	{r4, pc}

08000f14 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000f14:	b510      	push	{r4, lr}
 8000f16:	4b08      	ldr	r3, [pc, #32]	; (8000f38 <_ZN12FrontendHeapD1Ev+0x24>)
 8000f18:	6003      	str	r3, [r0, #0]
 8000f1a:	4604      	mov	r4, r0
 8000f1c:	f500 7050 	add.w	r0, r0, #832	; 0x340
 8000f20:	f7ff ffba 	bl	8000e98 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000f24:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000f28:	f7ff ffca 	bl	8000ec0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f2c:	f104 0014 	add.w	r0, r4, #20
 8000f30:	f7ff ffdc 	bl	8000eec <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f34:	4620      	mov	r0, r4
 8000f36:	bd10      	pop	{r4, pc}
 8000f38:	0801efe4 	.word	0x0801efe4

08000f3c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000f3c:	b508      	push	{r3, lr}
 8000f3e:	4802      	ldr	r0, [pc, #8]	; (8000f48 <__tcf_0+0xc>)
 8000f40:	f7ff ffe8 	bl	8000f14 <_ZN12FrontendHeapD1Ev>
 8000f44:	bd08      	pop	{r3, pc}
 8000f46:	bf00      	nop
 8000f48:	200001b4 	.word	0x200001b4

08000f4c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000f4c:	b510      	push	{r4, lr}
 8000f4e:	4604      	mov	r4, r0
 8000f50:	f7ff ffe0 	bl	8000f14 <_ZN12FrontendHeapD1Ev>
 8000f54:	4620      	mov	r0, r4
 8000f56:	f44f 619d 	mov.w	r1, #1256	; 0x4e8
 8000f5a:	f01c fc6e 	bl	801d83a <_ZdlPvj>
 8000f5e:	4620      	mov	r0, r4
 8000f60:	bd10      	pop	{r4, pc}
	...

08000f64 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000f64:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000f68:	f001 f8da 	bl	8002120 <_ZN14BitmapDatabase11getInstanceEv>
 8000f6c:	4605      	mov	r5, r0
 8000f6e:	f001 f8db 	bl	8002128 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000f72:	2400      	movs	r4, #0
 8000f74:	4601      	mov	r1, r0
 8000f76:	4623      	mov	r3, r4
 8000f78:	4628      	mov	r0, r5
 8000f7a:	4622      	mov	r2, r4
 8000f7c:	9400      	str	r4, [sp, #0]
 8000f7e:	f00f f80f 	bl	800ffa0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000f82:	4b25      	ldr	r3, [pc, #148]	; (8001018 <touchgfx_init+0xb4>)
 8000f84:	4a25      	ldr	r2, [pc, #148]	; (800101c <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 8000f86:	4d26      	ldr	r5, [pc, #152]	; (8001020 <touchgfx_init+0xbc>)
 8000f88:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000f8a:	4620      	mov	r0, r4
 8000f8c:	f002 fefc 	bl	8003d88 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000f90:	4824      	ldr	r0, [pc, #144]	; (8001024 <touchgfx_init+0xc0>)
 8000f92:	f00e ff6d 	bl	800fe70 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000f96:	782b      	ldrb	r3, [r5, #0]
 8000f98:	f3bf 8f5b 	dmb	ish
 8000f9c:	07db      	lsls	r3, r3, #31
 8000f9e:	d435      	bmi.n	800100c <touchgfx_init+0xa8>
 8000fa0:	4628      	mov	r0, r5
 8000fa2:	f01c fc4c 	bl	801d83e <__cxa_guard_acquire>
 8000fa6:	b388      	cbz	r0, 800100c <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000fa8:	4c1f      	ldr	r4, [pc, #124]	; (8001028 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000faa:	4b20      	ldr	r3, [pc, #128]	; (800102c <touchgfx_init+0xc8>)
 8000fac:	6023      	str	r3, [r4, #0]
 8000fae:	f504 7663 	add.w	r6, r4, #908	; 0x38c
 8000fb2:	f104 0014 	add.w	r0, r4, #20
 8000fb6:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000fba:	f504 7750 	add.w	r7, r4, #832	; 0x340
 8000fbe:	6060      	str	r0, [r4, #4]
 8000fc0:	f8c4 8008 	str.w	r8, [r4, #8]
 8000fc4:	60e7      	str	r7, [r4, #12]
 8000fc6:	6126      	str	r6, [r4, #16]
 8000fc8:	f008 fbd2 	bl	8009770 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fcc:	4b18      	ldr	r3, [pc, #96]	; (8001030 <touchgfx_init+0xcc>)
 8000fce:	6163      	str	r3, [r4, #20]
 8000fd0:	4640      	mov	r0, r8
 8000fd2:	f008 fbcd 	bl	8009770 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fd6:	4b17      	ldr	r3, [pc, #92]	; (8001034 <touchgfx_init+0xd0>)
 8000fd8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000fda:	4638      	mov	r0, r7
 8000fdc:	f008 fbc8 	bl	8009770 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fe0:	4b15      	ldr	r3, [pc, #84]	; (8001038 <touchgfx_init+0xd4>)
 8000fe2:	f8c4 3340 	str.w	r3, [r4, #832]	; 0x340
 8000fe6:	f504 7060 	add.w	r0, r4, #896	; 0x380
 8000fea:	f002 ff4d 	bl	8003e88 <_ZN5ModelC1Ev>
 8000fee:	4622      	mov	r2, r4
 8000ff0:	f504 7160 	add.w	r1, r4, #896	; 0x380
 8000ff4:	4630      	mov	r0, r6
 8000ff6:	f002 ff3d 	bl	8003e74 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ffa:	4630      	mov	r0, r6
 8000ffc:	f001 fd8e 	bl	8002b1c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8001000:	480e      	ldr	r0, [pc, #56]	; (800103c <touchgfx_init+0xd8>)
 8001002:	f01c fc67 	bl	801d8d4 <atexit>
 8001006:	4628      	mov	r0, r5
 8001008:	f01c fc25 	bl	801d856 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800100c:	480c      	ldr	r0, [pc, #48]	; (8001040 <touchgfx_init+0xdc>)
}
 800100e:	b002      	add	sp, #8
 8001010:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001014:	f7ff bc62 	b.w	80008dc <_ZN11TouchGFXHAL10initializeEv>
 8001018:	200126a0 	.word	0x200126a0
 800101c:	200014bc 	.word	0x200014bc
 8001020:	200001b0 	.word	0x200001b0
 8001024:	20000008 	.word	0x20000008
 8001028:	200001b4 	.word	0x200001b4
 800102c:	0801efe4 	.word	0x0801efe4
 8001030:	0801ef48 	.word	0x0801ef48
 8001034:	0801ef7c 	.word	0x0801ef7c
 8001038:	0801efb0 	.word	0x0801efb0
 800103c:	08000f3d 	.word	0x08000f3d
 8001040:	20001440 	.word	0x20001440

08001044 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001044:	4770      	bx	lr
	...

08001048 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001048:	4801      	ldr	r0, [pc, #4]	; (8001050 <touchgfx_taskEntry+0x8>)
 800104a:	f7ff bc59 	b.w	8000900 <_ZN11TouchGFXHAL9taskEntryEv>
 800104e:	bf00      	nop
 8001050:	20001440 	.word	0x20001440

08001054 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001054:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001056:	4e22      	ldr	r6, [pc, #136]	; (80010e0 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001058:	4c22      	ldr	r4, [pc, #136]	; (80010e4 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800105a:	4d23      	ldr	r5, [pc, #140]	; (80010e8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 800105c:	4b23      	ldr	r3, [pc, #140]	; (80010ec <_GLOBAL__sub_I_touchgfx_init+0x98>)
 800105e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001060:	4630      	mov	r0, r6
 8001062:	f7ff fdaf 	bl	8000bc4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001066:	4628      	mov	r0, r5
 8001068:	f013 fa66 	bl	8014538 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 800106c:	4b20      	ldr	r3, [pc, #128]	; (80010f0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800106e:	4821      	ldr	r0, [pc, #132]	; (80010f4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          lastRenderMethod(HARDWARE)
 8001070:	60dc      	str	r4, [r3, #12]
 8001072:	2200      	movs	r2, #0
 8001074:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001078:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 800107c:	491e      	ldr	r1, [pc, #120]	; (80010f8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800107e:	861a      	strh	r2, [r3, #48]	; 0x30
 8001080:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
 8001084:	491d      	ldr	r1, [pc, #116]	; (80010fc <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001086:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8001088:	491d      	ldr	r1, [pc, #116]	; (8001100 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 800108a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 800108e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001090:	21f0      	movs	r1, #240	; 0xf0
 8001092:	8001      	strh	r1, [r0, #0]
 8001094:	481b      	ldr	r0, [pc, #108]	; (8001104 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastRenderMethod(HARDWARE)
 8001096:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001098:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800109a:	481b      	ldr	r0, [pc, #108]	; (8001108 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 800109c:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010a0:	f44f 71a0 	mov.w	r1, #320	; 0x140
          lastRenderMethod(HARDWARE)
 80010a4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80010a8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80010ac:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80010b0:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 80010b4:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 80010b8:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80010bc:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 80010c0:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
 80010c4:	675a      	str	r2, [r3, #116]	; 0x74
 80010c6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010ca:	8001      	strh	r1, [r0, #0]
 80010cc:	480f      	ldr	r0, [pc, #60]	; (800110c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80010ce:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80010d0:	490f      	ldr	r1, [pc, #60]	; (8001110 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80010d2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80010d4:	2201      	movs	r2, #1
 80010d6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80010da:	4a0e      	ldr	r2, [pc, #56]	; (8001114 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80010dc:	601a      	str	r2, [r3, #0]
}
 80010de:	bd70      	pop	{r4, r5, r6, pc}
 80010e0:	200006a0 	.word	0x200006a0
 80010e4:	2000069c 	.word	0x2000069c
 80010e8:	200014c0 	.word	0x200014c0
 80010ec:	0801ea58 	.word	0x0801ea58
 80010f0:	20001440 	.word	0x20001440
 80010f4:	20012638 	.word	0x20012638
 80010f8:	01000001 	.word	0x01000001
 80010fc:	01010000 	.word	0x01010000
 8001100:	20012644 	.word	0x20012644
 8001104:	2001263e 	.word	0x2001263e
 8001108:	2001263a 	.word	0x2001263a
 800110c:	20012640 	.word	0x20012640
 8001110:	2001263c 	.word	0x2001263c
 8001114:	0801ebe4 	.word	0x0801ebe4

08001118 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001118:	4801      	ldr	r0, [pc, #4]	; (8001120 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800111a:	f7ff bd2f 	b.w	8000b7c <_ZN8STM32DMAD1Ev>
 800111e:	bf00      	nop
 8001120:	200006a0 	.word	0x200006a0

08001124 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001124:	2000      	movs	r0, #0
 8001126:	4770      	bx	lr

08001128 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001128:	8081      	strh	r1, [r0, #4]
    }
 800112a:	4770      	bx	lr

0800112c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800112c:	80c1      	strh	r1, [r0, #6]
    }
 800112e:	4770      	bx	lr

08001130 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001130:	8101      	strh	r1, [r0, #8]
    }
 8001132:	4770      	bx	lr

08001134 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001134:	8141      	strh	r1, [r0, #10]
    }
 8001136:	4770      	bx	lr

08001138 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001138:	4770      	bx	lr

0800113a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800113a:	4770      	bx	lr

0800113c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800113c:	4770      	bx	lr

0800113e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800113e:	4770      	bx	lr

08001140 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001140:	4770      	bx	lr

08001142 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001142:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001144:	88c4      	ldrh	r4, [r0, #6]
 8001146:	6803      	ldr	r3, [r0, #0]
 8001148:	1b12      	subs	r2, r2, r4
 800114a:	8884      	ldrh	r4, [r0, #4]
 800114c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800114e:	1b09      	subs	r1, r1, r4
 8001150:	b212      	sxth	r2, r2
    }
 8001152:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001156:	b209      	sxth	r1, r1
 8001158:	4718      	bx	r3

0800115a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800115a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800115e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001160:	f04f 33ff 	mov.w	r3, #4294967295
 8001164:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001166:	6813      	ldr	r3, [r2, #0]
 8001168:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800116a:	6010      	str	r0, [r2, #0]
    }
 800116c:	4770      	bx	lr

0800116e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800116e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001172:	b11a      	cbz	r2, 800117c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001174:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001178:	b102      	cbz	r2, 800117c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800117a:	6018      	str	r0, [r3, #0]
        }
    }
 800117c:	4770      	bx	lr
	...

08001180 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001180:	4b03      	ldr	r3, [pc, #12]	; (8001190 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001182:	2290      	movs	r2, #144	; 0x90
 8001184:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001188:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800118c:	4770      	bx	lr
 800118e:	bf00      	nop
 8001190:	e000e100 	.word	0xe000e100

08001194 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001194:	4a09      	ldr	r2, [pc, #36]	; (80011bc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001196:	490a      	ldr	r1, [pc, #40]	; (80011c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001198:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800119a:	480a      	ldr	r0, [pc, #40]	; (80011c4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800119c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80011a0:	3b01      	subs	r3, #1
 80011a2:	b29b      	uxth	r3, r3
 80011a4:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011a6:	6911      	ldr	r1, [r2, #16]
 80011a8:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80011ac:	3901      	subs	r1, #1
 80011ae:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80011b0:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80011b2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80011b4:	f043 0301 	orr.w	r3, r3, #1
 80011b8:	6353      	str	r3, [r2, #52]	; 0x34
}
 80011ba:	4770      	bx	lr
 80011bc:	40016800 	.word	0x40016800
 80011c0:	20001546 	.word	0x20001546
 80011c4:	20001544 	.word	0x20001544

080011c8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80011c8:	4b01      	ldr	r3, [pc, #4]	; (80011d0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80011ca:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80011ce:	4770      	bx	lr
 80011d0:	40016800 	.word	0x40016800

080011d4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80011d4:	4b02      	ldr	r3, [pc, #8]	; (80011e0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80011d6:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80011d8:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80011dc:	625a      	str	r2, [r3, #36]	; 0x24
}
 80011de:	4770      	bx	lr
 80011e0:	40016800 	.word	0x40016800

080011e4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80011e4:	b570      	push	{r4, r5, r6, lr}
 80011e6:	4604      	mov	r4, r0
    HAL::initialize();
 80011e8:	f008 fdbf 	bl	8009d6a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80011ec:	6823      	ldr	r3, [r4, #0]
 80011ee:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80011f0:	f00b fe02 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
 80011f4:	4601      	mov	r1, r0
 80011f6:	4620      	mov	r0, r4
 80011f8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80011fa:	6823      	ldr	r3, [r4, #0]
 80011fc:	4a05      	ldr	r2, [pc, #20]	; (8001214 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 80011fe:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001202:	4620      	mov	r0, r4
 8001204:	46ac      	mov	ip, r5
 8001206:	2300      	movs	r3, #0
}
 8001208:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800120c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001210:	4760      	bx	ip
 8001212:	bf00      	nop
 8001214:	d004b000 	.word	0xd004b000

08001218 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001218:	f008 bd8e 	b.w	8009d38 <_ZN8touchgfx3HAL10beginFrameEv>

0800121c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800121c:	f008 bd98 	b.w	8009d50 <_ZN8touchgfx3HAL8endFrameEv>

08001220 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001220:	f008 bd54 	b.w	8009ccc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001224 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001224:	f008 beb5 	b.w	8009f92 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001228 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001228:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800122c:	b112      	cbz	r2, 8001234 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800122e:	6803      	ldr	r3, [r0, #0]
 8001230:	695b      	ldr	r3, [r3, #20]
 8001232:	4718      	bx	r3
    }
 8001234:	4770      	bx	lr
	...

08001238 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001238:	4b03      	ldr	r3, [pc, #12]	; (8001248 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800123a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800123e:	609a      	str	r2, [r3, #8]
 8001240:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001244:	609a      	str	r2, [r3, #8]
}
 8001246:	4770      	bx	lr
 8001248:	e000e100 	.word	0xe000e100

0800124c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800124c:	4b08      	ldr	r3, [pc, #32]	; (8001270 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800124e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001252:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001256:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800125a:	f3bf 8f6f 	isb	sy
 800125e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001262:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001266:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800126a:	f3bf 8f6f 	isb	sy
}
 800126e:	4770      	bx	lr
 8001270:	e000e100 	.word	0xe000e100

08001274 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001274:	b510      	push	{r4, lr}
        return instance;
 8001276:	4c14      	ldr	r4, [pc, #80]	; (80012c8 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001278:	6823      	ldr	r3, [r4, #0]
 800127a:	b323      	cbz	r3, 80012c6 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800127c:	4b13      	ldr	r3, [pc, #76]	; (80012cc <HAL_LTDC_LineEventCallback+0x58>)
 800127e:	4a14      	ldr	r2, [pc, #80]	; (80012d0 <HAL_LTDC_LineEventCallback+0x5c>)
 8001280:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001282:	8811      	ldrh	r1, [r2, #0]
 8001284:	428b      	cmp	r3, r1
 8001286:	d113      	bne.n	80012b0 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001288:	4b12      	ldr	r3, [pc, #72]	; (80012d4 <HAL_LTDC_LineEventCallback+0x60>)
 800128a:	8819      	ldrh	r1, [r3, #0]
 800128c:	f004 fed0 	bl	8006030 <HAL_LTDC_ProgramLineEvent>
 8001290:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001292:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001296:	3301      	adds	r3, #1
 8001298:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800129c:	f7ff fc1c 	bl	8000ad8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80012a0:	6820      	ldr	r0, [r4, #0]
 80012a2:	f009 faa1 	bl	800a7e8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80012a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80012aa:	2000      	movs	r0, #0
 80012ac:	f7ff ba5c 	b.w	8000768 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80012b0:	f004 febe 	bl	8006030 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80012b4:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80012b6:	6803      	ldr	r3, [r0, #0]
 80012b8:	6a1b      	ldr	r3, [r3, #32]
 80012ba:	4798      	blx	r3
    }
 80012bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80012c0:	2000      	movs	r0, #0
 80012c2:	f7ff ba7b 	b.w	80007bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80012c6:	bd10      	pop	{r4, pc}
 80012c8:	20012644 	.word	0x20012644
 80012cc:	40016800 	.word	0x40016800
 80012d0:	20001546 	.word	0x20001546
 80012d4:	20001544 	.word	0x20001544

080012d8 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 80012d8:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80012da:	4b06      	ldr	r3, [pc, #24]	; (80012f4 <SPI5_Write+0x1c>)
{
 80012dc:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80012e0:	681b      	ldr	r3, [r3, #0]
 80012e2:	4805      	ldr	r0, [pc, #20]	; (80012f8 <SPI5_Write+0x20>)
 80012e4:	2201      	movs	r2, #1
 80012e6:	f10d 0106 	add.w	r1, sp, #6
 80012ea:	f005 fbfd 	bl	8006ae8 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 80012ee:	b003      	add	sp, #12
 80012f0:	f85d fb04 	ldr.w	pc, [sp], #4
 80012f4:	20000010 	.word	0x20000010
 80012f8:	200016d4 	.word	0x200016d4

080012fc <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80012fc:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
	  osDelay(1);
 80012fe:	2001      	movs	r0, #1
 8001300:	f006 f95d 	bl	80075be <osDelay>
  for(;;)
 8001304:	e7fb      	b.n	80012fe <StartDefaultTask+0x2>
	...

08001308 <startPolling>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_startPolling */
void startPolling(void *argument)
{
 8001308:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  /* USER CODE BEGIN startPolling */
  /* Infinite loop */
  int flag1 = 0, flag2 = 0;
 800130c:	2500      	movs	r5, #0
  for(;;)
  {
	  GPIO_PinState Btn1State = HAL_GPIO_ReadPin(BTN_1_GPIO_Port, BTN_1_Pin);
 800130e:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80013c0 <startPolling+0xb8>
			  HAL_Delay(10);
			  osMessageQueuePut(buttonQueueHandle, &buffer, 0, 10);
		  }
		  flag1 = 1;
	  }else{
		  HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_RESET);
 8001312:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80013c4 <startPolling+0xbc>
  int flag1 = 0, flag2 = 0;
 8001316:	462f      	mov	r7, r5
	  GPIO_PinState Btn1State = HAL_GPIO_ReadPin(BTN_1_GPIO_Port, BTN_1_Pin);
 8001318:	2102      	movs	r1, #2
 800131a:	4648      	mov	r0, r9
 800131c:	f004 f89c 	bl	8005458 <HAL_GPIO_ReadPin>
	  GPIO_PinState Btn2State = HAL_GPIO_ReadPin(BTN_2_GPIO_Port, BTN_2_Pin);
 8001320:	2104      	movs	r1, #4
	  GPIO_PinState Btn1State = HAL_GPIO_ReadPin(BTN_1_GPIO_Port, BTN_1_Pin);
 8001322:	4604      	mov	r4, r0
	  GPIO_PinState Btn2State = HAL_GPIO_ReadPin(BTN_2_GPIO_Port, BTN_2_Pin);
 8001324:	4648      	mov	r0, r9
 8001326:	f004 f897 	bl	8005458 <HAL_GPIO_ReadPin>
	  if(Btn1State == GPIO_PIN_SET){
 800132a:	2c01      	cmp	r4, #1
	  GPIO_PinState Btn2State = HAL_GPIO_ReadPin(BTN_2_GPIO_Port, BTN_2_Pin);
 800132c:	4606      	mov	r6, r0
	  if(Btn1State == GPIO_PIN_SET){
 800132e:	d12c      	bne.n	800138a <startPolling+0x82>
		  HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 8001330:	4622      	mov	r2, r4
 8001332:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8001336:	4640      	mov	r0, r8
 8001338:	f004 f894 	bl	8005464 <HAL_GPIO_WritePin>
		  if(flag1 == 0){
 800133c:	b95f      	cbnz	r7, 8001356 <startPolling+0x4e>
			  HAL_Delay(10);
 800133e:	200a      	movs	r0, #10
			  int buffer = 1;
 8001340:	9401      	str	r4, [sp, #4]
			  HAL_Delay(10);
 8001342:	f003 fc5d 	bl	8004c00 <HAL_Delay>
			  osMessageQueuePut(buttonQueueHandle, &buffer, 0, 10);
 8001346:	481d      	ldr	r0, [pc, #116]	; (80013bc <startPolling+0xb4>)
 8001348:	463a      	mov	r2, r7
 800134a:	6800      	ldr	r0, [r0, #0]
 800134c:	230a      	movs	r3, #10
 800134e:	a901      	add	r1, sp, #4
 8001350:	f006 fa22 	bl	8007798 <osMessageQueuePut>
		  flag1 = 1;
 8001354:	4627      	mov	r7, r4
		  flag1 = 0;
	  }
	  if(Btn2State == GPIO_PIN_SET){
 8001356:	2e01      	cmp	r6, #1
 8001358:	d11f      	bne.n	800139a <startPolling+0x92>
		  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_SET);
 800135a:	4632      	mov	r2, r6
 800135c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001360:	4640      	mov	r0, r8
 8001362:	f004 f87f 	bl	8005464 <HAL_GPIO_WritePin>
		  if(flag2 == 0){
 8001366:	b965      	cbnz	r5, 8001382 <startPolling+0x7a>
			  int buffer = 2;
 8001368:	2302      	movs	r3, #2
			  HAL_Delay(10);
 800136a:	200a      	movs	r0, #10
			  int buffer = 2;
 800136c:	9301      	str	r3, [sp, #4]
			  HAL_Delay(10);
 800136e:	f003 fc47 	bl	8004c00 <HAL_Delay>
			  osMessageQueuePut(buttonQueueHandle, &buffer, 0, 10);
 8001372:	4812      	ldr	r0, [pc, #72]	; (80013bc <startPolling+0xb4>)
 8001374:	462a      	mov	r2, r5
 8001376:	6800      	ldr	r0, [r0, #0]
 8001378:	230a      	movs	r3, #10
 800137a:	a901      	add	r1, sp, #4
 800137c:	f006 fa0c 	bl	8007798 <osMessageQueuePut>
		  }
		  flag2 = 1;
 8001380:	4635      	mov	r5, r6
			int buffer = 3;
			osMessageQueuePut(buttonQueueHandle, &buffer, 0, 10);
		  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
		  flag2 = 0;
	  }
	  osDelay(1);
 8001382:	2001      	movs	r0, #1
 8001384:	f006 f91b 	bl	80075be <osDelay>
  {
 8001388:	e7c6      	b.n	8001318 <startPolling+0x10>
		  HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_RESET);
 800138a:	2200      	movs	r2, #0
 800138c:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8001390:	4640      	mov	r0, r8
 8001392:	f004 f867 	bl	8005464 <HAL_GPIO_WritePin>
		  flag1 = 0;
 8001396:	2700      	movs	r7, #0
 8001398:	e7dd      	b.n	8001356 <startPolling+0x4e>
			osMessageQueuePut(buttonQueueHandle, &buffer, 0, 10);
 800139a:	4808      	ldr	r0, [pc, #32]	; (80013bc <startPolling+0xb4>)
			int buffer = 3;
 800139c:	2303      	movs	r3, #3
 800139e:	9301      	str	r3, [sp, #4]
			osMessageQueuePut(buttonQueueHandle, &buffer, 0, 10);
 80013a0:	2200      	movs	r2, #0
 80013a2:	230a      	movs	r3, #10
 80013a4:	a901      	add	r1, sp, #4
 80013a6:	6800      	ldr	r0, [r0, #0]
 80013a8:	f006 f9f6 	bl	8007798 <osMessageQueuePut>
		  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 80013ac:	2200      	movs	r2, #0
 80013ae:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013b2:	4640      	mov	r0, r8
 80013b4:	f004 f856 	bl	8005464 <HAL_GPIO_WritePin>
		  flag2 = 0;
 80013b8:	2500      	movs	r5, #0
 80013ba:	e7e2      	b.n	8001382 <startPolling+0x7a>
 80013bc:	20001550 	.word	0x20001550
 80013c0:	40020000 	.word	0x40020000
 80013c4:	40021800 	.word	0x40021800

080013c8 <sendRandomNumberTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_sendRandomNumberTask */
void sendRandomNumberTask(void *argument)
{
 80013c8:	b507      	push	{r0, r1, r2, lr}
  /* USER CODE BEGIN sendRandomNumberTask */
  /* Infinite loop */
  int16_t random = 0;
 80013ca:	2300      	movs	r3, #0
  for(;;)
  {
	random = TM_RNG_Get();
	osMessageQueuePut(randomNumberQueueHandle, &random, 0, 10);
 80013cc:	4c08      	ldr	r4, [pc, #32]	; (80013f0 <sendRandomNumberTask+0x28>)
  int16_t random = 0;
 80013ce:	f8ad 3006 	strh.w	r3, [sp, #6]
	random = TM_RNG_Get();
 80013d2:	f008 f9a1 	bl	8009718 <TM_RNG_Get>
	osMessageQueuePut(randomNumberQueueHandle, &random, 0, 10);
 80013d6:	230a      	movs	r3, #10
	random = TM_RNG_Get();
 80013d8:	f8ad 0006 	strh.w	r0, [sp, #6]
	osMessageQueuePut(randomNumberQueueHandle, &random, 0, 10);
 80013dc:	2200      	movs	r2, #0
 80013de:	6820      	ldr	r0, [r4, #0]
 80013e0:	f10d 0106 	add.w	r1, sp, #6
 80013e4:	f006 f9d8 	bl	8007798 <osMessageQueuePut>
    osDelay(1);
 80013e8:	2001      	movs	r0, #1
 80013ea:	f006 f8e8 	bl	80075be <osDelay>
  for(;;)
 80013ee:	e7f0      	b.n	80013d2 <sendRandomNumberTask+0xa>
 80013f0:	20001770 	.word	0x20001770

080013f4 <SystemClock_Config>:
{
 80013f4:	b530      	push	{r4, r5, lr}
 80013f6:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013f8:	2210      	movs	r2, #16
 80013fa:	2100      	movs	r1, #0
 80013fc:	a80a      	add	r0, sp, #40	; 0x28
 80013fe:	f01c fad7 	bl	801d9b0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001402:	2214      	movs	r2, #20
 8001404:	2100      	movs	r1, #0
 8001406:	a803      	add	r0, sp, #12
 8001408:	f01c fad2 	bl	801d9b0 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800140c:	2400      	movs	r4, #0
 800140e:	4b1d      	ldr	r3, [pc, #116]	; (8001484 <SystemClock_Config+0x90>)
 8001410:	9401      	str	r4, [sp, #4]
 8001412:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001414:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001418:	641a      	str	r2, [r3, #64]	; 0x40
 800141a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800141c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001420:	9301      	str	r3, [sp, #4]
 8001422:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001424:	4b18      	ldr	r3, [pc, #96]	; (8001488 <SystemClock_Config+0x94>)
 8001426:	9402      	str	r4, [sp, #8]
 8001428:	681a      	ldr	r2, [r3, #0]
 800142a:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800142e:	601a      	str	r2, [r3, #0]
 8001430:	681b      	ldr	r3, [r3, #0]
 8001432:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001436:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001438:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800143a:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800143c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001440:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001444:	2502      	movs	r5, #2
 8001446:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800144a:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 800144e:	2108      	movs	r1, #8
 8001450:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8001454:	e9cd 1310 	strd	r1, r3, [sp, #64]	; 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001458:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800145a:	2304      	movs	r3, #4
 800145c:	9313      	str	r3, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800145e:	9512      	str	r5, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001460:	f004 fe04 	bl	800606c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001464:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001466:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800146a:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
 800146e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001472:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001476:	2105      	movs	r1, #5
 8001478:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800147a:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800147c:	f004 ffd4 	bl	8006428 <HAL_RCC_ClockConfig>
}
 8001480:	b015      	add	sp, #84	; 0x54
 8001482:	bd30      	pop	{r4, r5, pc}
 8001484:	40023800 	.word	0x40023800
 8001488:	40007000 	.word	0x40007000

0800148c <main>:
{
 800148c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001490:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 8001492:	f003 fb89 	bl	8004ba8 <HAL_Init>
  TM_RNG_Init();
 8001496:	f008 f92f 	bl	80096f8 <TM_RNG_Init>
  SystemClock_Config();
 800149a:	f7ff ffab 	bl	80013f4 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800149e:	2214      	movs	r2, #20
 80014a0:	2100      	movs	r1, #0
 80014a2:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014a4:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014a6:	f01c fa83 	bl	801d9b0 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014aa:	4bc5      	ldr	r3, [pc, #788]	; (80017c0 <main+0x334>)
 80014ac:	9400      	str	r4, [sp, #0]
 80014ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80014b0:	48c4      	ldr	r0, [pc, #784]	; (80017c4 <main+0x338>)
  hi2c3.Instance = I2C3;
 80014b2:	4dc5      	ldr	r5, [pc, #788]	; (80017c8 <main+0x33c>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014b4:	f042 0210 	orr.w	r2, r2, #16
 80014b8:	631a      	str	r2, [r3, #48]	; 0x30
 80014ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014bc:	f002 0210 	and.w	r2, r2, #16
 80014c0:	9200      	str	r2, [sp, #0]
 80014c2:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014c4:	9401      	str	r4, [sp, #4]
 80014c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014c8:	f042 0220 	orr.w	r2, r2, #32
 80014cc:	631a      	str	r2, [r3, #48]	; 0x30
 80014ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014d0:	f002 0220 	and.w	r2, r2, #32
 80014d4:	9201      	str	r2, [sp, #4]
 80014d6:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014d8:	9402      	str	r4, [sp, #8]
 80014da:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014dc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80014e0:	631a      	str	r2, [r3, #48]	; 0x30
 80014e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014e4:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80014e8:	9202      	str	r2, [sp, #8]
 80014ea:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80014ec:	9403      	str	r4, [sp, #12]
 80014ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f0:	f042 0204 	orr.w	r2, r2, #4
 80014f4:	631a      	str	r2, [r3, #48]	; 0x30
 80014f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f8:	f002 0204 	and.w	r2, r2, #4
 80014fc:	9203      	str	r2, [sp, #12]
 80014fe:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001500:	9404      	str	r4, [sp, #16]
 8001502:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001504:	f042 0201 	orr.w	r2, r2, #1
 8001508:	631a      	str	r2, [r3, #48]	; 0x30
 800150a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150c:	f002 0201 	and.w	r2, r2, #1
 8001510:	9204      	str	r2, [sp, #16]
 8001512:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001514:	9405      	str	r4, [sp, #20]
 8001516:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001518:	f042 0202 	orr.w	r2, r2, #2
 800151c:	631a      	str	r2, [r3, #48]	; 0x30
 800151e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001520:	f002 0202 	and.w	r2, r2, #2
 8001524:	9205      	str	r2, [sp, #20]
 8001526:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001528:	9406      	str	r4, [sp, #24]
 800152a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001530:	631a      	str	r2, [r3, #48]	; 0x30
 8001532:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001534:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001538:	9206      	str	r2, [sp, #24]
 800153a:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800153c:	9407      	str	r4, [sp, #28]
 800153e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001540:	f042 0208 	orr.w	r2, r2, #8
 8001544:	631a      	str	r2, [r3, #48]	; 0x30
 8001546:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001548:	f003 0308 	and.w	r3, r3, #8
 800154c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800154e:	4622      	mov	r2, r4
 8001550:	213c      	movs	r1, #60	; 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001552:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001554:	f003 ff86 	bl	8005464 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001558:	489c      	ldr	r0, [pc, #624]	; (80017cc <main+0x340>)
 800155a:	4622      	mov	r2, r4
 800155c:	2104      	movs	r1, #4
 800155e:	f003 ff81 	bl	8005464 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001562:	489b      	ldr	r0, [pc, #620]	; (80017d0 <main+0x344>)
 8001564:	4622      	mov	r2, r4
 8001566:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 800156a:	f003 ff7b 	bl	8005464 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, LD3_Pin|LD4_Pin, GPIO_PIN_RESET);
 800156e:	4622      	mov	r2, r4
 8001570:	4898      	ldr	r0, [pc, #608]	; (80017d4 <main+0x348>)
 8001572:	f44f 41c0 	mov.w	r1, #24576	; 0x6000
 8001576:	f003 ff75 	bl	8005464 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800157a:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800157c:	f04f 0a03 	mov.w	sl, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001580:	233c      	movs	r3, #60	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001582:	4890      	ldr	r0, [pc, #576]	; (80017c4 <main+0x338>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001584:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001588:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800158a:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800158c:	f04f 0804 	mov.w	r8, #4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001590:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001594:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001596:	f003 fe79 	bl	800528c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800159a:	488c      	ldr	r0, [pc, #560]	; (80017cc <main+0x340>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800159c:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800159e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015a0:	e9cd 860d 	strd	r8, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015a4:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015a6:	f003 fe71 	bl	800528c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = BTN_1_Pin|BTN_2_Pin;
 80015aa:	2306      	movs	r3, #6
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015ac:	488a      	ldr	r0, [pc, #552]	; (80017d8 <main+0x34c>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80015ae:	960f      	str	r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015b0:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80015b2:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015b6:	f003 fe69 	bl	800528c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015ba:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015be:	4884      	ldr	r0, [pc, #528]	; (80017d0 <main+0x344>)
 80015c0:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015c2:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015c6:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015ca:	f003 fe5f 	bl	800528c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015ce:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = LD3_Pin|LD4_Pin;
 80015d0:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015d4:	487f      	ldr	r0, [pc, #508]	; (80017d4 <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015d6:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015da:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015de:	f003 fe55 	bl	800528c <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80015e2:	487e      	ldr	r0, [pc, #504]	; (80017dc <main+0x350>)
 80015e4:	4b7e      	ldr	r3, [pc, #504]	; (80017e0 <main+0x354>)
 80015e6:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80015e8:	f003 fb70 	bl	8004ccc <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80015ec:	4a7d      	ldr	r2, [pc, #500]	; (80017e4 <main+0x358>)
 80015ee:	4b7e      	ldr	r3, [pc, #504]	; (80017e8 <main+0x35c>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80015f0:	622c      	str	r4, [r5, #32]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80015f2:	f44f 4b80 	mov.w	fp, #16384	; 0x4000
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80015f6:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 80015f8:	e9c5 2300 	strd	r2, r3, [r5]
  hi2c3.Init.OwnAddress1 = 0;
 80015fc:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001600:	e9c5 b404 	strd	fp, r4, [r5, #16]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001604:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001608:	f004 f916 	bl	8005838 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800160c:	2110      	movs	r1, #16
 800160e:	4628      	mov	r0, r5
 8001610:	f004 fb52 	bl	8005cb8 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001614:	4621      	mov	r1, r4
 8001616:	4628      	mov	r0, r5
 8001618:	f004 fb6d 	bl	8005cf6 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 800161c:	4873      	ldr	r0, [pc, #460]	; (80017ec <main+0x360>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800161e:	4974      	ldr	r1, [pc, #464]	; (80017f0 <main+0x364>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001620:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001622:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001626:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800162a:	f44f 7500 	mov.w	r5, #512	; 0x200
 800162e:	2318      	movs	r3, #24
 8001630:	e9c0 5306 	strd	r5, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001634:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001636:	4d6f      	ldr	r5, [pc, #444]	; (80017f4 <main+0x368>)
  hspi5.Init.CRCPolynomial = 10;
 8001638:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800163a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800163e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001642:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001646:	f005 f9f3 	bl	8006a30 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800164a:	4b6b      	ldr	r3, [pc, #428]	; (80017f8 <main+0x36c>)
  SdramTiming.LoadToActiveDelay = 2;
 800164c:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800164e:	f04f 0c10 	mov.w	ip, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001652:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001656:	2340      	movs	r3, #64	; 0x40
 8001658:	e9c5 c304 	strd	ip, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800165c:	f44f 73c0 	mov.w	r3, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001660:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001664:	f44f 6300 	mov.w	r3, #2048	; 0x800
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001668:	2207      	movs	r2, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 800166a:	e9c5 3408 	strd	r3, r4, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800166e:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001670:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001674:	4628      	mov	r0, r5
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001676:	62ab      	str	r3, [r5, #40]	; 0x28
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001678:	f04f 0908 	mov.w	r9, #8
  SdramTiming.WriteRecoveryTime = 3;
 800167c:	e9cd 2a10 	strd	r2, sl, [sp, #64]	; 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001680:	e9c5 4802 	strd	r4, r8, [r5, #8]
  SdramTiming.SelfRefreshTime = 4;
 8001684:	e9cd 280e 	strd	r2, r8, [sp, #56]	; 0x38
  SdramTiming.RCDDelay = 2;
 8001688:	e9cd 7712 	strd	r7, r7, [sp, #72]	; 0x48
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800168c:	f005 f8d0 	bl	8006830 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001690:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001694:	a909      	add	r1, sp, #36	; 0x24
 8001696:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8001698:	e9cd 960a 	strd	r9, r6, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 800169c:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 800169e:	9609      	str	r6, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80016a0:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016a2:	f005 f8e5 	bl	8006870 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80016a6:	4630      	mov	r0, r6
 80016a8:	f003 faaa 	bl	8004c00 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016b0:	a909      	add	r1, sp, #36	; 0x24
 80016b2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016b4:	e9cd 7909 	strd	r7, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80016b8:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016bc:	f005 f8d8 	bl	8006870 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016c4:	a909      	add	r1, sp, #36	; 0x24
 80016c6:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016c8:	e9cd a909 	strd	sl, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80016cc:	e9cd 840b 	strd	r8, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016d0:	f005 f8ce 	bl	8006870 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80016d4:	f44f 720c 	mov.w	r2, #560	; 0x230
 80016d8:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80016da:	9a08      	ldr	r2, [sp, #32]
 80016dc:	920c      	str	r2, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016de:	a909      	add	r1, sp, #36	; 0x24
 80016e0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016e4:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016e6:	e9cd 8909 	strd	r8, r9, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80016ea:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ec:	f005 f8c0 	bl	8006870 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80016f0:	f240 516a 	movw	r1, #1386	; 0x56a
 80016f4:	4628      	mov	r0, r5
 80016f6:	f005 f8d9 	bl	80068ac <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80016fa:	2234      	movs	r2, #52	; 0x34
 80016fc:	4621      	mov	r1, r4
 80016fe:	eb0d 0002 	add.w	r0, sp, r2
 8001702:	f01c f955 	bl	801d9b0 <memset>
  hltdc.Instance = LTDC;
 8001706:	4d3d      	ldr	r5, [pc, #244]	; (80017fc <main+0x370>)
 8001708:	4a3d      	ldr	r2, [pc, #244]	; (8001800 <main+0x374>)
  hltdc.Init.Backcolor.Blue = 0;
 800170a:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800170c:	e9c5 2400 	strd	r2, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8001710:	2209      	movs	r2, #9
  hltdc.Init.VerticalSync = 1;
 8001712:	e9c5 2605 	strd	r2, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001716:	221d      	movs	r2, #29
  hltdc.Init.AccumulatedActiveH = 323;
 8001718:	f240 1e0d 	movw	lr, #269	; 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 800171c:	e9c5 2a07 	strd	r2, sl, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001720:	f240 1243 	movw	r2, #323	; 0x143
 8001724:	e9c5 e209 	strd	lr, r2, [r5, #36]	; 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001728:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 800172a:	f240 1247 	movw	r2, #327	; 0x147
 800172e:	f240 1a17 	movw	sl, #279	; 0x117
 8001732:	e9c5 a20b 	strd	sl, r2, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001736:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800173a:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 800173c:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001740:	f004 fb7e 	bl	8005e40 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001744:	20ff      	movs	r0, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001746:	f44f 6380 	mov.w	r3, #1024	; 0x400
  pLayerCfg.WindowX1 = 240;
 800174a:	21f0      	movs	r1, #240	; 0xf0
  pLayerCfg.WindowY1 = 320;
 800174c:	f44f 72a0 	mov.w	r2, #320	; 0x140
  pLayerCfg.Alpha0 = 0;
 8001750:	e9cd 0412 	strd	r0, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001754:	2005      	movs	r0, #5
 8001756:	e9cd 3014 	strd	r3, r0, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 800175a:	e9cd 140e 	strd	r1, r4, [sp, #56]	; 0x38
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800175e:	e9cd 2710 	strd	r2, r7, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8001762:	e9cd 4116 	strd	r4, r1, [sp, #88]	; 0x58
  pLayerCfg.ImageHeight = 320;
 8001766:	9218      	str	r2, [sp, #96]	; 0x60
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001768:	a90d      	add	r1, sp, #52	; 0x34
 800176a:	4622      	mov	r2, r4
 800176c:	4628      	mov	r0, r5
  pLayerCfg.WindowX0 = 0;
 800176e:	940d      	str	r4, [sp, #52]	; 0x34
  LcdDrv = &ili9341_drv;
 8001770:	4d24      	ldr	r5, [pc, #144]	; (8001804 <main+0x378>)
  pLayerCfg.Backcolor.Blue = 0;
 8001772:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001776:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800177a:	f004 fc2c 	bl	8005fd6 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800177e:	4a22      	ldr	r2, [pc, #136]	; (8001808 <main+0x37c>)
 8001780:	602a      	str	r2, [r5, #0]
  LcdDrv->Init();
 8001782:	6812      	ldr	r2, [r2, #0]
 8001784:	4790      	blx	r2
  LcdDrv->DisplayOff();
 8001786:	682a      	ldr	r2, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001788:	4d20      	ldr	r5, [pc, #128]	; (800180c <main+0x380>)
  LcdDrv->DisplayOff();
 800178a:	68d2      	ldr	r2, [r2, #12]
 800178c:	4790      	blx	r2
  hdma2d.Instance = DMA2D;
 800178e:	4a20      	ldr	r2, [pc, #128]	; (8001810 <main+0x384>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001790:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001794:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001798:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 800179a:	e9c5 2400 	strd	r2, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 800179e:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80017a2:	f003 faa3 	bl	8004cec <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80017a6:	4631      	mov	r1, r6
 80017a8:	4628      	mov	r0, r5
 80017aa:	f003 fb57 	bl	8004e5c <HAL_DMA2D_ConfigLayer>
  huart1.Instance = USART1;
 80017ae:	4819      	ldr	r0, [pc, #100]	; (8001814 <main+0x388>)
  huart1.Init.BaudRate = 115200;
 80017b0:	4919      	ldr	r1, [pc, #100]	; (8001818 <main+0x38c>)
  huart1.Init.Parity = UART_PARITY_NONE;
 80017b2:	6104      	str	r4, [r0, #16]
  huart1.Init.BaudRate = 115200;
 80017b4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80017b8:	e9c0 1200 	strd	r1, r2, [r0]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80017bc:	220c      	movs	r2, #12
 80017be:	e02d      	b.n	800181c <main+0x390>
 80017c0:	40023800 	.word	0x40023800
 80017c4:	40021000 	.word	0x40021000
 80017c8:	200015a4 	.word	0x200015a4
 80017cc:	40020800 	.word	0x40020800
 80017d0:	40020c00 	.word	0x40020c00
 80017d4:	40021800 	.word	0x40021800
 80017d8:	40020000 	.word	0x40020000
 80017dc:	2000155c 	.word	0x2000155c
 80017e0:	40023000 	.word	0x40023000
 80017e4:	40005c00 	.word	0x40005c00
 80017e8:	000186a0 	.word	0x000186a0
 80017ec:	200016d4 	.word	0x200016d4
 80017f0:	40015000 	.word	0x40015000
 80017f4:	200016a0 	.word	0x200016a0
 80017f8:	a0000140 	.word	0xa0000140
 80017fc:	200015f8 	.word	0x200015f8
 8001800:	40016800 	.word	0x40016800
 8001804:	2000154c 	.word	0x2000154c
 8001808:	20000014 	.word	0x20000014
 800180c:	20001564 	.word	0x20001564
 8001810:	4002b000 	.word	0x4002b000
 8001814:	2000172c 	.word	0x2000172c
 8001818:	40011000 	.word	0x40011000
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800181c:	e9c0 2405 	strd	r2, r4, [r0, #20]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001820:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001824:	61c4      	str	r4, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001826:	f005 fd79 	bl	800731c <HAL_UART_Init>
  MX_TouchGFX_Init();
 800182a:	f7fe fedd 	bl	80005e8 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 800182e:	f7fe feda 	bl	80005e6 <MX_TouchGFX_PreOSInit>
  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_SET); //turn on led3
 8001832:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001836:	4619      	mov	r1, r3
 8001838:	481b      	ldr	r0, [pc, #108]	; (80018a8 <main+0x41c>)
 800183a:	4632      	mov	r2, r6
 800183c:	f003 fe12 	bl	8005464 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET); //turn on led4
 8001840:	4632      	mov	r2, r6
 8001842:	4659      	mov	r1, fp
 8001844:	4818      	ldr	r0, [pc, #96]	; (80018a8 <main+0x41c>)
 8001846:	f003 fe0d 	bl	8005464 <HAL_GPIO_WritePin>
  osKernelInitialize();
 800184a:	f005 fe43 	bl	80074d4 <osKernelInitialize>
  buttonQueueHandle = osMessageQueueNew (8, sizeof(uint32_t), &buttonQueue_attributes);
 800184e:	4a17      	ldr	r2, [pc, #92]	; (80018ac <main+0x420>)
 8001850:	4641      	mov	r1, r8
 8001852:	4648      	mov	r0, r9
 8001854:	f005 ff65 	bl	8007722 <osMessageQueueNew>
 8001858:	4b15      	ldr	r3, [pc, #84]	; (80018b0 <main+0x424>)
   randomNumberQueueHandle = osMessageQueueNew (16, sizeof(int16_t), &randomNumberQueue_attributes);
 800185a:	4a16      	ldr	r2, [pc, #88]	; (80018b4 <main+0x428>)
  buttonQueueHandle = osMessageQueueNew (8, sizeof(uint32_t), &buttonQueue_attributes);
 800185c:	6018      	str	r0, [r3, #0]
   randomNumberQueueHandle = osMessageQueueNew (16, sizeof(int16_t), &randomNumberQueue_attributes);
 800185e:	4639      	mov	r1, r7
 8001860:	2010      	movs	r0, #16
 8001862:	f005 ff5e 	bl	8007722 <osMessageQueueNew>
 8001866:	4b14      	ldr	r3, [pc, #80]	; (80018b8 <main+0x42c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001868:	4a14      	ldr	r2, [pc, #80]	; (80018bc <main+0x430>)
   randomNumberQueueHandle = osMessageQueueNew (16, sizeof(int16_t), &randomNumberQueue_attributes);
 800186a:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800186c:	4621      	mov	r1, r4
 800186e:	4814      	ldr	r0, [pc, #80]	; (80018c0 <main+0x434>)
 8001870:	f005 fe5c 	bl	800752c <osThreadNew>
 8001874:	4b13      	ldr	r3, [pc, #76]	; (80018c4 <main+0x438>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001876:	4a14      	ldr	r2, [pc, #80]	; (80018c8 <main+0x43c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001878:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800187a:	4621      	mov	r1, r4
 800187c:	4813      	ldr	r0, [pc, #76]	; (80018cc <main+0x440>)
 800187e:	f005 fe55 	bl	800752c <osThreadNew>
 8001882:	4b13      	ldr	r3, [pc, #76]	; (80018d0 <main+0x444>)
  hardware_pollinHandle = osThreadNew(startPolling, NULL, &hardware_pollin_attributes);
 8001884:	4a13      	ldr	r2, [pc, #76]	; (80018d4 <main+0x448>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001886:	6018      	str	r0, [r3, #0]
  hardware_pollinHandle = osThreadNew(startPolling, NULL, &hardware_pollin_attributes);
 8001888:	4621      	mov	r1, r4
 800188a:	4813      	ldr	r0, [pc, #76]	; (80018d8 <main+0x44c>)
 800188c:	f005 fe4e 	bl	800752c <osThreadNew>
 8001890:	4b12      	ldr	r3, [pc, #72]	; (80018dc <main+0x450>)
  rngTaskHandle = osThreadNew(sendRandomNumberTask, NULL, &rngTask_attributes);
 8001892:	4a13      	ldr	r2, [pc, #76]	; (80018e0 <main+0x454>)
  hardware_pollinHandle = osThreadNew(startPolling, NULL, &hardware_pollin_attributes);
 8001894:	6018      	str	r0, [r3, #0]
  rngTaskHandle = osThreadNew(sendRandomNumberTask, NULL, &rngTask_attributes);
 8001896:	4621      	mov	r1, r4
 8001898:	4812      	ldr	r0, [pc, #72]	; (80018e4 <main+0x458>)
 800189a:	f005 fe47 	bl	800752c <osThreadNew>
 800189e:	4b12      	ldr	r3, [pc, #72]	; (80018e8 <main+0x45c>)
 80018a0:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80018a2:	f005 fe29 	bl	80074f8 <osKernelStart>
  while (1)
 80018a6:	e7fe      	b.n	80018a6 <main+0x41a>
 80018a8:	40021800 	.word	0x40021800
 80018ac:	0801f060 	.word	0x0801f060
 80018b0:	20001550 	.word	0x20001550
 80018b4:	0801f0c0 	.word	0x0801f0c0
 80018b8:	20001770 	.word	0x20001770
 80018bc:	0801f078 	.word	0x0801f078
 80018c0:	080012fd 	.word	0x080012fd
 80018c4:	20001554 	.word	0x20001554
 80018c8:	0801f03c 	.word	0x0801f03c
 80018cc:	080005f7 	.word	0x080005f7
 80018d0:	20001548 	.word	0x20001548
 80018d4:	0801f09c 	.word	0x0801f09c
 80018d8:	08001309 	.word	0x08001309
 80018dc:	20001558 	.word	0x20001558
 80018e0:	0801f0d8 	.word	0x0801f0d8
 80018e4:	080013c9 	.word	0x080013c9
 80018e8:	20001774 	.word	0x20001774

080018ec <IOE_Init>:
 80018ec:	4770      	bx	lr

080018ee <IOE_ITConfig>:
 80018ee:	4770      	bx	lr

080018f0 <IOE_Write>:
{
 80018f0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80018f2:	4b09      	ldr	r3, [pc, #36]	; (8001918 <IOE_Write+0x28>)
 80018f4:	f88d 2017 	strb.w	r2, [sp, #23]
 80018f8:	681b      	ldr	r3, [r3, #0]
 80018fa:	9302      	str	r3, [sp, #8]
 80018fc:	f10d 0217 	add.w	r2, sp, #23
 8001900:	2301      	movs	r3, #1
 8001902:	9200      	str	r2, [sp, #0]
 8001904:	9301      	str	r3, [sp, #4]
 8001906:	460a      	mov	r2, r1
 8001908:	4601      	mov	r1, r0
 800190a:	4804      	ldr	r0, [pc, #16]	; (800191c <IOE_Write+0x2c>)
 800190c:	f004 f83c 	bl	8005988 <HAL_I2C_Mem_Write>
}
 8001910:	b007      	add	sp, #28
 8001912:	f85d fb04 	ldr.w	pc, [sp], #4
 8001916:	bf00      	nop
 8001918:	2000000c 	.word	0x2000000c
 800191c:	200015a4 	.word	0x200015a4

08001920 <IOE_Read>:
{
 8001920:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001922:	2300      	movs	r3, #0
 8001924:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001928:	4b08      	ldr	r3, [pc, #32]	; (800194c <IOE_Read+0x2c>)
 800192a:	681b      	ldr	r3, [r3, #0]
 800192c:	9302      	str	r3, [sp, #8]
{
 800192e:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001930:	2301      	movs	r3, #1
 8001932:	f10d 0117 	add.w	r1, sp, #23
 8001936:	9100      	str	r1, [sp, #0]
 8001938:	9301      	str	r3, [sp, #4]
 800193a:	4601      	mov	r1, r0
 800193c:	4804      	ldr	r0, [pc, #16]	; (8001950 <IOE_Read+0x30>)
 800193e:	f004 f8b3 	bl	8005aa8 <HAL_I2C_Mem_Read>
}
 8001942:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001946:	b007      	add	sp, #28
 8001948:	f85d fb04 	ldr.w	pc, [sp], #4
 800194c:	2000000c 	.word	0x2000000c
 8001950:	200015a4 	.word	0x200015a4

08001954 <IOE_ReadMultiple>:
{
 8001954:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001956:	4c08      	ldr	r4, [pc, #32]	; (8001978 <IOE_ReadMultiple+0x24>)
 8001958:	6824      	ldr	r4, [r4, #0]
 800195a:	9200      	str	r2, [sp, #0]
 800195c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001960:	460a      	mov	r2, r1
 8001962:	2301      	movs	r3, #1
 8001964:	4601      	mov	r1, r0
 8001966:	4805      	ldr	r0, [pc, #20]	; (800197c <IOE_ReadMultiple+0x28>)
 8001968:	f004 f89e 	bl	8005aa8 <HAL_I2C_Mem_Read>
}
 800196c:	3800      	subs	r0, #0
 800196e:	bf18      	it	ne
 8001970:	2001      	movne	r0, #1
 8001972:	b004      	add	sp, #16
 8001974:	bd10      	pop	{r4, pc}
 8001976:	bf00      	nop
 8001978:	2000000c 	.word	0x2000000c
 800197c:	200015a4 	.word	0x200015a4

08001980 <IOE_Delay>:
 8001980:	f003 b93e 	b.w	8004c00 <HAL_Delay>

08001984 <LCD_IO_Init>:
{
 8001984:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001986:	4806      	ldr	r0, [pc, #24]	; (80019a0 <LCD_IO_Init+0x1c>)
 8001988:	2200      	movs	r2, #0
 800198a:	2104      	movs	r1, #4
 800198c:	f003 fd6a 	bl	8005464 <HAL_GPIO_WritePin>
}
 8001990:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001994:	4802      	ldr	r0, [pc, #8]	; (80019a0 <LCD_IO_Init+0x1c>)
 8001996:	2201      	movs	r2, #1
 8001998:	2104      	movs	r1, #4
 800199a:	f003 bd63 	b.w	8005464 <HAL_GPIO_WritePin>
 800199e:	bf00      	nop
 80019a0:	40020800 	.word	0x40020800

080019a4 <LCD_IO_WriteData>:
{
 80019a4:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019a6:	4d0b      	ldr	r5, [pc, #44]	; (80019d4 <LCD_IO_WriteData+0x30>)
{
 80019a8:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80019aa:	2201      	movs	r2, #1
 80019ac:	480a      	ldr	r0, [pc, #40]	; (80019d8 <LCD_IO_WriteData+0x34>)
 80019ae:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80019b2:	f003 fd57 	bl	8005464 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019b6:	2200      	movs	r2, #0
 80019b8:	2104      	movs	r1, #4
 80019ba:	4628      	mov	r0, r5
 80019bc:	f003 fd52 	bl	8005464 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80019c0:	4620      	mov	r0, r4
 80019c2:	f7ff fc89 	bl	80012d8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019c6:	4628      	mov	r0, r5
 80019c8:	2201      	movs	r2, #1
}
 80019ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019ce:	2104      	movs	r1, #4
 80019d0:	f003 bd48 	b.w	8005464 <HAL_GPIO_WritePin>
 80019d4:	40020800 	.word	0x40020800
 80019d8:	40020c00 	.word	0x40020c00

080019dc <LCD_IO_WriteReg>:
{
 80019dc:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019de:	4d0b      	ldr	r5, [pc, #44]	; (8001a0c <LCD_IO_WriteReg+0x30>)
{
 80019e0:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80019e2:	2200      	movs	r2, #0
 80019e4:	480a      	ldr	r0, [pc, #40]	; (8001a10 <LCD_IO_WriteReg+0x34>)
 80019e6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80019ea:	f003 fd3b 	bl	8005464 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019ee:	2200      	movs	r2, #0
 80019f0:	2104      	movs	r1, #4
 80019f2:	4628      	mov	r0, r5
 80019f4:	f003 fd36 	bl	8005464 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80019f8:	4620      	mov	r0, r4
 80019fa:	f7ff fc6d 	bl	80012d8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019fe:	4628      	mov	r0, r5
 8001a00:	2201      	movs	r2, #1
}
 8001a02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a06:	2104      	movs	r1, #4
 8001a08:	f003 bd2c 	b.w	8005464 <HAL_GPIO_WritePin>
 8001a0c:	40020800 	.word	0x40020800
 8001a10:	40020c00 	.word	0x40020c00

08001a14 <LCD_IO_ReadData>:
{
 8001a14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a16:	4e14      	ldr	r6, [pc, #80]	; (8001a68 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a18:	4f14      	ldr	r7, [pc, #80]	; (8001a6c <LCD_IO_ReadData+0x58>)
{
 8001a1a:	4605      	mov	r5, r0
 8001a1c:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a1e:	4630      	mov	r0, r6
 8001a20:	2200      	movs	r2, #0
 8001a22:	2104      	movs	r1, #4
 8001a24:	f003 fd1e 	bl	8005464 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a28:	2200      	movs	r2, #0
 8001a2a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a2e:	4638      	mov	r0, r7
 8001a30:	f003 fd18 	bl	8005464 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001a34:	4628      	mov	r0, r5
 8001a36:	f7ff fc4f 	bl	80012d8 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001a3a:	4b0d      	ldr	r3, [pc, #52]	; (8001a70 <LCD_IO_ReadData+0x5c>)
 8001a3c:	480d      	ldr	r0, [pc, #52]	; (8001a74 <LCD_IO_ReadData+0x60>)
 8001a3e:	681b      	ldr	r3, [r3, #0]
 8001a40:	4622      	mov	r2, r4
 8001a42:	a901      	add	r1, sp, #4
 8001a44:	f005 f9f2 	bl	8006e2c <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a48:	4638      	mov	r0, r7
 8001a4a:	2201      	movs	r2, #1
 8001a4c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001a50:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a52:	f003 fd07 	bl	8005464 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a56:	4630      	mov	r0, r6
 8001a58:	2201      	movs	r2, #1
 8001a5a:	2104      	movs	r1, #4
 8001a5c:	f003 fd02 	bl	8005464 <HAL_GPIO_WritePin>
}
 8001a60:	4620      	mov	r0, r4
 8001a62:	b003      	add	sp, #12
 8001a64:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a66:	bf00      	nop
 8001a68:	40020800 	.word	0x40020800
 8001a6c:	40020c00 	.word	0x40020c00
 8001a70:	20000010 	.word	0x20000010
 8001a74:	200016d4 	.word	0x200016d4

08001a78 <LCD_Delay>:
  HAL_Delay(Delay);
 8001a78:	f003 b8c2 	b.w	8004c00 <HAL_Delay>

08001a7c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001a7c:	6802      	ldr	r2, [r0, #0]
 8001a7e:	4b03      	ldr	r3, [pc, #12]	; (8001a8c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001a80:	429a      	cmp	r2, r3
 8001a82:	d101      	bne.n	8001a88 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001a84:	f003 b8aa 	b.w	8004bdc <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001a88:	4770      	bx	lr
 8001a8a:	bf00      	nop
 8001a8c:	40001000 	.word	0x40001000

08001a90 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001a90:	4770      	bx	lr
	...

08001a94 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001a94:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001a96:	4b0e      	ldr	r3, [pc, #56]	; (8001ad0 <HAL_MspInit+0x3c>)
 8001a98:	2200      	movs	r2, #0
 8001a9a:	9200      	str	r2, [sp, #0]
 8001a9c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001a9e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001aa2:	6459      	str	r1, [r3, #68]	; 0x44
 8001aa4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001aa6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001aaa:	9100      	str	r1, [sp, #0]
 8001aac:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001aae:	9201      	str	r2, [sp, #4]
 8001ab0:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001ab2:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001ab6:	6419      	str	r1, [r3, #64]	; 0x40
 8001ab8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001aba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001abe:	9301      	str	r3, [sp, #4]
 8001ac0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001ac2:	210f      	movs	r1, #15
 8001ac4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001ac8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001aca:	f003 b8bf 	b.w	8004c4c <HAL_NVIC_SetPriority>
 8001ace:	bf00      	nop
 8001ad0:	40023800 	.word	0x40023800

08001ad4 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001ad4:	6802      	ldr	r2, [r0, #0]
 8001ad6:	4b09      	ldr	r3, [pc, #36]	; (8001afc <HAL_CRC_MspInit+0x28>)
 8001ad8:	429a      	cmp	r2, r3
{
 8001ada:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001adc:	d10b      	bne.n	8001af6 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001ade:	2300      	movs	r3, #0
 8001ae0:	9301      	str	r3, [sp, #4]
 8001ae2:	4b07      	ldr	r3, [pc, #28]	; (8001b00 <HAL_CRC_MspInit+0x2c>)
 8001ae4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ae6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001aea:	631a      	str	r2, [r3, #48]	; 0x30
 8001aec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aee:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001af2:	9301      	str	r3, [sp, #4]
 8001af4:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001af6:	b002      	add	sp, #8
 8001af8:	4770      	bx	lr
 8001afa:	bf00      	nop
 8001afc:	40023000 	.word	0x40023000
 8001b00:	40023800 	.word	0x40023800

08001b04 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001b04:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001b06:	4b0f      	ldr	r3, [pc, #60]	; (8001b44 <HAL_DMA2D_MspInit+0x40>)
 8001b08:	6802      	ldr	r2, [r0, #0]
 8001b0a:	429a      	cmp	r2, r3
 8001b0c:	d116      	bne.n	8001b3c <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001b0e:	2200      	movs	r2, #0
 8001b10:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001b14:	9201      	str	r2, [sp, #4]
 8001b16:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001b18:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001b1c:	6319      	str	r1, [r3, #48]	; 0x30
 8001b1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b20:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001b24:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001b26:	2105      	movs	r1, #5
 8001b28:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001b2a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001b2c:	f003 f88e 	bl	8004c4c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001b30:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001b32:	b003      	add	sp, #12
 8001b34:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001b38:	f003 b8ba 	b.w	8004cb0 <HAL_NVIC_EnableIRQ>
}
 8001b3c:	b003      	add	sp, #12
 8001b3e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001b42:	bf00      	nop
 8001b44:	4002b000 	.word	0x4002b000

08001b48 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001b4c:	4604      	mov	r4, r0
 8001b4e:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b50:	2214      	movs	r2, #20
 8001b52:	2100      	movs	r1, #0
 8001b54:	a803      	add	r0, sp, #12
 8001b56:	f01b ff2b 	bl	801d9b0 <memset>
  if(hi2c->Instance==I2C3)
 8001b5a:	6822      	ldr	r2, [r4, #0]
 8001b5c:	4b24      	ldr	r3, [pc, #144]	; (8001bf0 <HAL_I2C_MspInit+0xa8>)
 8001b5e:	429a      	cmp	r2, r3
 8001b60:	d143      	bne.n	8001bea <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b62:	4c24      	ldr	r4, [pc, #144]	; (8001bf4 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b64:	4824      	ldr	r0, [pc, #144]	; (8001bf8 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b66:	2500      	movs	r5, #0
 8001b68:	9500      	str	r5, [sp, #0]
 8001b6a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b6c:	f043 0304 	orr.w	r3, r3, #4
 8001b70:	6323      	str	r3, [r4, #48]	; 0x30
 8001b72:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b74:	f003 0304 	and.w	r3, r3, #4
 8001b78:	9300      	str	r3, [sp, #0]
 8001b7a:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b7c:	9501      	str	r5, [sp, #4]
 8001b7e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b80:	f043 0301 	orr.w	r3, r3, #1
 8001b84:	6323      	str	r3, [r4, #48]	; 0x30
 8001b86:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b88:	f003 0301 	and.w	r3, r3, #1
 8001b8c:	9301      	str	r3, [sp, #4]
 8001b8e:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b90:	f04f 0912 	mov.w	r9, #18
 8001b94:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b98:	f04f 0801 	mov.w	r8, #1
 8001b9c:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001b9e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ba0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001ba2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ba6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001baa:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bac:	f003 fb6e 	bl	800528c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001bb0:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bb4:	4811      	ldr	r0, [pc, #68]	; (8001bfc <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001bb6:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bb8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001bba:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bbe:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bc2:	f003 fb63 	bl	800528c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001bc6:	9502      	str	r5, [sp, #8]
 8001bc8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bca:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001bce:	6423      	str	r3, [r4, #64]	; 0x40
 8001bd0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bd2:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001bd6:	9302      	str	r3, [sp, #8]
 8001bd8:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001bda:	6a23      	ldr	r3, [r4, #32]
 8001bdc:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001be0:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001be2:	6a23      	ldr	r3, [r4, #32]
 8001be4:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001be8:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001bea:	b009      	add	sp, #36	; 0x24
 8001bec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001bf0:	40005c00 	.word	0x40005c00
 8001bf4:	40023800 	.word	0x40023800
 8001bf8:	40020800 	.word	0x40020800
 8001bfc:	40020000 	.word	0x40020000

08001c00 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001c00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c02:	b099      	sub	sp, #100	; 0x64
 8001c04:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c06:	2214      	movs	r2, #20
 8001c08:	2100      	movs	r1, #0
 8001c0a:	a807      	add	r0, sp, #28
 8001c0c:	f01b fed0 	bl	801d9b0 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001c10:	2230      	movs	r2, #48	; 0x30
 8001c12:	eb0d 0002 	add.w	r0, sp, r2
 8001c16:	2100      	movs	r1, #0
 8001c18:	f01b feca 	bl	801d9b0 <memset>
  if(hltdc->Instance==LTDC)
 8001c1c:	6822      	ldr	r2, [r4, #0]
 8001c1e:	4b5e      	ldr	r3, [pc, #376]	; (8001d98 <HAL_LTDC_MspInit+0x198>)
 8001c20:	429a      	cmp	r2, r3
 8001c22:	f040 80b7 	bne.w	8001d94 <HAL_LTDC_MspInit+0x194>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001c26:	2308      	movs	r3, #8
 8001c28:	930c      	str	r3, [sp, #48]	; 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001c2a:	23c0      	movs	r3, #192	; 0xc0
 8001c2c:	9310      	str	r3, [sp, #64]	; 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001c2e:	2304      	movs	r3, #4
 8001c30:	9312      	str	r3, [sp, #72]	; 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001c32:	a80c      	add	r0, sp, #48	; 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001c34:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8001c38:	9315      	str	r3, [sp, #84]	; 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001c3a:	f004 fccf 	bl	80065dc <HAL_RCCEx_PeriphCLKConfig>
 8001c3e:	b108      	cbz	r0, 8001c44 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8001c40:	f7ff ff26 	bl	8001a90 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c44:	4b55      	ldr	r3, [pc, #340]	; (8001d9c <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c46:	4856      	ldr	r0, [pc, #344]	; (8001da0 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c48:	2400      	movs	r4, #0
 8001c4a:	9400      	str	r4, [sp, #0]
 8001c4c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c4e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001c52:	645a      	str	r2, [r3, #68]	; 0x44
 8001c54:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c56:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001c5a:	9200      	str	r2, [sp, #0]
 8001c5c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c5e:	9401      	str	r4, [sp, #4]
 8001c60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c62:	f042 0220 	orr.w	r2, r2, #32
 8001c66:	631a      	str	r2, [r3, #48]	; 0x30
 8001c68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c6a:	f002 0220 	and.w	r2, r2, #32
 8001c6e:	9201      	str	r2, [sp, #4]
 8001c70:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c72:	9402      	str	r4, [sp, #8]
 8001c74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c76:	f042 0201 	orr.w	r2, r2, #1
 8001c7a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c7e:	f002 0201 	and.w	r2, r2, #1
 8001c82:	9202      	str	r2, [sp, #8]
 8001c84:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c86:	9403      	str	r4, [sp, #12]
 8001c88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c8a:	f042 0202 	orr.w	r2, r2, #2
 8001c8e:	631a      	str	r2, [r3, #48]	; 0x30
 8001c90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c92:	f002 0202 	and.w	r2, r2, #2
 8001c96:	9203      	str	r2, [sp, #12]
 8001c98:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001c9a:	9404      	str	r4, [sp, #16]
 8001c9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c9e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001ca2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ca4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ca6:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001caa:	9204      	str	r2, [sp, #16]
 8001cac:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001cae:	9405      	str	r4, [sp, #20]
 8001cb0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cb2:	f042 0204 	orr.w	r2, r2, #4
 8001cb6:	631a      	str	r2, [r3, #48]	; 0x30
 8001cb8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cba:	f002 0204 	and.w	r2, r2, #4
 8001cbe:	9205      	str	r2, [sp, #20]
 8001cc0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001cc2:	9406      	str	r4, [sp, #24]
 8001cc4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cc6:	f042 0208 	orr.w	r2, r2, #8
 8001cca:	631a      	str	r2, [r3, #48]	; 0x30
 8001ccc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cce:	f003 0308 	and.w	r3, r3, #8
 8001cd2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cd4:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cd6:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001cd8:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cda:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cdc:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ce0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ce2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ce6:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cea:	f003 facf 	bl	800528c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001cee:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cf2:	482c      	ldr	r0, [pc, #176]	; (8001da4 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cf4:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cf6:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cf8:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001cfc:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cfe:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d02:	f003 fac3 	bl	800528c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001d06:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d08:	4827      	ldr	r0, [pc, #156]	; (8001da8 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001d0a:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d0c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d0e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d12:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d16:	f003 fab9 	bl	800528c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001d1a:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d1e:	4822      	ldr	r0, [pc, #136]	; (8001da8 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d20:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d22:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d24:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d28:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d2c:	f003 faae 	bl	800528c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001d30:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d34:	481d      	ldr	r0, [pc, #116]	; (8001dac <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d36:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d38:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d3a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d3e:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d42:	f003 faa3 	bl	800528c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001d46:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d48:	4819      	ldr	r0, [pc, #100]	; (8001db0 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d4a:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d4c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d4e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d52:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d56:	f003 fa99 	bl	800528c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001d5a:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d5c:	4815      	ldr	r0, [pc, #84]	; (8001db4 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d5e:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d60:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d62:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d66:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d6a:	f003 fa8f 	bl	800528c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001d6e:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d72:	480e      	ldr	r0, [pc, #56]	; (8001dac <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001d74:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d76:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d78:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d7c:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d80:	f003 fa84 	bl	800528c <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001d84:	2058      	movs	r0, #88	; 0x58
 8001d86:	4622      	mov	r2, r4
 8001d88:	2105      	movs	r1, #5
 8001d8a:	f002 ff5f 	bl	8004c4c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001d8e:	2058      	movs	r0, #88	; 0x58
 8001d90:	f002 ff8e 	bl	8004cb0 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001d94:	b019      	add	sp, #100	; 0x64
 8001d96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d98:	40016800 	.word	0x40016800
 8001d9c:	40023800 	.word	0x40023800
 8001da0:	40021400 	.word	0x40021400
 8001da4:	40020000 	.word	0x40020000
 8001da8:	40020400 	.word	0x40020400
 8001dac:	40021800 	.word	0x40021800
 8001db0:	40020800 	.word	0x40020800
 8001db4:	40020c00 	.word	0x40020c00

08001db8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001db8:	b510      	push	{r4, lr}
 8001dba:	4604      	mov	r4, r0
 8001dbc:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001dbe:	2214      	movs	r2, #20
 8001dc0:	2100      	movs	r1, #0
 8001dc2:	a803      	add	r0, sp, #12
 8001dc4:	f01b fdf4 	bl	801d9b0 <memset>
  if(hspi->Instance==SPI5)
 8001dc8:	6822      	ldr	r2, [r4, #0]
 8001dca:	4b14      	ldr	r3, [pc, #80]	; (8001e1c <HAL_SPI_MspInit+0x64>)
 8001dcc:	429a      	cmp	r2, r3
 8001dce:	d123      	bne.n	8001e18 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001dd0:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001dd4:	2100      	movs	r1, #0
 8001dd6:	9101      	str	r1, [sp, #4]
 8001dd8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dda:	4811      	ldr	r0, [pc, #68]	; (8001e20 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001ddc:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001de0:	645a      	str	r2, [r3, #68]	; 0x44
 8001de2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001de4:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001de8:	9201      	str	r2, [sp, #4]
 8001dea:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001dec:	9102      	str	r1, [sp, #8]
 8001dee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001df0:	f042 0220 	orr.w	r2, r2, #32
 8001df4:	631a      	str	r2, [r3, #48]	; 0x30
 8001df6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001df8:	f003 0320 	and.w	r3, r3, #32
 8001dfc:	9302      	str	r3, [sp, #8]
 8001dfe:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e00:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001e04:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001e06:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e08:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001e0c:	2305      	movs	r3, #5
 8001e0e:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e12:	a903      	add	r1, sp, #12
 8001e14:	f003 fa3a 	bl	800528c <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001e18:	b008      	add	sp, #32
 8001e1a:	bd10      	pop	{r4, pc}
 8001e1c:	40015000 	.word	0x40015000
 8001e20:	40021400 	.word	0x40021400

08001e24 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001e24:	b510      	push	{r4, lr}
 8001e26:	4604      	mov	r4, r0
 8001e28:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e2a:	2214      	movs	r2, #20
 8001e2c:	2100      	movs	r1, #0
 8001e2e:	a803      	add	r0, sp, #12
 8001e30:	f01b fdbe 	bl	801d9b0 <memset>
  if(huart->Instance==USART1)
 8001e34:	6822      	ldr	r2, [r4, #0]
 8001e36:	4b14      	ldr	r3, [pc, #80]	; (8001e88 <HAL_UART_MspInit+0x64>)
 8001e38:	429a      	cmp	r2, r3
 8001e3a:	d123      	bne.n	8001e84 <HAL_UART_MspInit+0x60>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001e3c:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 8001e40:	2100      	movs	r1, #0
 8001e42:	9101      	str	r1, [sp, #4]
 8001e44:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e46:	4811      	ldr	r0, [pc, #68]	; (8001e8c <HAL_UART_MspInit+0x68>)
    __HAL_RCC_USART1_CLK_ENABLE();
 8001e48:	f042 0210 	orr.w	r2, r2, #16
 8001e4c:	645a      	str	r2, [r3, #68]	; 0x44
 8001e4e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001e50:	f002 0210 	and.w	r2, r2, #16
 8001e54:	9201      	str	r2, [sp, #4]
 8001e56:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e58:	9102      	str	r1, [sp, #8]
 8001e5a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e5c:	f042 0201 	orr.w	r2, r2, #1
 8001e60:	631a      	str	r2, [r3, #48]	; 0x30
 8001e62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e64:	f003 0301 	and.w	r3, r3, #1
 8001e68:	9302      	str	r3, [sp, #8]
 8001e6a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e6c:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8001e70:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001e72:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e74:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001e78:	2307      	movs	r3, #7
 8001e7a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e7e:	a903      	add	r1, sp, #12
 8001e80:	f003 fa04 	bl	800528c <HAL_GPIO_Init>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8001e84:	b008      	add	sp, #32
 8001e86:	bd10      	pop	{r4, pc}
 8001e88:	40011000 	.word	0x40011000
 8001e8c:	40020000 	.word	0x40020000

08001e90 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001e90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e94:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001e96:	2300      	movs	r3, #0
 8001e98:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001e9a:	4b2b      	ldr	r3, [pc, #172]	; (8001f48 <HAL_SDRAM_MspInit+0xb8>)
 8001e9c:	681c      	ldr	r4, [r3, #0]
 8001e9e:	2c00      	cmp	r4, #0
 8001ea0:	d14f      	bne.n	8001f42 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001ea2:	f04f 0801 	mov.w	r8, #1
 8001ea6:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001eaa:	4b28      	ldr	r3, [pc, #160]	; (8001f4c <HAL_SDRAM_MspInit+0xbc>)
 8001eac:	9400      	str	r4, [sp, #0]
 8001eae:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001eb0:	4827      	ldr	r0, [pc, #156]	; (8001f50 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001eb2:	ea42 0208 	orr.w	r2, r2, r8
 8001eb6:	639a      	str	r2, [r3, #56]	; 0x38
 8001eb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001eba:	ea03 0308 	and.w	r3, r3, r8
 8001ebe:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ec0:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ec2:	2603      	movs	r6, #3
 8001ec4:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001ec6:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ec8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eca:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001ece:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ed2:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ed6:	f003 f9d9 	bl	800528c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001eda:	481e      	ldr	r0, [pc, #120]	; (8001f54 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001edc:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ede:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ee0:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ee4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ee8:	f003 f9d0 	bl	800528c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001eec:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ef0:	4819      	ldr	r0, [pc, #100]	; (8001f58 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ef2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ef4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ef6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001efa:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001efe:	f003 f9c5 	bl	800528c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001f02:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001f06:	4815      	ldr	r0, [pc, #84]	; (8001f5c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f08:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001f0a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f0c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f10:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001f14:	f003 f9ba 	bl	800528c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001f18:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f1c:	4810      	ldr	r0, [pc, #64]	; (8001f60 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f1e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f20:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f22:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f26:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f2a:	f003 f9af 	bl	800528c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001f2e:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f30:	480c      	ldr	r0, [pc, #48]	; (8001f64 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f32:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f34:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f36:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f3a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f3e:	f003 f9a5 	bl	800528c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001f42:	b006      	add	sp, #24
 8001f44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001f48:	20001778 	.word	0x20001778
 8001f4c:	40023800 	.word	0x40023800
 8001f50:	40021400 	.word	0x40021400
 8001f54:	40020800 	.word	0x40020800
 8001f58:	40021800 	.word	0x40021800
 8001f5c:	40021000 	.word	0x40021000
 8001f60:	40020c00 	.word	0x40020c00
 8001f64:	40020400 	.word	0x40020400

08001f68 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001f68:	b570      	push	{r4, r5, r6, lr}
 8001f6a:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001f6c:	2300      	movs	r3, #0
 8001f6e:	9302      	str	r3, [sp, #8]
 8001f70:	4b20      	ldr	r3, [pc, #128]	; (8001ff4 <HAL_InitTick+0x8c>)
 8001f72:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001f74:	f042 0210 	orr.w	r2, r2, #16
 8001f78:	641a      	str	r2, [r3, #64]	; 0x40
 8001f7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f7c:	f003 0310 	and.w	r3, r3, #16
 8001f80:	9302      	str	r3, [sp, #8]
{
 8001f82:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f84:	a901      	add	r1, sp, #4
 8001f86:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001f88:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f8a:	f004 fb09 	bl	80065a0 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001f8e:	9b06      	ldr	r3, [sp, #24]
 8001f90:	bb4b      	cbnz	r3, 8001fe6 <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001f92:	f004 fae5 	bl	8006560 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001f96:	4e18      	ldr	r6, [pc, #96]	; (8001ff8 <HAL_InitTick+0x90>)
 8001f98:	4b18      	ldr	r3, [pc, #96]	; (8001ffc <HAL_InitTick+0x94>)
 8001f9a:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001f9c:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001fa0:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001fa2:	4b17      	ldr	r3, [pc, #92]	; (8002000 <HAL_InitTick+0x98>)
 8001fa4:	fbb0 f3f3 	udiv	r3, r0, r3
 8001fa8:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001faa:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001fac:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8001fae:	2300      	movs	r3, #0
 8001fb0:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001fb2:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001fb4:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8001fb6:	f005 f925 	bl	8007204 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001fba:	4604      	mov	r4, r0
 8001fbc:	b980      	cbnz	r0, 8001fe0 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001fbe:	4630      	mov	r0, r6
 8001fc0:	f004 ffda 	bl	8006f78 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001fc4:	4604      	mov	r4, r0
 8001fc6:	b958      	cbnz	r0, 8001fe0 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001fc8:	2036      	movs	r0, #54	; 0x36
 8001fca:	f002 fe71 	bl	8004cb0 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001fce:	2d0f      	cmp	r5, #15
 8001fd0:	d80d      	bhi.n	8001fee <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001fd2:	4622      	mov	r2, r4
 8001fd4:	4629      	mov	r1, r5
 8001fd6:	2036      	movs	r0, #54	; 0x36
 8001fd8:	f002 fe38 	bl	8004c4c <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001fdc:	4b09      	ldr	r3, [pc, #36]	; (8002004 <HAL_InitTick+0x9c>)
 8001fde:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8001fe0:	4620      	mov	r0, r4
 8001fe2:	b008      	add	sp, #32
 8001fe4:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001fe6:	f004 fabb 	bl	8006560 <HAL_RCC_GetPCLK1Freq>
 8001fea:	0040      	lsls	r0, r0, #1
 8001fec:	e7d3      	b.n	8001f96 <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8001fee:	2401      	movs	r4, #1
 8001ff0:	e7f6      	b.n	8001fe0 <HAL_InitTick+0x78>
 8001ff2:	bf00      	nop
 8001ff4:	40023800 	.word	0x40023800
 8001ff8:	2000177c 	.word	0x2000177c
 8001ffc:	40001000 	.word	0x40001000
 8002000:	000f4240 	.word	0x000f4240
 8002004:	2000007c 	.word	0x2000007c

08002008 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002008:	4770      	bx	lr

0800200a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800200a:	e7fe      	b.n	800200a <HardFault_Handler>

0800200c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800200c:	e7fe      	b.n	800200c <MemManage_Handler>

0800200e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800200e:	e7fe      	b.n	800200e <BusFault_Handler>

08002010 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002010:	e7fe      	b.n	8002010 <UsageFault_Handler>

08002012 <DebugMon_Handler>:
 8002012:	4770      	bx	lr

08002014 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002014:	4801      	ldr	r0, [pc, #4]	; (800201c <TIM6_DAC_IRQHandler+0x8>)
 8002016:	f004 bfed 	b.w	8006ff4 <HAL_TIM_IRQHandler>
 800201a:	bf00      	nop
 800201c:	2000177c 	.word	0x2000177c

08002020 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002020:	4801      	ldr	r0, [pc, #4]	; (8002028 <LTDC_IRQHandler+0x8>)
 8002022:	f003 bf7b 	b.w	8005f1c <HAL_LTDC_IRQHandler>
 8002026:	bf00      	nop
 8002028:	200015f8 	.word	0x200015f8

0800202c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800202c:	4801      	ldr	r0, [pc, #4]	; (8002034 <DMA2D_IRQHandler+0x8>)
 800202e:	f002 be8b 	b.w	8004d48 <HAL_DMA2D_IRQHandler>
 8002032:	bf00      	nop
 8002034:	20001564 	.word	0x20001564

08002038 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002038:	2001      	movs	r0, #1
 800203a:	4770      	bx	lr

0800203c <_kill>:

int _kill(int pid, int sig)
{
 800203c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800203e:	f01b fc5d 	bl	801d8fc <__errno>
 8002042:	2316      	movs	r3, #22
 8002044:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002046:	f04f 30ff 	mov.w	r0, #4294967295
 800204a:	bd08      	pop	{r3, pc}

0800204c <_exit>:

void _exit (int status)
{
 800204c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800204e:	f01b fc55 	bl	801d8fc <__errno>
 8002052:	2316      	movs	r3, #22
 8002054:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002056:	e7fe      	b.n	8002056 <_exit+0xa>

08002058 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002058:	b570      	push	{r4, r5, r6, lr}
 800205a:	460d      	mov	r5, r1
 800205c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800205e:	460e      	mov	r6, r1
 8002060:	1b73      	subs	r3, r6, r5
 8002062:	429c      	cmp	r4, r3
 8002064:	dc01      	bgt.n	800206a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002066:	4620      	mov	r0, r4
 8002068:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800206a:	f3af 8000 	nop.w
 800206e:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002072:	e7f5      	b.n	8002060 <_read+0x8>

08002074 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002074:	b570      	push	{r4, r5, r6, lr}
 8002076:	460d      	mov	r5, r1
 8002078:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800207a:	460e      	mov	r6, r1
 800207c:	1b73      	subs	r3, r6, r5
 800207e:	429c      	cmp	r4, r3
 8002080:	dc01      	bgt.n	8002086 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002082:	4620      	mov	r0, r4
 8002084:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002086:	f816 0b01 	ldrb.w	r0, [r6], #1
 800208a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800208e:	e7f5      	b.n	800207c <_write+0x8>

08002090 <_close>:

int _close(int file)
{
	return -1;
}
 8002090:	f04f 30ff 	mov.w	r0, #4294967295
 8002094:	4770      	bx	lr

08002096 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002096:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800209a:	604b      	str	r3, [r1, #4]
	return 0;
}
 800209c:	2000      	movs	r0, #0
 800209e:	4770      	bx	lr

080020a0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80020a0:	2001      	movs	r0, #1
 80020a2:	4770      	bx	lr

080020a4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80020a4:	2000      	movs	r0, #0
 80020a6:	4770      	bx	lr

080020a8 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80020a8:	4a0a      	ldr	r2, [pc, #40]	; (80020d4 <_sbrk+0x2c>)
 80020aa:	6811      	ldr	r1, [r2, #0]
{
 80020ac:	b508      	push	{r3, lr}
 80020ae:	4603      	mov	r3, r0
	if (heap_end == 0)
 80020b0:	b909      	cbnz	r1, 80020b6 <_sbrk+0xe>
		heap_end = &end;
 80020b2:	4909      	ldr	r1, [pc, #36]	; (80020d8 <_sbrk+0x30>)
 80020b4:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80020b6:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80020b8:	4669      	mov	r1, sp
 80020ba:	4403      	add	r3, r0
 80020bc:	428b      	cmp	r3, r1
 80020be:	d906      	bls.n	80020ce <_sbrk+0x26>
	{
		errno = ENOMEM;
 80020c0:	f01b fc1c 	bl	801d8fc <__errno>
 80020c4:	230c      	movs	r3, #12
 80020c6:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80020c8:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80020cc:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80020ce:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 80020d0:	e7fc      	b.n	80020cc <_sbrk+0x24>
 80020d2:	bf00      	nop
 80020d4:	200017c4 	.word	0x200017c4
 80020d8:	20013138 	.word	0x20013138

080020dc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const touchgfx::FontId COUNTER = 3; // ROCKB_TTF_20_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80020dc:	4770      	bx	lr

080020de <_ZN23ApplicationFontProviderD0Ev>:
 80020de:	b510      	push	{r4, lr}
 80020e0:	2104      	movs	r1, #4
 80020e2:	4604      	mov	r4, r0
 80020e4:	f01b fba9 	bl	801d83a <_ZdlPvj>
 80020e8:	4620      	mov	r0, r4
 80020ea:	bd10      	pop	{r4, pc}

080020ec <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80020ec:	b508      	push	{r3, lr}
    switch (typography)
 80020ee:	2903      	cmp	r1, #3
 80020f0:	d813      	bhi.n	800211a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80020f2:	e8df f001 	tbb	[pc, r1]
 80020f6:	0602      	.short	0x0602
 80020f8:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // SHOWG_TTF_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80020fa:	f001 fe91 	bl	8003e20 <_ZN17TypedTextDatabase8getFontsEv>
 80020fe:	6800      	ldr	r0, [r0, #0]
        // ROCKB_TTF_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002100:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002102:	f001 fe8d 	bl	8003e20 <_ZN17TypedTextDatabase8getFontsEv>
 8002106:	6840      	ldr	r0, [r0, #4]
 8002108:	e7fa      	b.n	8002100 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800210a:	f001 fe89 	bl	8003e20 <_ZN17TypedTextDatabase8getFontsEv>
 800210e:	6880      	ldr	r0, [r0, #8]
 8002110:	e7f6      	b.n	8002100 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002112:	f001 fe85 	bl	8003e20 <_ZN17TypedTextDatabase8getFontsEv>
 8002116:	68c0      	ldr	r0, [r0, #12]
 8002118:	e7f2      	b.n	8002100 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800211a:	2000      	movs	r0, #0
 800211c:	e7f0      	b.n	8002100 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002120 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002120:	4800      	ldr	r0, [pc, #0]	; (8002124 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002122:	4770      	bx	lr
 8002124:	0801f110 	.word	0x0801f110

08002128 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002128:	2020      	movs	r0, #32
 800212a:	4770      	bx	lr

0800212c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800212c:	b513      	push	{r0, r1, r4, lr}
 800212e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002130:	b151      	cbz	r1, 8002148 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002132:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002134:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002136:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800213a:	aa01      	add	r2, sp, #4
 800213c:	689c      	ldr	r4, [r3, #8]
 800213e:	f10d 0303 	add.w	r3, sp, #3
 8002142:	47a0      	blx	r4
        return glyph;
    }
 8002144:	b002      	add	sp, #8
 8002146:	bd10      	pop	{r4, pc}
            return 0;
 8002148:	4608      	mov	r0, r1
 800214a:	e7fb      	b.n	8002144 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800214c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800214c:	89c0      	ldrh	r0, [r0, #14]
 800214e:	4770      	bx	lr

08002150 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002150:	8a00      	ldrh	r0, [r0, #16]
 8002152:	4770      	bx	lr

08002154 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002154:	88c0      	ldrh	r0, [r0, #6]
 8002156:	4770      	bx	lr

08002158 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002158:	8880      	ldrh	r0, [r0, #4]
 800215a:	4770      	bx	lr

0800215c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800215c:	7a80      	ldrb	r0, [r0, #10]
    }
 800215e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002162:	4770      	bx	lr

08002164 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002164:	7a80      	ldrb	r0, [r0, #10]
    }
 8002166:	09c0      	lsrs	r0, r0, #7
 8002168:	4770      	bx	lr

0800216a <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800216a:	4770      	bx	lr

0800216c <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800216c:	b510      	push	{r4, lr}
    }
 800216e:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002170:	4604      	mov	r4, r0
    }
 8002172:	f01b fb62 	bl	801d83a <_ZdlPvj>
 8002176:	4620      	mov	r0, r4
 8002178:	bd10      	pop	{r4, pc}

0800217a <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 800217a:	4770      	bx	lr

0800217c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800217c:	4770      	bx	lr

0800217e <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800217e:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8002182:	6808      	ldr	r0, [r1, #0]
 8002184:	6849      	ldr	r1, [r1, #4]
 8002186:	c303      	stmia	r3!, {r0, r1}
    }
 8002188:	4770      	bx	lr

0800218a <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 800218a:	4770      	bx	lr

0800218c <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800218c:	4770      	bx	lr

0800218e <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800218e:	6041      	str	r1, [r0, #4]
    }
 8002190:	4770      	bx	lr

08002192 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8002192:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002194:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8002196:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800219a:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800219e:	8002      	strh	r2, [r0, #0]
 80021a0:	8042      	strh	r2, [r0, #2]
 80021a2:	8084      	strh	r4, [r0, #4]
 80021a4:	80c1      	strh	r1, [r0, #6]
        }
 80021a6:	bd10      	pop	{r4, pc}

080021a8 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80021a8:	4770      	bx	lr

080021aa <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80021aa:	4770      	bx	lr

080021ac <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80021ac:	4b06      	ldr	r3, [pc, #24]	; (80021c8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80021ae:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80021b2:	2300      	movs	r3, #0
 80021b4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80021b8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80021bc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80021c0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 80021c4:	4770      	bx	lr
 80021c6:	bf00      	nop
 80021c8:	080025dd 	.word	0x080025dd

080021cc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80021cc:	2301      	movs	r3, #1
 80021ce:	7203      	strb	r3, [r0, #8]
    }
 80021d0:	4770      	bx	lr

080021d2 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 80021d2:	4770      	bx	lr

080021d4 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE3EED1Ev>:
{
/**
 * A Transition that slides the new screen over the previous \e from the given direction.
 */
template <Direction templateDirection>
class CoverTransition : public Transition
 80021d4:	4770      	bx	lr

080021d6 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EED1Ev>:
 80021d6:	4770      	bx	lr

080021d8 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80021d8:	4770      	bx	lr

080021da <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80021da:	4770      	bx	lr

080021dc <_ZN8touchgfx15CoverTransitionILNS_9DirectionE3EE8tearDownEv>:

            d = d->getNextSibling();
        }
    }

    virtual void tearDown()
 80021dc:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80021de:	6840      	ldr	r0, [r0, #4]
 80021e0:	6803      	ldr	r3, [r0, #0]
 80021e2:	3110      	adds	r1, #16
 80021e4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80021e6:	4718      	bx	r3

080021e8 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 80021e8:	b570      	push	{r4, r5, r6, lr}
 80021ea:	4605      	mov	r5, r0
    {
        Transition::init();

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 80021ec:	6840      	ldr	r0, [r0, #4]
 80021ee:	6803      	ldr	r3, [r0, #0]
 80021f0:	69db      	ldr	r3, [r3, #28]
 80021f2:	4798      	blx	r3
 80021f4:	4604      	mov	r4, r0
        while (d)
 80021f6:	b14c      	cbz	r4, 800220c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE3EE4initEv+0x24>
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
 80021f8:	88a1      	ldrh	r1, [r4, #4]
 80021fa:	89ab      	ldrh	r3, [r5, #12]
 80021fc:	1ac9      	subs	r1, r1, r3
 80021fe:	6823      	ldr	r3, [r4, #0]
 8002200:	4620      	mov	r0, r4
 8002202:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002204:	b209      	sxth	r1, r1
 8002206:	4798      	blx	r3
        return nextSibling;
 8002208:	69a4      	ldr	r4, [r4, #24]
        while (d)
 800220a:	e7f4      	b.n	80021f6 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE3EE4initEv+0xe>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(solid);
 800220c:	6868      	ldr	r0, [r5, #4]
 800220e:	6803      	ldr	r3, [r0, #0]
 8002210:	f105 0110 	add.w	r1, r5, #16
 8002214:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    }
 8002216:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(solid);
 800221a:	4718      	bx	r3

0800221c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800221c:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 800221e:	6840      	ldr	r0, [r0, #4]
 8002220:	6803      	ldr	r3, [r0, #0]
 8002222:	3110      	adds	r1, #16
 8002224:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002226:	4718      	bx	r3

08002228 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8002228:	b570      	push	{r4, r5, r6, lr}
 800222a:	4605      	mov	r5, r0
        Drawable* d = screenContainer->getFirstChild();
 800222c:	6840      	ldr	r0, [r0, #4]
 800222e:	6803      	ldr	r3, [r0, #0]
 8002230:	69db      	ldr	r3, [r3, #28]
 8002232:	4798      	blx	r3
 8002234:	4604      	mov	r4, r0
        while (d)
 8002236:	b14c      	cbz	r4, 800224c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv+0x24>
                d->setX(d->getX() - targetValue);
 8002238:	88a1      	ldrh	r1, [r4, #4]
 800223a:	89ab      	ldrh	r3, [r5, #12]
 800223c:	1ac9      	subs	r1, r1, r3
 800223e:	6823      	ldr	r3, [r4, #0]
 8002240:	4620      	mov	r0, r4
 8002242:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002244:	b209      	sxth	r1, r1
 8002246:	4798      	blx	r3
 8002248:	69a4      	ldr	r4, [r4, #24]
        while (d)
 800224a:	e7f4      	b.n	8002236 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv+0xe>
        screenContainer->add(solid);
 800224c:	6868      	ldr	r0, [r5, #4]
 800224e:	6803      	ldr	r3, [r0, #0]
 8002250:	f105 0110 	add.w	r1, r5, #16
 8002254:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    }
 8002256:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(solid);
 800225a:	4718      	bx	r3

0800225c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800225c:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800225e:	68c2      	ldr	r2, [r0, #12]
 8002260:	6841      	ldr	r1, [r0, #4]
 8002262:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002264:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002266:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800226a:	07d2      	lsls	r2, r2, #31
 800226c:	bf48      	it	mi
 800226e:	590a      	ldrmi	r2, [r1, r4]
 8002270:	689b      	ldr	r3, [r3, #8]
    }
 8002272:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002276:	bf48      	it	mi
 8002278:	58d3      	ldrmi	r3, [r2, r3]
 800227a:	4718      	bx	r3

0800227c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 800227c:	6843      	ldr	r3, [r0, #4]
 800227e:	b12b      	cbz	r3, 800228c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002280:	6883      	ldr	r3, [r0, #8]
 8002282:	b92b      	cbnz	r3, 8002290 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002284:	68c0      	ldr	r0, [r0, #12]
 8002286:	f000 0001 	and.w	r0, r0, #1
 800228a:	4770      	bx	lr
 800228c:	4618      	mov	r0, r3
 800228e:	4770      	bx	lr
 8002290:	2001      	movs	r0, #1
    }
 8002292:	4770      	bx	lr

08002294 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002294:	b510      	push	{r4, lr}
 8002296:	210c      	movs	r1, #12
 8002298:	4604      	mov	r4, r0
 800229a:	f01b face 	bl	801d83a <_ZdlPvj>
 800229e:	4620      	mov	r0, r4
 80022a0:	bd10      	pop	{r4, pc}

080022a2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80022a2:	b510      	push	{r4, lr}
 80022a4:	2110      	movs	r1, #16
 80022a6:	4604      	mov	r4, r0
 80022a8:	f01b fac7 	bl	801d83a <_ZdlPvj>
 80022ac:	4620      	mov	r0, r4
 80022ae:	bd10      	pop	{r4, pc}

080022b0 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80022b0:	b510      	push	{r4, lr}
 80022b2:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80022b6:	4604      	mov	r4, r0
 80022b8:	f01b fabf 	bl	801d83a <_ZdlPvj>
 80022bc:	4620      	mov	r0, r4
 80022be:	bd10      	pop	{r4, pc}

080022c0 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE3EED0Ev>:
class CoverTransition : public Transition
 80022c0:	b510      	push	{r4, lr}
 80022c2:	2138      	movs	r1, #56	; 0x38
 80022c4:	4604      	mov	r4, r0
 80022c6:	f01b fab8 	bl	801d83a <_ZdlPvj>
 80022ca:	4620      	mov	r0, r4
 80022cc:	bd10      	pop	{r4, pc}

080022ce <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80022ce:	b510      	push	{r4, lr}
 80022d0:	2128      	movs	r1, #40	; 0x28
 80022d2:	4604      	mov	r4, r0
 80022d4:	f01b fab1 	bl	801d83a <_ZdlPvj>
 80022d8:	4620      	mov	r0, r4
 80022da:	bd10      	pop	{r4, pc}

080022dc <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EED0Ev>:
 80022dc:	b510      	push	{r4, lr}
 80022de:	2138      	movs	r1, #56	; 0x38
 80022e0:	4604      	mov	r4, r0
 80022e2:	f01b faaa 	bl	801d83a <_ZdlPvj>
 80022e6:	4620      	mov	r0, r4
 80022e8:	bd10      	pop	{r4, pc}

080022ea <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80022ea:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80022ec:	f00a fd84 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
 80022f0:	6803      	ldr	r3, [r0, #0]
    }
 80022f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80022f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80022f8:	4718      	bx	r3
	...

080022fc <_ZN8touchgfx15CoverTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80022fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80022fe:	4604      	mov	r4, r0
        animationCounter++;
 8002300:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8002302:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002304:	3001      	adds	r0, #1
 8002306:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8002308:	4298      	cmp	r0, r3
        animationCounter++;
 800230a:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 800230c:	d905      	bls.n	800231a <_ZN8touchgfx15CoverTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 800230e:	2301      	movs	r3, #1
 8002310:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002312:	2300      	movs	r3, #0
 8002314:	72a3      	strb	r3, [r4, #10]
    }
 8002316:	b002      	add	sp, #8
 8002318:	bd70      	pop	{r4, r5, r6, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800231a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
        const int16_t oldValue = calculatedValue;
 800231e:	f9b4 600e 	ldrsh.w	r6, [r4, #14]
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002322:	2100      	movs	r1, #0
 8002324:	f00c faaa 	bl	800e87c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8002328:	f010 0201 	ands.w	r2, r0, #1
 800232c:	b283      	uxth	r3, r0
 800232e:	d131      	bne.n	8002394 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002330:	81e0      	strh	r0, [r4, #14]
        const int16_t relativeValue = calculatedValue - oldValue;
 8002332:	89e5      	ldrh	r5, [r4, #14]
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002334:	7aa3      	ldrb	r3, [r4, #10]
        const int16_t relativeValue = calculatedValue - oldValue;
 8002336:	1bad      	subs	r5, r5, r6
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002338:	2b01      	cmp	r3, #1
        const int16_t relativeValue = calculatedValue - oldValue;
 800233a:	b2ad      	uxth	r5, r5
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800233c:	d106      	bne.n	800234c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE3EE15handleTickEventEv+0x50>
 800233e:	4b19      	ldr	r3, [pc, #100]	; (80023a4 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa8>)
 8002340:	781b      	ldrb	r3, [r3, #0]
 8002342:	b11b      	cbz	r3, 800234c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE3EE15handleTickEventEv+0x50>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002344:	f00a fd58 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
 8002348:	f00a fd5c 	bl	800ce04 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
        : x(0), y(0), width(0), height(0)
 800234c:	2300      	movs	r3, #0
 800234e:	f8ad 3000 	strh.w	r3, [sp]
 8002352:	f8ad 3002 	strh.w	r3, [sp, #2]
            rect.width = calculatedValue;
 8002356:	89e3      	ldrh	r3, [r4, #14]
 8002358:	f8ad 3004 	strh.w	r3, [sp, #4]
            rect.height = HAL::DISPLAY_HEIGHT;
 800235c:	4b12      	ldr	r3, [pc, #72]	; (80023a8 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE3EE15handleTickEventEv+0xac>)
 800235e:	881b      	ldrh	r3, [r3, #0]
 8002360:	f8ad 3006 	strh.w	r3, [sp, #6]
        Application::getInstance()->invalidateArea(rect);
 8002364:	f00a fd48 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
 8002368:	6803      	ldr	r3, [r0, #0]
 800236a:	aa02      	add	r2, sp, #8
 800236c:	e912 0006 	ldmdb	r2, {r1, r2}
 8002370:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002372:	4798      	blx	r3
        Drawable* d = screenContainer->getFirstChild();
 8002374:	6860      	ldr	r0, [r4, #4]
 8002376:	6803      	ldr	r3, [r0, #0]
 8002378:	69db      	ldr	r3, [r3, #28]
 800237a:	4798      	blx	r3
 800237c:	4604      	mov	r4, r0
        while (d)
 800237e:	2c00      	cmp	r4, #0
 8002380:	d0c9      	beq.n	8002316 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
                d->setX(d->getX() + relativeValue);
 8002382:	88a1      	ldrh	r1, [r4, #4]
 8002384:	6823      	ldr	r3, [r4, #0]
 8002386:	4429      	add	r1, r5
 8002388:	4620      	mov	r0, r4
 800238a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800238c:	b209      	sxth	r1, r1
 800238e:	4798      	blx	r3
 8002390:	69a4      	ldr	r4, [r4, #24]
        while (d)
 8002392:	e7f4      	b.n	800237e <_ZN8touchgfx15CoverTransitionILNS_9DirectionE3EE15handleTickEventEv+0x82>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002394:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002398:	2800      	cmp	r0, #0
 800239a:	bfd8      	it	le
 800239c:	460a      	movle	r2, r1
 800239e:	4413      	add	r3, r2
 80023a0:	81e3      	strh	r3, [r4, #14]
 80023a2:	e7c6      	b.n	8002332 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE3EE15handleTickEventEv+0x36>
 80023a4:	20012642 	.word	0x20012642
 80023a8:	2001263a 	.word	0x2001263a

080023ac <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80023ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80023ae:	4604      	mov	r4, r0
        animationCounter++;
 80023b0:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80023b2:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80023b4:	3001      	adds	r0, #1
 80023b6:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80023b8:	4298      	cmp	r0, r3
        animationCounter++;
 80023ba:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80023bc:	d905      	bls.n	80023ca <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 80023be:	2301      	movs	r3, #1
 80023c0:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80023c2:	2300      	movs	r3, #0
 80023c4:	72a3      	strb	r3, [r4, #10]
    }
 80023c6:	b002      	add	sp, #8
 80023c8:	bd70      	pop	{r4, r5, r6, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80023ca:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
        const int16_t oldValue = calculatedValue;
 80023ce:	f9b4 600e 	ldrsh.w	r6, [r4, #14]
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80023d2:	2100      	movs	r1, #0
 80023d4:	f00c fa52 	bl	800e87c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80023d8:	f010 0201 	ands.w	r2, r0, #1
 80023dc:	b283      	uxth	r3, r0
 80023de:	d135      	bne.n	800244c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xa0>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80023e0:	81e0      	strh	r0, [r4, #14]
        const int16_t relativeValue = calculatedValue - oldValue;
 80023e2:	89e5      	ldrh	r5, [r4, #14]
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80023e4:	7aa3      	ldrb	r3, [r4, #10]
        const int16_t relativeValue = calculatedValue - oldValue;
 80023e6:	1bad      	subs	r5, r5, r6
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80023e8:	2b01      	cmp	r3, #1
        const int16_t relativeValue = calculatedValue - oldValue;
 80023ea:	b2ad      	uxth	r5, r5
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80023ec:	d106      	bne.n	80023fc <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x50>
 80023ee:	4b1b      	ldr	r3, [pc, #108]	; (800245c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb0>)
 80023f0:	781b      	ldrb	r3, [r3, #0]
 80023f2:	b11b      	cbz	r3, 80023fc <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x50>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80023f4:	f00a fd00 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
 80023f8:	f00a fd04 	bl	800ce04 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            rect.x = HAL::DISPLAY_WIDTH + calculatedValue;
 80023fc:	4a18      	ldr	r2, [pc, #96]	; (8002460 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb4>)
 80023fe:	2300      	movs	r3, #0
 8002400:	8812      	ldrh	r2, [r2, #0]
 8002402:	f8ad 3002 	strh.w	r3, [sp, #2]
 8002406:	89e3      	ldrh	r3, [r4, #14]
 8002408:	441a      	add	r2, r3
            rect.width = -calculatedValue;
 800240a:	425b      	negs	r3, r3
 800240c:	f8ad 3004 	strh.w	r3, [sp, #4]
            rect.height = HAL::DISPLAY_HEIGHT;
 8002410:	4b14      	ldr	r3, [pc, #80]	; (8002464 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb8>)
            rect.x = HAL::DISPLAY_WIDTH + calculatedValue;
 8002412:	f8ad 2000 	strh.w	r2, [sp]
            rect.height = HAL::DISPLAY_HEIGHT;
 8002416:	881b      	ldrh	r3, [r3, #0]
 8002418:	f8ad 3006 	strh.w	r3, [sp, #6]
        Application::getInstance()->invalidateArea(rect);
 800241c:	f00a fcec 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
 8002420:	6803      	ldr	r3, [r0, #0]
 8002422:	aa02      	add	r2, sp, #8
 8002424:	e912 0006 	ldmdb	r2, {r1, r2}
 8002428:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800242a:	4798      	blx	r3
        Drawable* d = screenContainer->getFirstChild();
 800242c:	6860      	ldr	r0, [r4, #4]
 800242e:	6803      	ldr	r3, [r0, #0]
 8002430:	69db      	ldr	r3, [r3, #28]
 8002432:	4798      	blx	r3
 8002434:	4604      	mov	r4, r0
        while (d)
 8002436:	2c00      	cmp	r4, #0
 8002438:	d0c5      	beq.n	80023c6 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
                d->setX(d->getX() + relativeValue);
 800243a:	88a1      	ldrh	r1, [r4, #4]
 800243c:	6823      	ldr	r3, [r4, #0]
 800243e:	4429      	add	r1, r5
 8002440:	4620      	mov	r0, r4
 8002442:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002444:	b209      	sxth	r1, r1
 8002446:	4798      	blx	r3
 8002448:	69a4      	ldr	r4, [r4, #24]
        while (d)
 800244a:	e7f4      	b.n	8002436 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x8a>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800244c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002450:	2800      	cmp	r0, #0
 8002452:	bfd8      	it	le
 8002454:	460a      	movle	r2, r1
 8002456:	4413      	add	r3, r2
 8002458:	81e3      	strh	r3, [r4, #14]
 800245a:	e7c2      	b.n	80023e2 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x36>
 800245c:	20012642 	.word	0x20012642
 8002460:	20012638 	.word	0x20012638
 8002464:	2001263a 	.word	0x2001263a

08002468 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002468:	b510      	push	{r4, lr}
 800246a:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800246c:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8002470:	b158      	cbz	r0, 800248a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002472:	6803      	ldr	r3, [r0, #0]
 8002474:	68db      	ldr	r3, [r3, #12]
 8002476:	4798      	blx	r3
 8002478:	b138      	cbz	r0, 800248a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800247a:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800247e:	6803      	ldr	r3, [r0, #0]
 8002480:	689b      	ldr	r3, [r3, #8]
 8002482:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002484:	2300      	movs	r3, #0
 8002486:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 800248a:	bd10      	pop	{r4, pc}

0800248c <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen3ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreen3ScreenNoTransitionImpl()
{
 800248c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen3View, Screen3Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002490:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8002494:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002496:	68a8      	ldr	r0, [r5, #8]
 8002498:	6803      	ldr	r3, [r0, #0]
 800249a:	6a1b      	ldr	r3, [r3, #32]
 800249c:	4798      	blx	r3
 800249e:	f5b0 7f43 	cmp.w	r0, #780	; 0x30c
 80024a2:	d205      	bcs.n	80024b0 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x24>
 80024a4:	4b45      	ldr	r3, [pc, #276]	; (80025bc <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x130>)
 80024a6:	4a46      	ldr	r2, [pc, #280]	; (80025c0 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x134>)
 80024a8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80024aa:	4846      	ldr	r0, [pc, #280]	; (80025c4 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x138>)
 80024ac:	f01b f9f4 	bl	801d898 <__assert_func>
 80024b0:	6868      	ldr	r0, [r5, #4]
 80024b2:	6803      	ldr	r3, [r0, #0]
 80024b4:	6a1b      	ldr	r3, [r3, #32]
 80024b6:	4798      	blx	r3
 80024b8:	280f      	cmp	r0, #15
 80024ba:	d803      	bhi.n	80024c4 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x38>
 80024bc:	4b42      	ldr	r3, [pc, #264]	; (80025c8 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x13c>)
 80024be:	4a40      	ldr	r2, [pc, #256]	; (80025c0 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x134>)
 80024c0:	21a4      	movs	r1, #164	; 0xa4
 80024c2:	e7f2      	b.n	80024aa <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80024c4:	68e8      	ldr	r0, [r5, #12]
 80024c6:	6803      	ldr	r3, [r0, #0]
 80024c8:	6a1b      	ldr	r3, [r3, #32]
 80024ca:	4798      	blx	r3
 80024cc:	280b      	cmp	r0, #11
 80024ce:	d803      	bhi.n	80024d8 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x4c>
 80024d0:	4b3e      	ldr	r3, [pc, #248]	; (80025cc <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x140>)
 80024d2:	4a3b      	ldr	r2, [pc, #236]	; (80025c0 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x134>)
 80024d4:	21a5      	movs	r1, #165	; 0xa5
 80024d6:	e7e8      	b.n	80024aa <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80024d8:	f00a fc8e 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80024dc:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 80025d4 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80024e0:	3004      	adds	r0, #4
 80024e2:	f00a fcef 	bl	800cec4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80024e6:	f8d9 0000 	ldr.w	r0, [r9]
 80024ea:	b110      	cbz	r0, 80024f2 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80024ec:	6803      	ldr	r3, [r0, #0]
 80024ee:	68db      	ldr	r3, [r3, #12]
 80024f0:	4798      	blx	r3
    if (*currentTrans)
 80024f2:	f8d9 0000 	ldr.w	r0, [r9]
 80024f6:	b110      	cbz	r0, 80024fe <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80024f8:	6803      	ldr	r3, [r0, #0]
 80024fa:	681b      	ldr	r3, [r3, #0]
 80024fc:	4798      	blx	r3
    if (*currentScreen)
 80024fe:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80025d8 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x14c>
 8002502:	f8d8 0000 	ldr.w	r0, [r8]
 8002506:	b110      	cbz	r0, 800250e <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002508:	6803      	ldr	r3, [r0, #0]
 800250a:	695b      	ldr	r3, [r3, #20]
 800250c:	4798      	blx	r3
    if (*currentPresenter)
 800250e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002512:	b110      	cbz	r0, 800251a <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002514:	6803      	ldr	r3, [r0, #0]
 8002516:	685b      	ldr	r3, [r3, #4]
 8002518:	4798      	blx	r3
    if (*currentScreen)
 800251a:	f8d8 0000 	ldr.w	r0, [r8]
 800251e:	b110      	cbz	r0, 8002526 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002520:	6803      	ldr	r3, [r0, #0]
 8002522:	681b      	ldr	r3, [r3, #0]
 8002524:	4798      	blx	r3
    if (*currentPresenter)
 8002526:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800252a:	b110      	cbz	r0, 8002532 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800252c:	6803      	ldr	r3, [r0, #0]
 800252e:	689b      	ldr	r3, [r3, #8]
 8002530:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002532:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002534:	6803      	ldr	r3, [r0, #0]
 8002536:	2100      	movs	r1, #0
 8002538:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800253a:	4798      	blx	r3
        : screenContainer(0), done(false)
 800253c:	f04f 0b00 	mov.w	fp, #0
 8002540:	4b23      	ldr	r3, [pc, #140]	; (80025d0 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x144>)
 8002542:	6003      	str	r3, [r0, #0]
 8002544:	4604      	mov	r4, r0
 8002546:	f8c0 b004 	str.w	fp, [r0, #4]
 800254a:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800254e:	68a8      	ldr	r0, [r5, #8]
 8002550:	6803      	ldr	r3, [r0, #0]
 8002552:	4659      	mov	r1, fp
 8002554:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002556:	4798      	blx	r3
 8002558:	4606      	mov	r6, r0
 800255a:	f002 f855 	bl	8004608 <_ZN11Screen3ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800255e:	6868      	ldr	r0, [r5, #4]
 8002560:	6803      	ldr	r3, [r0, #0]
 8002562:	4659      	mov	r1, fp
 8002564:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002566:	4798      	blx	r3
 8002568:	4631      	mov	r1, r6
 800256a:	4605      	mov	r5, r0
 800256c:	f002 f826 	bl	80045bc <_ZN16Screen3PresenterC1ER11Screen3View>
    *currentTrans = newTransition;
 8002570:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002574:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8002578:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800257c:	b1e5      	cbz	r5, 80025b8 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x12c>
 800257e:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002580:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002584:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002586:	f8c5 a008 	str.w	sl, [r5, #8]
 800258a:	4630      	mov	r0, r6
 800258c:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 800258e:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002590:	4798      	blx	r3
    newPresenter->activate();
 8002592:	682b      	ldr	r3, [r5, #0]
 8002594:	4628      	mov	r0, r5
 8002596:	681b      	ldr	r3, [r3, #0]
 8002598:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800259a:	4621      	mov	r1, r4
 800259c:	4630      	mov	r0, r6
 800259e:	f00c f967 	bl	800e870 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80025a2:	6823      	ldr	r3, [r4, #0]
 80025a4:	4620      	mov	r0, r4
 80025a6:	691b      	ldr	r3, [r3, #16]
 80025a8:	4798      	blx	r3
    newTransition->invalidate();
 80025aa:	6823      	ldr	r3, [r4, #0]
 80025ac:	695b      	ldr	r3, [r3, #20]
 80025ae:	4620      	mov	r0, r4
}
 80025b0:	b001      	add	sp, #4
 80025b2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025b6:	4718      	bx	r3
    model->bind(newPresenter);
 80025b8:	462b      	mov	r3, r5
 80025ba:	e7e1      	b.n	8002580 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0xf4>
 80025bc:	0801f3a0 	.word	0x0801f3a0
 80025c0:	0801f42e 	.word	0x0801f42e
 80025c4:	0801f532 	.word	0x0801f532
 80025c8:	0801f579 	.word	0x0801f579
 80025cc:	0801f61c 	.word	0x0801f61c
 80025d0:	0801fad0 	.word	0x0801fad0
 80025d4:	20012684 	.word	0x20012684
 80025d8:	20012680 	.word	0x20012680

080025dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
{
 80025dc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80025e0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80025e4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80025e6:	68a8      	ldr	r0, [r5, #8]
 80025e8:	6803      	ldr	r3, [r0, #0]
 80025ea:	6a1b      	ldr	r3, [r3, #32]
 80025ec:	4798      	blx	r3
 80025ee:	f5b0 7fb6 	cmp.w	r0, #364	; 0x16c
 80025f2:	d205      	bcs.n	8002600 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 80025f4:	4b45      	ldr	r3, [pc, #276]	; (800270c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80025f6:	4a46      	ldr	r2, [pc, #280]	; (8002710 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80025f8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80025fa:	4846      	ldr	r0, [pc, #280]	; (8002714 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80025fc:	f01b f94c 	bl	801d898 <__assert_func>
 8002600:	6868      	ldr	r0, [r5, #4]
 8002602:	6803      	ldr	r3, [r0, #0]
 8002604:	6a1b      	ldr	r3, [r3, #32]
 8002606:	4798      	blx	r3
 8002608:	280f      	cmp	r0, #15
 800260a:	d803      	bhi.n	8002614 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 800260c:	4b42      	ldr	r3, [pc, #264]	; (8002718 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 800260e:	4a40      	ldr	r2, [pc, #256]	; (8002710 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002610:	21a4      	movs	r1, #164	; 0xa4
 8002612:	e7f2      	b.n	80025fa <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002614:	68e8      	ldr	r0, [r5, #12]
 8002616:	6803      	ldr	r3, [r0, #0]
 8002618:	6a1b      	ldr	r3, [r3, #32]
 800261a:	4798      	blx	r3
 800261c:	280b      	cmp	r0, #11
 800261e:	d803      	bhi.n	8002628 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002620:	4b3e      	ldr	r3, [pc, #248]	; (800271c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002622:	4a3b      	ldr	r2, [pc, #236]	; (8002710 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002624:	21a5      	movs	r1, #165	; 0xa5
 8002626:	e7e8      	b.n	80025fa <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8002628:	f00a fbe6 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800262c:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 8002724 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
 8002630:	3004      	adds	r0, #4
 8002632:	f00a fc47 	bl	800cec4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002636:	f8d9 0000 	ldr.w	r0, [r9]
 800263a:	b110      	cbz	r0, 8002642 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 800263c:	6803      	ldr	r3, [r0, #0]
 800263e:	68db      	ldr	r3, [r3, #12]
 8002640:	4798      	blx	r3
    if (*currentTrans)
 8002642:	f8d9 0000 	ldr.w	r0, [r9]
 8002646:	b110      	cbz	r0, 800264e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002648:	6803      	ldr	r3, [r0, #0]
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	4798      	blx	r3
    if (*currentScreen)
 800264e:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002728 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002652:	f8d8 0000 	ldr.w	r0, [r8]
 8002656:	b110      	cbz	r0, 800265e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002658:	6803      	ldr	r3, [r0, #0]
 800265a:	695b      	ldr	r3, [r3, #20]
 800265c:	4798      	blx	r3
    if (*currentPresenter)
 800265e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002662:	b110      	cbz	r0, 800266a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002664:	6803      	ldr	r3, [r0, #0]
 8002666:	685b      	ldr	r3, [r3, #4]
 8002668:	4798      	blx	r3
    if (*currentScreen)
 800266a:	f8d8 0000 	ldr.w	r0, [r8]
 800266e:	b110      	cbz	r0, 8002676 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002670:	6803      	ldr	r3, [r0, #0]
 8002672:	681b      	ldr	r3, [r3, #0]
 8002674:	4798      	blx	r3
    if (*currentPresenter)
 8002676:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800267a:	b110      	cbz	r0, 8002682 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800267c:	6803      	ldr	r3, [r0, #0]
 800267e:	689b      	ldr	r3, [r3, #8]
 8002680:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002682:	68e8      	ldr	r0, [r5, #12]
 8002684:	6803      	ldr	r3, [r0, #0]
 8002686:	2100      	movs	r1, #0
 8002688:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800268a:	4798      	blx	r3
 800268c:	f04f 0b00 	mov.w	fp, #0
 8002690:	4b23      	ldr	r3, [pc, #140]	; (8002720 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 8002692:	6003      	str	r3, [r0, #0]
 8002694:	4604      	mov	r4, r0
 8002696:	f8c0 b004 	str.w	fp, [r0, #4]
 800269a:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800269e:	68a8      	ldr	r0, [r5, #8]
 80026a0:	6803      	ldr	r3, [r0, #0]
 80026a2:	4659      	mov	r1, fp
 80026a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026a6:	4798      	blx	r3
 80026a8:	4606      	mov	r6, r0
 80026aa:	f001 fc27 	bl	8003efc <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80026ae:	6868      	ldr	r0, [r5, #4]
 80026b0:	6803      	ldr	r3, [r0, #0]
 80026b2:	4659      	mov	r1, fp
 80026b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026b6:	4798      	blx	r3
 80026b8:	4631      	mov	r1, r6
 80026ba:	4605      	mov	r5, r0
 80026bc:	f001 fbf8 	bl	8003eb0 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 80026c0:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80026c4:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80026c8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80026cc:	b1e5      	cbz	r5, 8002708 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>
 80026ce:	1d2b      	adds	r3, r5, #4
 80026d0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80026d4:	6833      	ldr	r3, [r6, #0]
 80026d6:	f8c5 a008 	str.w	sl, [r5, #8]
 80026da:	4630      	mov	r0, r6
 80026dc:	68db      	ldr	r3, [r3, #12]
 80026de:	63f5      	str	r5, [r6, #60]	; 0x3c
 80026e0:	4798      	blx	r3
    newPresenter->activate();
 80026e2:	682b      	ldr	r3, [r5, #0]
 80026e4:	4628      	mov	r0, r5
 80026e6:	681b      	ldr	r3, [r3, #0]
 80026e8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80026ea:	4621      	mov	r1, r4
 80026ec:	4630      	mov	r0, r6
 80026ee:	f00c f8bf 	bl	800e870 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80026f2:	6823      	ldr	r3, [r4, #0]
 80026f4:	4620      	mov	r0, r4
 80026f6:	691b      	ldr	r3, [r3, #16]
 80026f8:	4798      	blx	r3
    newTransition->invalidate();
 80026fa:	6823      	ldr	r3, [r4, #0]
 80026fc:	695b      	ldr	r3, [r3, #20]
 80026fe:	4620      	mov	r0, r4
}
 8002700:	b001      	add	sp, #4
 8002702:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002706:	4718      	bx	r3
    model->bind(newPresenter);
 8002708:	462b      	mov	r3, r5
 800270a:	e7e1      	b.n	80026d0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf4>
 800270c:	0801f3a0 	.word	0x0801f3a0
 8002710:	0801f6bf 	.word	0x0801f6bf
 8002714:	0801f532 	.word	0x0801f532
 8002718:	0801f579 	.word	0x0801f579
 800271c:	0801f61c 	.word	0x0801f61c
 8002720:	0801fad0 	.word	0x0801fad0
 8002724:	20012684 	.word	0x20012684
 8002728:	20012680 	.word	0x20012680

0800272c <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800272c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002730:	461d      	mov	r5, r3
        setX(x);
 8002732:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002734:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 8002738:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800273a:	4604      	mov	r4, r0
 800273c:	4616      	mov	r6, r2
        setX(x);
 800273e:	4798      	blx	r3
        setY(y);
 8002740:	6823      	ldr	r3, [r4, #0]
 8002742:	4631      	mov	r1, r6
 8002744:	4620      	mov	r0, r4
 8002746:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002748:	4798      	blx	r3
        setWidth(width);
 800274a:	6823      	ldr	r3, [r4, #0]
 800274c:	4629      	mov	r1, r5
 800274e:	4620      	mov	r0, r4
 8002750:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002752:	4798      	blx	r3
        setHeight(height);
 8002754:	6823      	ldr	r3, [r4, #0]
 8002756:	4639      	mov	r1, r7
 8002758:	4620      	mov	r0, r4
 800275a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 800275c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 8002760:	4718      	bx	r3
	...

08002764 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv>:
{
 8002764:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002768:	e9d0 ba55 	ldrd	fp, sl, [r0, #340]	; 0x154
{
 800276c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800276e:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002772:	6803      	ldr	r3, [r0, #0]
 8002774:	6a1b      	ldr	r3, [r3, #32]
 8002776:	4798      	blx	r3
 8002778:	f5b0 7f31 	cmp.w	r0, #708	; 0x2c4
 800277c:	d205      	bcs.n	800278a <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x26>
 800277e:	4b56      	ldr	r3, [pc, #344]	; (80028d8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x174>)
 8002780:	4a56      	ldr	r2, [pc, #344]	; (80028dc <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x178>)
 8002782:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002784:	4856      	ldr	r0, [pc, #344]	; (80028e0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x17c>)
 8002786:	f01b f887 	bl	801d898 <__assert_func>
 800278a:	f8db 0004 	ldr.w	r0, [fp, #4]
 800278e:	6803      	ldr	r3, [r0, #0]
 8002790:	6a1b      	ldr	r3, [r3, #32]
 8002792:	4798      	blx	r3
 8002794:	280f      	cmp	r0, #15
 8002796:	d803      	bhi.n	80027a0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x3c>
 8002798:	4b52      	ldr	r3, [pc, #328]	; (80028e4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x180>)
 800279a:	4a50      	ldr	r2, [pc, #320]	; (80028dc <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x178>)
 800279c:	21a4      	movs	r1, #164	; 0xa4
 800279e:	e7f1      	b.n	8002784 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80027a0:	f8db 000c 	ldr.w	r0, [fp, #12]
 80027a4:	6803      	ldr	r3, [r0, #0]
 80027a6:	6a1b      	ldr	r3, [r3, #32]
 80027a8:	4798      	blx	r3
 80027aa:	2837      	cmp	r0, #55	; 0x37
 80027ac:	d803      	bhi.n	80027b6 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x52>
 80027ae:	4b4e      	ldr	r3, [pc, #312]	; (80028e8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x184>)
 80027b0:	4a4a      	ldr	r2, [pc, #296]	; (80028dc <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x178>)
 80027b2:	21a5      	movs	r1, #165	; 0xa5
 80027b4:	e7e6      	b.n	8002784 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80027b6:	f00a fb1f 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80027ba:	f8df 9140 	ldr.w	r9, [pc, #320]	; 80028fc <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x198>
 80027be:	3004      	adds	r0, #4
 80027c0:	f00a fb80 	bl	800cec4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80027c4:	f8d9 0000 	ldr.w	r0, [r9]
 80027c8:	b110      	cbz	r0, 80027d0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x6c>
        (*currentTrans)->tearDown();
 80027ca:	6803      	ldr	r3, [r0, #0]
 80027cc:	68db      	ldr	r3, [r3, #12]
 80027ce:	4798      	blx	r3
    if (*currentTrans)
 80027d0:	f8d9 0000 	ldr.w	r0, [r9]
 80027d4:	b110      	cbz	r0, 80027dc <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x78>
        (*currentTrans)->~Transition();
 80027d6:	6803      	ldr	r3, [r0, #0]
 80027d8:	681b      	ldr	r3, [r3, #0]
 80027da:	4798      	blx	r3
    if (*currentScreen)
 80027dc:	f8df 8120 	ldr.w	r8, [pc, #288]	; 8002900 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x19c>
 80027e0:	f8d8 0000 	ldr.w	r0, [r8]
 80027e4:	b110      	cbz	r0, 80027ec <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x88>
        (*currentScreen)->tearDownScreen();
 80027e6:	6803      	ldr	r3, [r0, #0]
 80027e8:	695b      	ldr	r3, [r3, #20]
 80027ea:	4798      	blx	r3
    if (*currentPresenter)
 80027ec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80027f0:	b110      	cbz	r0, 80027f8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x94>
        (*currentPresenter)->deactivate();
 80027f2:	6803      	ldr	r3, [r0, #0]
 80027f4:	685b      	ldr	r3, [r3, #4]
 80027f6:	4798      	blx	r3
    if (*currentScreen)
 80027f8:	f8d8 0000 	ldr.w	r0, [r8]
 80027fc:	b110      	cbz	r0, 8002804 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0xa0>
        (*currentScreen)->~Screen();
 80027fe:	6803      	ldr	r3, [r0, #0]
 8002800:	681b      	ldr	r3, [r3, #0]
 8002802:	4798      	blx	r3
    if (*currentPresenter)
 8002804:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002808:	b110      	cbz	r0, 8002810 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0xac>
        (*currentPresenter)->~Presenter();
 800280a:	6803      	ldr	r3, [r0, #0]
 800280c:	689b      	ldr	r3, [r3, #8]
 800280e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002810:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002814:	6803      	ldr	r3, [r0, #0]
 8002816:	2100      	movs	r1, #0
 8002818:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800281a:	4798      	blx	r3
          solid()
 800281c:	4b33      	ldr	r3, [pc, #204]	; (80028ec <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x188>)
 800281e:	6003      	str	r3, [r0, #0]
 8002820:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8002824:	8103      	strh	r3, [r0, #8]
 8002826:	f44f 7380 	mov.w	r3, #256	; 0x100
 800282a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 800282c:	4b30      	ldr	r3, [pc, #192]	; (80028f0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x18c>)
 800282e:	6103      	str	r3, [r0, #16]
            targetValue = -HAL::DISPLAY_WIDTH;
 8002830:	4b30      	ldr	r3, [pc, #192]	; (80028f4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x190>)
 8002832:	881b      	ldrh	r3, [r3, #0]
 8002834:	425a      	negs	r2, r3
 8002836:	8182      	strh	r2, [r0, #12]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002838:	4a2f      	ldr	r2, [pc, #188]	; (80028f8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x194>)
        : screenContainer(0), done(false)
 800283a:	2500      	movs	r5, #0
 800283c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8002840:	6045      	str	r5, [r0, #4]
          solid()
 8002842:	7285      	strb	r5, [r0, #10]
 8002844:	81c5      	strh	r5, [r0, #14]
 8002846:	e9c0 5505 	strd	r5, r5, [r0, #20]
 800284a:	e9c0 5507 	strd	r5, r5, [r0, #28]
 800284e:	e9c0 5509 	strd	r5, r5, [r0, #36]	; 0x24
 8002852:	e9c0 550b 	strd	r5, r5, [r0, #44]	; 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002856:	4629      	mov	r1, r5
 8002858:	4604      	mov	r4, r0
 800285a:	9200      	str	r2, [sp, #0]
 800285c:	b21b      	sxth	r3, r3
 800285e:	462a      	mov	r2, r5
 8002860:	3010      	adds	r0, #16
 8002862:	f7ff ff63 	bl	800272c <_ZN8touchgfx8Drawable11setPositionEssss>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002866:	f8db 0008 	ldr.w	r0, [fp, #8]
 800286a:	6803      	ldr	r3, [r0, #0]
 800286c:	4629      	mov	r1, r5
 800286e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002870:	4798      	blx	r3
 8002872:	4606      	mov	r6, r0
 8002874:	f001 fcbe 	bl	80041f4 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002878:	f8db 0004 	ldr.w	r0, [fp, #4]
 800287c:	6803      	ldr	r3, [r0, #0]
 800287e:	4629      	mov	r1, r5
 8002880:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002882:	4798      	blx	r3
 8002884:	4631      	mov	r1, r6
 8002886:	4605      	mov	r5, r0
 8002888:	f001 fb52 	bl	8003f30 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 800288c:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002890:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8002894:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002898:	b1e5      	cbz	r5, 80028d4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x170>
 800289a:	1d2b      	adds	r3, r5, #4
 800289c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80028a0:	6833      	ldr	r3, [r6, #0]
 80028a2:	f8c5 a008 	str.w	sl, [r5, #8]
 80028a6:	4630      	mov	r0, r6
 80028a8:	68db      	ldr	r3, [r3, #12]
 80028aa:	63f5      	str	r5, [r6, #60]	; 0x3c
 80028ac:	4798      	blx	r3
    newPresenter->activate();
 80028ae:	682b      	ldr	r3, [r5, #0]
 80028b0:	4628      	mov	r0, r5
 80028b2:	681b      	ldr	r3, [r3, #0]
 80028b4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80028b6:	4621      	mov	r1, r4
 80028b8:	4630      	mov	r0, r6
 80028ba:	f00b ffd9 	bl	800e870 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80028be:	6823      	ldr	r3, [r4, #0]
 80028c0:	4620      	mov	r0, r4
 80028c2:	691b      	ldr	r3, [r3, #16]
 80028c4:	4798      	blx	r3
    newTransition->invalidate();
 80028c6:	6823      	ldr	r3, [r4, #0]
 80028c8:	695b      	ldr	r3, [r3, #20]
 80028ca:	4620      	mov	r0, r4
}
 80028cc:	b003      	add	sp, #12
 80028ce:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80028d2:	4718      	bx	r3
    model->bind(newPresenter);
 80028d4:	462b      	mov	r3, r5
 80028d6:	e7e1      	b.n	800289c <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionEastImplEv+0x138>
 80028d8:	0801f3a0 	.word	0x0801f3a0
 80028dc:	0801f7c3 	.word	0x0801f7c3
 80028e0:	0801f532 	.word	0x0801f532
 80028e4:	0801f579 	.word	0x0801f579
 80028e8:	0801f61c 	.word	0x0801f61c
 80028ec:	0801faf4 	.word	0x0801faf4
 80028f0:	0801f9fc 	.word	0x0801f9fc
 80028f4:	20012638 	.word	0x20012638
 80028f8:	2001263a 	.word	0x2001263a
 80028fc:	20012684 	.word	0x20012684
 8002900:	20012680 	.word	0x20012680

08002904 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv>:
{
 8002904:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::CoverTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002908:	e9d0 ba55 	ldrd	fp, sl, [r0, #340]	; 0x154
{
 800290c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800290e:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002912:	6803      	ldr	r3, [r0, #0]
 8002914:	6a1b      	ldr	r3, [r3, #32]
 8002916:	4798      	blx	r3
 8002918:	f5b0 7f31 	cmp.w	r0, #708	; 0x2c4
 800291c:	d205      	bcs.n	800292a <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x26>
 800291e:	4b56      	ldr	r3, [pc, #344]	; (8002a78 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x174>)
 8002920:	4a56      	ldr	r2, [pc, #344]	; (8002a7c <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x178>)
 8002922:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002924:	4856      	ldr	r0, [pc, #344]	; (8002a80 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x17c>)
 8002926:	f01a ffb7 	bl	801d898 <__assert_func>
 800292a:	f8db 0004 	ldr.w	r0, [fp, #4]
 800292e:	6803      	ldr	r3, [r0, #0]
 8002930:	6a1b      	ldr	r3, [r3, #32]
 8002932:	4798      	blx	r3
 8002934:	280f      	cmp	r0, #15
 8002936:	d803      	bhi.n	8002940 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x3c>
 8002938:	4b52      	ldr	r3, [pc, #328]	; (8002a84 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x180>)
 800293a:	4a50      	ldr	r2, [pc, #320]	; (8002a7c <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x178>)
 800293c:	21a4      	movs	r1, #164	; 0xa4
 800293e:	e7f1      	b.n	8002924 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002940:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002944:	6803      	ldr	r3, [r0, #0]
 8002946:	6a1b      	ldr	r3, [r3, #32]
 8002948:	4798      	blx	r3
 800294a:	2837      	cmp	r0, #55	; 0x37
 800294c:	d803      	bhi.n	8002956 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x52>
 800294e:	4b4e      	ldr	r3, [pc, #312]	; (8002a88 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x184>)
 8002950:	4a4a      	ldr	r2, [pc, #296]	; (8002a7c <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x178>)
 8002952:	21a5      	movs	r1, #165	; 0xa5
 8002954:	e7e6      	b.n	8002924 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002956:	f00a fa4f 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800295a:	f8df 9140 	ldr.w	r9, [pc, #320]	; 8002a9c <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x198>
 800295e:	3004      	adds	r0, #4
 8002960:	f00a fab0 	bl	800cec4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002964:	f8d9 0000 	ldr.w	r0, [r9]
 8002968:	b110      	cbz	r0, 8002970 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x6c>
        (*currentTrans)->tearDown();
 800296a:	6803      	ldr	r3, [r0, #0]
 800296c:	68db      	ldr	r3, [r3, #12]
 800296e:	4798      	blx	r3
    if (*currentTrans)
 8002970:	f8d9 0000 	ldr.w	r0, [r9]
 8002974:	b110      	cbz	r0, 800297c <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x78>
        (*currentTrans)->~Transition();
 8002976:	6803      	ldr	r3, [r0, #0]
 8002978:	681b      	ldr	r3, [r3, #0]
 800297a:	4798      	blx	r3
    if (*currentScreen)
 800297c:	f8df 8120 	ldr.w	r8, [pc, #288]	; 8002aa0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x19c>
 8002980:	f8d8 0000 	ldr.w	r0, [r8]
 8002984:	b110      	cbz	r0, 800298c <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x88>
        (*currentScreen)->tearDownScreen();
 8002986:	6803      	ldr	r3, [r0, #0]
 8002988:	695b      	ldr	r3, [r3, #20]
 800298a:	4798      	blx	r3
    if (*currentPresenter)
 800298c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002990:	b110      	cbz	r0, 8002998 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x94>
        (*currentPresenter)->deactivate();
 8002992:	6803      	ldr	r3, [r0, #0]
 8002994:	685b      	ldr	r3, [r3, #4]
 8002996:	4798      	blx	r3
    if (*currentScreen)
 8002998:	f8d8 0000 	ldr.w	r0, [r8]
 800299c:	b110      	cbz	r0, 80029a4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0xa0>
        (*currentScreen)->~Screen();
 800299e:	6803      	ldr	r3, [r0, #0]
 80029a0:	681b      	ldr	r3, [r3, #0]
 80029a2:	4798      	blx	r3
    if (*currentPresenter)
 80029a4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80029a8:	b110      	cbz	r0, 80029b0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0xac>
        (*currentPresenter)->~Presenter();
 80029aa:	6803      	ldr	r3, [r0, #0]
 80029ac:	689b      	ldr	r3, [r3, #8]
 80029ae:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80029b0:	f8db 000c 	ldr.w	r0, [fp, #12]
 80029b4:	6803      	ldr	r3, [r0, #0]
 80029b6:	2100      	movs	r1, #0
 80029b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80029ba:	4798      	blx	r3
          solid()
 80029bc:	4b33      	ldr	r3, [pc, #204]	; (8002a8c <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x188>)
 80029be:	6003      	str	r3, [r0, #0]
 80029c0:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80029c4:	8103      	strh	r3, [r0, #8]
 80029c6:	f44f 7380 	mov.w	r3, #256	; 0x100
 80029ca:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 80029cc:	4b30      	ldr	r3, [pc, #192]	; (8002a90 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x18c>)
 80029ce:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80029d0:	4a30      	ldr	r2, [pc, #192]	; (8002a94 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x190>)
            targetValue = HAL::DISPLAY_WIDTH;
 80029d2:	4b31      	ldr	r3, [pc, #196]	; (8002a98 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x194>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80029d4:	f9b2 2000 	ldrsh.w	r2, [r2]
            targetValue = HAL::DISPLAY_WIDTH;
 80029d8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80029dc:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 80029de:	2500      	movs	r5, #0
 80029e0:	6045      	str	r5, [r0, #4]
          solid()
 80029e2:	7285      	strb	r5, [r0, #10]
 80029e4:	81c5      	strh	r5, [r0, #14]
 80029e6:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80029ea:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80029ee:	e9c0 5509 	strd	r5, r5, [r0, #36]	; 0x24
 80029f2:	e9c0 550b 	strd	r5, r5, [r0, #44]	; 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80029f6:	4629      	mov	r1, r5
 80029f8:	4604      	mov	r4, r0
 80029fa:	9200      	str	r2, [sp, #0]
 80029fc:	3010      	adds	r0, #16
 80029fe:	462a      	mov	r2, r5
 8002a00:	f7ff fe94 	bl	800272c <_ZN8touchgfx8Drawable11setPositionEssss>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002a04:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002a08:	6803      	ldr	r3, [r0, #0]
 8002a0a:	4629      	mov	r1, r5
 8002a0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a0e:	4798      	blx	r3
 8002a10:	4606      	mov	r6, r0
 8002a12:	f001 fbef 	bl	80041f4 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002a16:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002a1a:	6803      	ldr	r3, [r0, #0]
 8002a1c:	4629      	mov	r1, r5
 8002a1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a20:	4798      	blx	r3
 8002a22:	4631      	mov	r1, r6
 8002a24:	4605      	mov	r5, r0
 8002a26:	f001 fa83 	bl	8003f30 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 8002a2a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002a2e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8002a32:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002a36:	b1e5      	cbz	r5, 8002a72 <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x16e>
 8002a38:	1d2b      	adds	r3, r5, #4
 8002a3a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002a3e:	6833      	ldr	r3, [r6, #0]
 8002a40:	f8c5 a008 	str.w	sl, [r5, #8]
 8002a44:	4630      	mov	r0, r6
 8002a46:	68db      	ldr	r3, [r3, #12]
 8002a48:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002a4a:	4798      	blx	r3
    newPresenter->activate();
 8002a4c:	682b      	ldr	r3, [r5, #0]
 8002a4e:	4628      	mov	r0, r5
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002a54:	4621      	mov	r1, r4
 8002a56:	4630      	mov	r0, r6
 8002a58:	f00b ff0a 	bl	800e870 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002a5c:	6823      	ldr	r3, [r4, #0]
 8002a5e:	4620      	mov	r0, r4
 8002a60:	691b      	ldr	r3, [r3, #16]
 8002a62:	4798      	blx	r3
    newTransition->invalidate();
 8002a64:	6823      	ldr	r3, [r4, #0]
 8002a66:	695b      	ldr	r3, [r3, #20]
 8002a68:	4620      	mov	r0, r4
}
 8002a6a:	b003      	add	sp, #12
 8002a6c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a70:	4718      	bx	r3
    model->bind(newPresenter);
 8002a72:	462b      	mov	r3, r5
 8002a74:	e7e1      	b.n	8002a3a <_ZN23FrontendApplicationBase40gotoScreen2ScreenCoverTransitionWestImplEv+0x136>
 8002a76:	bf00      	nop
 8002a78:	0801f3a0 	.word	0x0801f3a0
 8002a7c:	0801f8da 	.word	0x0801f8da
 8002a80:	0801f532 	.word	0x0801f532
 8002a84:	0801f579 	.word	0x0801f579
 8002a88:	0801f61c 	.word	0x0801f61c
 8002a8c:	0801fb18 	.word	0x0801fb18
 8002a90:	0801f9fc 	.word	0x0801f9fc
 8002a94:	2001263a 	.word	0x2001263a
 8002a98:	20012638 	.word	0x20012638
 8002a9c:	20012684 	.word	0x20012684
 8002aa0:	20012680 	.word	0x20012680

08002aa4 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002aa4:	4b04      	ldr	r3, [pc, #16]	; (8002ab8 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002aa6:	681b      	ldr	r3, [r3, #0]
 8002aa8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8002aac:	b10a      	cbz	r2, 8002ab2 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002aae:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002ab0:	b900      	cbnz	r0, 8002ab4 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002ab2:	6898      	ldr	r0, [r3, #8]
    }
 8002ab4:	4770      	bx	lr
 8002ab6:	bf00      	nop
 8002ab8:	20012644 	.word	0x20012644

08002abc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002abc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002abe:	4604      	mov	r4, r0
 8002ac0:	4617      	mov	r7, r2
 8002ac2:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002ac4:	f00a facc 	bl	800d060 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002ac8:	4b10      	ldr	r3, [pc, #64]	; (8002b0c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8002aca:	601c      	str	r4, [r3, #0]
      model(m)
 8002acc:	4b10      	ldr	r3, [pc, #64]	; (8002b10 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002ace:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002ad0:	4b10      	ldr	r3, [pc, #64]	; (8002b14 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
          pendingScreenTransitionCallback(0)
 8002ad2:	2500      	movs	r5, #0
 8002ad4:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8002ad8:	4b0f      	ldr	r3, [pc, #60]	; (8002b18 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002ada:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8002ade:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002ae0:	6803      	ldr	r3, [r0, #0]
 8002ae2:	4629      	mov	r1, r5
 8002ae4:	689b      	ldr	r3, [r3, #8]
 8002ae6:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8002aea:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002aee:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002af0:	4628      	mov	r0, r5
 8002af2:	f001 f949 	bl	8003d88 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002af6:	f7ff ffd5 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 8002afa:	f013 fb4c 	bl	8016196 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002afe:	f7ff ffd1 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 8002b02:	f013 fbc3 	bl	801628c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8002b06:	4620      	mov	r0, r4
 8002b08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002b0a:	bf00      	nop
 8002b0c:	20012690 	.word	0x20012690
 8002b10:	0801fa7c 	.word	0x0801fa7c
 8002b14:	0801fa64 	.word	0x0801fa64
 8002b18:	20012644 	.word	0x20012644

08002b1c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002b1c:	4b06      	ldr	r3, [pc, #24]	; (8002b38 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002b1e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002b22:	2300      	movs	r3, #0
 8002b24:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002b28:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002b2c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002b30:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002b34:	4770      	bx	lr
 8002b36:	bf00      	nop
 8002b38:	080025dd 	.word	0x080025dd

08002b3c <_ZN23FrontendApplicationBase36gotoScreen2ScreenCoverTransitionEastEv>:
 8002b3c:	4b06      	ldr	r3, [pc, #24]	; (8002b58 <_ZN23FrontendApplicationBase36gotoScreen2ScreenCoverTransitionEastEv+0x1c>)
 8002b3e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002b42:	2300      	movs	r3, #0
 8002b44:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002b48:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002b4c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002b50:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002b54:	4770      	bx	lr
 8002b56:	bf00      	nop
 8002b58:	08002765 	.word	0x08002765

08002b5c <_ZN23FrontendApplicationBase36gotoScreen2ScreenCoverTransitionWestEv>:
 8002b5c:	4b06      	ldr	r3, [pc, #24]	; (8002b78 <_ZN23FrontendApplicationBase36gotoScreen2ScreenCoverTransitionWestEv+0x1c>)
 8002b5e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002b62:	2300      	movs	r3, #0
 8002b64:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002b68:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002b6c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002b70:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002b74:	4770      	bx	lr
 8002b76:	bf00      	nop
 8002b78:	08002905 	.word	0x08002905

08002b7c <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv>:
 8002b7c:	4b06      	ldr	r3, [pc, #24]	; (8002b98 <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv+0x1c>)
 8002b7e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002b82:	2300      	movs	r3, #0
 8002b84:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002b88:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002b8c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002b90:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002b94:	4770      	bx	lr
 8002b96:	bf00      	nop
 8002b98:	0800248d 	.word	0x0800248d

08002b9c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002b9c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002b9e:	4770      	bx	lr

08002ba0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002ba0:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002ba2:	4770      	bx	lr

08002ba4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002ba4:	4770      	bx	lr

08002ba6 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002ba6:	888b      	ldrh	r3, [r1, #4]
 8002ba8:	69c0      	ldr	r0, [r0, #28]
 8002baa:	680a      	ldr	r2, [r1, #0]
 8002bac:	0adb      	lsrs	r3, r3, #11
 8002bae:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002bb2:	4410      	add	r0, r2
 8002bb4:	4770      	bx	lr

08002bb6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002bb6:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002bb8:	b1c2      	cbz	r2, 8002bec <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002bba:	7b13      	ldrb	r3, [r2, #12]
 8002bbc:	b1b3      	cbz	r3, 8002bec <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002bbe:	7b54      	ldrb	r4, [r2, #13]
 8002bc0:	7ad2      	ldrb	r2, [r2, #11]
 8002bc2:	0224      	lsls	r4, r4, #8
 8002bc4:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002bc8:	4314      	orrs	r4, r2
 8002bca:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002bcc:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002bce:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002bd2:	8813      	ldrh	r3, [r2, #0]
 8002bd4:	428b      	cmp	r3, r1
 8002bd6:	d102      	bne.n	8002bde <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002bd8:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002bdc:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002bde:	d805      	bhi.n	8002bec <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002be0:	3801      	subs	r0, #1
 8002be2:	b280      	uxth	r0, r0
 8002be4:	3204      	adds	r2, #4
 8002be6:	2800      	cmp	r0, #0
 8002be8:	d1f3      	bne.n	8002bd2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002bea:	e7f7      	b.n	8002bdc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002bec:	2000      	movs	r0, #0
 8002bee:	e7f5      	b.n	8002bdc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002bf0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002bf0:	b510      	push	{r4, lr}
 8002bf2:	212c      	movs	r1, #44	; 0x2c
 8002bf4:	4604      	mov	r4, r0
 8002bf6:	f01a fe20 	bl	801d83a <_ZdlPvj>
 8002bfa:	4620      	mov	r0, r4
 8002bfc:	bd10      	pop	{r4, pc}
	...

08002c00 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002c00:	b530      	push	{r4, r5, lr}
 8002c02:	b08b      	sub	sp, #44	; 0x2c
 8002c04:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002c06:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8002c0a:	9508      	str	r5, [sp, #32]
 8002c0c:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8002c10:	9507      	str	r5, [sp, #28]
 8002c12:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8002c16:	9506      	str	r5, [sp, #24]
 8002c18:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8002c1c:	9505      	str	r5, [sp, #20]
 8002c1e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8002c22:	9504      	str	r5, [sp, #16]
 8002c24:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8002c28:	9503      	str	r5, [sp, #12]
 8002c2a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002c2e:	9502      	str	r5, [sp, #8]
 8002c30:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002c34:	9501      	str	r5, [sp, #4]
 8002c36:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8002c3a:	9500      	str	r5, [sp, #0]
 8002c3c:	f00b fa72 	bl	800e124 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8002c40:	4b06      	ldr	r3, [pc, #24]	; (8002c5c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8002c42:	6023      	str	r3, [r4, #0]
 8002c44:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002c46:	61e3      	str	r3, [r4, #28]
 8002c48:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002c4a:	6223      	str	r3, [r4, #32]
 8002c4c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002c4e:	6263      	str	r3, [r4, #36]	; 0x24
 8002c50:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8002c52:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8002c54:	4620      	mov	r0, r4
 8002c56:	b00b      	add	sp, #44	; 0x2c
 8002c58:	bd30      	pop	{r4, r5, pc}
 8002c5a:	bf00      	nop
 8002c5c:	0801fb3c 	.word	0x0801fb3c

08002c60 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002c60:	4770      	bx	lr

08002c62 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002c62:	4770      	bx	lr

08002c64 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002c64:	4770      	bx	lr

08002c66 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002c66:	4770      	bx	lr

08002c68 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002c68:	4770      	bx	lr

08002c6a <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
     * @return true if button is pressed, false otherwise.
     */
    virtual bool getPressedState() const
    {
        return pressed;
    }
 8002c6a:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8002c6e:	4770      	bx	lr

08002c70 <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
 8002c70:	4770      	bx	lr

08002c72 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
 8002c72:	4770      	bx	lr

08002c74 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002c74:	4770      	bx	lr

08002c76 <_ZN8touchgfx13ClickListenerINS_15ButtonWithLabelEED1Ev>:
 * receives a click event.
 *
 * @tparam T specifies the type to extend with the ClickListener behavior.
 */
template <class T>
class ClickListener : public T
 8002c76:	4770      	bx	lr

08002c78 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002c78:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002c7a:	68c2      	ldr	r2, [r0, #12]
 8002c7c:	6844      	ldr	r4, [r0, #4]
 8002c7e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002c80:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002c82:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002c86:	07d2      	lsls	r2, r2, #31
 8002c88:	bf48      	it	mi
 8002c8a:	5962      	ldrmi	r2, [r4, r5]
 8002c8c:	689b      	ldr	r3, [r3, #8]
    }
 8002c8e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002c90:	bf48      	it	mi
 8002c92:	58d3      	ldrmi	r3, [r2, r3]
 8002c94:	4718      	bx	r3

08002c96 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002c96:	6843      	ldr	r3, [r0, #4]
 8002c98:	b12b      	cbz	r3, 8002ca6 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002c9a:	6883      	ldr	r3, [r0, #8]
 8002c9c:	b92b      	cbnz	r3, 8002caa <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002c9e:	68c0      	ldr	r0, [r0, #12]
 8002ca0:	f000 0001 	and.w	r0, r0, #1
 8002ca4:	4770      	bx	lr
 8002ca6:	4618      	mov	r0, r3
 8002ca8:	4770      	bx	lr
 8002caa:	2001      	movs	r0, #1
    }
 8002cac:	4770      	bx	lr

08002cae <_ZN8touchgfx13ClickListenerINS_15ButtonWithLabelEED0Ev>:
 8002cae:	b510      	push	{r4, lr}
 8002cb0:	214c      	movs	r1, #76	; 0x4c
 8002cb2:	4604      	mov	r4, r0
 8002cb4:	f01a fdc1 	bl	801d83a <_ZdlPvj>
 8002cb8:	4620      	mov	r0, r4
 8002cba:	bd10      	pop	{r4, pc}

08002cbc <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002cbc:	b510      	push	{r4, lr}
 8002cbe:	2110      	movs	r1, #16
 8002cc0:	4604      	mov	r4, r0
 8002cc2:	f01a fdba 	bl	801d83a <_ZdlPvj>
 8002cc6:	4620      	mov	r0, r4
 8002cc8:	bd10      	pop	{r4, pc}

08002cca <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8002cca:	b510      	push	{r4, lr}
}
 8002ccc:	f44f 71b6 	mov.w	r1, #364	; 0x16c
Screen1ViewBase::~Screen1ViewBase()
 8002cd0:	4604      	mov	r4, r0
}
 8002cd2:	f01a fdb2 	bl	801d83a <_ZdlPvj>
 8002cd6:	4620      	mov	r0, r4
 8002cd8:	bd10      	pop	{r4, pc}

08002cda <_ZNK8touchgfx6Button17invalidateContentEv>:
    Bitmap getCurrentlyDisplayedBitmap() const
    {
        return (pressed ? down : up);
    }

    virtual void invalidateContent() const
 8002cda:	b508      	push	{r3, lr}
    {
        if (alpha > 0)
 8002cdc:	f890 3032 	ldrb.w	r3, [r0, #50]	; 0x32
 8002ce0:	b10b      	cbz	r3, 8002ce6 <_ZNK8touchgfx6Button17invalidateContentEv+0xc>
        {
            Widget::invalidateContent();
 8002ce2:	f7fe faa1 	bl	8001228 <_ZNK8touchgfx8Drawable17invalidateContentEv>
        }
    }
 8002ce6:	bd08      	pop	{r3, pc}

08002ce8 <_ZN8touchgfx14AbstractButton13executeActionEv>:
    virtual void executeAction()
 8002ce8:	b510      	push	{r4, lr}
 8002cea:	4604      	mov	r4, r0
        if (action && action->isValid())
 8002cec:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002cee:	b150      	cbz	r0, 8002d06 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8002cf0:	6803      	ldr	r3, [r0, #0]
 8002cf2:	68db      	ldr	r3, [r3, #12]
 8002cf4:	4798      	blx	r3
 8002cf6:	b130      	cbz	r0, 8002d06 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
            action->execute(*this);
 8002cf8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8002cfa:	6803      	ldr	r3, [r0, #0]
 8002cfc:	4621      	mov	r1, r4
 8002cfe:	689b      	ldr	r3, [r3, #8]
    }
 8002d00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002d04:	4718      	bx	r3
    }
 8002d06:	bd10      	pop	{r4, pc}

08002d08 <_ZN8touchgfx13ClickListenerINS_15ButtonWithLabelEE16handleClickEventERKNS_10ClickEventE>:
     * Ensures that the clickEvent is propagated to the super class T and to the clickAction
     * listener.
     *
     * @param  event Information about the click.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002d08:	b570      	push	{r4, r5, r6, lr}
 8002d0a:	4604      	mov	r4, r0
 8002d0c:	460d      	mov	r5, r1
    {
        T::handleClickEvent(event);
 8002d0e:	f007 feb9 	bl	800aa84 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>
        if (clickAction && clickAction->isValid())
 8002d12:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8002d14:	b158      	cbz	r0, 8002d2e <_ZN8touchgfx13ClickListenerINS_15ButtonWithLabelEE16handleClickEventERKNS_10ClickEventE+0x26>
 8002d16:	6803      	ldr	r3, [r0, #0]
 8002d18:	68db      	ldr	r3, [r3, #12]
 8002d1a:	4798      	blx	r3
 8002d1c:	b138      	cbz	r0, 8002d2e <_ZN8touchgfx13ClickListenerINS_15ButtonWithLabelEE16handleClickEventERKNS_10ClickEventE+0x26>
        {
            clickAction->execute(*this, event);
 8002d1e:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8002d20:	6803      	ldr	r3, [r0, #0]
 8002d22:	462a      	mov	r2, r5
 8002d24:	4621      	mov	r1, r4
 8002d26:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002d28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            clickAction->execute(*this, event);
 8002d2c:	4718      	bx	r3
    }
 8002d2e:	bd70      	pop	{r4, r5, r6, pc}

08002d30 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &start)
 8002d30:	3098      	adds	r0, #152	; 0x98
 8002d32:	4288      	cmp	r0, r1
{
 8002d34:	b508      	push	{r3, lr}
    if (&src == &start)
 8002d36:	d105      	bne.n	8002d44 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002d38:	f00a f85e 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
        //START
        //When start clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenCoverTransitionEast();
    }
}
 8002d3c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenCoverTransitionEast();
 8002d40:	f7ff befc 	b.w	8002b3c <_ZN23FrontendApplicationBase36gotoScreen2ScreenCoverTransitionEastEv>
}
 8002d44:	bd08      	pop	{r3, pc}

08002d46 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002d46:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002d48:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002d4a:	4604      	mov	r4, r0
        setX(x);
 8002d4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002d4e:	4615      	mov	r5, r2
        setX(x);
 8002d50:	4798      	blx	r3
        setY(y);
 8002d52:	6823      	ldr	r3, [r4, #0]
 8002d54:	4629      	mov	r1, r5
 8002d56:	4620      	mov	r0, r4
 8002d58:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002d5a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002d5e:	4718      	bx	r3

08002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8002d60:	2300      	movs	r3, #0
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 8002d62:	b510      	push	{r4, lr}
 8002d64:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8002d68:	e9c0 3303 	strd	r3, r3, [r0, #12]
          visible(true)
 8002d6c:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8002d70:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8002d74:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002d78:	8483      	strh	r3, [r0, #36]	; 0x24
        : Widget(), bitmap(bmp), alpha(255)
 8002d7a:	4b06      	ldr	r3, [pc, #24]	; (8002d94 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x34>)
 8002d7c:	6003      	str	r3, [r0, #0]
 8002d7e:	880b      	ldrh	r3, [r1, #0]
 8002d80:	84c3      	strh	r3, [r0, #38]	; 0x26
 8002d82:	23ff      	movs	r3, #255	; 0xff
    Image(const Bitmap& bmp = Bitmap())
 8002d84:	4604      	mov	r4, r0
        : Widget(), bitmap(bmp), alpha(255)
 8002d86:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
    {
        Image::setBitmap(bmp);
 8002d8a:	f008 fa00 	bl	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002d8e:	4620      	mov	r0, r4
 8002d90:	bd10      	pop	{r4, pc}
 8002d92:	bf00      	nop
 8002d94:	08020584 	.word	0x08020584

08002d98 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002d98:	4b1a      	ldr	r3, [pc, #104]	; (8002e04 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002d9a:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002d9c:	881b      	ldrh	r3, [r3, #0]
 8002d9e:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002da0:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002da2:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002da4:	d92a      	bls.n	8002dfc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002da6:	4b18      	ldr	r3, [pc, #96]	; (8002e08 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	b92b      	cbnz	r3, 8002db8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002dac:	4b17      	ldr	r3, [pc, #92]	; (8002e0c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002dae:	4a18      	ldr	r2, [pc, #96]	; (8002e10 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002db0:	4818      	ldr	r0, [pc, #96]	; (8002e14 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002db2:	216c      	movs	r1, #108	; 0x6c
 8002db4:	f01a fd70 	bl	801d898 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002db8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002dbc:	4b16      	ldr	r3, [pc, #88]	; (8002e18 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002dc4:	4b15      	ldr	r3, [pc, #84]	; (8002e1c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002dc6:	6818      	ldr	r0, [r3, #0]
 8002dc8:	f001 f81a 	bl	8003e00 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002dcc:	682b      	ldr	r3, [r5, #0]
 8002dce:	9001      	str	r0, [sp, #4]
 8002dd0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002dd2:	4628      	mov	r0, r5
 8002dd4:	4798      	blx	r3
 8002dd6:	682b      	ldr	r3, [r5, #0]
 8002dd8:	9901      	ldr	r1, [sp, #4]
 8002dda:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002ddc:	4604      	mov	r4, r0
 8002dde:	4628      	mov	r0, r5
 8002de0:	4798      	blx	r3
 8002de2:	682b      	ldr	r3, [r5, #0]
 8002de4:	9901      	ldr	r1, [sp, #4]
 8002de6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002de8:	fb14 f400 	smulbb	r4, r4, r0
 8002dec:	4628      	mov	r0, r5
 8002dee:	4798      	blx	r3
 8002df0:	b2a4      	uxth	r4, r4
 8002df2:	4404      	add	r4, r0
 8002df4:	f8a6 4046 	strh.w	r4, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002df8:	b002      	add	sp, #8
 8002dfa:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002dfc:	2300      	movs	r3, #0
 8002dfe:	f8a0 3046 	strh.w	r3, [r0, #70]	; 0x46
    }
 8002e02:	e7f9      	b.n	8002df8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x60>
 8002e04:	20012698 	.word	0x20012698
 8002e08:	20012694 	.word	0x20012694
 8002e0c:	0801fb94 	.word	0x0801fb94
 8002e10:	0801fbd6 	.word	0x0801fbd6
 8002e14:	0801fc11 	.word	0x0801fc11
 8002e18:	2001269c 	.word	0x2001269c
 8002e1c:	200126a0 	.word	0x200126a0

08002e20 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002e20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e24:	4604      	mov	r4, r0
 8002e26:	b085      	sub	sp, #20
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 8002e28:	46a1      	mov	r9, r4
        : presenter(0)
 8002e2a:	2500      	movs	r5, #0
 8002e2c:	f00b fb74 	bl	800e518 <_ZN8touchgfx6ScreenC1Ev>
 8002e30:	4b6b      	ldr	r3, [pc, #428]	; (8002fe0 <_ZN15Screen1ViewBaseC1Ev+0x1c0>)
 8002e32:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002e34:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002e38:	4b6a      	ldr	r3, [pc, #424]	; (8002fe4 <_ZN15Screen1ViewBaseC1Ev+0x1c4>)
 8002e3a:	6625      	str	r5, [r4, #96]	; 0x60
 8002e3c:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
 8002e40:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002e44:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
 8002e48:	23ff      	movs	r3, #255	; 0xff
 8002e4a:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8002e4e:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002e52:	4618      	mov	r0, r3
 8002e54:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002e58:	a903      	add	r1, sp, #12
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002e5a:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8002e5e:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8002e62:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
 8002e66:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
        : color(col)
 8002e6a:	66a5      	str	r5, [r4, #104]	; 0x68
 8002e6c:	9301      	str	r3, [sp, #4]
 8002e6e:	f8ad 700c 	strh.w	r7, [sp, #12]
 8002e72:	f7ff ff75 	bl	8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        : T(), clickAction(0)
 8002e76:	4658      	mov	r0, fp
 8002e78:	f008 fac0 	bl	800b3fc <_ZN8touchgfx15ButtonWithLabelC1Ev>
        touchable = touch;
 8002e7c:	2601      	movs	r6, #1
 8002e7e:	f104 08e4 	add.w	r8, r4, #228	; 0xe4
 8002e82:	4a59      	ldr	r2, [pc, #356]	; (8002fe8 <_ZN15Screen1ViewBaseC1Ev+0x1c8>)
 8002e84:	f8c4 2098 	str.w	r2, [r4, #152]	; 0x98
          endId(BITMAP_INVALID),
          updateTicksInterval(updateInterval),
          ticksSinceUpdate(0),
          reverse(false),
          loopAnimation(false),
          running(false)
 8002e88:	a903      	add	r1, sp, #12
 8002e8a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8002e8e:	f884 60bc 	strb.w	r6, [r4, #188]	; 0xbc
 8002e92:	4640      	mov	r0, r8
 8002e94:	f04f 3aff 	mov.w	sl, #4294967295
 8002e98:	f8ad 700c 	strh.w	r7, [sp, #12]
 8002e9c:	f7ff ff60 	bl	8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002ea0:	f504 7790 	add.w	r7, r4, #288	; 0x120
 8002ea4:	4a51      	ldr	r2, [pc, #324]	; (8002fec <_ZN15Screen1ViewBaseC1Ev+0x1cc>)
 8002ea6:	f8c4 20e4 	str.w	r2, [r4, #228]	; 0xe4
 8002eaa:	e9c4 a645 	strd	sl, r6, [r4, #276]	; 0x114
 8002eae:	a903      	add	r1, sp, #12
 8002eb0:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
 8002eb4:	f884 511c 	strb.w	r5, [r4, #284]	; 0x11c
 8002eb8:	4638      	mov	r0, r7
 8002eba:	f8ad a00c 	strh.w	sl, [sp, #12]
 8002ebe:	f7ff ff4f 	bl	8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002ec2:	4a4a      	ldr	r2, [pc, #296]	; (8002fec <_ZN15Screen1ViewBaseC1Ev+0x1cc>)
 8002ec4:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
        : pobject(pObject), pmemfun(pmemfun_1)
 8002ec8:	4a49      	ldr	r2, [pc, #292]	; (8002ff0 <_ZN15Screen1ViewBaseC1Ev+0x1d0>)
 8002eca:	f8c4 6154 	str.w	r6, [r4, #340]	; 0x154
 8002ece:	e9c4 2457 	strd	r2, r4, [r4, #348]	; 0x15c
 8002ed2:	4a48      	ldr	r2, [pc, #288]	; (8002ff4 <_ZN15Screen1ViewBaseC1Ev+0x1d4>)
 8002ed4:	f884 5158 	strb.w	r5, [r4, #344]	; 0x158
 8002ed8:	e9c4 5a53 	strd	r5, sl, [r4, #332]	; 0x14c
 8002edc:	e9c4 2559 	strd	r2, r5, [r4, #356]	; 0x164
        setXY(x, y);
 8002ee0:	4629      	mov	r1, r5
 8002ee2:	462a      	mov	r2, r5
 8002ee4:	4648      	mov	r0, r9
 8002ee6:	f7ff ff2e 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002eea:	4648      	mov	r0, r9
 8002eec:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8002ef0:	f7fe f91e 	bl	8001130 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002ef4:	4648      	mov	r0, r9
 8002ef6:	21f0      	movs	r1, #240	; 0xf0
 8002ef8:	f7fe f91c 	bl	8001134 <_ZN8touchgfx8Drawable9setHeightEs>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002efc:	f104 0a04 	add.w	sl, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002f00:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8002f04:	66a2      	str	r2, [r4, #104]	; 0x68
 8002f06:	4649      	mov	r1, r9
 8002f08:	4650      	mov	r0, sl
 8002f0a:	f006 fc43 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bg.setXY(-9, -4);
 8002f0e:	9b01      	ldr	r3, [sp, #4]
 8002f10:	f06f 0203 	mvn.w	r2, #3
 8002f14:	4618      	mov	r0, r3
 8002f16:	f06f 0108 	mvn.w	r1, #8
 8002f1a:	f7ff ff14 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
    bg.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8002f1e:	9b01      	ldr	r3, [sp, #4]
 8002f20:	2202      	movs	r2, #2
 8002f22:	a903      	add	r1, sp, #12
 8002f24:	4618      	mov	r0, r3
 8002f26:	f8ad 200c 	strh.w	r2, [sp, #12]
 8002f2a:	f008 f930 	bl	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002f2e:	9b01      	ldr	r3, [sp, #4]
 8002f30:	4650      	mov	r0, sl
 8002f32:	4619      	mov	r1, r3
 8002f34:	f006 fc2e 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    start.setXY(53, 100);
 8002f38:	4658      	mov	r0, fp
 8002f3a:	2264      	movs	r2, #100	; 0x64
 8002f3c:	2135      	movs	r1, #53	; 0x35
 8002f3e:	f7ff ff02 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
    start.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUND_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUND_INACTIVE_ID));
 8002f42:	aa03      	add	r2, sp, #12
 8002f44:	a902      	add	r1, sp, #8
 8002f46:	4658      	mov	r0, fp
 8002f48:	f8ad 6008 	strh.w	r6, [sp, #8]
 8002f4c:	f8ad 600c 	strh.w	r6, [sp, #12]
 8002f50:	f008 f806 	bl	800af60 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002f54:	2306      	movs	r3, #6
 8002f56:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
        updateTextPosition();
 8002f5a:	4658      	mov	r0, fp
 8002f5c:	f7ff ff1c 	bl	8002d98 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        colorPressed = col;
 8002f60:	4a25      	ldr	r2, [pc, #148]	; (8002ff8 <_ZN15Screen1ViewBaseC1Ev+0x1d8>)
 8002f62:	4b26      	ldr	r3, [pc, #152]	; (8002ffc <_ZN15Screen1ViewBaseC1Ev+0x1dc>)
 8002f64:	e9c4 2335 	strd	r2, r3, [r4, #212]	; 0xd4
    start.setAction(buttonCallback);
 8002f68:	f504 73ae 	add.w	r3, r4, #348	; 0x15c
        action = &callback;
 8002f6c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002f70:	4659      	mov	r1, fp
 8002f72:	4650      	mov	r0, sl
 8002f74:	f006 fc0e 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ground.setXY(0, 178);
 8002f78:	4629      	mov	r1, r5
 8002f7a:	4640      	mov	r0, r8
 8002f7c:	22b2      	movs	r2, #178	; 0xb2
 8002f7e:	f7ff fee2 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
    ground.setBitmaps(BITMAP_GROUND0_ID, BITMAP_GROUND2_ID);
 8002f82:	221a      	movs	r2, #26
 8002f84:	4640      	mov	r0, r8
 8002f86:	2118      	movs	r1, #24
 8002f88:	f007 fe6b 	bl	800ac62 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    ground.setUpdateTicksInterval(15);
 8002f8c:	4640      	mov	r0, r8
 8002f8e:	210f      	movs	r1, #15
 8002f90:	f007 fe7a 	bl	800ac88 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    ground.startAnimation(false, true, true);
 8002f94:	4633      	mov	r3, r6
 8002f96:	4632      	mov	r2, r6
 8002f98:	4629      	mov	r1, r5
 8002f9a:	4640      	mov	r0, r8
 8002f9c:	f007 fdb9 	bl	800ab12 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 8002fa0:	4641      	mov	r1, r8
 8002fa2:	4650      	mov	r0, sl
 8002fa4:	f006 fbf6 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    dino.setXY(12, 134);
 8002fa8:	4638      	mov	r0, r7
 8002faa:	2286      	movs	r2, #134	; 0x86
 8002fac:	210c      	movs	r1, #12
 8002fae:	f7ff feca 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
    dino.setBitmaps(BITMAP_DINO1_ID, BITMAP_DINO3_ID);
 8002fb2:	2213      	movs	r2, #19
 8002fb4:	4638      	mov	r0, r7
 8002fb6:	2111      	movs	r1, #17
 8002fb8:	f007 fe53 	bl	800ac62 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    dino.setUpdateTicksInterval(12);
 8002fbc:	4638      	mov	r0, r7
 8002fbe:	210c      	movs	r1, #12
 8002fc0:	f007 fe62 	bl	800ac88 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    dino.startAnimation(false, true, true);
 8002fc4:	4633      	mov	r3, r6
 8002fc6:	4632      	mov	r2, r6
 8002fc8:	4629      	mov	r1, r5
 8002fca:	4638      	mov	r0, r7
 8002fcc:	f007 fda1 	bl	800ab12 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 8002fd0:	4650      	mov	r0, sl
 8002fd2:	4639      	mov	r1, r7
 8002fd4:	f006 fbde 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002fd8:	4620      	mov	r0, r4
 8002fda:	b005      	add	sp, #20
 8002fdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002fe0:	0801fcec 	.word	0x0801fcec
 8002fe4:	0802051c 	.word	0x0802051c
 8002fe8:	0801fc60 	.word	0x0801fc60
 8002fec:	080204a0 	.word	0x080204a0
 8002ff0:	0801fcd4 	.word	0x0801fcd4
 8002ff4:	08002d31 	.word	0x08002d31
 8002ff8:	ff424242 	.word	0xff424242
 8002ffc:	ff9e9e9e 	.word	0xff9e9e9e

08003000 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8003000:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8003002:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8003004:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8003006:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8003008:	466d      	mov	r5, sp
 800300a:	4601      	mov	r1, r0
 800300c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8003010:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003012:	4628      	mov	r0, r5
 8003014:	4798      	blx	r3
 8003016:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800301a:	343c      	adds	r4, #60	; 0x3c
 800301c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003020:	b005      	add	sp, #20
 8003022:	bd30      	pop	{r4, r5, pc}

08003024 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8003024:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8003026:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8003028:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 800302a:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800302c:	466d      	mov	r5, sp
 800302e:	4601      	mov	r1, r0
 8003030:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8003034:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003036:	4628      	mov	r0, r5
 8003038:	4798      	blx	r3
 800303a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800303e:	343c      	adds	r4, #60	; 0x3c
 8003040:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003044:	b005      	add	sp, #20
 8003046:	bd30      	pop	{r4, r5, pc}

08003048 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003048:	2200      	movs	r2, #0
 800304a:	8002      	strh	r2, [r0, #0]
 800304c:	8042      	strh	r2, [r0, #2]
 800304e:	8082      	strh	r2, [r0, #4]
 8003050:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003052:	4770      	bx	lr

08003054 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003054:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8003058:	4770      	bx	lr

0800305a <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800305a:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 800305c:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800305e:	4604      	mov	r4, r0
        setX(x);
 8003060:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003062:	4615      	mov	r5, r2
        setX(x);
 8003064:	4798      	blx	r3
        setBaselineY(baselineY);
 8003066:	6823      	ldr	r3, [r4, #0]
 8003068:	4629      	mov	r1, r5
 800306a:	4620      	mov	r0, r4
 800306c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 800306e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8003072:	4718      	bx	r3

08003074 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8003074:	2000      	movs	r0, #0
 8003076:	4770      	bx	lr

08003078 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8003078:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800307a:	4770      	bx	lr

0800307c <_ZN15Screen2ViewBaseD1Ev>:
}

Screen2ViewBase::~Screen2ViewBase()
{

}
 800307c:	4770      	bx	lr

0800307e <_ZN15Screen2ViewBase11setupScreenEv>:

void Screen2ViewBase::setupScreen()
{

}
 800307e:	4770      	bx	lr

08003080 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8003080:	4770      	bx	lr

08003082 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8003082:	b510      	push	{r4, lr}
 8003084:	214c      	movs	r1, #76	; 0x4c
 8003086:	4604      	mov	r4, r0
 8003088:	f01a fbd7 	bl	801d83a <_ZdlPvj>
 800308c:	4620      	mov	r0, r4
 800308e:	bd10      	pop	{r4, pc}

08003090 <_ZN15Screen2ViewBaseD0Ev>:
Screen2ViewBase::~Screen2ViewBase()
 8003090:	b510      	push	{r4, lr}
}
 8003092:	f44f 711d 	mov.w	r1, #628	; 0x274
Screen2ViewBase::~Screen2ViewBase()
 8003096:	4604      	mov	r4, r0
}
 8003098:	f01a fbcf 	bl	801d83a <_ZdlPvj>
 800309c:	4620      	mov	r0, r4
 800309e:	bd10      	pop	{r4, pc}

080030a0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80030a0:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80030a2:	f7fe f8c1 	bl	8001228 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80030a6:	bd08      	pop	{r3, pc}

080030a8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80030a8:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80030aa:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80030ac:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80030ae:	4b12      	ldr	r3, [pc, #72]	; (80030f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80030b0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80030b2:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80030b4:	b28d      	uxth	r5, r1
 80030b6:	b92b      	cbnz	r3, 80030c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80030b8:	4b10      	ldr	r3, [pc, #64]	; (80030fc <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80030ba:	4a11      	ldr	r2, [pc, #68]	; (8003100 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80030bc:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80030be:	4811      	ldr	r0, [pc, #68]	; (8003104 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80030c0:	f01a fbea 	bl	801d898 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80030c4:	4910      	ldr	r1, [pc, #64]	; (8003108 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80030c6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80030c8:	8809      	ldrh	r1, [r1, #0]
 80030ca:	4291      	cmp	r1, r2
 80030cc:	d803      	bhi.n	80030d6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80030ce:	4b0f      	ldr	r3, [pc, #60]	; (800310c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80030d0:	4a0b      	ldr	r2, [pc, #44]	; (8003100 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80030d2:	216d      	movs	r1, #109	; 0x6d
 80030d4:	e7f3      	b.n	80030be <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80030d6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80030da:	4b0d      	ldr	r3, [pc, #52]	; (8003110 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80030e2:	6803      	ldr	r3, [r0, #0]
 80030e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80030e6:	4798      	blx	r3
 80030e8:	1a28      	subs	r0, r5, r0
 80030ea:	b201      	sxth	r1, r0
 80030ec:	4633      	mov	r3, r6
 80030ee:	4620      	mov	r0, r4
    }
 80030f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80030f4:	4718      	bx	r3
 80030f6:	bf00      	nop
 80030f8:	20012694 	.word	0x20012694
 80030fc:	0801fb94 	.word	0x0801fb94
 8003100:	0801fbd6 	.word	0x0801fbd6
 8003104:	0801fc11 	.word	0x0801fc11
 8003108:	20012698 	.word	0x20012698
 800310c:	0801fd18 	.word	0x0801fd18
 8003110:	2001269c 	.word	0x2001269c

08003114 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8003114:	2200      	movs	r2, #0
 8003116:	f04f 31ff 	mov.w	r1, #4294967295
 800311a:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 800311e:	6082      	str	r2, [r0, #8]
    }
 8003120:	4770      	bx	lr
	...

08003124 <_ZN8touchgfx6WidgetC1Ev>:
 8003124:	2200      	movs	r2, #0
 8003126:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800312a:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 800312e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003132:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003136:	f44f 7280 	mov.w	r2, #256	; 0x100
 800313a:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 800313c:	4a01      	ldr	r2, [pc, #4]	; (8003144 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800313e:	6002      	str	r2, [r0, #0]
 8003140:	4770      	bx	lr
 8003142:	bf00      	nop
 8003144:	0801fd9c 	.word	0x0801fd9c

08003148 <_ZN8touchgfx13AnimatedImageC1ERKh>:
    AnimatedImage(const uint8_t& updateInterval = 1)
 8003148:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800314a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800314e:	4604      	mov	r4, r0
 8003150:	460d      	mov	r5, r1
          running(false)
 8003152:	a901      	add	r1, sp, #4
 8003154:	f8ad 3004 	strh.w	r3, [sp, #4]
 8003158:	f7ff fe02 	bl	8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800315c:	4b08      	ldr	r3, [pc, #32]	; (8003180 <_ZN8touchgfx13AnimatedImageC1ERKh+0x38>)
 800315e:	6023      	str	r3, [r4, #0]
 8003160:	f04f 32ff 	mov.w	r2, #4294967295
 8003164:	2300      	movs	r3, #0
 8003166:	e9c4 320b 	strd	r3, r2, [r4, #44]	; 0x2c
 800316a:	782a      	ldrb	r2, [r5, #0]
 800316c:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
    {
    }
 8003170:	4620      	mov	r0, r4
          running(false)
 8003172:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
 8003176:	86e3      	strh	r3, [r4, #54]	; 0x36
 8003178:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
    }
 800317c:	b003      	add	sp, #12
 800317e:	bd30      	pop	{r4, r5, pc}
 8003180:	080204a0 	.word	0x080204a0

08003184 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003184:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003186:	2226      	movs	r2, #38	; 0x26
 8003188:	4604      	mov	r4, r0
 800318a:	2100      	movs	r1, #0
 800318c:	f01a fc10 	bl	801d9b0 <memset>
 8003190:	4620      	mov	r0, r4
 8003192:	f7ff ffc7 	bl	8003124 <_ZN8touchgfx6WidgetC1Ev>
        : typedTextId(id)
 8003196:	4b0a      	ldr	r3, [pc, #40]	; (80031c0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x3c>)
 8003198:	62a3      	str	r3, [r4, #40]	; 0x28
 800319a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800319e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80031a0:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80031a4:	2300      	movs	r3, #0
 80031a6:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : TextAreaWithWildcardBase(), wc1(0)
 80031aa:	4a06      	ldr	r2, [pc, #24]	; (80031c4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x40>)
 80031ac:	6022      	str	r2, [r4, #0]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80031ae:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80031b2:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80031b6:	8723      	strh	r3, [r4, #56]	; 0x38
 80031b8:	63e3      	str	r3, [r4, #60]	; 0x3c
 80031ba:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 80031bc:	4620      	mov	r0, r4
 80031be:	bd10      	pop	{r4, pc}
 80031c0:	0801f398 	.word	0x0801f398
 80031c4:	0801fe04 	.word	0x0801fe04

080031c8 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase()
 80031c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80031cc:	ed2d 8b04 	vpush	{d8-d9}
 80031d0:	4604      	mov	r4, r0
 80031d2:	b089      	sub	sp, #36	; 0x24
 80031d4:	46a0      	mov	r8, r4
 80031d6:	2500      	movs	r5, #0
 80031d8:	f00b f99e 	bl	800e518 <_ZN8touchgfx6ScreenC1Ev>
 80031dc:	4bcd      	ldr	r3, [pc, #820]	; (8003514 <_ZN15Screen2ViewBaseC1Ev+0x34c>)
 80031de:	63e5      	str	r5, [r4, #60]	; 0x3c
 80031e0:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 80031e4:	2226      	movs	r2, #38	; 0x26
 80031e6:	4629      	mov	r1, r5
 80031e8:	4640      	mov	r0, r8
 80031ea:	f01a fbe1 	bl	801d9b0 <memset>
 80031ee:	4640      	mov	r0, r8
 80031f0:	f7ff ff98 	bl	8003124 <_ZN8touchgfx6WidgetC1Ev>
 80031f4:	4bc8      	ldr	r3, [pc, #800]	; (8003518 <_ZN15Screen2ViewBaseC1Ev+0x350>)
 80031f6:	6423      	str	r3, [r4, #64]	; 0x40
 80031f8:	23ff      	movs	r3, #255	; 0xff
 80031fa:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 80031fe:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8003202:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8003206:	4618      	mov	r0, r3
 8003208:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800320c:	a906      	add	r1, sp, #24
        : color(col)
 800320e:	66a5      	str	r5, [r4, #104]	; 0x68
    AnimatedImage(const uint8_t& updateInterval = 1)
 8003210:	2601      	movs	r6, #1
 8003212:	f104 0ad4 	add.w	sl, r4, #212	; 0xd4
 8003216:	9301      	str	r3, [sp, #4]
 8003218:	f8ad 7018 	strh.w	r7, [sp, #24]
 800321c:	f7ff fda0 	bl	8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003220:	a906      	add	r1, sp, #24
 8003222:	4658      	mov	r0, fp
 8003224:	f504 7988 	add.w	r9, r4, #272	; 0x110
 8003228:	f88d 6018 	strb.w	r6, [sp, #24]
 800322c:	f7ff ff8c 	bl	8003148 <_ZN8touchgfx13AnimatedImageC1ERKh>
 8003230:	a906      	add	r1, sp, #24
 8003232:	4650      	mov	r0, sl
 8003234:	f88d 6018 	strb.w	r6, [sp, #24]
 8003238:	f7ff ff86 	bl	8003148 <_ZN8touchgfx13AnimatedImageC1ERKh>
 800323c:	a906      	add	r1, sp, #24
 800323e:	4648      	mov	r0, r9
 8003240:	f88d 6018 	strb.w	r6, [sp, #24]
 8003244:	f7ff ff80 	bl	8003148 <_ZN8touchgfx13AnimatedImageC1ERKh>
 8003248:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
 800324c:	a906      	add	r1, sp, #24
 800324e:	4618      	mov	r0, r3
 8003250:	ee08 3a10 	vmov	s16, r3
 8003254:	f88d 6018 	strb.w	r6, [sp, #24]
 8003258:	f7ff ff76 	bl	8003148 <_ZN8touchgfx13AnimatedImageC1ERKh>
 800325c:	f504 73c4 	add.w	r3, r4, #392	; 0x188
 8003260:	a906      	add	r1, sp, #24
 8003262:	4618      	mov	r0, r3
 8003264:	ee09 3a90 	vmov	s19, r3
 8003268:	f8ad 7018 	strh.w	r7, [sp, #24]
 800326c:	f7ff fd78 	bl	8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003270:	f504 73da 	add.w	r3, r4, #436	; 0x1b4
 8003274:	4618      	mov	r0, r3
 8003276:	ee08 3a90 	vmov	s17, r3
 800327a:	f7ff ff83 	bl	8003184 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800327e:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8003282:	4618      	mov	r0, r3
 8003284:	ee09 3a10 	vmov	s18, r3
 8003288:	f7ff ff7c 	bl	8003184 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
        setXY(x, y);
 800328c:	462a      	mov	r2, r5
 800328e:	4640      	mov	r0, r8
 8003290:	4629      	mov	r1, r5
 8003292:	f7ff fd58 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003296:	4640      	mov	r0, r8
 8003298:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800329c:	f7fd ff48 	bl	8001130 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80032a0:	4640      	mov	r0, r8
 80032a2:	21f0      	movs	r1, #240	; 0xf0
 80032a4:	f7fd ff46 	bl	8001134 <_ZN8touchgfx8Drawable9setHeightEs>
 80032a8:	1d27      	adds	r7, r4, #4
        color = newColor;
 80032aa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80032ae:	4641      	mov	r1, r8
 80032b0:	66a3      	str	r3, [r4, #104]	; 0x68
 80032b2:	4638      	mov	r0, r7
 80032b4:	f006 fa6e 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bg.setXY(-7, -4);
 80032b8:	9b01      	ldr	r3, [sp, #4]
 80032ba:	f06f 0203 	mvn.w	r2, #3
 80032be:	4618      	mov	r0, r3
 80032c0:	f06f 0106 	mvn.w	r1, #6
 80032c4:	f7ff fd3f 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
    bg.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 80032c8:	9b01      	ldr	r3, [sp, #4]
 80032ca:	2202      	movs	r2, #2
 80032cc:	4618      	mov	r0, r3
 80032ce:	a906      	add	r1, sp, #24
 80032d0:	f8ad 2018 	strh.w	r2, [sp, #24]
 80032d4:	f007 ff5b 	bl	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80032d8:	9b01      	ldr	r3, [sp, #4]
 80032da:	4638      	mov	r0, r7
 80032dc:	4619      	mov	r1, r3
 80032de:	f006 fa59 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ground.setXY(0, 178);
 80032e2:	22b2      	movs	r2, #178	; 0xb2
 80032e4:	4629      	mov	r1, r5
 80032e6:	4658      	mov	r0, fp
 80032e8:	f7ff fd2d 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
    ground.setBitmaps(BITMAP_GROUND0_ID, BITMAP_GROUND2_ID);
 80032ec:	221a      	movs	r2, #26
 80032ee:	2118      	movs	r1, #24
 80032f0:	4658      	mov	r0, fp
 80032f2:	f007 fcb6 	bl	800ac62 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    ground.setUpdateTicksInterval(15);
 80032f6:	210f      	movs	r1, #15
 80032f8:	4658      	mov	r0, fp
 80032fa:	f007 fcc5 	bl	800ac88 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    ground.startAnimation(false, true, true);
 80032fe:	4633      	mov	r3, r6
 8003300:	4632      	mov	r2, r6
 8003302:	4629      	mov	r1, r5
 8003304:	4658      	mov	r0, fp
 8003306:	f007 fc04 	bl	800ab12 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 800330a:	4659      	mov	r1, fp
 800330c:	4638      	mov	r0, r7
 800330e:	f006 fa41 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    dinoc.setXY(5, 153);
 8003312:	4650      	mov	r0, sl
 8003314:	2299      	movs	r2, #153	; 0x99
 8003316:	2105      	movs	r1, #5
 8003318:	f7ff fd15 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
    dinoc.setBitmaps(BITMAP_DINOC0_ID, BITMAP_DINOC1_ID);
 800331c:	2215      	movs	r2, #21
 800331e:	4650      	mov	r0, sl
 8003320:	2114      	movs	r1, #20
 8003322:	f007 fc9e 	bl	800ac62 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    dinoc.setUpdateTicksInterval(1);
 8003326:	4650      	mov	r0, sl
 8003328:	4631      	mov	r1, r6
 800332a:	f007 fcad 	bl	800ac88 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    dinoc.startAnimation(false, true, false);
 800332e:	462b      	mov	r3, r5
 8003330:	4632      	mov	r2, r6
 8003332:	4650      	mov	r0, sl
 8003334:	4629      	mov	r1, r5
 8003336:	f007 fbec 	bl	800ab12 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 800333a:	4651      	mov	r1, sl
 800333c:	4638      	mov	r0, r7
        visible = vis;
 800333e:	f884 50f9 	strb.w	r5, [r4, #249]	; 0xf9
 8003342:	f006 fa27 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    dino.setXY(12, 134);
 8003346:	4648      	mov	r0, r9
 8003348:	2286      	movs	r2, #134	; 0x86
 800334a:	210c      	movs	r1, #12
 800334c:	f7ff fcfb 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
    dino.setBitmaps(BITMAP_DINO1_ID, BITMAP_DINO3_ID);
 8003350:	2213      	movs	r2, #19
 8003352:	4648      	mov	r0, r9
 8003354:	2111      	movs	r1, #17
 8003356:	f007 fc84 	bl	800ac62 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    dino.setUpdateTicksInterval(12);
 800335a:	4648      	mov	r0, r9
 800335c:	210c      	movs	r1, #12
 800335e:	f007 fc93 	bl	800ac88 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    dino.startAnimation(false, true, true);
 8003362:	4633      	mov	r3, r6
 8003364:	4632      	mov	r2, r6
 8003366:	4648      	mov	r0, r9
 8003368:	4629      	mov	r1, r5
 800336a:	f007 fbd2 	bl	800ab12 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 800336e:	4649      	mov	r1, r9
 8003370:	4638      	mov	r0, r7
 8003372:	f006 fa0f 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bird.setXY(241, 124);
 8003376:	ee18 0a10 	vmov	r0, s16
 800337a:	227c      	movs	r2, #124	; 0x7c
 800337c:	21f1      	movs	r1, #241	; 0xf1
 800337e:	f7ff fce2 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
    bird.setBitmaps(BITMAP_BIRD0_ID, BITMAP_BIRD1_ID);
 8003382:	2204      	movs	r2, #4
 8003384:	ee18 0a10 	vmov	r0, s16
 8003388:	2103      	movs	r1, #3
 800338a:	f007 fc6a 	bl	800ac62 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    bird.setUpdateTicksInterval(15);
 800338e:	ee18 0a10 	vmov	r0, s16
 8003392:	210f      	movs	r1, #15
 8003394:	f007 fc78 	bl	800ac88 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    bird.startAnimation(false, true, true);
 8003398:	4633      	mov	r3, r6
 800339a:	4632      	mov	r2, r6
 800339c:	ee18 0a10 	vmov	r0, s16
 80033a0:	4629      	mov	r1, r5
 80033a2:	f007 fbb6 	bl	800ab12 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 80033a6:	ee18 1a10 	vmov	r1, s16
 80033aa:	4638      	mov	r0, r7
 80033ac:	f006 f9f2 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    cacti1.setXY(206, 149);
 80033b0:	2295      	movs	r2, #149	; 0x95
 80033b2:	ee19 0a90 	vmov	r0, s19
 80033b6:	21ce      	movs	r1, #206	; 0xce
 80033b8:	f7ff fcc5 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
 80033bc:	230f      	movs	r3, #15
    cacti1.setBitmap(touchgfx::Bitmap(BITMAP_CACTUS0_ID));
 80033be:	ee19 0a90 	vmov	r0, s19
 80033c2:	a906      	add	r1, sp, #24
 80033c4:	f8ad 3018 	strh.w	r3, [sp, #24]
 80033c8:	f007 fee1 	bl	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80033cc:	ee19 1a90 	vmov	r1, s19
 80033d0:	4638      	mov	r0, r7
 80033d2:	f006 f9df 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaPoint.setXY(232, 26);
 80033d6:	221a      	movs	r2, #26
 80033d8:	ee18 0a90 	vmov	r0, s17
 80033dc:	21e8      	movs	r1, #232	; 0xe8
 80033de:	f7ff fcb2 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80033e2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80033e6:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80033ea:	f8d4 31b4 	ldr.w	r3, [r4, #436]	; 0x1b4
        linespace = space;
 80033ee:	f8a4 51e8 	strh.w	r5, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 80033f2:	f10d 0808 	add.w	r8, sp, #8
 80033f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80033fa:	f8df a138 	ldr.w	sl, [pc, #312]	; 8003534 <_ZN15Screen2ViewBaseC1Ev+0x36c>
 80033fe:	ee18 1a90 	vmov	r1, s17
 8003402:	4640      	mov	r0, r8
 8003404:	4798      	blx	r3
 8003406:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800340a:	f504 73f8 	add.w	r3, r4, #496	; 0x1f0
 800340e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003412:	f8da 3000 	ldr.w	r3, [sl]
    Unicode::snprintf(textAreaPointBuffer, TEXTAREAPOINT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTA7).getText());
 8003416:	f504 7913 	add.w	r9, r4, #588	; 0x24c
 800341a:	b92b      	cbnz	r3, 8003428 <_ZN15Screen2ViewBaseC1Ev+0x260>
 800341c:	4b3f      	ldr	r3, [pc, #252]	; (800351c <_ZN15Screen2ViewBaseC1Ev+0x354>)
 800341e:	4a40      	ldr	r2, [pc, #256]	; (8003520 <_ZN15Screen2ViewBaseC1Ev+0x358>)
 8003420:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003422:	4840      	ldr	r0, [pc, #256]	; (8003524 <_ZN15Screen2ViewBaseC1Ev+0x35c>)
 8003424:	f01a fa38 	bl	801d898 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003428:	f8df b10c 	ldr.w	fp, [pc, #268]	; 8003538 <_ZN15Screen2ViewBaseC1Ev+0x370>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800342c:	f8bb 3000 	ldrh.w	r3, [fp]
 8003430:	2b04      	cmp	r3, #4
 8003432:	d803      	bhi.n	800343c <_ZN15Screen2ViewBaseC1Ev+0x274>
 8003434:	4b3c      	ldr	r3, [pc, #240]	; (8003528 <_ZN15Screen2ViewBaseC1Ev+0x360>)
 8003436:	4a3a      	ldr	r2, [pc, #232]	; (8003520 <_ZN15Screen2ViewBaseC1Ev+0x358>)
 8003438:	2161      	movs	r1, #97	; 0x61
 800343a:	e7f2      	b.n	8003422 <_ZN15Screen2ViewBaseC1Ev+0x25a>
        return texts->getText(typedTextId);
 800343c:	4b3b      	ldr	r3, [pc, #236]	; (800352c <_ZN15Screen2ViewBaseC1Ev+0x364>)
 800343e:	2104      	movs	r1, #4
 8003440:	6818      	ldr	r0, [r3, #0]
 8003442:	f000 fcdd 	bl	8003e00 <_ZNK8touchgfx5Texts7getTextEt>
 8003446:	4a3a      	ldr	r2, [pc, #232]	; (8003530 <_ZN15Screen2ViewBaseC1Ev+0x368>)
 8003448:	4603      	mov	r3, r0
 800344a:	210a      	movs	r1, #10
 800344c:	4648      	mov	r0, r9
 800344e:	f00c fd01 	bl	800fe54 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaPoint.resizeToCurrentText();
 8003452:	ee18 0a90 	vmov	r0, s17
        wc1 = value;
 8003456:	f8c4 91fc 	str.w	r9, [r4, #508]	; 0x1fc
 800345a:	f007 fd07 	bl	800ae6c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800345e:	f8df 90dc 	ldr.w	r9, [pc, #220]	; 800353c <_ZN15Screen2ViewBaseC1Ev+0x374>
 8003462:	f8cd 9018 	str.w	r9, [sp, #24]
 8003466:	2305      	movs	r3, #5
    textAreaPoint.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EK8I));
 8003468:	ee18 0a90 	vmov	r0, s17
 800346c:	a906      	add	r1, sp, #24
 800346e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003472:	f007 fd1b 	bl	800aeac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003476:	ee18 1a90 	vmov	r1, s17
 800347a:	4638      	mov	r0, r7
 800347c:	f006 f98a 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    highestScoreTextArea.setXY(12, 26);
 8003480:	ee19 0a10 	vmov	r0, s18
 8003484:	221a      	movs	r2, #26
 8003486:	210c      	movs	r1, #12
 8003488:	f7ff fc5d 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
 800348c:	f8d4 3200 	ldr.w	r3, [r4, #512]	; 0x200
        linespace = space;
 8003490:	f8a4 5234 	strh.w	r5, [r4, #564]	; 0x234
        color = newColor;
 8003494:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8003498:	4640      	mov	r0, r8
 800349a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800349e:	f8c4 2230 	str.w	r2, [r4, #560]	; 0x230
        boundingArea = calculateBoundingArea();
 80034a2:	ee19 1a10 	vmov	r1, s18
 80034a6:	4798      	blx	r3
 80034a8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80034ac:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80034b0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80034b4:	f8da 3000 	ldr.w	r3, [sl]
    Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9LM2).getText());
 80034b8:	f504 7818 	add.w	r8, r4, #608	; 0x260
 80034bc:	2b00      	cmp	r3, #0
 80034be:	d0ad      	beq.n	800341c <_ZN15Screen2ViewBaseC1Ev+0x254>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80034c0:	f8bb 3000 	ldrh.w	r3, [fp]
 80034c4:	2b00      	cmp	r3, #0
 80034c6:	d0b5      	beq.n	8003434 <_ZN15Screen2ViewBaseC1Ev+0x26c>
        return texts->getText(typedTextId);
 80034c8:	4b18      	ldr	r3, [pc, #96]	; (800352c <_ZN15Screen2ViewBaseC1Ev+0x364>)
 80034ca:	4629      	mov	r1, r5
 80034cc:	6818      	ldr	r0, [r3, #0]
 80034ce:	f000 fc97 	bl	8003e00 <_ZNK8touchgfx5Texts7getTextEt>
 80034d2:	4a17      	ldr	r2, [pc, #92]	; (8003530 <_ZN15Screen2ViewBaseC1Ev+0x368>)
 80034d4:	4603      	mov	r3, r0
 80034d6:	210a      	movs	r1, #10
 80034d8:	4640      	mov	r0, r8
 80034da:	f00c fcbb 	bl	800fe54 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    highestScoreTextArea.resizeToCurrentText();
 80034de:	ee19 0a10 	vmov	r0, s18
 80034e2:	f8c4 8248 	str.w	r8, [r4, #584]	; 0x248
 80034e6:	f007 fcc1 	bl	800ae6c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    highestScoreTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CZU9));
 80034ea:	ee19 0a10 	vmov	r0, s18
 80034ee:	a906      	add	r1, sp, #24
        : typedTextId(id)
 80034f0:	f8cd 9018 	str.w	r9, [sp, #24]
 80034f4:	f8ad 601c 	strh.w	r6, [sp, #28]
 80034f8:	f007 fcd8 	bl	800aeac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80034fc:	4638      	mov	r0, r7
 80034fe:	ee19 1a10 	vmov	r1, s18
 8003502:	f006 f947 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003506:	4620      	mov	r0, r4
 8003508:	b009      	add	sp, #36	; 0x24
 800350a:	ecbd 8b04 	vpop	{d8-d9}
 800350e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003512:	bf00      	nop
 8003514:	0801fe94 	.word	0x0801fe94
 8003518:	0802051c 	.word	0x0802051c
 800351c:	0801fb94 	.word	0x0801fb94
 8003520:	0801fd56 	.word	0x0801fd56
 8003524:	0801fc11 	.word	0x0801fc11
 8003528:	0801fd18 	.word	0x0801fd18
 800352c:	200126a0 	.word	0x200126a0
 8003530:	0801fd8e 	.word	0x0801fd8e
 8003534:	20012694 	.word	0x20012694
 8003538:	20012698 	.word	0x20012698
 800353c:	0801f398 	.word	0x0801f398

08003540 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8003540:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8003542:	4770      	bx	lr

08003544 <_ZN15Screen3ViewBaseD1Ev>:
}

Screen3ViewBase::~Screen3ViewBase()
{

}
 8003544:	4770      	bx	lr

08003546 <_ZN15Screen3ViewBase11setupScreenEv>:

void Screen3ViewBase::setupScreen()
{

}
 8003546:	4770      	bx	lr

08003548 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003548:	4770      	bx	lr

0800354a <_ZN8touchgfx13ClickListenerINS_6ButtonEED1Ev>:
class ClickListener : public T
 800354a:	4770      	bx	lr

0800354c <_ZN8touchgfx9DraggableINS_9ContainerEED1Ev>:
 * can be freely moved around using the touch screen.
 *
 * @tparam T specifies the type to extend with the Draggable behavior.
 */
template <class T>
class Draggable : public T
 800354c:	4770      	bx	lr

0800354e <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800354e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003550:	68c2      	ldr	r2, [r0, #12]
 8003552:	6844      	ldr	r4, [r0, #4]
 8003554:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003556:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003558:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800355c:	07d2      	lsls	r2, r2, #31
 800355e:	bf48      	it	mi
 8003560:	5962      	ldrmi	r2, [r4, r5]
 8003562:	689b      	ldr	r3, [r3, #8]
    }
 8003564:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003566:	bf48      	it	mi
 8003568:	58d3      	ldrmi	r3, [r2, r3]
 800356a:	4718      	bx	r3

0800356c <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800356c:	6843      	ldr	r3, [r0, #4]
 800356e:	b12b      	cbz	r3, 800357c <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003570:	6883      	ldr	r3, [r0, #8]
 8003572:	b92b      	cbnz	r3, 8003580 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003574:	68c0      	ldr	r0, [r0, #12]
 8003576:	f000 0001 	and.w	r0, r0, #1
 800357a:	4770      	bx	lr
 800357c:	4618      	mov	r0, r3
 800357e:	4770      	bx	lr
 8003580:	2001      	movs	r0, #1
    }
 8003582:	4770      	bx	lr

08003584 <_ZN8touchgfx9DraggableINS_9ContainerEED0Ev>:
 8003584:	b510      	push	{r4, lr}
 8003586:	212c      	movs	r1, #44	; 0x2c
 8003588:	4604      	mov	r4, r0
 800358a:	f01a f956 	bl	801d83a <_ZdlPvj>
 800358e:	4620      	mov	r0, r4
 8003590:	bd10      	pop	{r4, pc}

08003592 <_ZN8touchgfx13ClickListenerINS_6ButtonEED0Ev>:
 8003592:	b510      	push	{r4, lr}
 8003594:	2138      	movs	r1, #56	; 0x38
 8003596:	4604      	mov	r4, r0
 8003598:	f01a f94f 	bl	801d83a <_ZdlPvj>
 800359c:	4620      	mov	r0, r4
 800359e:	bd10      	pop	{r4, pc}

080035a0 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80035a0:	b510      	push	{r4, lr}
 80035a2:	2110      	movs	r1, #16
 80035a4:	4604      	mov	r4, r0
 80035a6:	f01a f948 	bl	801d83a <_ZdlPvj>
 80035aa:	4620      	mov	r0, r4
 80035ac:	bd10      	pop	{r4, pc}

080035ae <_ZN15Screen3ViewBaseD0Ev>:
Screen3ViewBase::~Screen3ViewBase()
 80035ae:	b510      	push	{r4, lr}
}
 80035b0:	f44f 7142 	mov.w	r1, #776	; 0x308
Screen3ViewBase::~Screen3ViewBase()
 80035b4:	4604      	mov	r4, r0
}
 80035b6:	f01a f940 	bl	801d83a <_ZdlPvj>
 80035ba:	4620      	mov	r0, r4
 80035bc:	bd10      	pop	{r4, pc}

080035be <_ZN8touchgfx9DraggableINS_9ContainerEE15handleDragEventERKNS_9DragEventE>:
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragNewY - dragOldY;
 80035be:	890b      	ldrh	r3, [r1, #8]
 80035c0:	898a      	ldrh	r2, [r1, #12]
 80035c2:	1ad2      	subs	r2, r2, r3
        return dragNewX - dragOldX;
 80035c4:	894b      	ldrh	r3, [r1, #10]
 80035c6:	88c9      	ldrh	r1, [r1, #6]
 80035c8:	1a59      	subs	r1, r3, r1
     * @param  event The drag event.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        T::handleDragEvent(event);
        T::moveRelative(event.getDeltaX(), event.getDeltaY());
 80035ca:	b212      	sxth	r2, r2
 80035cc:	b209      	sxth	r1, r1
 80035ce:	f00a bd7d 	b.w	800e0cc <_ZN8touchgfx8Drawable12moveRelativeEss>

080035d2 <_ZN8touchgfx13ClickListenerINS_6ButtonEE16handleClickEventERKNS_10ClickEventE>:
    virtual void handleClickEvent(const ClickEvent& event)
 80035d2:	b570      	push	{r4, r5, r6, lr}
 80035d4:	4604      	mov	r4, r0
 80035d6:	460d      	mov	r5, r1
        T::handleClickEvent(event);
 80035d8:	f007 fa54 	bl	800aa84 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>
        if (clickAction && clickAction->isValid())
 80035dc:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80035de:	b158      	cbz	r0, 80035f8 <_ZN8touchgfx13ClickListenerINS_6ButtonEE16handleClickEventERKNS_10ClickEventE+0x26>
 80035e0:	6803      	ldr	r3, [r0, #0]
 80035e2:	68db      	ldr	r3, [r3, #12]
 80035e4:	4798      	blx	r3
 80035e6:	b138      	cbz	r0, 80035f8 <_ZN8touchgfx13ClickListenerINS_6ButtonEE16handleClickEventERKNS_10ClickEventE+0x26>
            clickAction->execute(*this, event);
 80035e8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80035ea:	6803      	ldr	r3, [r0, #0]
 80035ec:	462a      	mov	r2, r5
 80035ee:	4621      	mov	r1, r4
 80035f0:	689b      	ldr	r3, [r3, #8]
    }
 80035f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            clickAction->execute(*this, event);
 80035f6:	4718      	bx	r3
    }
 80035f8:	bd70      	pop	{r4, r5, r6, pc}

080035fa <_ZN15Screen3ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen3ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 80035fa:	f500 7018 	add.w	r0, r0, #608	; 0x260
 80035fe:	4288      	cmp	r0, r1
{
 8003600:	b508      	push	{r3, lr}
    if (&src == &button1)
 8003602:	d105      	bne.n	8003610 <_ZN15Screen3ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Screen3ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003604:	f009 fbf8 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
        //RETRY
        //When button1 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards West
        application().gotoScreen2ScreenCoverTransitionWest();
    }
}
 8003608:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenCoverTransitionWest();
 800360c:	f7ff baa6 	b.w	8002b5c <_ZN23FrontendApplicationBase36gotoScreen2ScreenCoverTransitionWestEv>
}
 8003610:	bd08      	pop	{r3, pc}
	...

08003614 <_ZN15Screen3ViewBaseC1Ev>:
Screen3ViewBase::Screen3ViewBase() :
 8003614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003618:	ed2d 8b0a 	vpush	{d8-d12}
 800361c:	4604      	mov	r4, r0
 800361e:	b08b      	sub	sp, #44	; 0x2c
    buttonCallback(this, &Screen3ViewBase::buttonCallbackHandler)
 8003620:	46a2      	mov	sl, r4
 8003622:	2500      	movs	r5, #0
 8003624:	f00a ff78 	bl	800e518 <_ZN8touchgfx6ScreenC1Ev>
 8003628:	4bec      	ldr	r3, [pc, #944]	; (80039dc <_ZN15Screen3ViewBaseC1Ev+0x3c8>)
 800362a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800362c:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8003630:	2226      	movs	r2, #38	; 0x26
 8003632:	4629      	mov	r1, r5
 8003634:	4650      	mov	r0, sl
 8003636:	f01a f9bb 	bl	801d9b0 <memset>
 800363a:	4650      	mov	r0, sl
 800363c:	f7ff fd72 	bl	8003124 <_ZN8touchgfx6WidgetC1Ev>
 8003640:	4be7      	ldr	r3, [pc, #924]	; (80039e0 <_ZN15Screen3ViewBaseC1Ev+0x3cc>)
 8003642:	6423      	str	r3, [r4, #64]	; 0x40
 8003644:	23ff      	movs	r3, #255	; 0xff
 8003646:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800364a:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 800364e:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8003652:	f104 0998 	add.w	r9, r4, #152	; 0x98
 8003656:	4618      	mov	r0, r3
 8003658:	66a5      	str	r5, [r4, #104]	; 0x68
 800365a:	a908      	add	r1, sp, #32
 800365c:	ee08 3a10 	vmov	s16, r3
 8003660:	f8ad 6020 	strh.w	r6, [sp, #32]
 8003664:	f7ff fb7c 	bl	8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
          running(false)
 8003668:	a908      	add	r1, sp, #32
 800366a:	4648      	mov	r0, r9
 800366c:	f8ad 6020 	strh.w	r6, [sp, #32]
 8003670:	f7ff fb76 	bl	8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003674:	4bdb      	ldr	r3, [pc, #876]	; (80039e4 <_ZN15Screen3ViewBaseC1Ev+0x3d0>)
 8003676:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800367a:	2201      	movs	r2, #1
 800367c:	f04f 33ff 	mov.w	r3, #4294967295
 8003680:	e9c4 3232 	strd	r3, r2, [r4, #200]	; 0xc8
        : T()
 8003684:	4ad8      	ldr	r2, [pc, #864]	; (80039e8 <_ZN15Screen3ViewBaseC1Ev+0x3d4>)
 8003686:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
        : x(0), y(0), width(0), height(0)
 800368a:	e9c4 2535 	strd	r2, r5, [r4, #212]	; 0xd4
        touchable = touch;
 800368e:	f240 1201 	movw	r2, #257	; 0x101
 8003692:	f8a4 20f8 	strh.w	r2, [r4, #248]	; 0xf8
 8003696:	f504 7280 	add.w	r2, r4, #256	; 0x100
 800369a:	4610      	mov	r0, r2
 800369c:	e9c4 5537 	strd	r5, r5, [r4, #220]	; 0xdc
          visible(true)
 80036a0:	e9c4 5539 	strd	r5, r5, [r4, #228]	; 0xe4
 80036a4:	e9c4 553b 	strd	r5, r5, [r4, #236]	; 0xec
 80036a8:	f884 50d0 	strb.w	r5, [r4, #208]	; 0xd0
          firstChild(0)
 80036ac:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
 80036b0:	f8c4 50f4 	str.w	r5, [r4, #244]	; 0xf4
 80036b4:	a908      	add	r1, sp, #32
 80036b6:	ee08 2a90 	vmov	s17, r2
 80036ba:	f8ad 3020 	strh.w	r3, [sp, #32]
 80036be:	f7ff fb4f 	bl	8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80036c2:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 80036c6:	a908      	add	r1, sp, #32
 80036c8:	4618      	mov	r0, r3
 80036ca:	ee09 3a10 	vmov	s18, r3
 80036ce:	f8ad 6020 	strh.w	r6, [sp, #32]
 80036d2:	f7ff fb45 	bl	8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80036d6:	f504 73ac 	add.w	r3, r4, #344	; 0x158
 80036da:	a908      	add	r1, sp, #32
 80036dc:	4618      	mov	r0, r3
 80036de:	ee09 3a90 	vmov	s19, r3
 80036e2:	f8ad 6020 	strh.w	r6, [sp, #32]
 80036e6:	f7ff fb3b 	bl	8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80036ea:	f504 73c2 	add.w	r3, r4, #388	; 0x184
 80036ee:	a908      	add	r1, sp, #32
 80036f0:	4618      	mov	r0, r3
 80036f2:	ee0a 3a10 	vmov	s20, r3
 80036f6:	f8ad 6020 	strh.w	r6, [sp, #32]
 80036fa:	f7ff fb31 	bl	8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80036fe:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8003702:	a908      	add	r1, sp, #32
 8003704:	4618      	mov	r0, r3
 8003706:	ee0a 3a90 	vmov	s21, r3
 800370a:	f8ad 6020 	strh.w	r6, [sp, #32]
 800370e:	f7ff fb27 	bl	8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003712:	f504 73ee 	add.w	r3, r4, #476	; 0x1dc
 8003716:	a908      	add	r1, sp, #32
 8003718:	4618      	mov	r0, r3
 800371a:	ee0b 3a10 	vmov	s22, r3
 800371e:	f8ad 6020 	strh.w	r6, [sp, #32]
 8003722:	f7ff fb1d 	bl	8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003726:	f504 7302 	add.w	r3, r4, #520	; 0x208
 800372a:	a908      	add	r1, sp, #32
 800372c:	4618      	mov	r0, r3
 800372e:	ee0b 3a90 	vmov	s23, r3
 8003732:	f8ad 6020 	strh.w	r6, [sp, #32]
 8003736:	f7ff fb13 	bl	8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800373a:	f504 730d 	add.w	r3, r4, #564	; 0x234
 800373e:	f504 7b18 	add.w	fp, r4, #608	; 0x260
 8003742:	4618      	mov	r0, r3
 8003744:	a908      	add	r1, sp, #32
 8003746:	ee0c 3a10 	vmov	s24, r3
 800374a:	f8ad 6020 	strh.w	r6, [sp, #32]
 800374e:	f7ff fb07 	bl	8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        : Widget(), action(), pressed(false)
 8003752:	4629      	mov	r1, r5
 8003754:	2226      	movs	r2, #38	; 0x26
 8003756:	4658      	mov	r0, fp
 8003758:	f01a f92a 	bl	801d9b0 <memset>
 800375c:	4658      	mov	r0, fp
 800375e:	f7ff fce1 	bl	8003124 <_ZN8touchgfx6WidgetC1Ev>
 8003762:	f504 7826 	add.w	r8, r4, #664	; 0x298
        touchable = touch;
 8003766:	f04f 0301 	mov.w	r3, #1
        : T(), clickAction(0)
 800376a:	4aa0      	ldr	r2, [pc, #640]	; (80039ec <_ZN15Screen3ViewBaseC1Ev+0x3d8>)
 800376c:	f884 3284 	strb.w	r3, [r4, #644]	; 0x284
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003770:	4629      	mov	r1, r5
 8003772:	f8c4 5288 	str.w	r5, [r4, #648]	; 0x288
 8003776:	f884 528c 	strb.w	r5, [r4, #652]	; 0x28c
 800377a:	f8a4 628e 	strh.w	r6, [r4, #654]	; 0x28e
 800377e:	f8a4 6290 	strh.w	r6, [r4, #656]	; 0x290
        : AbstractButton(), up(), down(), alpha(255)
 8003782:	f884 6292 	strb.w	r6, [r4, #658]	; 0x292
 8003786:	f8c4 2260 	str.w	r2, [r4, #608]	; 0x260
 800378a:	f8c4 5294 	str.w	r5, [r4, #660]	; 0x294
 800378e:	2226      	movs	r2, #38	; 0x26
 8003790:	4640      	mov	r0, r8
 8003792:	f01a f90d 	bl	801d9b0 <memset>
 8003796:	4640      	mov	r0, r8
 8003798:	f7ff fcc4 	bl	8003124 <_ZN8touchgfx6WidgetC1Ev>
 800379c:	4b94      	ldr	r3, [pc, #592]	; (80039f0 <_ZN15Screen3ViewBaseC1Ev+0x3dc>)
 800379e:	f8c4 32c0 	str.w	r3, [r4, #704]	; 0x2c0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80037a2:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 80037a6:	e9c4 35b6 	strd	r3, r5, [r4, #728]	; 0x2d8
        : pobject(pObject), pmemfun(pmemfun_1)
 80037aa:	4b92      	ldr	r3, [pc, #584]	; (80039f4 <_ZN15Screen3ViewBaseC1Ev+0x3e0>)
 80037ac:	f8a4 62c4 	strh.w	r6, [r4, #708]	; 0x2c4
 80037b0:	e9c4 34be 	strd	r3, r4, [r4, #760]	; 0x2f8
 80037b4:	4b90      	ldr	r3, [pc, #576]	; (80039f8 <_ZN15Screen3ViewBaseC1Ev+0x3e4>)
        : color(col)
 80037b6:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80037ba:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80037be:	e9c4 35c0 	strd	r3, r5, [r4, #768]	; 0x300
 80037c2:	f8c4 22cc 	str.w	r2, [r4, #716]	; 0x2cc
    __background.setPosition(0, 0, 320, 240);
 80037c6:	23f0      	movs	r3, #240	; 0xf0
        : TextAreaWithWildcardBase(), wc1(0)
 80037c8:	4a8c      	ldr	r2, [pc, #560]	; (80039fc <_ZN15Screen3ViewBaseC1Ev+0x3e8>)
 80037ca:	f8a4 52d0 	strh.w	r5, [r4, #720]	; 0x2d0
 80037ce:	4629      	mov	r1, r5
 80037d0:	4650      	mov	r0, sl
 80037d2:	f8c4 2298 	str.w	r2, [r4, #664]	; 0x298
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80037d6:	f8c4 52d4 	str.w	r5, [r4, #724]	; 0x2d4
 80037da:	462a      	mov	r2, r5
 80037dc:	f8c4 52e0 	str.w	r5, [r4, #736]	; 0x2e0
 80037e0:	9300      	str	r3, [sp, #0]
 80037e2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80037e6:	f7fe ffa1 	bl	800272c <_ZN8touchgfx8Drawable11setPositionEssss>
 80037ea:	1d26      	adds	r6, r4, #4
        color = newColor;
 80037ec:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80037f0:	66a3      	str	r3, [r4, #104]	; 0x68
 80037f2:	4651      	mov	r1, sl
 80037f4:	4630      	mov	r0, r6
 80037f6:	f005 ffcd 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bg.setXY(-7, -4);
 80037fa:	f06f 0203 	mvn.w	r2, #3
 80037fe:	ee18 0a10 	vmov	r0, s16
 8003802:	f06f 0106 	mvn.w	r1, #6
 8003806:	f7ff fa9e 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
 800380a:	f04f 0a02 	mov.w	sl, #2
    bg.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 800380e:	ee18 0a10 	vmov	r0, s16
 8003812:	a908      	add	r1, sp, #32
 8003814:	f8ad a020 	strh.w	sl, [sp, #32]
 8003818:	f007 fcb9 	bl	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800381c:	ee18 1a10 	vmov	r1, s16
 8003820:	4630      	mov	r0, r6
 8003822:	f005 ffb7 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ground.setXY(0, 159);
 8003826:	4629      	mov	r1, r5
 8003828:	4648      	mov	r0, r9
 800382a:	229f      	movs	r2, #159	; 0x9f
 800382c:	f7ff fa8b 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
    ground.setBitmaps(BITMAP_GROUND0_ID, BITMAP_GROUND2_ID);
 8003830:	221a      	movs	r2, #26
 8003832:	4648      	mov	r0, r9
 8003834:	2118      	movs	r1, #24
 8003836:	f007 fa14 	bl	800ac62 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    ground.setUpdateTicksInterval(15);
 800383a:	4648      	mov	r0, r9
 800383c:	210f      	movs	r1, #15
 800383e:	f007 fa23 	bl	800ac88 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    ground.startAnimation(false, true, true);
 8003842:	2301      	movs	r3, #1
 8003844:	461a      	mov	r2, r3
 8003846:	4629      	mov	r1, r5
 8003848:	4648      	mov	r0, r9
 800384a:	f007 f962 	bl	800ab12 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 800384e:	4649      	mov	r1, r9
 8003850:	4630      	mov	r0, r6
    buttonCallback(this, &Screen3ViewBase::buttonCallbackHandler)
 8003852:	f104 07d4 	add.w	r7, r4, #212	; 0xd4
 8003856:	f005 ff9d 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gameover.setPosition(60, 39, 207, 41);
 800385a:	2329      	movs	r3, #41	; 0x29
 800385c:	9300      	str	r3, [sp, #0]
 800385e:	2227      	movs	r2, #39	; 0x27
 8003860:	23cf      	movs	r3, #207	; 0xcf
 8003862:	213c      	movs	r1, #60	; 0x3c
 8003864:	4638      	mov	r0, r7
 8003866:	f7fe ff61 	bl	800272c <_ZN8touchgfx8Drawable11setPositionEssss>
    image1.setXY(16, 26);
 800386a:	221a      	movs	r2, #26
 800386c:	ee18 0a90 	vmov	r0, s17
 8003870:	2110      	movs	r1, #16
 8003872:	f7ff fa68 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
 8003876:	2317      	movs	r3, #23
    image1.setBitmap(touchgfx::Bitmap(BITMAP_G_ID));
 8003878:	ee18 0a90 	vmov	r0, s17
 800387c:	a908      	add	r1, sp, #32
 800387e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8003882:	f007 fc84 	bl	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.add(image1);
 8003886:	ee18 1a90 	vmov	r1, s17
 800388a:	4638      	mov	r0, r7
 800388c:	f005 ff82 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(36, 26);
 8003890:	221a      	movs	r2, #26
 8003892:	ee19 0a10 	vmov	r0, s18
 8003896:	2124      	movs	r1, #36	; 0x24
 8003898:	f7ff fa55 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_A_ID));
 800389c:	ee19 0a10 	vmov	r0, s18
 80038a0:	a908      	add	r1, sp, #32
 80038a2:	f8ad 5020 	strh.w	r5, [sp, #32]
 80038a6:	f007 fc72 	bl	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.add(image2);
 80038aa:	ee19 1a10 	vmov	r1, s18
 80038ae:	4638      	mov	r0, r7
 80038b0:	f005 ff70 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image3.setXY(55, 26);
 80038b4:	221a      	movs	r2, #26
 80038b6:	ee19 0a90 	vmov	r0, s19
 80038ba:	2137      	movs	r1, #55	; 0x37
 80038bc:	f7ff fa43 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
 80038c0:	231b      	movs	r3, #27
    image3.setBitmap(touchgfx::Bitmap(BITMAP_M_ID));
 80038c2:	ee19 0a90 	vmov	r0, s19
 80038c6:	a908      	add	r1, sp, #32
 80038c8:	f8ad 3020 	strh.w	r3, [sp, #32]
 80038cc:	f007 fc5f 	bl	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.add(image3);
 80038d0:	ee19 1a90 	vmov	r1, s19
 80038d4:	4638      	mov	r0, r7
 80038d6:	f005 ff5d 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image4.setXY(74, 26);
 80038da:	221a      	movs	r2, #26
 80038dc:	ee1a 0a10 	vmov	r0, s20
 80038e0:	214a      	movs	r1, #74	; 0x4a
 80038e2:	f7ff fa30 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
 80038e6:	f04f 0916 	mov.w	r9, #22
    image4.setBitmap(touchgfx::Bitmap(BITMAP_E_ID));
 80038ea:	ee1a 0a10 	vmov	r0, s20
 80038ee:	a908      	add	r1, sp, #32
 80038f0:	f8ad 9020 	strh.w	r9, [sp, #32]
 80038f4:	f007 fc4b 	bl	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.add(image4);
 80038f8:	ee1a 1a10 	vmov	r1, s20
 80038fc:	4638      	mov	r0, r7
 80038fe:	f005 ff49 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image5.setXY(121, 26);
 8003902:	221a      	movs	r2, #26
 8003904:	ee1a 0a90 	vmov	r0, s21
 8003908:	2179      	movs	r1, #121	; 0x79
 800390a:	f7ff fa1c 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
 800390e:	231c      	movs	r3, #28
    image5.setBitmap(touchgfx::Bitmap(BITMAP_O_ID));
 8003910:	ee1a 0a90 	vmov	r0, s21
 8003914:	a908      	add	r1, sp, #32
 8003916:	f8ad 3020 	strh.w	r3, [sp, #32]
 800391a:	f007 fc38 	bl	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.add(image5);
 800391e:	ee1a 1a90 	vmov	r1, s21
 8003922:	4638      	mov	r0, r7
 8003924:	f005 ff36 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image6.setXY(139, 26);
 8003928:	221a      	movs	r2, #26
 800392a:	ee1b 0a10 	vmov	r0, s22
 800392e:	218b      	movs	r1, #139	; 0x8b
 8003930:	f7ff fa09 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
 8003934:	231f      	movs	r3, #31
    image6.setBitmap(touchgfx::Bitmap(BITMAP_V_ID));
 8003936:	ee1b 0a10 	vmov	r0, s22
 800393a:	a908      	add	r1, sp, #32
 800393c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8003940:	f007 fc25 	bl	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.add(image6);
 8003944:	ee1b 1a10 	vmov	r1, s22
 8003948:	4638      	mov	r0, r7
 800394a:	f005 ff23 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image7.setXY(158, 26);
 800394e:	221a      	movs	r2, #26
 8003950:	ee1b 0a90 	vmov	r0, s23
 8003954:	219e      	movs	r1, #158	; 0x9e
 8003956:	f7ff f9f6 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
    image7.setBitmap(touchgfx::Bitmap(BITMAP_E_ID));
 800395a:	ee1b 0a90 	vmov	r0, s23
 800395e:	a908      	add	r1, sp, #32
 8003960:	f8ad 9020 	strh.w	r9, [sp, #32]
 8003964:	f007 fc13 	bl	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.add(image7);
 8003968:	ee1b 1a90 	vmov	r1, s23
 800396c:	4638      	mov	r0, r7
 800396e:	f005 ff11 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image8.setXY(176, 26);
 8003972:	221a      	movs	r2, #26
 8003974:	ee1c 0a10 	vmov	r0, s24
 8003978:	21b0      	movs	r1, #176	; 0xb0
 800397a:	f7ff f9e4 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
 800397e:	231d      	movs	r3, #29
    image8.setBitmap(touchgfx::Bitmap(BITMAP_R_ID));
 8003980:	ee1c 0a10 	vmov	r0, s24
 8003984:	a908      	add	r1, sp, #32
 8003986:	f8ad 3020 	strh.w	r3, [sp, #32]
 800398a:	f007 fc00 	bl	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.add(image8);
 800398e:	ee1c 1a10 	vmov	r1, s24
 8003992:	4638      	mov	r0, r7
 8003994:	f005 fefe 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003998:	4639      	mov	r1, r7
 800399a:	4630      	mov	r0, r6
 800399c:	f005 fefa 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    button1.setXY(145, 120);
 80039a0:	2278      	movs	r2, #120	; 0x78
 80039a2:	2191      	movs	r1, #145	; 0x91
 80039a4:	4658      	mov	r0, fp
 80039a6:	f7ff f9ce 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
 80039aa:	231e      	movs	r3, #30
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_RETRY_ID), touchgfx::Bitmap(BITMAP_RETRY_ID));
 80039ac:	aa08      	add	r2, sp, #32
 80039ae:	a907      	add	r1, sp, #28
 80039b0:	4658      	mov	r0, fp
 80039b2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80039b6:	f8ad 3020 	strh.w	r3, [sp, #32]
 80039ba:	f007 fad1 	bl	800af60 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 80039be:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
        action = &callback;
 80039c2:	f8c4 3288 	str.w	r3, [r4, #648]	; 0x288
 80039c6:	4659      	mov	r1, fp
 80039c8:	4630      	mov	r0, r6
 80039ca:	f005 fee3 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(133, 86);
 80039ce:	2256      	movs	r2, #86	; 0x56
 80039d0:	2185      	movs	r1, #133	; 0x85
 80039d2:	4640      	mov	r0, r8
 80039d4:	f7ff f9b7 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
 80039d8:	e012      	b.n	8003a00 <_ZN15Screen3ViewBaseC1Ev+0x3ec>
 80039da:	bf00      	nop
 80039dc:	0801ffe4 	.word	0x0801ffe4
 80039e0:	0802051c 	.word	0x0802051c
 80039e4:	080204a0 	.word	0x080204a0
 80039e8:	0801fec8 	.word	0x0801fec8
 80039ec:	0801ff58 	.word	0x0801ff58
 80039f0:	0801f398 	.word	0x0801f398
 80039f4:	0801ffcc 	.word	0x0801ffcc
 80039f8:	080035fb 	.word	0x080035fb
 80039fc:	0801fe04 	.word	0x0801fe04
        color = newColor;
 8003a00:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003a04:	f8c4 32c8 	str.w	r3, [r4, #712]	; 0x2c8
        boundingArea = calculateBoundingArea();
 8003a08:	f8d4 3298 	ldr.w	r3, [r4, #664]	; 0x298
        linespace = space;
 8003a0c:	f8a4 52cc 	strh.w	r5, [r4, #716]	; 0x2cc
        boundingArea = calculateBoundingArea();
 8003a10:	ad02      	add	r5, sp, #8
 8003a12:	4628      	mov	r0, r5
 8003a14:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003a18:	4641      	mov	r1, r8
 8003a1a:	4798      	blx	r3
 8003a1c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003a20:	f504 7335 	add.w	r3, r4, #724	; 0x2d4
 8003a24:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a28:	4b1a      	ldr	r3, [pc, #104]	; (8003a94 <_ZN15Screen3ViewBaseC1Ev+0x480>)
 8003a2a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9UHM).getText());
 8003a2c:	f504 7539 	add.w	r5, r4, #740	; 0x2e4
 8003a30:	b92b      	cbnz	r3, 8003a3e <_ZN15Screen3ViewBaseC1Ev+0x42a>
 8003a32:	4b19      	ldr	r3, [pc, #100]	; (8003a98 <_ZN15Screen3ViewBaseC1Ev+0x484>)
 8003a34:	4a19      	ldr	r2, [pc, #100]	; (8003a9c <_ZN15Screen3ViewBaseC1Ev+0x488>)
 8003a36:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a38:	4819      	ldr	r0, [pc, #100]	; (8003aa0 <_ZN15Screen3ViewBaseC1Ev+0x48c>)
 8003a3a:	f019 ff2d 	bl	801d898 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003a3e:	4b19      	ldr	r3, [pc, #100]	; (8003aa4 <_ZN15Screen3ViewBaseC1Ev+0x490>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a40:	881b      	ldrh	r3, [r3, #0]
 8003a42:	2b02      	cmp	r3, #2
 8003a44:	d803      	bhi.n	8003a4e <_ZN15Screen3ViewBaseC1Ev+0x43a>
 8003a46:	4b18      	ldr	r3, [pc, #96]	; (8003aa8 <_ZN15Screen3ViewBaseC1Ev+0x494>)
 8003a48:	4a14      	ldr	r2, [pc, #80]	; (8003a9c <_ZN15Screen3ViewBaseC1Ev+0x488>)
 8003a4a:	2161      	movs	r1, #97	; 0x61
 8003a4c:	e7f4      	b.n	8003a38 <_ZN15Screen3ViewBaseC1Ev+0x424>
        return texts->getText(typedTextId);
 8003a4e:	4b17      	ldr	r3, [pc, #92]	; (8003aac <_ZN15Screen3ViewBaseC1Ev+0x498>)
 8003a50:	4651      	mov	r1, sl
 8003a52:	6818      	ldr	r0, [r3, #0]
 8003a54:	f000 f9d4 	bl	8003e00 <_ZNK8touchgfx5Texts7getTextEt>
 8003a58:	4a15      	ldr	r2, [pc, #84]	; (8003ab0 <_ZN15Screen3ViewBaseC1Ev+0x49c>)
 8003a5a:	4603      	mov	r3, r0
 8003a5c:	210a      	movs	r1, #10
 8003a5e:	4628      	mov	r0, r5
 8003a60:	f00c f9f8 	bl	800fe54 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1.resizeToCurrentText();
 8003a64:	4640      	mov	r0, r8
        wc1 = value;
 8003a66:	f8c4 52e0 	str.w	r5, [r4, #736]	; 0x2e0
 8003a6a:	f007 f9ff 	bl	800ae6c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003a6e:	4b11      	ldr	r3, [pc, #68]	; (8003ab4 <_ZN15Screen3ViewBaseC1Ev+0x4a0>)
 8003a70:	9308      	str	r3, [sp, #32]
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WIFF));
 8003a72:	a908      	add	r1, sp, #32
 8003a74:	2303      	movs	r3, #3
 8003a76:	4640      	mov	r0, r8
 8003a78:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003a7c:	f007 fa16 	bl	800aeac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a80:	4630      	mov	r0, r6
 8003a82:	4641      	mov	r1, r8
 8003a84:	f005 fe86 	bl	8009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003a88:	4620      	mov	r0, r4
 8003a8a:	b00b      	add	sp, #44	; 0x2c
 8003a8c:	ecbd 8b0a 	vpop	{d8-d12}
 8003a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a94:	20012694 	.word	0x20012694
 8003a98:	0801fb94 	.word	0x0801fb94
 8003a9c:	0801fd56 	.word	0x0801fd56
 8003aa0:	0801fc11 	.word	0x0801fc11
 8003aa4:	20012698 	.word	0x20012698
 8003aa8:	0801fd18 	.word	0x0801fd18
 8003aac:	200126a0 	.word	0x200126a0
 8003ab0:	0801fd8e 	.word	0x0801fd8e
 8003ab4:	0801f398 	.word	0x0801f398

08003ab8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_ROCKB_TTF_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_ROCKB_TTF_20_4bpp();

touchgfx::GeneratedFont& getFont_ROCKB_TTF_20_4bpp()
{
    static touchgfx::GeneratedFont ROCKB_TTF_20_4bpp(glyphs_ROCKB_TTF_20_4bpp, 20, 24, 20, 0, 0, 4, 1, 0, 0, unicodes_ROCKB_TTF_20_4bpp, kerning_ROCKB_TTF_20_4bpp, 63, 0, 0, 0);
 8003ab8:	4770      	bx	lr
	...

08003abc <_Z25getFont_ROCKB_TTF_20_4bppv>:
{
 8003abc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont ROCKB_TTF_20_4bpp(glyphs_ROCKB_TTF_20_4bpp, 20, 24, 20, 0, 0, 4, 1, 0, 0, unicodes_ROCKB_TTF_20_4bpp, kerning_ROCKB_TTF_20_4bpp, 63, 0, 0, 0);
 8003abe:	4d16      	ldr	r5, [pc, #88]	; (8003b18 <_Z25getFont_ROCKB_TTF_20_4bppv+0x5c>)
 8003ac0:	782c      	ldrb	r4, [r5, #0]
 8003ac2:	f3bf 8f5b 	dmb	ish
 8003ac6:	f014 0401 	ands.w	r4, r4, #1
{
 8003aca:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont ROCKB_TTF_20_4bpp(glyphs_ROCKB_TTF_20_4bpp, 20, 24, 20, 0, 0, 4, 1, 0, 0, unicodes_ROCKB_TTF_20_4bpp, kerning_ROCKB_TTF_20_4bpp, 63, 0, 0, 0);
 8003acc:	d121      	bne.n	8003b12 <_Z25getFont_ROCKB_TTF_20_4bppv+0x56>
 8003ace:	4628      	mov	r0, r5
 8003ad0:	f019 feb5 	bl	801d83e <__cxa_guard_acquire>
 8003ad4:	b1e8      	cbz	r0, 8003b12 <_Z25getFont_ROCKB_TTF_20_4bppv+0x56>
 8003ad6:	233f      	movs	r3, #63	; 0x3f
 8003ad8:	9309      	str	r3, [sp, #36]	; 0x24
 8003ada:	4b10      	ldr	r3, [pc, #64]	; (8003b1c <_Z25getFont_ROCKB_TTF_20_4bppv+0x60>)
 8003adc:	9308      	str	r3, [sp, #32]
 8003ade:	4b10      	ldr	r3, [pc, #64]	; (8003b20 <_Z25getFont_ROCKB_TTF_20_4bppv+0x64>)
 8003ae0:	4910      	ldr	r1, [pc, #64]	; (8003b24 <_Z25getFont_ROCKB_TTF_20_4bppv+0x68>)
 8003ae2:	4811      	ldr	r0, [pc, #68]	; (8003b28 <_Z25getFont_ROCKB_TTF_20_4bppv+0x6c>)
 8003ae4:	940a      	str	r4, [sp, #40]	; 0x28
 8003ae6:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003aea:	2201      	movs	r2, #1
 8003aec:	2304      	movs	r3, #4
 8003aee:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003af2:	2214      	movs	r2, #20
 8003af4:	9200      	str	r2, [sp, #0]
 8003af6:	2318      	movs	r3, #24
 8003af8:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8003afc:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003b00:	9405      	str	r4, [sp, #20]
 8003b02:	f7ff f87d 	bl	8002c00 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003b06:	4809      	ldr	r0, [pc, #36]	; (8003b2c <_Z25getFont_ROCKB_TTF_20_4bppv+0x70>)
 8003b08:	f019 fee4 	bl	801d8d4 <atexit>
 8003b0c:	4628      	mov	r0, r5
 8003b0e:	f019 fea2 	bl	801d856 <__cxa_guard_release>
    return ROCKB_TTF_20_4bpp;
}
 8003b12:	4805      	ldr	r0, [pc, #20]	; (8003b28 <_Z25getFont_ROCKB_TTF_20_4bppv+0x6c>)
 8003b14:	b00f      	add	sp, #60	; 0x3c
 8003b16:	bd30      	pop	{r4, r5, pc}
 8003b18:	200017c8 	.word	0x200017c8
 8003b1c:	08021588 	.word	0x08021588
 8003b20:	08021598 	.word	0x08021598
 8003b24:	080213fc 	.word	0x080213fc
 8003b28:	200017cc 	.word	0x200017cc
 8003b2c:	08003ab9 	.word	0x08003ab9

08003b30 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_SHOWG_TTF_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_SHOWG_TTF_20_4bpp();

touchgfx::GeneratedFont& getFont_SHOWG_TTF_20_4bpp()
{
    static touchgfx::GeneratedFont SHOWG_TTF_20_4bpp(glyphs_SHOWG_TTF_20_4bpp, 6, 21, 20, 0, 0, 4, 1, 1, 1, unicodes_SHOWG_TTF_20_4bpp, kerning_SHOWG_TTF_20_4bpp, 63, 0, 0, 0);
 8003b30:	4770      	bx	lr
	...

08003b34 <_Z25getFont_SHOWG_TTF_20_4bppv>:
{
 8003b34:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont SHOWG_TTF_20_4bpp(glyphs_SHOWG_TTF_20_4bpp, 6, 21, 20, 0, 0, 4, 1, 1, 1, unicodes_SHOWG_TTF_20_4bpp, kerning_SHOWG_TTF_20_4bpp, 63, 0, 0, 0);
 8003b36:	4d17      	ldr	r5, [pc, #92]	; (8003b94 <_Z25getFont_SHOWG_TTF_20_4bppv+0x60>)
 8003b38:	782c      	ldrb	r4, [r5, #0]
 8003b3a:	f3bf 8f5b 	dmb	ish
 8003b3e:	f014 0401 	ands.w	r4, r4, #1
{
 8003b42:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont SHOWG_TTF_20_4bpp(glyphs_SHOWG_TTF_20_4bpp, 6, 21, 20, 0, 0, 4, 1, 1, 1, unicodes_SHOWG_TTF_20_4bpp, kerning_SHOWG_TTF_20_4bpp, 63, 0, 0, 0);
 8003b44:	d122      	bne.n	8003b8c <_Z25getFont_SHOWG_TTF_20_4bppv+0x58>
 8003b46:	4628      	mov	r0, r5
 8003b48:	f019 fe79 	bl	801d83e <__cxa_guard_acquire>
 8003b4c:	b1f0      	cbz	r0, 8003b8c <_Z25getFont_SHOWG_TTF_20_4bppv+0x58>
 8003b4e:	233f      	movs	r3, #63	; 0x3f
 8003b50:	9309      	str	r3, [sp, #36]	; 0x24
 8003b52:	4b11      	ldr	r3, [pc, #68]	; (8003b98 <_Z25getFont_SHOWG_TTF_20_4bppv+0x64>)
 8003b54:	9308      	str	r3, [sp, #32]
 8003b56:	4b11      	ldr	r3, [pc, #68]	; (8003b9c <_Z25getFont_SHOWG_TTF_20_4bppv+0x68>)
 8003b58:	9307      	str	r3, [sp, #28]
 8003b5a:	2301      	movs	r3, #1
 8003b5c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8003b60:	9304      	str	r3, [sp, #16]
 8003b62:	2304      	movs	r3, #4
 8003b64:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8003b68:	2314      	movs	r3, #20
 8003b6a:	490d      	ldr	r1, [pc, #52]	; (8003ba0 <_Z25getFont_SHOWG_TTF_20_4bppv+0x6c>)
 8003b6c:	9300      	str	r3, [sp, #0]
 8003b6e:	2206      	movs	r2, #6
 8003b70:	2315      	movs	r3, #21
 8003b72:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8003b76:	480b      	ldr	r0, [pc, #44]	; (8003ba4 <_Z25getFont_SHOWG_TTF_20_4bppv+0x70>)
 8003b78:	940a      	str	r4, [sp, #40]	; 0x28
 8003b7a:	9401      	str	r4, [sp, #4]
 8003b7c:	f7ff f840 	bl	8002c00 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003b80:	4809      	ldr	r0, [pc, #36]	; (8003ba8 <_Z25getFont_SHOWG_TTF_20_4bppv+0x74>)
 8003b82:	f019 fea7 	bl	801d8d4 <atexit>
 8003b86:	4628      	mov	r0, r5
 8003b88:	f019 fe65 	bl	801d856 <__cxa_guard_release>
    return SHOWG_TTF_20_4bpp;
}
 8003b8c:	4805      	ldr	r0, [pc, #20]	; (8003ba4 <_Z25getFont_SHOWG_TTF_20_4bppv+0x70>)
 8003b8e:	b00f      	add	sp, #60	; 0x3c
 8003b90:	bd30      	pop	{r4, r5, pc}
 8003b92:	bf00      	nop
 8003b94:	200017f8 	.word	0x200017f8
 8003b98:	0802158c 	.word	0x0802158c
 8003b9c:	0802159c 	.word	0x0802159c
 8003ba0:	08021514 	.word	0x08021514
 8003ba4:	200017fc 	.word	0x200017fc
 8003ba8:	08003b31 	.word	0x08003b31

08003bac <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003bac:	4770      	bx	lr
	...

08003bb0 <_Z23getFont_verdana_10_4bppv>:
{
 8003bb0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003bb2:	4d16      	ldr	r5, [pc, #88]	; (8003c0c <_Z23getFont_verdana_10_4bppv+0x5c>)
 8003bb4:	782c      	ldrb	r4, [r5, #0]
 8003bb6:	f3bf 8f5b 	dmb	ish
 8003bba:	f014 0401 	ands.w	r4, r4, #1
{
 8003bbe:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003bc0:	d120      	bne.n	8003c04 <_Z23getFont_verdana_10_4bppv+0x54>
 8003bc2:	4628      	mov	r0, r5
 8003bc4:	f019 fe3b 	bl	801d83e <__cxa_guard_acquire>
 8003bc8:	b1e0      	cbz	r0, 8003c04 <_Z23getFont_verdana_10_4bppv+0x54>
 8003bca:	233f      	movs	r3, #63	; 0x3f
 8003bcc:	9309      	str	r3, [sp, #36]	; 0x24
 8003bce:	4b10      	ldr	r3, [pc, #64]	; (8003c10 <_Z23getFont_verdana_10_4bppv+0x60>)
 8003bd0:	9308      	str	r3, [sp, #32]
 8003bd2:	4b10      	ldr	r3, [pc, #64]	; (8003c14 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003bd4:	4910      	ldr	r1, [pc, #64]	; (8003c18 <_Z23getFont_verdana_10_4bppv+0x68>)
 8003bd6:	4811      	ldr	r0, [pc, #68]	; (8003c1c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003bd8:	940a      	str	r4, [sp, #40]	; 0x28
 8003bda:	2201      	movs	r2, #1
 8003bdc:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003be0:	2304      	movs	r3, #4
 8003be2:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003be6:	230a      	movs	r3, #10
 8003be8:	9300      	str	r3, [sp, #0]
 8003bea:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8003bee:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003bf2:	9405      	str	r4, [sp, #20]
 8003bf4:	f7ff f804 	bl	8002c00 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003bf8:	4809      	ldr	r0, [pc, #36]	; (8003c20 <_Z23getFont_verdana_10_4bppv+0x70>)
 8003bfa:	f019 fe6b 	bl	801d8d4 <atexit>
 8003bfe:	4628      	mov	r0, r5
 8003c00:	f019 fe29 	bl	801d856 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8003c04:	4805      	ldr	r0, [pc, #20]	; (8003c1c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003c06:	b00f      	add	sp, #60	; 0x3c
 8003c08:	bd30      	pop	{r4, r5, pc}
 8003c0a:	bf00      	nop
 8003c0c:	20001828 	.word	0x20001828
 8003c10:	08021590 	.word	0x08021590
 8003c14:	080215a0 	.word	0x080215a0
 8003c18:	08021568 	.word	0x08021568
 8003c1c:	2000182c 	.word	0x2000182c
 8003c20:	08003bad 	.word	0x08003bad

08003c24 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003c24:	4770      	bx	lr
	...

08003c28 <_Z23getFont_verdana_40_4bppv>:
{
 8003c28:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003c2a:	4d16      	ldr	r5, [pc, #88]	; (8003c84 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8003c2c:	782c      	ldrb	r4, [r5, #0]
 8003c2e:	f3bf 8f5b 	dmb	ish
 8003c32:	f014 0401 	ands.w	r4, r4, #1
{
 8003c36:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003c38:	d120      	bne.n	8003c7c <_Z23getFont_verdana_40_4bppv+0x54>
 8003c3a:	4628      	mov	r0, r5
 8003c3c:	f019 fdff 	bl	801d83e <__cxa_guard_acquire>
 8003c40:	b1e0      	cbz	r0, 8003c7c <_Z23getFont_verdana_40_4bppv+0x54>
 8003c42:	233f      	movs	r3, #63	; 0x3f
 8003c44:	9309      	str	r3, [sp, #36]	; 0x24
 8003c46:	4b10      	ldr	r3, [pc, #64]	; (8003c88 <_Z23getFont_verdana_40_4bppv+0x60>)
 8003c48:	9308      	str	r3, [sp, #32]
 8003c4a:	4b10      	ldr	r3, [pc, #64]	; (8003c8c <_Z23getFont_verdana_40_4bppv+0x64>)
 8003c4c:	4910      	ldr	r1, [pc, #64]	; (8003c90 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003c4e:	4811      	ldr	r0, [pc, #68]	; (8003c94 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003c50:	940a      	str	r4, [sp, #40]	; 0x28
 8003c52:	2201      	movs	r2, #1
 8003c54:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003c58:	2304      	movs	r3, #4
 8003c5a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003c5e:	2328      	movs	r3, #40	; 0x28
 8003c60:	9300      	str	r3, [sp, #0]
 8003c62:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8003c66:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003c6a:	9405      	str	r4, [sp, #20]
 8003c6c:	f7fe ffc8 	bl	8002c00 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003c70:	4809      	ldr	r0, [pc, #36]	; (8003c98 <_Z23getFont_verdana_40_4bppv+0x70>)
 8003c72:	f019 fe2f 	bl	801d8d4 <atexit>
 8003c76:	4628      	mov	r0, r5
 8003c78:	f019 fded 	bl	801d856 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8003c7c:	4805      	ldr	r0, [pc, #20]	; (8003c94 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003c7e:	b00f      	add	sp, #60	; 0x3c
 8003c80:	bd30      	pop	{r4, r5, pc}
 8003c82:	bf00      	nop
 8003c84:	20001858 	.word	0x20001858
 8003c88:	08021594 	.word	0x08021594
 8003c8c:	080215a4 	.word	0x080215a4
 8003c90:	08021578 	.word	0x08021578
 8003c94:	2000185c 	.word	0x2000185c
 8003c98:	08003c25 	.word	0x08003c25

08003c9c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8003c9c:	2000      	movs	r0, #0
 8003c9e:	4770      	bx	lr

08003ca0 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8003ca0:	2000      	movs	r0, #0
 8003ca2:	4770      	bx	lr

08003ca4 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003ca4:	b40e      	push	{r1, r2, r3}
 8003ca6:	b503      	push	{r0, r1, lr}
 8003ca8:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003caa:	2100      	movs	r1, #0
{
 8003cac:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8003cb0:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003cb2:	f00a f85f 	bl	800dd74 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003cb6:	b002      	add	sp, #8
 8003cb8:	f85d eb04 	ldr.w	lr, [sp], #4
 8003cbc:	b003      	add	sp, #12
 8003cbe:	4770      	bx	lr

08003cc0 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003cc0:	b40c      	push	{r2, r3}
 8003cc2:	b507      	push	{r0, r1, r2, lr}
 8003cc4:	ab04      	add	r3, sp, #16
 8003cc6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003cca:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003ccc:	f00a f852 	bl	800dd74 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003cd0:	b003      	add	sp, #12
 8003cd2:	f85d eb04 	ldr.w	lr, [sp], #4
 8003cd6:	b002      	add	sp, #8
 8003cd8:	4770      	bx	lr
	...

08003cdc <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003cdc:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8003cde:	b510      	push	{r4, lr}
 8003ce0:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8003ce2:	b373      	cbz	r3, 8003d42 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8003ce4:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8003ce6:	b92b      	cbnz	r3, 8003cf4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8003ce8:	4b18      	ldr	r3, [pc, #96]	; (8003d4c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8003cea:	4a19      	ldr	r2, [pc, #100]	; (8003d50 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8003cec:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8003cee:	4819      	ldr	r0, [pc, #100]	; (8003d54 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8003cf0:	f019 fdd2 	bl	801d898 <__assert_func>
            return buffer[pos];
 8003cf4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8003cf6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8003cfa:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8003cfc:	b30b      	cbz	r3, 8003d42 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8003cfe:	f00b fb00 	bl	800f302 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8003d02:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8003d04:	2b01      	cmp	r3, #1
 8003d06:	d803      	bhi.n	8003d10 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8003d08:	4b13      	ldr	r3, [pc, #76]	; (8003d58 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8003d0a:	4a14      	ldr	r2, [pc, #80]	; (8003d5c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8003d0c:	21cb      	movs	r1, #203	; 0xcb
 8003d0e:	e7ee      	b.n	8003cee <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8003d10:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8003d12:	1c53      	adds	r3, r2, #1
 8003d14:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8003d16:	2b09      	cmp	r3, #9
 8003d18:	4619      	mov	r1, r3
 8003d1a:	bf88      	it	hi
 8003d1c:	f1a3 010a 	subhi.w	r1, r3, #10
 8003d20:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8003d24:	f640 103f 	movw	r0, #2367	; 0x93f
 8003d28:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8003d2a:	4281      	cmp	r1, r0
 8003d2c:	d109      	bne.n	8003d42 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8003d2e:	2b0a      	cmp	r3, #10
 8003d30:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003d34:	bf28      	it	cs
 8003d36:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8003d38:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8003d3c:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8003d3e:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8003d40:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8003d42:	4620      	mov	r0, r4
}
 8003d44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003d48:	f00b b9de 	b.w	800f108 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003d4c:	08020010 	.word	0x08020010
 8003d50:	08020019 	.word	0x08020019
 8003d54:	080200c4 	.word	0x080200c4
 8003d58:	0802010e 	.word	0x0802010e
 8003d5c:	0802011c 	.word	0x0802011c

08003d60 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003d60:	f00b b999 	b.w	800f096 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003d64 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8003d64:	b510      	push	{r4, lr}
 8003d66:	b086      	sub	sp, #24
 8003d68:	ac02      	add	r4, sp, #8
 8003d6a:	e884 0006 	stmia.w	r4, {r1, r2}
 8003d6e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8003d70:	ab0a      	add	r3, sp, #40	; 0x28
 8003d72:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8003d74:	9301      	str	r3, [sp, #4]
 8003d76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003d78:	9300      	str	r3, [sp, #0]
 8003d7a:	4621      	mov	r1, r4
 8003d7c:	9b08      	ldr	r3, [sp, #32]
 8003d7e:	f008 fbd9 	bl	800c534 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8003d82:	b006      	add	sp, #24
 8003d84:	bd10      	pop	{r4, pc}
	...

08003d88 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003d88:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003d8a:	bb18      	cbnz	r0, 8003dd4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003d8c:	4b12      	ldr	r3, [pc, #72]	; (8003dd8 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003d8e:	4813      	ldr	r0, [pc, #76]	; (8003ddc <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003d90:	681b      	ldr	r3, [r3, #0]
 8003d92:	4913      	ldr	r1, [pc, #76]	; (8003de0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003d94:	b1b3      	cbz	r3, 8003dc4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003d96:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003d98:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003d9a:	441a      	add	r2, r3
 8003d9c:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003d9e:	685a      	ldr	r2, [r3, #4]
 8003da0:	441a      	add	r2, r3
 8003da2:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003da4:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8003da6:	4b0f      	ldr	r3, [pc, #60]	; (8003de4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003da8:	2200      	movs	r2, #0
 8003daa:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003dac:	f000 f838 	bl	8003e20 <_ZN17TypedTextDatabase8getFontsEv>
 8003db0:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8003db2:	f000 f833 	bl	8003e1c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8003db6:	4b0c      	ldr	r3, [pc, #48]	; (8003de8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003db8:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003dba:	4b0c      	ldr	r3, [pc, #48]	; (8003dec <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003dbc:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003dbe:	4b0c      	ldr	r3, [pc, #48]	; (8003df0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003dc0:	8018      	strh	r0, [r3, #0]
    }
}
 8003dc2:	e007      	b.n	8003dd4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8003dc4:	4b0b      	ldr	r3, [pc, #44]	; (8003df4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8003dc6:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003dc8:	4b0b      	ldr	r3, [pc, #44]	; (8003df8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003dca:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003dcc:	4b0b      	ldr	r3, [pc, #44]	; (8003dfc <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003dce:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003dd0:	2c00      	cmp	r4, #0
 8003dd2:	d1e8      	bne.n	8003da6 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8003dd4:	bd38      	pop	{r3, r4, r5, pc}
 8003dd6:	bf00      	nop
 8003dd8:	20001888 	.word	0x20001888
 8003ddc:	2000188c 	.word	0x2000188c
 8003de0:	20001890 	.word	0x20001890
 8003de4:	20001894 	.word	0x20001894
 8003de8:	20012694 	.word	0x20012694
 8003dec:	2001269c 	.word	0x2001269c
 8003df0:	20012698 	.word	0x20012698
 8003df4:	080215c4 	.word	0x080215c4
 8003df8:	080215a8 	.word	0x080215a8
 8003dfc:	08021610 	.word	0x08021610

08003e00 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8003e00:	4b04      	ldr	r3, [pc, #16]	; (8003e14 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8003e02:	681b      	ldr	r3, [r3, #0]
 8003e04:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8003e08:	4b03      	ldr	r3, [pc, #12]	; (8003e18 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8003e0a:	681b      	ldr	r3, [r3, #0]
}
 8003e0c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003e10:	4770      	bx	lr
 8003e12:	bf00      	nop
 8003e14:	20001890 	.word	0x20001890
 8003e18:	2000188c 	.word	0x2000188c

08003e1c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8003e1c:	2007      	movs	r0, #7
 8003e1e:	4770      	bx	lr

08003e20 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003e20:	4800      	ldr	r0, [pc, #0]	; (8003e24 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8003e22:	4770      	bx	lr
 8003e24:	20001898 	.word	0x20001898

08003e28 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_ROCKB_TTF_20_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8003e28:	b510      	push	{r4, lr}
    &(getFont_SHOWG_TTF_20_4bpp()),
 8003e2a:	f7ff fe83 	bl	8003b34 <_Z25getFont_SHOWG_TTF_20_4bppv>
};
 8003e2e:	4c06      	ldr	r4, [pc, #24]	; (8003e48 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8003e30:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8003e32:	f7ff fef9 	bl	8003c28 <_Z23getFont_verdana_40_4bppv>
};
 8003e36:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8003e38:	f7ff feba 	bl	8003bb0 <_Z23getFont_verdana_10_4bppv>
};
 8003e3c:	60a0      	str	r0, [r4, #8]
    &(getFont_ROCKB_TTF_20_4bpp())
 8003e3e:	f7ff fe3d 	bl	8003abc <_Z25getFont_ROCKB_TTF_20_4bppv>
};
 8003e42:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8003e44:	bd10      	pop	{r4, pc}
 8003e46:	bf00      	nop
 8003e48:	20001898 	.word	0x20001898

08003e4c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003e4c:	4770      	bx	lr

08003e4e <_ZN19FrontendApplicationD0Ev>:
 8003e4e:	b510      	push	{r4, lr}
 8003e50:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8003e54:	4604      	mov	r4, r0
 8003e56:	f019 fcf0 	bl	801d83a <_ZdlPvj>
 8003e5a:	4620      	mov	r0, r4
 8003e5c:	bd10      	pop	{r4, pc}

08003e5e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003e5e:	b510      	push	{r4, lr}
 8003e60:	4604      	mov	r4, r0
    {
        model.tick();
 8003e62:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8003e66:	f000 f813 	bl	8003e90 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003e6a:	4620      	mov	r0, r4
    }
 8003e6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003e70:	f009 b886 	b.w	800cf80 <_ZN8touchgfx11Application15handleTickEventEv>

08003e74 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <gui/screen3_screen/Screen3View.hpp>
#include <gui/screen3_screen/Screen3Presenter.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003e74:	b510      	push	{r4, lr}
 8003e76:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003e78:	f7fe fe20 	bl	8002abc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003e7c:	4b01      	ldr	r3, [pc, #4]	; (8003e84 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8003e7e:	6023      	str	r3, [r4, #0]
{

}
 8003e80:	4620      	mov	r0, r4
 8003e82:	bd10      	pop	{r4, pc}
 8003e84:	080201f8 	.word	0x080201f8

08003e88 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0), score(0)
 8003e88:	2200      	movs	r2, #0
 8003e8a:	e9c0 2200 	strd	r2, r2, [r0]
{

}
 8003e8e:	4770      	bx	lr

08003e90 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8003e90:	4770      	bx	lr

08003e92 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 8003e92:	4770      	bx	lr

08003e94 <_ZThn4_N16Screen1PresenterD1Ev>:
 8003e94:	3804      	subs	r0, #4
 8003e96:	4770      	bx	lr

08003e98 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8003e98:	4770      	bx	lr

08003e9a <_ZN16Screen1PresenterD0Ev>:
 8003e9a:	b510      	push	{r4, lr}
 8003e9c:	2110      	movs	r1, #16
 8003e9e:	4604      	mov	r4, r0
 8003ea0:	f019 fccb 	bl	801d83a <_ZdlPvj>
 8003ea4:	4620      	mov	r0, r4
 8003ea6:	bd10      	pop	{r4, pc}

08003ea8 <_ZThn4_N16Screen1PresenterD0Ev>:
 8003ea8:	f1a0 0004 	sub.w	r0, r0, #4
 8003eac:	e7f5      	b.n	8003e9a <_ZN16Screen1PresenterD0Ev>
	...

08003eb0 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8003eb0:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8003eb2:	2200      	movs	r2, #0
 8003eb4:	6082      	str	r2, [r0, #8]
    : view(v)
 8003eb6:	4a04      	ldr	r2, [pc, #16]	; (8003ec8 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8003eb8:	60c1      	str	r1, [r0, #12]
 8003eba:	f102 0408 	add.w	r4, r2, #8
 8003ebe:	3220      	adds	r2, #32
 8003ec0:	6004      	str	r4, [r0, #0]
 8003ec2:	6042      	str	r2, [r0, #4]
}
 8003ec4:	bd10      	pop	{r4, pc}
 8003ec6:	bf00      	nop
 8003ec8:	08020244 	.word	0x08020244

08003ecc <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8003ecc:	4770      	bx	lr
	...

08003ed0 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8003ed0:	b510      	push	{r4, lr}
 8003ed2:	4b03      	ldr	r3, [pc, #12]	; (8003ee0 <_ZN11Screen1ViewD1Ev+0x10>)
 8003ed4:	6003      	str	r3, [r0, #0]
 8003ed6:	4604      	mov	r4, r0
 8003ed8:	f7fe feca 	bl	8002c70 <_ZN15Screen1ViewBaseD1Ev>
 8003edc:	4620      	mov	r0, r4
 8003ede:	bd10      	pop	{r4, pc}
 8003ee0:	08020274 	.word	0x08020274

08003ee4 <_ZN11Screen1ViewD0Ev>:
 8003ee4:	b510      	push	{r4, lr}
 8003ee6:	4604      	mov	r4, r0
 8003ee8:	f7ff fff2 	bl	8003ed0 <_ZN11Screen1ViewD1Ev>
 8003eec:	4620      	mov	r0, r4
 8003eee:	f44f 71b6 	mov.w	r1, #364	; 0x16c
 8003ef2:	f019 fca2 	bl	801d83a <_ZdlPvj>
 8003ef6:	4620      	mov	r0, r4
 8003ef8:	bd10      	pop	{r4, pc}
	...

08003efc <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8003efc:	b510      	push	{r4, lr}
 8003efe:	4604      	mov	r4, r0
 8003f00:	f7fe ff8e 	bl	8002e20 <_ZN15Screen1ViewBaseC1Ev>
 8003f04:	4b01      	ldr	r3, [pc, #4]	; (8003f0c <_ZN11Screen1ViewC1Ev+0x10>)
 8003f06:	6023      	str	r3, [r4, #0]
}
 8003f08:	4620      	mov	r0, r4
 8003f0a:	bd10      	pop	{r4, pc}
 8003f0c:	08020274 	.word	0x08020274

08003f10 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8003f10:	f7fe beaf 	b.w	8002c72 <_ZN15Screen1ViewBase11setupScreenEv>

08003f14 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {}
 8003f14:	4770      	bx	lr

08003f16 <_ZThn4_N16Screen2PresenterD1Ev>:
 8003f16:	3804      	subs	r0, #4
 8003f18:	4770      	bx	lr

08003f1a <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 8003f1a:	4770      	bx	lr

08003f1c <_ZN16Screen2PresenterD0Ev>:
 8003f1c:	b510      	push	{r4, lr}
 8003f1e:	2110      	movs	r1, #16
 8003f20:	4604      	mov	r4, r0
 8003f22:	f019 fc8a 	bl	801d83a <_ZdlPvj>
 8003f26:	4620      	mov	r0, r4
 8003f28:	bd10      	pop	{r4, pc}

08003f2a <_ZThn4_N16Screen2PresenterD0Ev>:
 8003f2a:	f1a0 0004 	sub.w	r0, r0, #4
 8003f2e:	e7f5      	b.n	8003f1c <_ZN16Screen2PresenterD0Ev>

08003f30 <_ZN16Screen2PresenterC1ER11Screen2View>:
Screen2Presenter::Screen2Presenter(Screen2View& v)
 8003f30:	b510      	push	{r4, lr}
 8003f32:	2200      	movs	r2, #0
 8003f34:	6082      	str	r2, [r0, #8]
    : view(v)
 8003f36:	4a04      	ldr	r2, [pc, #16]	; (8003f48 <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
 8003f38:	60c1      	str	r1, [r0, #12]
 8003f3a:	f102 0408 	add.w	r4, r2, #8
 8003f3e:	3220      	adds	r2, #32
 8003f40:	6004      	str	r4, [r0, #0]
 8003f42:	6042      	str	r2, [r0, #4]
}
 8003f44:	bd10      	pop	{r4, pc}
 8003f46:	bf00      	nop
 8003f48:	080202a0 	.word	0x080202a0

08003f4c <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 8003f4c:	4770      	bx	lr

08003f4e <_ZN11Screen2View14checkCollisionEv>:
}


bool Screen2View::checkCollision(){
	int16_t dinoT, dinoR, dinoB, dinoL;
	if (dino.isVisible()){
 8003f4e:	f890 3135 	ldrb.w	r3, [r0, #309]	; 0x135
bool Screen2View::checkCollision(){
 8003f52:	b5f0      	push	{r4, r5, r6, r7, lr}
	if (dino.isVisible()){
 8003f54:	2b00      	cmp	r3, #0
 8003f56:	d036      	beq.n	8003fc6 <_ZN11Screen2View14checkCollisionEv+0x78>
        return rect.y;
 8003f58:	f9b0 3116 	ldrsh.w	r3, [r0, #278]	; 0x116
		int deviation = BASE_HEIGHT - dino.getY(); // amount of deviation of the dino from the ground
 8003f5c:	f8d0 22a4 	ldr.w	r2, [r0, #676]	; 0x2a4
		if (deviation > 8) deviation = 8; // max deviation is 8, which reaches dino's legs
		dinoL = dino.getX() + 10;
		dinoT = dino.getY() + 10;
		// simulate the skew of the dino's lower body using the deviation value
		dinoR = dino.getX() + dino.getWidth() - 10 - deviation;
 8003f60:	f8b0 6118 	ldrh.w	r6, [r0, #280]	; 0x118
		int deviation = BASE_HEIGHT - dino.getY(); // amount of deviation of the dino from the ground
 8003f64:	1ad4      	subs	r4, r2, r3
		dinoL = dino.getX() + 10;
 8003f66:	f8b0 2114 	ldrh.w	r2, [r0, #276]	; 0x114
 8003f6a:	f102 050a 	add.w	r5, r2, #10
		dinoR = dino.getX() + dino.getWidth() - 10 - deviation;
 8003f6e:	4432      	add	r2, r6
 8003f70:	3a0a      	subs	r2, #10
 8003f72:	2c08      	cmp	r4, #8
 8003f74:	bfd8      	it	le
 8003f76:	1b12      	suble	r2, r2, r4
		dinoB = dino.getY() + dino.getHeight() - 10;
 8003f78:	f8b0 411a 	ldrh.w	r4, [r0, #282]	; 0x11a
		dinoT = dino.getY() + 10;
 8003f7c:	b29b      	uxth	r3, r3
 8003f7e:	f103 010a 	add.w	r1, r3, #10
		dinoR = dino.getX() + dino.getWidth() - 10 - deviation;
 8003f82:	bfc8      	it	gt
 8003f84:	3a08      	subgt	r2, #8
		dinoB = dino.getY() + dino.getHeight() - 10;
 8003f86:	4423      	add	r3, r4
		dinoL = dino.getX() + 10;
 8003f88:	b22d      	sxth	r5, r5
		dinoT = dino.getY() + 10;
 8003f8a:	b209      	sxth	r1, r1
		dinoR = dino.getX() + dino.getWidth() - 10 - deviation;
 8003f8c:	b212      	sxth	r2, r2
		dinoB = dino.getY() + dino.getHeight() - 10;
 8003f8e:	3b0a      	subs	r3, #10
		dinoR = dinoc.getX() + dinoc.getWidth();
		dinoB = dinoc.getY() + dinoc.getHeight();
	}

	int16_t obsT, obsR, obsB, obsL;
	if (currentObs == 0){
 8003f90:	f8d0 4294 	ldr.w	r4, [r0, #660]	; 0x294
		dinoB = dinoc.getY() + dinoc.getHeight();
 8003f94:	b21b      	sxth	r3, r3
	if (currentObs == 0){
 8003f96:	bb2c      	cbnz	r4, 8003fe4 <_ZN11Screen2View14checkCollisionEv+0x96>
        return rect.x;
 8003f98:	f9b0 718c 	ldrsh.w	r7, [r0, #396]	; 0x18c
		obsL = cacti1.getX();
		obsT = cacti1.getY();
		obsR = cacti1.getX() + cacti1.getWidth();
 8003f9c:	f8b0 4190 	ldrh.w	r4, [r0, #400]	; 0x190
        return rect.y;
 8003fa0:	f9b0 618e 	ldrsh.w	r6, [r0, #398]	; 0x18e
		obsB = cacti1.getY() + cacti1.getHeight();
 8003fa4:	f8b0 0192 	ldrh.w	r0, [r0, #402]	; 0x192
		obsR = cacti1.getX() + cacti1.getWidth();
 8003fa8:	443c      	add	r4, r7
 8003faa:	b224      	sxth	r4, r4
	} else {
		obsL = bird.getX();
		obsT = bird.getY();
		obsR = bird.getX() + bird.getWidth();
		obsB = bird.getY() + bird.getHeight();
 8003fac:	4430      	add	r0, r6
	}

	if (dinoR >= obsL && dinoL <= obsR && dinoB >= obsT && dinoT <= obsB){
 8003fae:	42ba      	cmp	r2, r7
		obsB = bird.getY() + bird.getHeight();
 8003fb0:	b200      	sxth	r0, r0
	if (dinoR >= obsL && dinoL <= obsR && dinoB >= obsT && dinoT <= obsB){
 8003fb2:	db22      	blt.n	8003ffa <_ZN11Screen2View14checkCollisionEv+0xac>
 8003fb4:	42a5      	cmp	r5, r4
 8003fb6:	dc20      	bgt.n	8003ffa <_ZN11Screen2View14checkCollisionEv+0xac>
 8003fb8:	42b3      	cmp	r3, r6
 8003fba:	db1e      	blt.n	8003ffa <_ZN11Screen2View14checkCollisionEv+0xac>
 8003fbc:	4281      	cmp	r1, r0
 8003fbe:	bfcc      	ite	gt
 8003fc0:	2000      	movgt	r0, #0
 8003fc2:	2001      	movle	r0, #1
		return true;
	}

	return false;
}
 8003fc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
		dinoT = dinoc.getY() + 10;
 8003fc6:	f8b0 30da 	ldrh.w	r3, [r0, #218]	; 0xda
        return rect.x;
 8003fca:	f9b0 50d8 	ldrsh.w	r5, [r0, #216]	; 0xd8
		dinoR = dinoc.getX() + dinoc.getWidth();
 8003fce:	f8b0 20dc 	ldrh.w	r2, [r0, #220]	; 0xdc
		dinoB = dinoc.getY() + dinoc.getHeight();
 8003fd2:	f8b0 40de 	ldrh.w	r4, [r0, #222]	; 0xde
		dinoT = dinoc.getY() + 10;
 8003fd6:	f103 010a 	add.w	r1, r3, #10
		dinoR = dinoc.getX() + dinoc.getWidth();
 8003fda:	442a      	add	r2, r5
		dinoT = dinoc.getY() + 10;
 8003fdc:	b209      	sxth	r1, r1
		dinoR = dinoc.getX() + dinoc.getWidth();
 8003fde:	b212      	sxth	r2, r2
		dinoB = dinoc.getY() + dinoc.getHeight();
 8003fe0:	4423      	add	r3, r4
 8003fe2:	e7d5      	b.n	8003f90 <_ZN11Screen2View14checkCollisionEv+0x42>
 8003fe4:	f9b0 7150 	ldrsh.w	r7, [r0, #336]	; 0x150
		obsR = bird.getX() + bird.getWidth();
 8003fe8:	f8b0 4154 	ldrh.w	r4, [r0, #340]	; 0x154
        return rect.y;
 8003fec:	f9b0 6152 	ldrsh.w	r6, [r0, #338]	; 0x152
		obsB = bird.getY() + bird.getHeight();
 8003ff0:	f8b0 0156 	ldrh.w	r0, [r0, #342]	; 0x156
		obsR = bird.getX() + bird.getWidth();
 8003ff4:	443c      	add	r4, r7
 8003ff6:	b224      	sxth	r4, r4
        return rect.height;
 8003ff8:	e7d8      	b.n	8003fac <_ZN11Screen2View14checkCollisionEv+0x5e>
	return false;
 8003ffa:	2000      	movs	r0, #0
 8003ffc:	e7e2      	b.n	8003fc4 <_ZN11Screen2View14checkCollisionEv+0x76>
	...

08004000 <_ZN11Screen2View4randEv>:
int16_t Screen2View::rand(){
 8004000:	b537      	push	{r0, r1, r2, r4, r5, lr}
	if (osMessageQueueGetCount(randomNumberQueueHandle) > 0){
 8004002:	4c0a      	ldr	r4, [pc, #40]	; (800402c <_ZN11Screen2View4randEv+0x2c>)
	int16_t randomNumber = 0;
 8004004:	2500      	movs	r5, #0
	if (osMessageQueueGetCount(randomNumberQueueHandle) > 0){
 8004006:	6820      	ldr	r0, [r4, #0]
	int16_t randomNumber = 0;
 8004008:	f8ad 5006 	strh.w	r5, [sp, #6]
	if (osMessageQueueGetCount(randomNumberQueueHandle) > 0){
 800400c:	f003 fc23 	bl	8007856 <osMessageQueueGetCount>
 8004010:	b138      	cbz	r0, 8004022 <_ZN11Screen2View4randEv+0x22>
		osMessageQueueGet(randomNumberQueueHandle, &randomNumber, NULL, osWaitForever);
 8004012:	6820      	ldr	r0, [r4, #0]
 8004014:	f04f 33ff 	mov.w	r3, #4294967295
 8004018:	462a      	mov	r2, r5
 800401a:	f10d 0106 	add.w	r1, sp, #6
 800401e:	f003 fbeb 	bl	80077f8 <osMessageQueueGet>
}
 8004022:	f9bd 0006 	ldrsh.w	r0, [sp, #6]
 8004026:	b003      	add	sp, #12
 8004028:	bd30      	pop	{r4, r5, pc}
 800402a:	bf00      	nop
 800402c:	20001770 	.word	0x20001770

08004030 <_ZN11Screen2View14handleBtnEventEm>:

void Screen2View::handleBtnEvent(uint32_t count){
 8004030:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004032:	4604      	mov	r4, r0
	uint8_t res = 0;
	osMessageQueueGet(buttonQueueHandle, &res, NULL, osWaitForever);
 8004034:	4814      	ldr	r0, [pc, #80]	; (8004088 <_ZN11Screen2View14handleBtnEventEm+0x58>)
	uint8_t res = 0;
 8004036:	2500      	movs	r5, #0
	osMessageQueueGet(buttonQueueHandle, &res, NULL, osWaitForever);
 8004038:	f04f 33ff 	mov.w	r3, #4294967295
 800403c:	6800      	ldr	r0, [r0, #0]
	uint8_t res = 0;
 800403e:	f88d 5007 	strb.w	r5, [sp, #7]
	osMessageQueueGet(buttonQueueHandle, &res, NULL, osWaitForever);
 8004042:	462a      	mov	r2, r5
 8004044:	f10d 0107 	add.w	r1, sp, #7
 8004048:	f003 fbd6 	bl	80077f8 <osMessageQueueGet>
			if(res == 1 && isJumping == false){
 800404c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004050:	2b01      	cmp	r3, #1
 8004052:	d108      	bne.n	8004066 <_ZN11Screen2View14handleBtnEventEm+0x36>
 8004054:	f894 22a0 	ldrb.w	r2, [r4, #672]	; 0x2a0
 8004058:	b91a      	cbnz	r2, 8004062 <_ZN11Screen2View14handleBtnEventEm+0x32>
				timeJump = 0;
 800405a:	f8c4 22bc 	str.w	r2, [r4, #700]	; 0x2bc
				isJumping = true;
 800405e:	f884 32a0 	strb.w	r3, [r4, #672]	; 0x2a0
			}
			if(res == 3){
				dino.setVisible(true);
				dinoc.setVisible(false);
	}
}
 8004062:	b003      	add	sp, #12
 8004064:	bd30      	pop	{r4, r5, pc}
			if(res == 2){
 8004066:	2b02      	cmp	r3, #2
 8004068:	d007      	beq.n	800407a <_ZN11Screen2View14handleBtnEventEm+0x4a>
			if(res == 3){
 800406a:	2b03      	cmp	r3, #3
 800406c:	d1f9      	bne.n	8004062 <_ZN11Screen2View14handleBtnEventEm+0x32>
        visible = vis;
 800406e:	2301      	movs	r3, #1
 8004070:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 8004074:	f884 50f9 	strb.w	r5, [r4, #249]	; 0xf9
}
 8004078:	e7f3      	b.n	8004062 <_ZN11Screen2View14handleBtnEventEm+0x32>
 800407a:	2301      	movs	r3, #1
 800407c:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 8004080:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
			if(res == 3){
 8004084:	e7ed      	b.n	8004062 <_ZN11Screen2View14handleBtnEventEm+0x32>
 8004086:	bf00      	nop
 8004088:	20001550 	.word	0x20001550

0800408c <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 800408c:	b510      	push	{r4, lr}
 800408e:	4b03      	ldr	r3, [pc, #12]	; (800409c <_ZN11Screen2ViewD1Ev+0x10>)
 8004090:	6003      	str	r3, [r0, #0]
 8004092:	4604      	mov	r4, r0
 8004094:	f7fe fff2 	bl	800307c <_ZN15Screen2ViewBaseD1Ev>
 8004098:	4620      	mov	r0, r4
 800409a:	bd10      	pop	{r4, pc}
 800409c:	080202d4 	.word	0x080202d4

080040a0 <_ZN11Screen2ViewD0Ev>:
 80040a0:	b510      	push	{r4, lr}
 80040a2:	4604      	mov	r4, r0
 80040a4:	f7ff fff2 	bl	800408c <_ZN11Screen2ViewD1Ev>
 80040a8:	4620      	mov	r0, r4
 80040aa:	f44f 7131 	mov.w	r1, #708	; 0x2c4
 80040ae:	f019 fbc4 	bl	801d83a <_ZdlPvj>
 80040b2:	4620      	mov	r0, r4
 80040b4:	bd10      	pop	{r4, pc}

080040b6 <_ZL9GetSectorm>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 80040b6:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 80040ba:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 80040be:	4293      	cmp	r3, r2
{
 80040c0:	b510      	push	{r4, lr}
  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 80040c2:	d968      	bls.n	8004196 <_ZL9GetSectorm+0xe0>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 80040c4:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 80040c8:	4291      	cmp	r1, r2
 80040ca:	d966      	bls.n	800419a <_ZL9GetSectorm+0xe4>
  {
    sector = FLASH_SECTOR_1;
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 80040cc:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 80040d0:	4291      	cmp	r1, r2
 80040d2:	d964      	bls.n	800419e <_ZL9GetSectorm+0xe8>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 80040d4:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 80040d8:	4293      	cmp	r3, r2
 80040da:	d962      	bls.n	80041a2 <_ZL9GetSectorm+0xec>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 80040dc:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 80040e0:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 80040e4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80040e8:	4291      	cmp	r1, r2
 80040ea:	d95c      	bls.n	80041a6 <_ZL9GetSectorm+0xf0>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 80040ec:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 80040f0:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80040f4:	4291      	cmp	r1, r2
 80040f6:	d958      	bls.n	80041aa <_ZL9GetSectorm+0xf4>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 80040f8:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 80040fc:	4291      	cmp	r1, r2
 80040fe:	d956      	bls.n	80041ae <_ZL9GetSectorm+0xf8>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 8004100:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 8004104:	4291      	cmp	r1, r2
 8004106:	d954      	bls.n	80041b2 <_ZL9GetSectorm+0xfc>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 8004108:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 800410c:	4291      	cmp	r1, r2
 800410e:	d952      	bls.n	80041b6 <_ZL9GetSectorm+0x100>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8004110:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8004114:	4291      	cmp	r1, r2
 8004116:	d950      	bls.n	80041ba <_ZL9GetSectorm+0x104>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8004118:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 800411c:	4291      	cmp	r1, r2
 800411e:	d94e      	bls.n	80041be <_ZL9GetSectorm+0x108>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8004120:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8004124:	4291      	cmp	r1, r2
 8004126:	d94c      	bls.n	80041c2 <_ZL9GetSectorm+0x10c>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8004128:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 800412c:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8004130:	4288      	cmp	r0, r1
 8004132:	d948      	bls.n	80041c6 <_ZL9GetSectorm+0x110>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8004134:	f5a0 4480 	sub.w	r4, r0, #16384	; 0x4000
 8004138:	428c      	cmp	r4, r1
 800413a:	d946      	bls.n	80041ca <_ZL9GetSectorm+0x114>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 800413c:	f5a0 4400 	sub.w	r4, r0, #32768	; 0x8000
 8004140:	428c      	cmp	r4, r1
 8004142:	d944      	bls.n	80041ce <_ZL9GetSectorm+0x118>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8004144:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8004148:	4288      	cmp	r0, r1
 800414a:	d942      	bls.n	80041d2 <_ZL9GetSectorm+0x11c>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 800414c:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8004150:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8004154:	4288      	cmp	r0, r1
 8004156:	d93e      	bls.n	80041d6 <_ZL9GetSectorm+0x120>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8004158:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 800415c:	4291      	cmp	r1, r2
 800415e:	d93c      	bls.n	80041da <_ZL9GetSectorm+0x124>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8004160:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8004164:	4291      	cmp	r1, r2
 8004166:	d93a      	bls.n	80041de <_ZL9GetSectorm+0x128>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8004168:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 800416c:	4291      	cmp	r1, r2
 800416e:	d938      	bls.n	80041e2 <_ZL9GetSectorm+0x12c>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8004170:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8004174:	4291      	cmp	r1, r2
 8004176:	d936      	bls.n	80041e6 <_ZL9GetSectorm+0x130>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8004178:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 800417c:	4291      	cmp	r1, r2
 800417e:	d934      	bls.n	80041ea <_ZL9GetSectorm+0x134>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8004180:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8004184:	4291      	cmp	r1, r2
 8004186:	d932      	bls.n	80041ee <_ZL9GetSectorm+0x138>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8004188:	f503 0062 	add.w	r0, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 800418c:	4290      	cmp	r0, r2
 800418e:	bf94      	ite	ls
 8004190:	2017      	movls	r0, #23
 8004192:	2000      	movhi	r0, #0
  }
  return sector;
}
 8004194:	bd10      	pop	{r4, pc}
    sector = FLASH_SECTOR_0;
 8004196:	2000      	movs	r0, #0
 8004198:	e7fc      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_1;
 800419a:	2001      	movs	r0, #1
 800419c:	e7fa      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_2;
 800419e:	2002      	movs	r0, #2
 80041a0:	e7f8      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_3;
 80041a2:	2003      	movs	r0, #3
 80041a4:	e7f6      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_4;
 80041a6:	2004      	movs	r0, #4
 80041a8:	e7f4      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_5;
 80041aa:	2005      	movs	r0, #5
 80041ac:	e7f2      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_6;
 80041ae:	2006      	movs	r0, #6
 80041b0:	e7f0      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_7;
 80041b2:	2007      	movs	r0, #7
 80041b4:	e7ee      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_8;
 80041b6:	2008      	movs	r0, #8
 80041b8:	e7ec      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_9;
 80041ba:	2009      	movs	r0, #9
 80041bc:	e7ea      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_10;
 80041be:	200a      	movs	r0, #10
 80041c0:	e7e8      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_11;
 80041c2:	200b      	movs	r0, #11
 80041c4:	e7e6      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_12;
 80041c6:	200c      	movs	r0, #12
 80041c8:	e7e4      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_13;
 80041ca:	200d      	movs	r0, #13
 80041cc:	e7e2      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_14;
 80041ce:	200e      	movs	r0, #14
 80041d0:	e7e0      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_15;
 80041d2:	200f      	movs	r0, #15
 80041d4:	e7de      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_16;
 80041d6:	2010      	movs	r0, #16
 80041d8:	e7dc      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_17;
 80041da:	2011      	movs	r0, #17
 80041dc:	e7da      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_18;
 80041de:	2012      	movs	r0, #18
 80041e0:	e7d8      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_19;
 80041e2:	2013      	movs	r0, #19
 80041e4:	e7d6      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_20;
 80041e6:	2014      	movs	r0, #20
 80041e8:	e7d4      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_21;
 80041ea:	2015      	movs	r0, #21
 80041ec:	e7d2      	b.n	8004194 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_22;
 80041ee:	2016      	movs	r0, #22
 80041f0:	e7d0      	b.n	8004194 <_ZL9GetSectorm+0xde>
	...

080041f4 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 80041f4:	b510      	push	{r4, lr}
 80041f6:	4604      	mov	r4, r0
 80041f8:	f7fe ffe6 	bl	80031c8 <_ZN15Screen2ViewBaseC1Ev>
 80041fc:	4b10      	ldr	r3, [pc, #64]	; (8004240 <_ZN11Screen2ViewC1Ev+0x4c>)
 80041fe:	6023      	str	r3, [r4, #0]
	horizontal = 320;
 8004200:	f44f 72a0 	mov.w	r2, #320	; 0x140
	tick = 0;
 8004204:	2300      	movs	r3, #0
	currentObs = 0;
 8004206:	e9c4 23a4 	strd	r2, r3, [r4, #656]	; 0x290
	jumpDis = -4;
 800420a:	f06f 0103 	mvn.w	r1, #3
 800420e:	2201      	movs	r2, #1
 8004210:	e9c4 21a6 	strd	r2, r1, [r4, #664]	; 0x298
	currentHeight = 1;
 8004214:	f8c4 22ac 	str.w	r2, [r4, #684]	; 0x2ac
	enemySpeed = 3;
 8004218:	2203      	movs	r2, #3
	obsNumber = 0;
 800421a:	e9c4 23ac 	strd	r2, r3, [r4, #688]	; 0x2b0
	MAX_HEIGHT = 70;
 800421e:	2086      	movs	r0, #134	; 0x86
 8004220:	2146      	movs	r1, #70	; 0x46
	BASE_BIRD_HEIGHT = 124;
 8004222:	227c      	movs	r2, #124	; 0x7c
	MAX_HEIGHT = 70;
 8004224:	e9c4 01a9 	strd	r0, r1, [r4, #676]	; 0x2a4
	timeJump = 0;
 8004228:	e9c4 23ae 	strd	r2, r3, [r4, #696]	; 0x2b8
	tick = 0;
 800422c:	f8c4 3274 	str.w	r3, [r4, #628]	; 0x274
	isJumping = false;
 8004230:	f884 32a0 	strb.w	r3, [r4, #672]	; 0x2a0
	counter = 0;
 8004234:	f8c4 328c 	str.w	r3, [r4, #652]	; 0x28c
	highestScore = 0;
 8004238:	f8c4 32c0 	str.w	r3, [r4, #704]	; 0x2c0
}
 800423c:	4620      	mov	r0, r4
 800423e:	bd10      	pop	{r4, pc}
 8004240:	080202d4 	.word	0x080202d4

08004244 <_Z16Flash_Write_DatamPmt>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 8004244:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004246:	4605      	mov	r5, r0
 8004248:	4616      	mov	r6, r2
 800424a:	460f      	mov	r7, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 800424c:	f000 feca 	bl	8004fe4 <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 8004250:	4628      	mov	r0, r5
 8004252:	f7ff ff30 	bl	80040b6 <_ZL9GetSectorm>
 8004256:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 8004258:	eb05 0086 	add.w	r0, r5, r6, lsl #2
 800425c:	f7ff ff2b 	bl	80040b6 <_ZL9GetSectorm>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8004260:	4b12      	ldr	r3, [pc, #72]	; (80042ac <_Z16Flash_Write_DatamPmt+0x68>)
 8004262:	2200      	movs	r2, #0
 8004264:	601a      	str	r2, [r3, #0]
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 8004266:	2202      	movs	r2, #2
 8004268:	611a      	str	r2, [r3, #16]
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 800426a:	1c42      	adds	r2, r0, #1
 800426c:	1b12      	subs	r2, r2, r4

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 800426e:	a901      	add	r1, sp, #4
 8004270:	4618      	mov	r0, r3
	  EraseInitStruct.Sector        = StartSector;
 8004272:	609c      	str	r4, [r3, #8]
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8004274:	60da      	str	r2, [r3, #12]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8004276:	f000 ffb5 	bl	80051e4 <HAL_FLASHEx_Erase>
 800427a:	4604      	mov	r4, r0
 800427c:	b118      	cbz	r0, 8004286 <_Z16Flash_Write_DatamPmt+0x42>
	    	 sofar++;
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 800427e:	f000 fecd 	bl	800501c <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 8004282:	b003      	add	sp, #12
 8004284:	bdf0      	pop	{r4, r5, r6, r7, pc}
	   while (sofar<numberofwords)
 8004286:	42a6      	cmp	r6, r4
 8004288:	eb05 0184 	add.w	r1, r5, r4, lsl #2
 800428c:	dd09      	ble.n	80042a2 <_Z16Flash_Write_DatamPmt+0x5e>
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 800428e:	f857 2024 	ldr.w	r2, [r7, r4, lsl #2]
 8004292:	2300      	movs	r3, #0
 8004294:	2002      	movs	r0, #2
 8004296:	f000 feef 	bl	8005078 <HAL_FLASH_Program>
 800429a:	2800      	cmp	r0, #0
 800429c:	d1ef      	bne.n	800427e <_Z16Flash_Write_DatamPmt+0x3a>
	    	 sofar++;
 800429e:	3401      	adds	r4, #1
	   while (sofar<numberofwords)
 80042a0:	e7f1      	b.n	8004286 <_Z16Flash_Write_DatamPmt+0x42>
	  HAL_FLASH_Lock();
 80042a2:	f000 feb1 	bl	8005008 <HAL_FLASH_Lock>
	   return 0;
 80042a6:	2000      	movs	r0, #0
 80042a8:	e7eb      	b.n	8004282 <_Z16Flash_Write_DatamPmt+0x3e>
 80042aa:	bf00      	nop
 80042ac:	200018a8 	.word	0x200018a8

080042b0 <_ZN11Screen2View17writeHighestScoreEi>:
	Flash_Read_Data(StartSectorAddress, (uint32_t *)buffer, 1);
	value = Bytes2float(buffer);
	return value;
}

void Screen2View::writeHighestScore(int score){
 80042b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	uint32_t data[3];
	data[0] = (uint32_t) score;
	Flash_Write_Data(0x081E0000, data, 3);
 80042b2:	2203      	movs	r2, #3
	data[0] = (uint32_t) score;
 80042b4:	9101      	str	r1, [sp, #4]
	Flash_Write_Data(0x081E0000, data, 3);
 80042b6:	4803      	ldr	r0, [pc, #12]	; (80042c4 <_ZN11Screen2View17writeHighestScoreEi+0x14>)
 80042b8:	a901      	add	r1, sp, #4
 80042ba:	f7ff ffc3 	bl	8004244 <_Z16Flash_Write_DatamPmt>
}
 80042be:	b005      	add	sp, #20
 80042c0:	f85d fb04 	ldr.w	pc, [sp], #4
 80042c4:	081e0000 	.word	0x081e0000

080042c8 <_Z15Flash_Read_DatamPmt>:
{
 80042c8:	b510      	push	{r4, lr}
 80042ca:	1a40      	subs	r0, r0, r1
		if (!(numberofwords--)) break;
 80042cc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80042d0:	3a01      	subs	r2, #1
 80042d2:	b292      	uxth	r2, r2
		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 80042d4:	580c      	ldr	r4, [r1, r0]
 80042d6:	f841 4b04 	str.w	r4, [r1], #4
		if (!(numberofwords--)) break;
 80042da:	429a      	cmp	r2, r3
 80042dc:	d1f8      	bne.n	80042d0 <_Z15Flash_Read_DatamPmt+0x8>
}
 80042de:	bd10      	pop	{r4, pc}

080042e0 <_ZN11Screen2View16readHighestScoreEv>:

int Screen2View::readHighestScore(){
 80042e0:	b507      	push	{r0, r1, r2, lr}
	int result;
	uint32_t data[0];
	Flash_Read_Data(0x081E0000, data, 1);
 80042e2:	4804      	ldr	r0, [pc, #16]	; (80042f4 <_ZN11Screen2View16readHighestScoreEv+0x14>)
 80042e4:	2201      	movs	r2, #1
 80042e6:	a901      	add	r1, sp, #4
 80042e8:	f7ff ffee 	bl	80042c8 <_Z15Flash_Read_DatamPmt>
	result = data[0];
	return result;
}
 80042ec:	9801      	ldr	r0, [sp, #4]
 80042ee:	b003      	add	sp, #12
 80042f0:	f85d fb04 	ldr.w	pc, [sp], #4
 80042f4:	081e0000 	.word	0x081e0000

080042f8 <_ZN11Screen2View11setupScreenEv>:
{
 80042f8:	b510      	push	{r4, lr}
 80042fa:	4604      	mov	r4, r0
    Screen2ViewBase::setupScreen();
 80042fc:	f7fe febf 	bl	800307e <_ZN15Screen2ViewBase11setupScreenEv>
 8004300:	2300      	movs	r3, #0
 8004302:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
    highestScore = readHighestScore();
 8004306:	6823      	ldr	r3, [r4, #0]
 8004308:	4620      	mov	r0, r4
 800430a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800430c:	4798      	blx	r3
    Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%d", highestScore);
 800430e:	4a10      	ldr	r2, [pc, #64]	; (8004350 <_ZN11Screen2View11setupScreenEv+0x58>)
    highestScore = readHighestScore();
 8004310:	f8c4 02c0 	str.w	r0, [r4, #704]	; 0x2c0
 8004314:	4603      	mov	r3, r0
    Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%d", highestScore);
 8004316:	210a      	movs	r1, #10
 8004318:	f504 7018 	add.w	r0, r4, #608	; 0x260
 800431c:	f00b fd9a 	bl	800fe54 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    highestScoreTextArea.invalidate();
 8004320:	f504 7000 	add.w	r0, r4, #512	; 0x200
 8004324:	f009 fe50 	bl	800dfc8 <_ZNK8touchgfx8Drawable10invalidateEv>
    Unicode::snprintf(textAreaPointBuffer, TEXTAREAPOINT_SIZE, "%d", counter);
 8004328:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 800432c:	4a08      	ldr	r2, [pc, #32]	; (8004350 <_ZN11Screen2View11setupScreenEv+0x58>)
 800432e:	210a      	movs	r1, #10
 8004330:	f504 7013 	add.w	r0, r4, #588	; 0x24c
 8004334:	f00b fd8e 	bl	800fe54 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaPoint.invalidate();
 8004338:	f504 70da 	add.w	r0, r4, #436	; 0x1b4
 800433c:	f009 fe44 	bl	800dfc8 <_ZNK8touchgfx8Drawable10invalidateEv>
        rect.x = x;
 8004340:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004344:	f8a4 318c 	strh.w	r3, [r4, #396]	; 0x18c
 8004348:	f8a4 3150 	strh.w	r3, [r4, #336]	; 0x150
}
 800434c:	bd10      	pop	{r4, pc}
 800434e:	bf00      	nop
 8004350:	080202c8 	.word	0x080202c8

08004354 <_ZN11Screen2View15handleTickEventEv>:
	tick++;
 8004354:	f8d0 3274 	ldr.w	r3, [r0, #628]	; 0x274
 8004358:	3301      	adds	r3, #1
void Screen2View::handleTickEvent(){
 800435a:	b510      	push	{r4, lr}
	tick++;
 800435c:	f8c0 3274 	str.w	r3, [r0, #628]	; 0x274
	bool gameOver = checkCollision();
 8004360:	6803      	ldr	r3, [r0, #0]
 8004362:	6b9b      	ldr	r3, [r3, #56]	; 0x38
void Screen2View::handleTickEvent(){
 8004364:	4604      	mov	r4, r0
	bool gameOver = checkCollision();
 8004366:	4798      	blx	r3
	if (gameOver){
 8004368:	b1a8      	cbz	r0, 8004396 <_ZN11Screen2View15handleTickEventEv+0x42>
		if(counter > highestScore) highestScore = counter;
 800436a:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 800436e:	f8d4 22c0 	ldr.w	r2, [r4, #704]	; 0x2c0
 8004372:	4293      	cmp	r3, r2

    void saveScore(int savedScore){
    	model->saveScore(savedScore);
 8004374:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8004376:	bfc8      	it	gt
 8004378:	f8c4 32c0 	strgt.w	r3, [r4, #704]	; 0x2c0
 800437c:	6892      	ldr	r2, [r2, #8]
		presenter->saveHighestScore(highestScore);
 800437e:	f8d4 12c0 	ldr.w	r1, [r4, #704]	; 0x2c0
    }

    void tick();

    void saveScore(int savedScore){
    	score = savedScore;
 8004382:	6053      	str	r3, [r2, #4]
		writeHighestScore(highestScore);
 8004384:	6823      	ldr	r3, [r4, #0]

    int getScore(){
    	return score;
    }
    void saveHighestScore(int savedHighestScore){
    	highestScore = savedHighestScore;
 8004386:	6091      	str	r1, [r2, #8]
 8004388:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800438a:	4620      	mov	r0, r4
 800438c:	4798      	blx	r3
		static_cast<FrontendApplication*>(Application::getInstance())->gotoScreen3ScreenNoTransition();;
 800438e:	f008 fd33 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
 8004392:	f7fe fbf3 	bl	8002b7c <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv>
	uint32_t count = osMessageQueueGetCount(buttonQueueHandle);
 8004396:	4b37      	ldr	r3, [pc, #220]	; (8004474 <_ZN11Screen2View15handleTickEventEv+0x120>)
 8004398:	6818      	ldr	r0, [r3, #0]
 800439a:	f003 fa5c 	bl	8007856 <osMessageQueueGetCount>
	if(count > 0){
 800439e:	4601      	mov	r1, r0
 80043a0:	b118      	cbz	r0, 80043aa <_ZN11Screen2View15handleTickEventEv+0x56>
		handleBtnEvent(count);
 80043a2:	6823      	ldr	r3, [r4, #0]
 80043a4:	4620      	mov	r0, r4
 80043a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80043a8:	4798      	blx	r3
		cacti1.setX(horizontal);
 80043aa:	e9d4 32a4 	ldrd	r3, r2, [r4, #656]	; 0x290
	switch (currentObs){
 80043ae:	2a00      	cmp	r2, #0
 80043b0:	d051      	beq.n	8004456 <_ZN11Screen2View15handleTickEventEv+0x102>
 80043b2:	2a01      	cmp	r2, #1
 80043b4:	d052      	beq.n	800445c <_ZN11Screen2View15handleTickEventEv+0x108>
	horizontal -= enemySpeed;
 80043b6:	f8d4 22b0 	ldr.w	r2, [r4, #688]	; 0x2b0
 80043ba:	1a9b      	subs	r3, r3, r2
 80043bc:	f8c4 3290 	str.w	r3, [r4, #656]	; 0x290
	if (horizontal < -50){
 80043c0:	3332      	adds	r3, #50	; 0x32
 80043c2:	da38      	bge.n	8004436 <_ZN11Screen2View15handleTickEventEv+0xe2>
		currentObs = rand() % 2;
 80043c4:	6823      	ldr	r3, [r4, #0]
 80043c6:	4620      	mov	r0, r4
 80043c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80043ca:	4798      	blx	r3
 80043cc:	2800      	cmp	r0, #0
 80043ce:	f000 0001 	and.w	r0, r0, #1
 80043d2:	bfb8      	it	lt
 80043d4:	4240      	neglt	r0, r0
		if (currentObs == 1){ // diversify height of bird
 80043d6:	2801      	cmp	r0, #1
		currentObs = rand() % 2;
 80043d8:	f8c4 0294 	str.w	r0, [r4, #660]	; 0x294
		if (currentObs == 1){ // diversify height of bird
 80043dc:	d113      	bne.n	8004406 <_ZN11Screen2View15handleTickEventEv+0xb2>
			switch (rand() % 3){
 80043de:	6823      	ldr	r3, [r4, #0]
 80043e0:	4620      	mov	r0, r4
 80043e2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80043e4:	4798      	blx	r3
 80043e6:	2303      	movs	r3, #3
 80043e8:	fb90 f3f3 	sdiv	r3, r0, r3
 80043ec:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80043f0:	1ac0      	subs	r0, r0, r3
 80043f2:	b200      	sxth	r0, r0
 80043f4:	2801      	cmp	r0, #1
 80043f6:	d034      	beq.n	8004462 <_ZN11Screen2View15handleTickEventEv+0x10e>
 80043f8:	2802      	cmp	r0, #2
 80043fa:	d036      	beq.n	800446a <_ZN11Screen2View15handleTickEventEv+0x116>
 80043fc:	b918      	cbnz	r0, 8004406 <_ZN11Screen2View15handleTickEventEv+0xb2>
					bird.setY(BASE_BIRD_HEIGHT);
 80043fe:	f8d4 32b8 	ldr.w	r3, [r4, #696]	; 0x2b8
        rect.y = y;
 8004402:	f8a4 3152 	strh.w	r3, [r4, #338]	; 0x152
		horizontal = 320;
 8004406:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800440a:	f8c4 3290 	str.w	r3, [r4, #656]	; 0x290
		obsNumber++;
 800440e:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
 8004412:	2207      	movs	r2, #7
 8004414:	3301      	adds	r3, #1
 8004416:	fbb3 f1f2 	udiv	r1, r3, r2
 800441a:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
		if (obsNumber % 7 == 0){
 800441e:	428b      	cmp	r3, r1
		obsNumber++;
 8004420:	f8c4 32b4 	str.w	r3, [r4, #692]	; 0x2b4
		if (obsNumber % 7 == 0){
 8004424:	d107      	bne.n	8004436 <_ZN11Screen2View15handleTickEventEv+0xe2>
			enemySpeed++;
 8004426:	f8d4 32b0 	ldr.w	r3, [r4, #688]	; 0x2b0
 800442a:	3301      	adds	r3, #1
 800442c:	4293      	cmp	r3, r2
 800442e:	bfd8      	it	le
 8004430:	461a      	movle	r2, r3
 8004432:	f8c4 22b0 	str.w	r2, [r4, #688]	; 0x2b0
	checkScore();
 8004436:	6823      	ldr	r3, [r4, #0]
 8004438:	4620      	mov	r0, r4
 800443a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800443c:	4798      	blx	r3
	if (isJumping){
 800443e:	f894 32a0 	ldrb.w	r3, [r4, #672]	; 0x2a0
 8004442:	b11b      	cbz	r3, 800444c <_ZN11Screen2View15handleTickEventEv+0xf8>
		dinoJump();
 8004444:	6823      	ldr	r3, [r4, #0]
 8004446:	4620      	mov	r0, r4
 8004448:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800444a:	4798      	blx	r3
     *
     * @see Container::invalidate
     */
    void invalidate() const
    {
        container.invalidate();
 800444c:	1d20      	adds	r0, r4, #4
}
 800444e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004452:	f009 bdb9 	b.w	800dfc8 <_ZNK8touchgfx8Drawable10invalidateEv>
		cacti1.setX(horizontal);
 8004456:	f8a4 318c 	strh.w	r3, [r4, #396]	; 0x18c
    }
 800445a:	e7ac      	b.n	80043b6 <_ZN11Screen2View15handleTickEventEv+0x62>
		bird.setX(horizontal);
 800445c:	f8a4 3150 	strh.w	r3, [r4, #336]	; 0x150
 8004460:	e7a9      	b.n	80043b6 <_ZN11Screen2View15handleTickEventEv+0x62>
					bird.setY(BASE_BIRD_HEIGHT - 22);
 8004462:	f8d4 32b8 	ldr.w	r3, [r4, #696]	; 0x2b8
 8004466:	3b16      	subs	r3, #22
 8004468:	e7cb      	b.n	8004402 <_ZN11Screen2View15handleTickEventEv+0xae>
					bird.setY(BASE_BIRD_HEIGHT + 25);
 800446a:	f8d4 32b8 	ldr.w	r3, [r4, #696]	; 0x2b8
 800446e:	3319      	adds	r3, #25
 8004470:	e7c7      	b.n	8004402 <_ZN11Screen2View15handleTickEventEv+0xae>
 8004472:	bf00      	nop
 8004474:	20001550 	.word	0x20001550

08004478 <_ZN11Screen2View10checkScoreEv>:
void Screen2View::checkScore(){
 8004478:	4a19      	ldr	r2, [pc, #100]	; (80044e0 <_ZN11Screen2View10checkScoreEv+0x68>)
 800447a:	f8d0 3274 	ldr.w	r3, [r0, #628]	; 0x274
 800447e:	4353      	muls	r3, r2
	if(tick % 5 == 0) counter++;
 8004480:	f1b3 3f33 	cmp.w	r3, #858993459	; 0x33333333
 8004484:	bf98      	it	ls
 8004486:	f8d0 328c 	ldrls.w	r3, [r0, #652]	; 0x28c
	if(counter < highestScore){
 800448a:	f8d0 22c0 	ldr.w	r2, [r0, #704]	; 0x2c0
	if(tick % 5 == 0) counter++;
 800448e:	bf98      	it	ls
 8004490:	3301      	addls	r3, #1
void Screen2View::checkScore(){
 8004492:	b570      	push	{r4, r5, r6, lr}
	if(tick % 5 == 0) counter++;
 8004494:	bf98      	it	ls
 8004496:	f8c0 328c 	strls.w	r3, [r0, #652]	; 0x28c
	if(counter < highestScore){
 800449a:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800449e:	4293      	cmp	r3, r2
void Screen2View::checkScore(){
 80044a0:	4604      	mov	r4, r0
		Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%d", highestScore);
 80044a2:	f500 7618 	add.w	r6, r0, #608	; 0x260
		highestScoreTextArea.invalidate();
 80044a6:	f500 7500 	add.w	r5, r0, #512	; 0x200
	if(counter < highestScore){
 80044aa:	da15      	bge.n	80044d8 <_ZN11Screen2View10checkScoreEv+0x60>
		Unicode::snprintf(textAreaPointBuffer, TEXTAREAPOINT_SIZE, "%d", counter);
 80044ac:	4a0d      	ldr	r2, [pc, #52]	; (80044e4 <_ZN11Screen2View10checkScoreEv+0x6c>)
 80044ae:	210a      	movs	r1, #10
 80044b0:	f500 7013 	add.w	r0, r0, #588	; 0x24c
 80044b4:	f00b fcce 	bl	800fe54 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		textAreaPoint.invalidate();
 80044b8:	f504 70da 	add.w	r0, r4, #436	; 0x1b4
 80044bc:	f009 fd84 	bl	800dfc8 <_ZNK8touchgfx8Drawable10invalidateEv>
		Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%d", highestScore);
 80044c0:	f8d4 32c0 	ldr.w	r3, [r4, #704]	; 0x2c0
		Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%d", counter);
 80044c4:	4a07      	ldr	r2, [pc, #28]	; (80044e4 <_ZN11Screen2View10checkScoreEv+0x6c>)
 80044c6:	4630      	mov	r0, r6
 80044c8:	210a      	movs	r1, #10
 80044ca:	f00b fcc3 	bl	800fe54 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		highestScoreTextArea.invalidate();
 80044ce:	4628      	mov	r0, r5
}
 80044d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		highestScoreTextArea.invalidate();
 80044d4:	f009 bd78 	b.w	800dfc8 <_ZNK8touchgfx8Drawable10invalidateEv>
        visible = vis;
 80044d8:	2200      	movs	r2, #0
 80044da:	f880 21d9 	strb.w	r2, [r0, #473]	; 0x1d9
 80044de:	e7f1      	b.n	80044c4 <_ZN11Screen2View10checkScoreEv+0x4c>
 80044e0:	cccccccd 	.word	0xcccccccd
 80044e4:	080202c8 	.word	0x080202c8

080044e8 <_ZN11Screen2View8dinoJumpEv>:
void Screen2View::dinoJump(){
 80044e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80044ea:	4604      	mov	r4, r0
 80044ec:	2701      	movs	r7, #1
 80044ee:	2600      	movs	r6, #0
 80044f0:	f880 60f9 	strb.w	r6, [r0, #249]	; 0xf9
 80044f4:	f880 7135 	strb.w	r7, [r0, #309]	; 0x135
	dino.stopAnimation();
 80044f8:	f500 7088 	add.w	r0, r0, #272	; 0x110
 80044fc:	9001      	str	r0, [sp, #4]
 80044fe:	f006 fae8 	bl	800aad2 <_ZN8touchgfx13AnimatedImage13stopAnimationEv>
	timeJump++;
 8004502:	f8d4 32bc 	ldr.w	r3, [r4, #700]	; 0x2bc
	currentHeight = round(BASE_HEIGHT - a*timeJump*timeJump/100 - v0*timeJump/10);//y = a*t*t + v0*t+y0
 8004506:	f8d4 22a4 	ldr.w	r2, [r4, #676]	; 0x2a4
	if (dino.getY() >= BASE_HEIGHT){
 800450a:	9801      	ldr	r0, [sp, #4]
	timeJump++;
 800450c:	443b      	add	r3, r7
	currentHeight = round(BASE_HEIGHT - a*timeJump*timeJump/100 - v0*timeJump/10);//y = a*t*t + v0*t+y0
 800450e:	fb03 f503 	mul.w	r5, r3, r3
 8004512:	f06f 0109 	mvn.w	r1, #9
 8004516:	f06f 0c63 	mvn.w	ip, #99	; 0x63
 800451a:	434d      	muls	r5, r1
 800451c:	fb95 f5fc 	sdiv	r5, r5, ip
 8004520:	f04f 0c32 	mov.w	ip, #50	; 0x32
 8004524:	4415      	add	r5, r2
	timeJump++;
 8004526:	f8c4 32bc 	str.w	r3, [r4, #700]	; 0x2bc
	currentHeight = round(BASE_HEIGHT - a*timeJump*timeJump/100 - v0*timeJump/10);//y = a*t*t + v0*t+y0
 800452a:	fb0c f303 	mul.w	r3, ip, r3
 800452e:	fb93 f3f1 	sdiv	r3, r3, r1
 8004532:	441d      	add	r5, r3
 8004534:	f8c4 52ac 	str.w	r5, [r4, #684]	; 0x2ac
	dino.setY(currentHeight);
 8004538:	b22d      	sxth	r5, r5
	if (dino.getY() >= BASE_HEIGHT){
 800453a:	42aa      	cmp	r2, r5
 800453c:	dd03      	ble.n	8004546 <_ZN11Screen2View8dinoJumpEv+0x5e>
        rect.y = y;
 800453e:	f8a4 5116 	strh.w	r5, [r4, #278]	; 0x116
}
 8004542:	b003      	add	sp, #12
 8004544:	bdf0      	pop	{r4, r5, r6, r7, pc}
		dino.setY(BASE_HEIGHT);
 8004546:	f8a4 2116 	strh.w	r2, [r4, #278]	; 0x116
		dino.startAnimation(false, true, true);
 800454a:	463b      	mov	r3, r7
 800454c:	463a      	mov	r2, r7
 800454e:	4631      	mov	r1, r6
 8004550:	f006 fadf 	bl	800ab12 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
		isJumping = false;
 8004554:	f884 62a0 	strb.w	r6, [r4, #672]	; 0x2a0
		currentHeight = 1;
 8004558:	f8c4 72ac 	str.w	r7, [r4, #684]	; 0x2ac
}
 800455c:	e7f1      	b.n	8004542 <_ZN11Screen2View8dinoJumpEv+0x5a>

0800455e <_ZN11Screen2View16handleClickEventERKN8touchgfx10ClickEventE>:
void Screen2View::handleClickEvent(const ClickEvent& event){
 800455e:	b538      	push	{r3, r4, r5, lr}
 8004560:	460d      	mov	r5, r1
 8004562:	4604      	mov	r4, r0
	Screen2ViewBase::handleClickEvent(event);
 8004564:	f009 fec2 	bl	800e2ec <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8004568:	792b      	ldrb	r3, [r5, #4]
	if (event.getType() == ClickEvent::PRESSED){
 800456a:	b92b      	cbnz	r3, 8004578 <_ZN11Screen2View16handleClickEventERKN8touchgfx10ClickEventE+0x1a>
        visible = vis;
 800456c:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 8004570:	2301      	movs	r3, #1
 8004572:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
}
 8004576:	bd38      	pop	{r3, r4, r5, pc}
	if (event.getType() == ClickEvent::RELEASED){
 8004578:	2b01      	cmp	r3, #1
 800457a:	d1fc      	bne.n	8004576 <_ZN11Screen2View16handleClickEventERKN8touchgfx10ClickEventE+0x18>
 800457c:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 8004580:	2300      	movs	r3, #0
 8004582:	e7f6      	b.n	8004572 <_ZN11Screen2View16handleClickEventERKN8touchgfx10ClickEventE+0x14>

08004584 <_ZN11Screen2View18handleGestureEventERKN8touchgfx12GestureEventE>:
void Screen2View::handleGestureEvent(const GestureEvent& event){
 8004584:	b538      	push	{r3, r4, r5, lr}
 8004586:	460d      	mov	r5, r1
 8004588:	4604      	mov	r4, r0
	Screen2ViewBase::handleGestureEvent(event);
 800458a:	f009 fe83 	bl	800e294 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>
	if (event.getType() == GestureEvent::SWIPE_VERTICAL){
 800458e:	792b      	ldrb	r3, [r5, #4]
 8004590:	2b01      	cmp	r3, #1
			timeJump = 0;
 8004592:	bf02      	ittt	eq
 8004594:	2200      	moveq	r2, #0
 8004596:	f8c4 22bc 	streq.w	r2, [r4, #700]	; 0x2bc
			isJumping = true;
 800459a:	f884 32a0 	strbeq.w	r3, [r4, #672]	; 0x2a0
}
 800459e:	bd38      	pop	{r3, r4, r5, pc}

080045a0 <_ZN16Screen3PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen3Presenter() {}
 80045a0:	4770      	bx	lr

080045a2 <_ZThn4_N16Screen3PresenterD1Ev>:
 80045a2:	3804      	subs	r0, #4
 80045a4:	4770      	bx	lr

080045a6 <_ZN16Screen3Presenter10deactivateEv>:
}

void Screen3Presenter::activate()
{

}
 80045a6:	4770      	bx	lr

080045a8 <_ZN16Screen3PresenterD0Ev>:
 80045a8:	b510      	push	{r4, lr}
 80045aa:	2110      	movs	r1, #16
 80045ac:	4604      	mov	r4, r0
 80045ae:	f019 f944 	bl	801d83a <_ZdlPvj>
 80045b2:	4620      	mov	r0, r4
 80045b4:	bd10      	pop	{r4, pc}

080045b6 <_ZThn4_N16Screen3PresenterD0Ev>:
 80045b6:	f1a0 0004 	sub.w	r0, r0, #4
 80045ba:	e7f5      	b.n	80045a8 <_ZN16Screen3PresenterD0Ev>

080045bc <_ZN16Screen3PresenterC1ER11Screen3View>:
Screen3Presenter::Screen3Presenter(Screen3View& v)
 80045bc:	b510      	push	{r4, lr}
 80045be:	2200      	movs	r2, #0
 80045c0:	6082      	str	r2, [r0, #8]
    : view(v)
 80045c2:	4a04      	ldr	r2, [pc, #16]	; (80045d4 <_ZN16Screen3PresenterC1ER11Screen3View+0x18>)
 80045c4:	60c1      	str	r1, [r0, #12]
 80045c6:	f102 0408 	add.w	r4, r2, #8
 80045ca:	3220      	adds	r2, #32
 80045cc:	6004      	str	r4, [r0, #0]
 80045ce:	6042      	str	r2, [r0, #4]
}
 80045d0:	bd10      	pop	{r4, pc}
 80045d2:	bf00      	nop
 80045d4:	0802031c 	.word	0x0802031c

080045d8 <_ZN11Screen3View14tearDownScreenEv>:
}

void Screen3View::tearDownScreen()
{
    Screen3ViewBase::tearDownScreen();
}
 80045d8:	4770      	bx	lr
	...

080045dc <_ZN11Screen3ViewD1Ev>:

class Screen3View : public Screen3ViewBase
{
public:
    Screen3View();
    virtual ~Screen3View() {}
 80045dc:	b510      	push	{r4, lr}
 80045de:	4b03      	ldr	r3, [pc, #12]	; (80045ec <_ZN11Screen3ViewD1Ev+0x10>)
 80045e0:	6003      	str	r3, [r0, #0]
 80045e2:	4604      	mov	r4, r0
 80045e4:	f7fe ffae 	bl	8003544 <_ZN15Screen3ViewBaseD1Ev>
 80045e8:	4620      	mov	r0, r4
 80045ea:	bd10      	pop	{r4, pc}
 80045ec:	0802034c 	.word	0x0802034c

080045f0 <_ZN11Screen3ViewD0Ev>:
 80045f0:	b510      	push	{r4, lr}
 80045f2:	4604      	mov	r4, r0
 80045f4:	f7ff fff2 	bl	80045dc <_ZN11Screen3ViewD1Ev>
 80045f8:	4620      	mov	r0, r4
 80045fa:	f44f 7143 	mov.w	r1, #780	; 0x30c
 80045fe:	f019 f91c 	bl	801d83a <_ZdlPvj>
 8004602:	4620      	mov	r0, r4
 8004604:	bd10      	pop	{r4, pc}
	...

08004608 <_ZN11Screen3ViewC1Ev>:
Screen3View::Screen3View()
 8004608:	b510      	push	{r4, lr}
 800460a:	4604      	mov	r4, r0
 800460c:	f7ff f802 	bl	8003614 <_ZN15Screen3ViewBaseC1Ev>
 8004610:	4b03      	ldr	r3, [pc, #12]	; (8004620 <_ZN11Screen3ViewC1Ev+0x18>)
 8004612:	6023      	str	r3, [r4, #0]
	score = 0;
 8004614:	2300      	movs	r3, #0
 8004616:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
}
 800461a:	4620      	mov	r0, r4
 800461c:	bd10      	pop	{r4, pc}
 800461e:	bf00      	nop
 8004620:	0802034c 	.word	0x0802034c

08004624 <_ZN11Screen3View11setupScreenEv>:
{
 8004624:	b510      	push	{r4, lr}
 8004626:	4604      	mov	r4, r0
    Screen3ViewBase::setupScreen();
 8004628:	f7fe ff8d 	bl	8003546 <_ZN15Screen3ViewBase11setupScreenEv>

    int getScore(){
    	return model->getScore();
 800462c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", score);
 800462e:	4a06      	ldr	r2, [pc, #24]	; (8004648 <_ZN11Screen3View11setupScreenEv+0x24>)
    	return score;
 8004630:	689b      	ldr	r3, [r3, #8]
 8004632:	685b      	ldr	r3, [r3, #4]
    score = presenter->getScore();
 8004634:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", score);
 8004638:	f504 7039 	add.w	r0, r4, #740	; 0x2e4
 800463c:	210a      	movs	r1, #10
}
 800463e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", score);
 8004642:	f00b bc07 	b.w	800fe54 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8004646:	bf00      	nop
 8004648:	080202c8 	.word	0x080202c8

0800464c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800464c:	20f0      	movs	r0, #240	; 0xf0
 800464e:	4770      	bx	lr

08004650 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8004650:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8004654:	4770      	bx	lr

08004656 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8004656:	2029      	movs	r0, #41	; 0x29
 8004658:	f7fd b9c0 	b.w	80019dc <LCD_IO_WriteReg>

0800465c <ili9341_DisplayOff>:
 800465c:	2028      	movs	r0, #40	; 0x28
 800465e:	f7fd b9bd 	b.w	80019dc <LCD_IO_WriteReg>

08004662 <ili9341_Init>:
{
 8004662:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8004664:	f7fd f98e 	bl	8001984 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8004668:	20ca      	movs	r0, #202	; 0xca
 800466a:	f7fd f9b7 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800466e:	20c3      	movs	r0, #195	; 0xc3
 8004670:	f7fd f998 	bl	80019a4 <LCD_IO_WriteData>
 8004674:	2008      	movs	r0, #8
 8004676:	f7fd f995 	bl	80019a4 <LCD_IO_WriteData>
 800467a:	2050      	movs	r0, #80	; 0x50
 800467c:	f7fd f992 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004680:	20cf      	movs	r0, #207	; 0xcf
 8004682:	f7fd f9ab 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004686:	2000      	movs	r0, #0
 8004688:	f7fd f98c 	bl	80019a4 <LCD_IO_WriteData>
 800468c:	20c1      	movs	r0, #193	; 0xc1
 800468e:	f7fd f989 	bl	80019a4 <LCD_IO_WriteData>
 8004692:	2030      	movs	r0, #48	; 0x30
 8004694:	f7fd f986 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004698:	20ed      	movs	r0, #237	; 0xed
 800469a:	f7fd f99f 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800469e:	2064      	movs	r0, #100	; 0x64
 80046a0:	f7fd f980 	bl	80019a4 <LCD_IO_WriteData>
 80046a4:	2003      	movs	r0, #3
 80046a6:	f7fd f97d 	bl	80019a4 <LCD_IO_WriteData>
 80046aa:	2012      	movs	r0, #18
 80046ac:	f7fd f97a 	bl	80019a4 <LCD_IO_WriteData>
 80046b0:	2081      	movs	r0, #129	; 0x81
 80046b2:	f7fd f977 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80046b6:	20e8      	movs	r0, #232	; 0xe8
 80046b8:	f7fd f990 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80046bc:	2085      	movs	r0, #133	; 0x85
 80046be:	f7fd f971 	bl	80019a4 <LCD_IO_WriteData>
 80046c2:	2000      	movs	r0, #0
 80046c4:	f7fd f96e 	bl	80019a4 <LCD_IO_WriteData>
 80046c8:	2078      	movs	r0, #120	; 0x78
 80046ca:	f7fd f96b 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80046ce:	20cb      	movs	r0, #203	; 0xcb
 80046d0:	f7fd f984 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80046d4:	2039      	movs	r0, #57	; 0x39
 80046d6:	f7fd f965 	bl	80019a4 <LCD_IO_WriteData>
 80046da:	202c      	movs	r0, #44	; 0x2c
 80046dc:	f7fd f962 	bl	80019a4 <LCD_IO_WriteData>
 80046e0:	2000      	movs	r0, #0
 80046e2:	f7fd f95f 	bl	80019a4 <LCD_IO_WriteData>
 80046e6:	2034      	movs	r0, #52	; 0x34
 80046e8:	f7fd f95c 	bl	80019a4 <LCD_IO_WriteData>
 80046ec:	2002      	movs	r0, #2
 80046ee:	f7fd f959 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80046f2:	20f7      	movs	r0, #247	; 0xf7
 80046f4:	f7fd f972 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80046f8:	2020      	movs	r0, #32
 80046fa:	f7fd f953 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80046fe:	20ea      	movs	r0, #234	; 0xea
 8004700:	f7fd f96c 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004704:	2000      	movs	r0, #0
 8004706:	f7fd f94d 	bl	80019a4 <LCD_IO_WriteData>
 800470a:	2000      	movs	r0, #0
 800470c:	f7fd f94a 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004710:	20b1      	movs	r0, #177	; 0xb1
 8004712:	f7fd f963 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004716:	2000      	movs	r0, #0
 8004718:	f7fd f944 	bl	80019a4 <LCD_IO_WriteData>
 800471c:	201b      	movs	r0, #27
 800471e:	f7fd f941 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004722:	20b6      	movs	r0, #182	; 0xb6
 8004724:	f7fd f95a 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004728:	200a      	movs	r0, #10
 800472a:	f7fd f93b 	bl	80019a4 <LCD_IO_WriteData>
 800472e:	20a2      	movs	r0, #162	; 0xa2
 8004730:	f7fd f938 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004734:	20c0      	movs	r0, #192	; 0xc0
 8004736:	f7fd f951 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800473a:	2010      	movs	r0, #16
 800473c:	f7fd f932 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004740:	20c1      	movs	r0, #193	; 0xc1
 8004742:	f7fd f94b 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004746:	2010      	movs	r0, #16
 8004748:	f7fd f92c 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800474c:	20c5      	movs	r0, #197	; 0xc5
 800474e:	f7fd f945 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004752:	2045      	movs	r0, #69	; 0x45
 8004754:	f7fd f926 	bl	80019a4 <LCD_IO_WriteData>
 8004758:	2015      	movs	r0, #21
 800475a:	f7fd f923 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800475e:	20c7      	movs	r0, #199	; 0xc7
 8004760:	f7fd f93c 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004764:	2090      	movs	r0, #144	; 0x90
 8004766:	f7fd f91d 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800476a:	2036      	movs	r0, #54	; 0x36
 800476c:	f7fd f936 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004770:	20c8      	movs	r0, #200	; 0xc8
 8004772:	f7fd f917 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004776:	20f2      	movs	r0, #242	; 0xf2
 8004778:	f7fd f930 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800477c:	2000      	movs	r0, #0
 800477e:	f7fd f911 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004782:	20b0      	movs	r0, #176	; 0xb0
 8004784:	f7fd f92a 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004788:	20c2      	movs	r0, #194	; 0xc2
 800478a:	f7fd f90b 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800478e:	20b6      	movs	r0, #182	; 0xb6
 8004790:	f7fd f924 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004794:	200a      	movs	r0, #10
 8004796:	f7fd f905 	bl	80019a4 <LCD_IO_WriteData>
 800479a:	20a7      	movs	r0, #167	; 0xa7
 800479c:	f7fd f902 	bl	80019a4 <LCD_IO_WriteData>
 80047a0:	2027      	movs	r0, #39	; 0x27
 80047a2:	f7fd f8ff 	bl	80019a4 <LCD_IO_WriteData>
 80047a6:	2004      	movs	r0, #4
 80047a8:	f7fd f8fc 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047ac:	202a      	movs	r0, #42	; 0x2a
 80047ae:	f7fd f915 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047b2:	2000      	movs	r0, #0
 80047b4:	f7fd f8f6 	bl	80019a4 <LCD_IO_WriteData>
 80047b8:	2000      	movs	r0, #0
 80047ba:	f7fd f8f3 	bl	80019a4 <LCD_IO_WriteData>
 80047be:	2000      	movs	r0, #0
 80047c0:	f7fd f8f0 	bl	80019a4 <LCD_IO_WriteData>
 80047c4:	20ef      	movs	r0, #239	; 0xef
 80047c6:	f7fd f8ed 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047ca:	202b      	movs	r0, #43	; 0x2b
 80047cc:	f7fd f906 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047d0:	2000      	movs	r0, #0
 80047d2:	f7fd f8e7 	bl	80019a4 <LCD_IO_WriteData>
 80047d6:	2000      	movs	r0, #0
 80047d8:	f7fd f8e4 	bl	80019a4 <LCD_IO_WriteData>
 80047dc:	2001      	movs	r0, #1
 80047de:	f7fd f8e1 	bl	80019a4 <LCD_IO_WriteData>
 80047e2:	203f      	movs	r0, #63	; 0x3f
 80047e4:	f7fd f8de 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047e8:	20f6      	movs	r0, #246	; 0xf6
 80047ea:	f7fd f8f7 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047ee:	2001      	movs	r0, #1
 80047f0:	f7fd f8d8 	bl	80019a4 <LCD_IO_WriteData>
 80047f4:	2000      	movs	r0, #0
 80047f6:	f7fd f8d5 	bl	80019a4 <LCD_IO_WriteData>
 80047fa:	2006      	movs	r0, #6
 80047fc:	f7fd f8d2 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004800:	202c      	movs	r0, #44	; 0x2c
 8004802:	f7fd f8eb 	bl	80019dc <LCD_IO_WriteReg>
  LCD_Delay(200);
 8004806:	20c8      	movs	r0, #200	; 0xc8
 8004808:	f7fd f936 	bl	8001a78 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800480c:	2026      	movs	r0, #38	; 0x26
 800480e:	f7fd f8e5 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004812:	2001      	movs	r0, #1
 8004814:	f7fd f8c6 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004818:	20e0      	movs	r0, #224	; 0xe0
 800481a:	f7fd f8df 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800481e:	200f      	movs	r0, #15
 8004820:	f7fd f8c0 	bl	80019a4 <LCD_IO_WriteData>
 8004824:	2029      	movs	r0, #41	; 0x29
 8004826:	f7fd f8bd 	bl	80019a4 <LCD_IO_WriteData>
 800482a:	2024      	movs	r0, #36	; 0x24
 800482c:	f7fd f8ba 	bl	80019a4 <LCD_IO_WriteData>
 8004830:	200c      	movs	r0, #12
 8004832:	f7fd f8b7 	bl	80019a4 <LCD_IO_WriteData>
 8004836:	200e      	movs	r0, #14
 8004838:	f7fd f8b4 	bl	80019a4 <LCD_IO_WriteData>
 800483c:	2009      	movs	r0, #9
 800483e:	f7fd f8b1 	bl	80019a4 <LCD_IO_WriteData>
 8004842:	204e      	movs	r0, #78	; 0x4e
 8004844:	f7fd f8ae 	bl	80019a4 <LCD_IO_WriteData>
 8004848:	2078      	movs	r0, #120	; 0x78
 800484a:	f7fd f8ab 	bl	80019a4 <LCD_IO_WriteData>
 800484e:	203c      	movs	r0, #60	; 0x3c
 8004850:	f7fd f8a8 	bl	80019a4 <LCD_IO_WriteData>
 8004854:	2009      	movs	r0, #9
 8004856:	f7fd f8a5 	bl	80019a4 <LCD_IO_WriteData>
 800485a:	2013      	movs	r0, #19
 800485c:	f7fd f8a2 	bl	80019a4 <LCD_IO_WriteData>
 8004860:	2005      	movs	r0, #5
 8004862:	f7fd f89f 	bl	80019a4 <LCD_IO_WriteData>
 8004866:	2017      	movs	r0, #23
 8004868:	f7fd f89c 	bl	80019a4 <LCD_IO_WriteData>
 800486c:	2011      	movs	r0, #17
 800486e:	f7fd f899 	bl	80019a4 <LCD_IO_WriteData>
 8004872:	2000      	movs	r0, #0
 8004874:	f7fd f896 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004878:	20e1      	movs	r0, #225	; 0xe1
 800487a:	f7fd f8af 	bl	80019dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800487e:	2000      	movs	r0, #0
 8004880:	f7fd f890 	bl	80019a4 <LCD_IO_WriteData>
 8004884:	2016      	movs	r0, #22
 8004886:	f7fd f88d 	bl	80019a4 <LCD_IO_WriteData>
 800488a:	201b      	movs	r0, #27
 800488c:	f7fd f88a 	bl	80019a4 <LCD_IO_WriteData>
 8004890:	2004      	movs	r0, #4
 8004892:	f7fd f887 	bl	80019a4 <LCD_IO_WriteData>
 8004896:	2011      	movs	r0, #17
 8004898:	f7fd f884 	bl	80019a4 <LCD_IO_WriteData>
 800489c:	2007      	movs	r0, #7
 800489e:	f7fd f881 	bl	80019a4 <LCD_IO_WriteData>
 80048a2:	2031      	movs	r0, #49	; 0x31
 80048a4:	f7fd f87e 	bl	80019a4 <LCD_IO_WriteData>
 80048a8:	2033      	movs	r0, #51	; 0x33
 80048aa:	f7fd f87b 	bl	80019a4 <LCD_IO_WriteData>
 80048ae:	2042      	movs	r0, #66	; 0x42
 80048b0:	f7fd f878 	bl	80019a4 <LCD_IO_WriteData>
 80048b4:	2005      	movs	r0, #5
 80048b6:	f7fd f875 	bl	80019a4 <LCD_IO_WriteData>
 80048ba:	200c      	movs	r0, #12
 80048bc:	f7fd f872 	bl	80019a4 <LCD_IO_WriteData>
 80048c0:	200a      	movs	r0, #10
 80048c2:	f7fd f86f 	bl	80019a4 <LCD_IO_WriteData>
 80048c6:	2028      	movs	r0, #40	; 0x28
 80048c8:	f7fd f86c 	bl	80019a4 <LCD_IO_WriteData>
 80048cc:	202f      	movs	r0, #47	; 0x2f
 80048ce:	f7fd f869 	bl	80019a4 <LCD_IO_WriteData>
 80048d2:	200f      	movs	r0, #15
 80048d4:	f7fd f866 	bl	80019a4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80048d8:	2011      	movs	r0, #17
 80048da:	f7fd f87f 	bl	80019dc <LCD_IO_WriteReg>
  LCD_Delay(200);
 80048de:	20c8      	movs	r0, #200	; 0xc8
 80048e0:	f7fd f8ca 	bl	8001a78 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80048e4:	2029      	movs	r0, #41	; 0x29
 80048e6:	f7fd f879 	bl	80019dc <LCD_IO_WriteReg>
}
 80048ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80048ee:	202c      	movs	r0, #44	; 0x2c
 80048f0:	f7fd b874 	b.w	80019dc <LCD_IO_WriteReg>

080048f4 <ili9341_ReadID>:
{
 80048f4:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80048f6:	f7fd f845 	bl	8001984 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80048fa:	2103      	movs	r1, #3
 80048fc:	20d3      	movs	r0, #211	; 0xd3
 80048fe:	f7fd f889 	bl	8001a14 <LCD_IO_ReadData>
}
 8004902:	b280      	uxth	r0, r0
 8004904:	bd08      	pop	{r3, pc}

08004906 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8004906:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8004908:	b2c4      	uxtb	r4, r0
 800490a:	2202      	movs	r2, #2
 800490c:	2103      	movs	r1, #3
 800490e:	4620      	mov	r0, r4
 8004910:	f7fc ffee 	bl	80018f0 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8004914:	200a      	movs	r0, #10
 8004916:	f7fd f833 	bl	8001980 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800491a:	4620      	mov	r0, r4
 800491c:	2200      	movs	r2, #0
 800491e:	2103      	movs	r1, #3
 8004920:	f7fc ffe6 	bl	80018f0 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8004924:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8004928:	2002      	movs	r0, #2
 800492a:	f7fd b829 	b.w	8001980 <IOE_Delay>

0800492e <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 800492e:	b538      	push	{r3, r4, r5, lr}
 8004930:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004932:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8004934:	f7fc ffda 	bl	80018ec <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004938:	2100      	movs	r1, #0
 800493a:	4620      	mov	r0, r4
 800493c:	f7fc fff0 	bl	8001920 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8004940:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004942:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8004944:	4620      	mov	r0, r4
 8004946:	f7fc ffeb 	bl	8001920 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800494a:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 800494e:	b280      	uxth	r0, r0
 8004950:	bd38      	pop	{r3, r4, r5, pc}

08004952 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8004952:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8004954:	b2c4      	uxtb	r4, r0
 8004956:	2140      	movs	r1, #64	; 0x40
 8004958:	4620      	mov	r0, r4
 800495a:	f7fc ffe1 	bl	8001920 <IOE_Read>
  
  if(state > 0)
 800495e:	0603      	lsls	r3, r0, #24
 8004960:	d507      	bpl.n	8004972 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8004962:	214c      	movs	r1, #76	; 0x4c
 8004964:	4620      	mov	r0, r4
 8004966:	f7fc ffdb 	bl	8001920 <IOE_Read>
    {
      ret = 1;
 800496a:	3800      	subs	r0, #0
 800496c:	bf18      	it	ne
 800496e:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8004970:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004972:	2201      	movs	r2, #1
 8004974:	214b      	movs	r1, #75	; 0x4b
 8004976:	4620      	mov	r0, r4
 8004978:	f7fc ffba 	bl	80018f0 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800497c:	4620      	mov	r0, r4
 800497e:	2200      	movs	r2, #0
 8004980:	214b      	movs	r1, #75	; 0x4b
 8004982:	f7fc ffb5 	bl	80018f0 <IOE_Write>
  uint8_t ret = 0;
 8004986:	2000      	movs	r0, #0
 8004988:	e7f2      	b.n	8004970 <stmpe811_TS_DetectTouch+0x1e>

0800498a <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 800498a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800498c:	2304      	movs	r3, #4
 800498e:	b2c4      	uxtb	r4, r0
{
 8004990:	460e      	mov	r6, r1
 8004992:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8004994:	21d7      	movs	r1, #215	; 0xd7
 8004996:	eb0d 0203 	add.w	r2, sp, r3
 800499a:	4620      	mov	r0, r4
 800499c:	f7fc ffda 	bl	8001954 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80049a0:	9b01      	ldr	r3, [sp, #4]
 80049a2:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80049a4:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80049a6:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80049aa:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80049ac:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80049ae:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80049b0:	2201      	movs	r2, #1
 80049b2:	214b      	movs	r1, #75	; 0x4b
 80049b4:	f7fc ff9c 	bl	80018f0 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80049b8:	2200      	movs	r2, #0
 80049ba:	214b      	movs	r1, #75	; 0x4b
 80049bc:	4620      	mov	r0, r4
 80049be:	f7fc ff97 	bl	80018f0 <IOE_Write>
}
 80049c2:	b002      	add	sp, #8
 80049c4:	bd70      	pop	{r4, r5, r6, pc}
	...

080049c8 <stmpe811_Init>:
{
 80049c8:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80049ca:	4b0a      	ldr	r3, [pc, #40]	; (80049f4 <stmpe811_Init+0x2c>)
 80049cc:	781a      	ldrb	r2, [r3, #0]
 80049ce:	4290      	cmp	r0, r2
{
 80049d0:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 80049d2:	d00d      	beq.n	80049f0 <stmpe811_Init+0x28>
 80049d4:	7859      	ldrb	r1, [r3, #1]
 80049d6:	4288      	cmp	r0, r1
 80049d8:	d00a      	beq.n	80049f0 <stmpe811_Init+0x28>
 80049da:	b10a      	cbz	r2, 80049e0 <stmpe811_Init+0x18>
 80049dc:	b941      	cbnz	r1, 80049f0 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 80049de:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 80049e0:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 80049e2:	f7fc ff83 	bl	80018ec <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 80049e6:	4620      	mov	r0, r4
}
 80049e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 80049ec:	f7ff bf8b 	b.w	8004906 <stmpe811_Reset>
}
 80049f0:	bd10      	pop	{r4, pc}
 80049f2:	bf00      	nop
 80049f4:	200018bc 	.word	0x200018bc

080049f8 <stmpe811_EnableGlobalIT>:
{
 80049f8:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80049fa:	b2c4      	uxtb	r4, r0
 80049fc:	2109      	movs	r1, #9
 80049fe:	4620      	mov	r0, r4
 8004a00:	f7fc ff8e 	bl	8001920 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8004a04:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8004a08:	b2c2      	uxtb	r2, r0
 8004a0a:	2109      	movs	r1, #9
 8004a0c:	4620      	mov	r0, r4
}
 8004a0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8004a12:	f7fc bf6d 	b.w	80018f0 <IOE_Write>

08004a16 <stmpe811_DisableGlobalIT>:
{
 8004a16:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8004a18:	b2c4      	uxtb	r4, r0
 8004a1a:	2109      	movs	r1, #9
 8004a1c:	4620      	mov	r0, r4
 8004a1e:	f7fc ff7f 	bl	8001920 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8004a22:	2109      	movs	r1, #9
 8004a24:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8004a28:	4620      	mov	r0, r4
}
 8004a2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8004a2e:	f7fc bf5f 	b.w	80018f0 <IOE_Write>

08004a32 <stmpe811_EnableITSource>:
{
 8004a32:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004a34:	b2c4      	uxtb	r4, r0
{
 8004a36:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004a38:	4620      	mov	r0, r4
 8004a3a:	210a      	movs	r1, #10
 8004a3c:	f7fc ff70 	bl	8001920 <IOE_Read>
  tmp |= Source; 
 8004a40:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004a42:	b2c2      	uxtb	r2, r0
 8004a44:	210a      	movs	r1, #10
 8004a46:	4620      	mov	r0, r4
}
 8004a48:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004a4c:	f7fc bf50 	b.w	80018f0 <IOE_Write>

08004a50 <stmpe811_TS_EnableIT>:
{
 8004a50:	b507      	push	{r0, r1, r2, lr}
 8004a52:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8004a54:	f7fc ff4b 	bl	80018ee <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004a58:	9801      	ldr	r0, [sp, #4]
 8004a5a:	211f      	movs	r1, #31
 8004a5c:	f7ff ffe9 	bl	8004a32 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8004a60:	9801      	ldr	r0, [sp, #4]
}
 8004a62:	b003      	add	sp, #12
 8004a64:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8004a68:	f7ff bfc6 	b.w	80049f8 <stmpe811_EnableGlobalIT>

08004a6c <stmpe811_DisableITSource>:
{
 8004a6c:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004a6e:	b2c4      	uxtb	r4, r0
{
 8004a70:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004a72:	4620      	mov	r0, r4
 8004a74:	210a      	movs	r1, #10
 8004a76:	f7fc ff53 	bl	8001920 <IOE_Read>
  tmp &= ~Source; 
 8004a7a:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004a7e:	b2c2      	uxtb	r2, r0
 8004a80:	210a      	movs	r1, #10
 8004a82:	4620      	mov	r0, r4
}
 8004a84:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004a88:	f7fc bf32 	b.w	80018f0 <IOE_Write>

08004a8c <stmpe811_TS_DisableIT>:
{
 8004a8c:	b510      	push	{r4, lr}
 8004a8e:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8004a90:	f7ff ffc1 	bl	8004a16 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004a94:	4620      	mov	r0, r4
 8004a96:	211f      	movs	r1, #31
}
 8004a98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004a9c:	f7ff bfe6 	b.w	8004a6c <stmpe811_DisableITSource>

08004aa0 <stmpe811_ReadGITStatus>:
{
 8004aa0:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004aa2:	b2c0      	uxtb	r0, r0
{
 8004aa4:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004aa6:	210b      	movs	r1, #11
 8004aa8:	f7fc ff3a 	bl	8001920 <IOE_Read>
}
 8004aac:	4020      	ands	r0, r4
 8004aae:	bd10      	pop	{r4, pc}

08004ab0 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8004ab0:	211f      	movs	r1, #31
 8004ab2:	f7ff bff5 	b.w	8004aa0 <stmpe811_ReadGITStatus>

08004ab6 <stmpe811_ClearGlobalIT>:
{
 8004ab6:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8004ab8:	b2c0      	uxtb	r0, r0
 8004aba:	210b      	movs	r1, #11
 8004abc:	f7fc bf18 	b.w	80018f0 <IOE_Write>

08004ac0 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8004ac0:	211f      	movs	r1, #31
 8004ac2:	f7ff bff8 	b.w	8004ab6 <stmpe811_ClearGlobalIT>

08004ac6 <stmpe811_IO_EnableAF>:
{
 8004ac6:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8004ac8:	b2c4      	uxtb	r4, r0
{
 8004aca:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8004acc:	4620      	mov	r0, r4
 8004ace:	2117      	movs	r1, #23
 8004ad0:	f7fc ff26 	bl	8001920 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8004ad4:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8004ad8:	b2c2      	uxtb	r2, r0
 8004ada:	2117      	movs	r1, #23
 8004adc:	4620      	mov	r0, r4
}
 8004ade:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8004ae2:	f7fc bf05 	b.w	80018f0 <IOE_Write>

08004ae6 <stmpe811_TS_Start>:
{
 8004ae6:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004ae8:	b2c4      	uxtb	r4, r0
{
 8004aea:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004aec:	2104      	movs	r1, #4
 8004aee:	4620      	mov	r0, r4
 8004af0:	f7fc ff16 	bl	8001920 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004af4:	2104      	movs	r1, #4
 8004af6:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004afa:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004afc:	4620      	mov	r0, r4
 8004afe:	f7fc fef7 	bl	80018f0 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8004b02:	4630      	mov	r0, r6
 8004b04:	21f0      	movs	r1, #240	; 0xf0
 8004b06:	f7ff ffde 	bl	8004ac6 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004b0a:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8004b0e:	4620      	mov	r0, r4
 8004b10:	2104      	movs	r1, #4
 8004b12:	f7fc feed 	bl	80018f0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8004b16:	2249      	movs	r2, #73	; 0x49
 8004b18:	2120      	movs	r1, #32
 8004b1a:	4620      	mov	r0, r4
 8004b1c:	f7fc fee8 	bl	80018f0 <IOE_Write>
  IOE_Delay(2); 
 8004b20:	2002      	movs	r0, #2
 8004b22:	f7fc ff2d 	bl	8001980 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8004b26:	4620      	mov	r0, r4
 8004b28:	2201      	movs	r2, #1
 8004b2a:	2121      	movs	r1, #33	; 0x21
 8004b2c:	f7fc fee0 	bl	80018f0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8004b30:	4620      	mov	r0, r4
 8004b32:	229a      	movs	r2, #154	; 0x9a
 8004b34:	2141      	movs	r1, #65	; 0x41
 8004b36:	f7fc fedb 	bl	80018f0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8004b3a:	4620      	mov	r0, r4
 8004b3c:	2201      	movs	r2, #1
 8004b3e:	214a      	movs	r1, #74	; 0x4a
 8004b40:	f7fc fed6 	bl	80018f0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004b44:	4620      	mov	r0, r4
 8004b46:	2201      	movs	r2, #1
 8004b48:	214b      	movs	r1, #75	; 0x4b
 8004b4a:	f7fc fed1 	bl	80018f0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004b4e:	4620      	mov	r0, r4
 8004b50:	2200      	movs	r2, #0
 8004b52:	214b      	movs	r1, #75	; 0x4b
 8004b54:	f7fc fecc 	bl	80018f0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8004b58:	4620      	mov	r0, r4
 8004b5a:	2201      	movs	r2, #1
 8004b5c:	2156      	movs	r1, #86	; 0x56
 8004b5e:	f7fc fec7 	bl	80018f0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8004b62:	4620      	mov	r0, r4
 8004b64:	2201      	movs	r2, #1
 8004b66:	2158      	movs	r1, #88	; 0x58
 8004b68:	f7fc fec2 	bl	80018f0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8004b6c:	4620      	mov	r0, r4
 8004b6e:	2201      	movs	r2, #1
 8004b70:	2140      	movs	r1, #64	; 0x40
 8004b72:	f7fc febd 	bl	80018f0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8004b76:	4620      	mov	r0, r4
 8004b78:	22ff      	movs	r2, #255	; 0xff
 8004b7a:	210b      	movs	r1, #11
 8004b7c:	f7fc feb8 	bl	80018f0 <IOE_Write>
}
 8004b80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8004b84:	2002      	movs	r0, #2
 8004b86:	f7fc befb 	b.w	8001980 <IOE_Delay>
	...

08004b8c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004b8c:	4b05      	ldr	r3, [pc, #20]	; (8004ba4 <SystemInit+0x18>)
 8004b8e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8004b92:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8004b96:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004b9a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004b9e:	609a      	str	r2, [r3, #8]
#endif
}
 8004ba0:	4770      	bx	lr
 8004ba2:	bf00      	nop
 8004ba4:	e000ed00 	.word	0xe000ed00

08004ba8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004ba8:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8004baa:	4b0b      	ldr	r3, [pc, #44]	; (8004bd8 <HAL_Init+0x30>)
 8004bac:	681a      	ldr	r2, [r3, #0]
 8004bae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004bb2:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8004bb4:	681a      	ldr	r2, [r3, #0]
 8004bb6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004bba:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004bbc:	681a      	ldr	r2, [r3, #0]
 8004bbe:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004bc2:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004bc4:	2003      	movs	r0, #3
 8004bc6:	f000 f82f 	bl	8004c28 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8004bca:	2000      	movs	r0, #0
 8004bcc:	f7fd f9cc 	bl	8001f68 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004bd0:	f7fc ff60 	bl	8001a94 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004bd4:	2000      	movs	r0, #0
 8004bd6:	bd08      	pop	{r3, pc}
 8004bd8:	40023c00 	.word	0x40023c00

08004bdc <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004bdc:	4a03      	ldr	r2, [pc, #12]	; (8004bec <HAL_IncTick+0x10>)
 8004bde:	4b04      	ldr	r3, [pc, #16]	; (8004bf0 <HAL_IncTick+0x14>)
 8004be0:	6811      	ldr	r1, [r2, #0]
 8004be2:	781b      	ldrb	r3, [r3, #0]
 8004be4:	440b      	add	r3, r1
 8004be6:	6013      	str	r3, [r2, #0]
}
 8004be8:	4770      	bx	lr
 8004bea:	bf00      	nop
 8004bec:	200018c0 	.word	0x200018c0
 8004bf0:	20000078 	.word	0x20000078

08004bf4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004bf4:	4b01      	ldr	r3, [pc, #4]	; (8004bfc <HAL_GetTick+0x8>)
 8004bf6:	6818      	ldr	r0, [r3, #0]
}
 8004bf8:	4770      	bx	lr
 8004bfa:	bf00      	nop
 8004bfc:	200018c0 	.word	0x200018c0

08004c00 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004c00:	b538      	push	{r3, r4, r5, lr}
 8004c02:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004c04:	f7ff fff6 	bl	8004bf4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004c08:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004c0a:	bf1c      	itt	ne
 8004c0c:	4b05      	ldrne	r3, [pc, #20]	; (8004c24 <HAL_Delay+0x24>)
 8004c0e:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8004c10:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8004c12:	bf18      	it	ne
 8004c14:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8004c16:	f7ff ffed 	bl	8004bf4 <HAL_GetTick>
 8004c1a:	1b43      	subs	r3, r0, r5
 8004c1c:	42a3      	cmp	r3, r4
 8004c1e:	d3fa      	bcc.n	8004c16 <HAL_Delay+0x16>
  {
  }
}
 8004c20:	bd38      	pop	{r3, r4, r5, pc}
 8004c22:	bf00      	nop
 8004c24:	20000078 	.word	0x20000078

08004c28 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004c28:	4907      	ldr	r1, [pc, #28]	; (8004c48 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8004c2a:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004c2c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004c30:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004c32:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004c34:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004c38:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004c3a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004c3c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004c40:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8004c44:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004c46:	4770      	bx	lr
 8004c48:	e000ed00 	.word	0xe000ed00

08004c4c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004c4c:	4b16      	ldr	r3, [pc, #88]	; (8004ca8 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004c4e:	b530      	push	{r4, r5, lr}
 8004c50:	68dc      	ldr	r4, [r3, #12]
 8004c52:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004c56:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004c5a:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004c5c:	2d04      	cmp	r5, #4
 8004c5e:	bf28      	it	cs
 8004c60:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004c62:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004c64:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004c68:	bf8c      	ite	hi
 8004c6a:	3c03      	subhi	r4, #3
 8004c6c:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004c6e:	fa03 f505 	lsl.w	r5, r3, r5
 8004c72:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004c76:	40a3      	lsls	r3, r4
 8004c78:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004c7c:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8004c7e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004c80:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c84:	bfac      	ite	ge
 8004c86:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c8a:	4a08      	ldrlt	r2, [pc, #32]	; (8004cac <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c8c:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c90:	bfb8      	it	lt
 8004c92:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c96:	b2db      	uxtb	r3, r3
 8004c98:	bfaa      	itet	ge
 8004c9a:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c9e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004ca0:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004ca4:	bd30      	pop	{r4, r5, pc}
 8004ca6:	bf00      	nop
 8004ca8:	e000ed00 	.word	0xe000ed00
 8004cac:	e000ed14 	.word	0xe000ed14

08004cb0 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004cb0:	2800      	cmp	r0, #0
 8004cb2:	db08      	blt.n	8004cc6 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004cb4:	0942      	lsrs	r2, r0, #5
 8004cb6:	2301      	movs	r3, #1
 8004cb8:	f000 001f 	and.w	r0, r0, #31
 8004cbc:	fa03 f000 	lsl.w	r0, r3, r0
 8004cc0:	4b01      	ldr	r3, [pc, #4]	; (8004cc8 <HAL_NVIC_EnableIRQ+0x18>)
 8004cc2:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004cc6:	4770      	bx	lr
 8004cc8:	e000e100 	.word	0xe000e100

08004ccc <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004ccc:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004cce:	4604      	mov	r4, r0
 8004cd0:	b150      	cbz	r0, 8004ce8 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004cd2:	7943      	ldrb	r3, [r0, #5]
 8004cd4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004cd8:	b913      	cbnz	r3, 8004ce0 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8004cda:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004cdc:	f7fc fefa 	bl	8001ad4 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004ce0:	2301      	movs	r3, #1
 8004ce2:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8004ce4:	2000      	movs	r0, #0
}
 8004ce6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004ce8:	2001      	movs	r0, #1
 8004cea:	e7fc      	b.n	8004ce6 <HAL_CRC_Init+0x1a>

08004cec <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004cec:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004cee:	4604      	mov	r4, r0
 8004cf0:	b330      	cbz	r0, 8004d40 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004cf2:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004cf6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004cfa:	b91b      	cbnz	r3, 8004d04 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004cfc:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004d00:	f7fc ff00 	bl	8001b04 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004d04:	6822      	ldr	r2, [r4, #0]
 8004d06:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004d08:	2302      	movs	r3, #2
 8004d0a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004d0e:	6813      	ldr	r3, [r2, #0]
 8004d10:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8004d14:	430b      	orrs	r3, r1
 8004d16:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004d18:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004d1a:	68a1      	ldr	r1, [r4, #8]
 8004d1c:	f023 0307 	bic.w	r3, r3, #7
 8004d20:	430b      	orrs	r3, r1
 8004d22:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004d24:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8004d26:	68e1      	ldr	r1, [r4, #12]
 8004d28:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8004d2c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8004d30:	430b      	orrs	r3, r1
 8004d32:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004d34:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004d36:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004d38:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004d3a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8004d3e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004d40:	2001      	movs	r0, #1
 8004d42:	e7fc      	b.n	8004d3e <HAL_DMA2D_Init+0x52>

08004d44 <HAL_DMA2D_LineEventCallback>:
 8004d44:	4770      	bx	lr

08004d46 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8004d46:	4770      	bx	lr

08004d48 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004d48:	6803      	ldr	r3, [r0, #0]
{
 8004d4a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004d4c:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004d4e:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004d50:	07f2      	lsls	r2, r6, #31
{
 8004d52:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004d54:	d514      	bpl.n	8004d80 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004d56:	05e9      	lsls	r1, r5, #23
 8004d58:	d512      	bpl.n	8004d80 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004d5a:	681a      	ldr	r2, [r3, #0]
 8004d5c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004d60:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004d62:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8004d64:	f042 0201 	orr.w	r2, r2, #1
 8004d68:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004d6a:	2201      	movs	r2, #1
 8004d6c:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004d6e:	2304      	movs	r3, #4
 8004d70:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004d74:	2300      	movs	r3, #0
 8004d76:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8004d7a:	6943      	ldr	r3, [r0, #20]
 8004d7c:	b103      	cbz	r3, 8004d80 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004d7e:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004d80:	06b2      	lsls	r2, r6, #26
 8004d82:	d516      	bpl.n	8004db2 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004d84:	04ab      	lsls	r3, r5, #18
 8004d86:	d514      	bpl.n	8004db2 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004d88:	6823      	ldr	r3, [r4, #0]
 8004d8a:	681a      	ldr	r2, [r3, #0]
 8004d8c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004d90:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004d92:	2220      	movs	r2, #32
 8004d94:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004d96:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004d98:	f043 0302 	orr.w	r3, r3, #2
 8004d9c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004d9e:	2304      	movs	r3, #4
 8004da0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004da4:	2300      	movs	r3, #0
 8004da6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8004daa:	6963      	ldr	r3, [r4, #20]
 8004dac:	b10b      	cbz	r3, 8004db2 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004dae:	4620      	mov	r0, r4
 8004db0:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004db2:	0730      	lsls	r0, r6, #28
 8004db4:	d516      	bpl.n	8004de4 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004db6:	0529      	lsls	r1, r5, #20
 8004db8:	d514      	bpl.n	8004de4 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004dba:	6823      	ldr	r3, [r4, #0]
 8004dbc:	681a      	ldr	r2, [r3, #0]
 8004dbe:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004dc2:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004dc4:	2208      	movs	r2, #8
 8004dc6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004dc8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004dca:	f043 0304 	orr.w	r3, r3, #4
 8004dce:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004dd0:	2304      	movs	r3, #4
 8004dd2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004dd6:	2300      	movs	r3, #0
 8004dd8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8004ddc:	6963      	ldr	r3, [r4, #20]
 8004dde:	b10b      	cbz	r3, 8004de4 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004de0:	4620      	mov	r0, r4
 8004de2:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004de4:	0772      	lsls	r2, r6, #29
 8004de6:	d50b      	bpl.n	8004e00 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004de8:	056b      	lsls	r3, r5, #21
 8004dea:	d509      	bpl.n	8004e00 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004dec:	6823      	ldr	r3, [r4, #0]
 8004dee:	681a      	ldr	r2, [r3, #0]
 8004df0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004df4:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004df6:	2204      	movs	r2, #4
 8004df8:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004dfa:	4620      	mov	r0, r4
 8004dfc:	f7ff ffa2 	bl	8004d44 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004e00:	07b0      	lsls	r0, r6, #30
 8004e02:	d514      	bpl.n	8004e2e <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004e04:	05a9      	lsls	r1, r5, #22
 8004e06:	d512      	bpl.n	8004e2e <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004e08:	6823      	ldr	r3, [r4, #0]
 8004e0a:	681a      	ldr	r2, [r3, #0]
 8004e0c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004e10:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004e12:	2202      	movs	r2, #2
 8004e14:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004e16:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004e18:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004e1a:	2301      	movs	r3, #1
 8004e1c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004e20:	2300      	movs	r3, #0
 8004e22:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 8004e26:	6923      	ldr	r3, [r4, #16]
 8004e28:	b10b      	cbz	r3, 8004e2e <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8004e2a:	4620      	mov	r0, r4
 8004e2c:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004e2e:	06f2      	lsls	r2, r6, #27
 8004e30:	d513      	bpl.n	8004e5a <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004e32:	04eb      	lsls	r3, r5, #19
 8004e34:	d511      	bpl.n	8004e5a <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004e36:	6823      	ldr	r3, [r4, #0]
 8004e38:	681a      	ldr	r2, [r3, #0]
 8004e3a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004e3e:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004e40:	2210      	movs	r2, #16
 8004e42:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004e44:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004e46:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004e48:	2301      	movs	r3, #1
 8004e4a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004e4e:	2300      	movs	r3, #0
 8004e50:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004e54:	4620      	mov	r0, r4
 8004e56:	f7ff ff76 	bl	8004d46 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8004e5a:	bd70      	pop	{r4, r5, r6, pc}

08004e5c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8004e5c:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8004e5e:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8004e62:	2b01      	cmp	r3, #1
 8004e64:	f04f 0302 	mov.w	r3, #2
 8004e68:	d02b      	beq.n	8004ec2 <HAL_DMA2D_ConfigLayer+0x66>
 8004e6a:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004e6c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8004e70:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004e74:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8004e78:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8004e7c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8004e7e:	4f18      	ldr	r7, [pc, #96]	; (8004ee0 <HAL_DMA2D_ConfigLayer+0x84>)
 8004e80:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004e84:	3c09      	subs	r4, #9
 8004e86:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004e88:	bf9c      	itt	ls
 8004e8a:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8004e8e:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004e90:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004e94:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004e96:	bf88      	it	hi
 8004e98:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004e9c:	b999      	cbnz	r1, 8004ec6 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004e9e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004ea0:	4039      	ands	r1, r7
 8004ea2:	430a      	orrs	r2, r1
 8004ea4:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004ea6:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004ea8:	6982      	ldr	r2, [r0, #24]
 8004eaa:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004eac:	d803      	bhi.n	8004eb6 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8004eae:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8004eb0:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8004eb4:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004eb6:	2301      	movs	r3, #1
 8004eb8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8004ebc:	2300      	movs	r3, #0
 8004ebe:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8004ec2:	4618      	mov	r0, r3

  return HAL_OK;
}
 8004ec4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004ec6:	69d9      	ldr	r1, [r3, #28]
 8004ec8:	4039      	ands	r1, r7
 8004eca:	430a      	orrs	r2, r1
 8004ecc:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004ece:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004ed0:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004ed2:	6992      	ldr	r2, [r2, #24]
 8004ed4:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8004ed6:	bf9c      	itt	ls
 8004ed8:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8004edc:	621d      	strls	r5, [r3, #32]
 8004ede:	e7ea      	b.n	8004eb6 <HAL_DMA2D_ConfigLayer+0x5a>
 8004ee0:	00fcfff0 	.word	0x00fcfff0

08004ee4 <FLASH_Program_DoubleWord>:
{
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));
  
  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8004ee4:	4909      	ldr	r1, [pc, #36]	; (8004f0c <FLASH_Program_DoubleWord+0x28>)
{
 8004ee6:	b510      	push	{r4, lr}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8004ee8:	690c      	ldr	r4, [r1, #16]
 8004eea:	f424 7440 	bic.w	r4, r4, #768	; 0x300
 8004eee:	610c      	str	r4, [r1, #16]
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 8004ef0:	690c      	ldr	r4, [r1, #16]
 8004ef2:	f444 7440 	orr.w	r4, r4, #768	; 0x300
 8004ef6:	610c      	str	r4, [r1, #16]
  FLASH->CR |= FLASH_CR_PG;
 8004ef8:	690c      	ldr	r4, [r1, #16]
 8004efa:	f044 0401 	orr.w	r4, r4, #1
 8004efe:	610c      	str	r4, [r1, #16]

  /* Program first word */
  *(__IO uint32_t*)Address = (uint32_t)Data;
 8004f00:	6002      	str	r2, [r0, #0]
 8004f02:	f3bf 8f6f 	isb	sy
  /* Barrier to ensure programming is performed in 2 steps, in right order
    (independently of compiler optimization behavior) */
  __ISB();

  /* Program second word */
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 8004f06:	6043      	str	r3, [r0, #4]
}
 8004f08:	bd10      	pop	{r4, pc}
 8004f0a:	bf00      	nop
 8004f0c:	40023c00 	.word	0x40023c00

08004f10 <FLASH_Program_Word>:
{
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));
  
  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8004f10:	4b07      	ldr	r3, [pc, #28]	; (8004f30 <FLASH_Program_Word+0x20>)
 8004f12:	691a      	ldr	r2, [r3, #16]
 8004f14:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8004f18:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_WORD;
 8004f1a:	691a      	ldr	r2, [r3, #16]
 8004f1c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004f20:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8004f22:	691a      	ldr	r2, [r3, #16]
 8004f24:	f042 0201 	orr.w	r2, r2, #1
 8004f28:	611a      	str	r2, [r3, #16]

  *(__IO uint32_t*)Address = Data;
 8004f2a:	6001      	str	r1, [r0, #0]
}
 8004f2c:	4770      	bx	lr
 8004f2e:	bf00      	nop
 8004f30:	40023c00 	.word	0x40023c00

08004f34 <FLASH_Program_HalfWord>:
{
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));
  
  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8004f34:	4b07      	ldr	r3, [pc, #28]	; (8004f54 <FLASH_Program_HalfWord+0x20>)
 8004f36:	691a      	ldr	r2, [r3, #16]
 8004f38:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8004f3c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 8004f3e:	691a      	ldr	r2, [r3, #16]
 8004f40:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004f44:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8004f46:	691a      	ldr	r2, [r3, #16]
 8004f48:	f042 0201 	orr.w	r2, r2, #1
 8004f4c:	611a      	str	r2, [r3, #16]

  *(__IO uint16_t*)Address = Data;
 8004f4e:	8001      	strh	r1, [r0, #0]
}
 8004f50:	4770      	bx	lr
 8004f52:	bf00      	nop
 8004f54:	40023c00 	.word	0x40023c00

08004f58 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 8004f58:	4b20      	ldr	r3, [pc, #128]	; (8004fdc <FLASH_SetErrorCode+0x84>)
 8004f5a:	68da      	ldr	r2, [r3, #12]
 8004f5c:	06d0      	lsls	r0, r2, #27
 8004f5e:	d506      	bpl.n	8004f6e <FLASH_SetErrorCode+0x16>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8004f60:	491f      	ldr	r1, [pc, #124]	; (8004fe0 <FLASH_SetErrorCode+0x88>)
 8004f62:	69ca      	ldr	r2, [r1, #28]
 8004f64:	f042 0210 	orr.w	r2, r2, #16
 8004f68:	61ca      	str	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8004f6a:	2210      	movs	r2, #16
 8004f6c:	60da      	str	r2, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 8004f6e:	68da      	ldr	r2, [r3, #12]
 8004f70:	0691      	lsls	r1, r2, #26
 8004f72:	d506      	bpl.n	8004f82 <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8004f74:	491a      	ldr	r1, [pc, #104]	; (8004fe0 <FLASH_SetErrorCode+0x88>)
 8004f76:	69ca      	ldr	r2, [r1, #28]
 8004f78:	f042 0208 	orr.w	r2, r2, #8
 8004f7c:	61ca      	str	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8004f7e:	2220      	movs	r2, #32
 8004f80:	60da      	str	r2, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 8004f82:	4b16      	ldr	r3, [pc, #88]	; (8004fdc <FLASH_SetErrorCode+0x84>)
 8004f84:	68da      	ldr	r2, [r3, #12]
 8004f86:	0652      	lsls	r2, r2, #25
 8004f88:	d506      	bpl.n	8004f98 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8004f8a:	4915      	ldr	r1, [pc, #84]	; (8004fe0 <FLASH_SetErrorCode+0x88>)
 8004f8c:	69ca      	ldr	r2, [r1, #28]
 8004f8e:	f042 0204 	orr.w	r2, r2, #4
 8004f92:	61ca      	str	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8004f94:	2240      	movs	r2, #64	; 0x40
 8004f96:	60da      	str	r2, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 8004f98:	68da      	ldr	r2, [r3, #12]
 8004f9a:	0610      	lsls	r0, r2, #24
 8004f9c:	d506      	bpl.n	8004fac <FLASH_SetErrorCode+0x54>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8004f9e:	4910      	ldr	r1, [pc, #64]	; (8004fe0 <FLASH_SetErrorCode+0x88>)
 8004fa0:	69ca      	ldr	r2, [r1, #28]
 8004fa2:	f042 0202 	orr.w	r2, r2, #2
 8004fa6:	61ca      	str	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8004fa8:	2280      	movs	r2, #128	; 0x80
 8004faa:	60da      	str	r2, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 8004fac:	4b0b      	ldr	r3, [pc, #44]	; (8004fdc <FLASH_SetErrorCode+0x84>)
 8004fae:	68da      	ldr	r2, [r3, #12]
 8004fb0:	05d1      	lsls	r1, r2, #23
 8004fb2:	d507      	bpl.n	8004fc4 <FLASH_SetErrorCode+0x6c>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8004fb4:	490a      	ldr	r1, [pc, #40]	; (8004fe0 <FLASH_SetErrorCode+0x88>)
 8004fb6:	69ca      	ldr	r2, [r1, #28]
 8004fb8:	f042 0201 	orr.w	r2, r2, #1
 8004fbc:	61ca      	str	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8004fbe:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004fc2:	60da      	str	r2, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 8004fc4:	68da      	ldr	r2, [r3, #12]
 8004fc6:	0792      	lsls	r2, r2, #30
 8004fc8:	d506      	bpl.n	8004fd8 <FLASH_SetErrorCode+0x80>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8004fca:	4905      	ldr	r1, [pc, #20]	; (8004fe0 <FLASH_SetErrorCode+0x88>)
 8004fcc:	69ca      	ldr	r2, [r1, #28]
 8004fce:	f042 0220 	orr.w	r2, r2, #32
 8004fd2:	61ca      	str	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8004fd4:	2202      	movs	r2, #2
 8004fd6:	60da      	str	r2, [r3, #12]
  }
}
 8004fd8:	4770      	bx	lr
 8004fda:	bf00      	nop
 8004fdc:	40023c00 	.word	0x40023c00
 8004fe0:	200018c4 	.word	0x200018c4

08004fe4 <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8004fe4:	4b06      	ldr	r3, [pc, #24]	; (8005000 <HAL_FLASH_Unlock+0x1c>)
 8004fe6:	691a      	ldr	r2, [r3, #16]
 8004fe8:	2a00      	cmp	r2, #0
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8004fea:	bfbf      	itttt	lt
 8004fec:	4a05      	ldrlt	r2, [pc, #20]	; (8005004 <HAL_FLASH_Unlock+0x20>)
 8004fee:	605a      	strlt	r2, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8004ff0:	f102 3288 	addlt.w	r2, r2, #2290649224	; 0x88888888
 8004ff4:	605a      	strlt	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8004ff6:	bfba      	itte	lt
 8004ff8:	6918      	ldrlt	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 8004ffa:	0fc0      	lsrlt	r0, r0, #31
 8004ffc:	2000      	movge	r0, #0
}
 8004ffe:	4770      	bx	lr
 8005000:	40023c00 	.word	0x40023c00
 8005004:	45670123 	.word	0x45670123

08005008 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 8005008:	4a03      	ldr	r2, [pc, #12]	; (8005018 <HAL_FLASH_Lock+0x10>)
 800500a:	6913      	ldr	r3, [r2, #16]
 800500c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8005010:	6113      	str	r3, [r2, #16]
}
 8005012:	2000      	movs	r0, #0
 8005014:	4770      	bx	lr
 8005016:	bf00      	nop
 8005018:	40023c00 	.word	0x40023c00

0800501c <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 800501c:	4b01      	ldr	r3, [pc, #4]	; (8005024 <HAL_FLASH_GetError+0x8>)
 800501e:	69d8      	ldr	r0, [r3, #28]
}  
 8005020:	4770      	bx	lr
 8005022:	bf00      	nop
 8005024:	200018c4 	.word	0x200018c4

08005028 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8005028:	4b11      	ldr	r3, [pc, #68]	; (8005070 <FLASH_WaitForLastOperation+0x48>)
{ 
 800502a:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800502c:	2200      	movs	r2, #0
{ 
 800502e:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8005030:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 8005032:	f7ff fddf 	bl	8004bf4 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8005036:	4d0f      	ldr	r5, [pc, #60]	; (8005074 <FLASH_WaitForLastOperation+0x4c>)
  tickstart = HAL_GetTick();
 8005038:	4606      	mov	r6, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800503a:	68eb      	ldr	r3, [r5, #12]
 800503c:	03da      	lsls	r2, r3, #15
 800503e:	d40c      	bmi.n	800505a <FLASH_WaitForLastOperation+0x32>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8005040:	68eb      	ldr	r3, [r5, #12]
 8005042:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8005044:	bf44      	itt	mi
 8005046:	2301      	movmi	r3, #1
 8005048:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800504a:	68e8      	ldr	r0, [r5, #12]
 800504c:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8005050:	d007      	beq.n	8005062 <FLASH_WaitForLastOperation+0x3a>
    FLASH_SetErrorCode();
 8005052:	f7ff ff81 	bl	8004f58 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8005056:	2001      	movs	r0, #1
 8005058:	e003      	b.n	8005062 <FLASH_WaitForLastOperation+0x3a>
    if(Timeout != HAL_MAX_DELAY)
 800505a:	1c61      	adds	r1, r4, #1
 800505c:	d0ed      	beq.n	800503a <FLASH_WaitForLastOperation+0x12>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800505e:	b90c      	cbnz	r4, 8005064 <FLASH_WaitForLastOperation+0x3c>
        return HAL_TIMEOUT;
 8005060:	2003      	movs	r0, #3
}  
 8005062:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8005064:	f7ff fdc6 	bl	8004bf4 <HAL_GetTick>
 8005068:	1b80      	subs	r0, r0, r6
 800506a:	42a0      	cmp	r0, r4
 800506c:	d9e5      	bls.n	800503a <FLASH_WaitForLastOperation+0x12>
 800506e:	e7f7      	b.n	8005060 <FLASH_WaitForLastOperation+0x38>
 8005070:	200018c4 	.word	0x200018c4
 8005074:	40023c00 	.word	0x40023c00

08005078 <HAL_FLASH_Program>:
{
 8005078:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __HAL_LOCK(&pFlash);
 800507a:	4e20      	ldr	r6, [pc, #128]	; (80050fc <HAL_FLASH_Program+0x84>)
{
 800507c:	9301      	str	r3, [sp, #4]
 800507e:	4614      	mov	r4, r2
  __HAL_LOCK(&pFlash);
 8005080:	7e32      	ldrb	r2, [r6, #24]
 8005082:	2a01      	cmp	r2, #1
{
 8005084:	4607      	mov	r7, r0
 8005086:	460d      	mov	r5, r1
  __HAL_LOCK(&pFlash);
 8005088:	d035      	beq.n	80050f6 <HAL_FLASH_Program+0x7e>
 800508a:	2201      	movs	r2, #1
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800508c:	f24c 3050 	movw	r0, #50000	; 0xc350
  __HAL_LOCK(&pFlash);
 8005090:	7632      	strb	r2, [r6, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8005092:	f7ff ffc9 	bl	8005028 <FLASH_WaitForLastOperation>
  if(status == HAL_OK)
 8005096:	b9b8      	cbnz	r0, 80050c8 <HAL_FLASH_Program+0x50>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 8005098:	9b01      	ldr	r3, [sp, #4]
 800509a:	b9cf      	cbnz	r7, 80050d0 <HAL_FLASH_Program+0x58>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800509c:	4b18      	ldr	r3, [pc, #96]	; (8005100 <HAL_FLASH_Program+0x88>)
 800509e:	691a      	ldr	r2, [r3, #16]
 80050a0:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80050a4:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 80050a6:	691a      	ldr	r2, [r3, #16]
 80050a8:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 80050aa:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 80050ac:	b2e4      	uxtb	r4, r4
  FLASH->CR |= FLASH_CR_PG;
 80050ae:	f042 0201 	orr.w	r2, r2, #1
 80050b2:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 80050b4:	702c      	strb	r4, [r5, #0]
    status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 80050b6:	f24c 3050 	movw	r0, #50000	; 0xc350
 80050ba:	f7ff ffb5 	bl	8005028 <FLASH_WaitForLastOperation>
    FLASH->CR &= (~FLASH_CR_PG);  
 80050be:	4a10      	ldr	r2, [pc, #64]	; (8005100 <HAL_FLASH_Program+0x88>)
 80050c0:	6913      	ldr	r3, [r2, #16]
 80050c2:	f023 0301 	bic.w	r3, r3, #1
 80050c6:	6113      	str	r3, [r2, #16]
  __HAL_UNLOCK(&pFlash);
 80050c8:	2300      	movs	r3, #0
 80050ca:	7633      	strb	r3, [r6, #24]
}
 80050cc:	b003      	add	sp, #12
 80050ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 80050d0:	2f01      	cmp	r7, #1
 80050d2:	d104      	bne.n	80050de <HAL_FLASH_Program+0x66>
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 80050d4:	b2a1      	uxth	r1, r4
 80050d6:	4628      	mov	r0, r5
 80050d8:	f7ff ff2c 	bl	8004f34 <FLASH_Program_HalfWord>
 80050dc:	e7eb      	b.n	80050b6 <HAL_FLASH_Program+0x3e>
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 80050de:	2f02      	cmp	r7, #2
 80050e0:	d104      	bne.n	80050ec <HAL_FLASH_Program+0x74>
      FLASH_Program_Word(Address, (uint32_t) Data);
 80050e2:	4621      	mov	r1, r4
 80050e4:	4628      	mov	r0, r5
 80050e6:	f7ff ff13 	bl	8004f10 <FLASH_Program_Word>
 80050ea:	e7e4      	b.n	80050b6 <HAL_FLASH_Program+0x3e>
      FLASH_Program_DoubleWord(Address, Data);
 80050ec:	4622      	mov	r2, r4
 80050ee:	4628      	mov	r0, r5
 80050f0:	f7ff fef8 	bl	8004ee4 <FLASH_Program_DoubleWord>
 80050f4:	e7df      	b.n	80050b6 <HAL_FLASH_Program+0x3e>
  __HAL_LOCK(&pFlash);
 80050f6:	2002      	movs	r0, #2
 80050f8:	e7e8      	b.n	80050cc <HAL_FLASH_Program+0x54>
 80050fa:	bf00      	nop
 80050fc:	200018c4 	.word	0x200018c4
 8005100:	40023c00 	.word	0x40023c00

08005104 <FLASH_MassErase>:
  /* Check the parameters */
  assert_param(IS_VOLTAGERANGE(VoltageRange));
  assert_param(IS_FLASH_BANK(Banks));

  /* if the previous operation is completed, proceed to erase all sectors */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8005104:	4b0c      	ldr	r3, [pc, #48]	; (8005138 <FLASH_MassErase+0x34>)
 8005106:	691a      	ldr	r2, [r3, #16]
 8005108:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800510c:	611a      	str	r2, [r3, #16]

  if (Banks == FLASH_BANK_BOTH)
 800510e:	2903      	cmp	r1, #3
  {
    /* bank1 & bank2 will be erased*/
    FLASH->CR |= FLASH_MER_BIT;
 8005110:	691a      	ldr	r2, [r3, #16]
  if (Banks == FLASH_BANK_BOTH)
 8005112:	d10b      	bne.n	800512c <FLASH_MassErase+0x28>
    FLASH->CR |= FLASH_MER_BIT;
 8005114:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
  }
  else if (Banks == FLASH_BANK_1)
  {
    /*Only bank1 will be erased*/
    FLASH->CR |= FLASH_CR_MER1;
 8005118:	f042 0204 	orr.w	r2, r2, #4
  }
  else
  {
    /*Only bank2 will be erased*/
    FLASH->CR |= FLASH_CR_MER2;
 800511c:	611a      	str	r2, [r3, #16]
  }
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 800511e:	691a      	ldr	r2, [r3, #16]
 8005120:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
 8005124:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
 8005128:	6118      	str	r0, [r3, #16]
}
 800512a:	4770      	bx	lr
  else if (Banks == FLASH_BANK_1)
 800512c:	2901      	cmp	r1, #1
 800512e:	d0f3      	beq.n	8005118 <FLASH_MassErase+0x14>
    FLASH->CR |= FLASH_CR_MER2;
 8005130:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005134:	e7f2      	b.n	800511c <FLASH_MassErase+0x18>
 8005136:	bf00      	nop
 8005138:	40023c00 	.word	0x40023c00

0800513c <FLASH_Erase_Sector>:

  /* Check the parameters */
  assert_param(IS_FLASH_SECTOR(Sector));
  assert_param(IS_VOLTAGERANGE(VoltageRange));

  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 800513c:	b139      	cbz	r1, 800514e <FLASH_Erase_Sector+0x12>
  {
    tmp_psize = FLASH_PSIZE_BYTE;
  }
  else if (VoltageRange == FLASH_VOLTAGE_RANGE_2)
 800513e:	2901      	cmp	r1, #1
 8005140:	d01f      	beq.n	8005182 <FLASH_Erase_Sector+0x46>
  {
    tmp_psize = FLASH_PSIZE_WORD;
  }
  else
  {
    tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 8005142:	2902      	cmp	r1, #2
 8005144:	bf0c      	ite	eq
 8005146:	f44f 7100 	moveq.w	r1, #512	; 0x200
 800514a:	f44f 7140 	movne.w	r1, #768	; 0x300
  if (Sector > FLASH_SECTOR_11)
  {
    Sector += 4U;
  }
  /* If the previous operation is completed, proceed to erase the sector */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800514e:	4b0e      	ldr	r3, [pc, #56]	; (8005188 <FLASH_Erase_Sector+0x4c>)
 8005150:	691a      	ldr	r2, [r3, #16]
 8005152:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8005156:	611a      	str	r2, [r3, #16]
  FLASH->CR |= tmp_psize;
 8005158:	691a      	ldr	r2, [r3, #16]
 800515a:	4311      	orrs	r1, r2
 800515c:	6119      	str	r1, [r3, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 800515e:	691a      	ldr	r2, [r3, #16]
 8005160:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8005164:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8005166:	691a      	ldr	r2, [r3, #16]
  if (Sector > FLASH_SECTOR_11)
 8005168:	280b      	cmp	r0, #11
    Sector += 4U;
 800516a:	bf88      	it	hi
 800516c:	3004      	addhi	r0, #4
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800516e:	ea42 00c0 	orr.w	r0, r2, r0, lsl #3
 8005172:	f040 0002 	orr.w	r0, r0, #2
 8005176:	6118      	str	r0, [r3, #16]
  FLASH->CR |= FLASH_CR_STRT;
 8005178:	691a      	ldr	r2, [r3, #16]
 800517a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800517e:	611a      	str	r2, [r3, #16]
}
 8005180:	4770      	bx	lr
    tmp_psize = FLASH_PSIZE_HALF_WORD;
 8005182:	f44f 7180 	mov.w	r1, #256	; 0x100
 8005186:	e7e2      	b.n	800514e <FLASH_Erase_Sector+0x12>
 8005188:	40023c00 	.word	0x40023c00

0800518c <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 800518c:	4b14      	ldr	r3, [pc, #80]	; (80051e0 <FLASH_FlushCaches+0x54>)
 800518e:	681a      	ldr	r2, [r3, #0]
 8005190:	0591      	lsls	r1, r2, #22
 8005192:	d50f      	bpl.n	80051b4 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 8005194:	681a      	ldr	r2, [r3, #0]
 8005196:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800519a:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 800519c:	681a      	ldr	r2, [r3, #0]
 800519e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80051a2:	601a      	str	r2, [r3, #0]
 80051a4:	681a      	ldr	r2, [r3, #0]
 80051a6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80051aa:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80051ac:	681a      	ldr	r2, [r3, #0]
 80051ae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80051b2:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 80051b4:	4b0a      	ldr	r3, [pc, #40]	; (80051e0 <FLASH_FlushCaches+0x54>)
 80051b6:	681a      	ldr	r2, [r3, #0]
 80051b8:	0552      	lsls	r2, r2, #21
 80051ba:	d50f      	bpl.n	80051dc <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 80051bc:	681a      	ldr	r2, [r3, #0]
 80051be:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80051c2:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 80051c4:	681a      	ldr	r2, [r3, #0]
 80051c6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80051ca:	601a      	str	r2, [r3, #0]
 80051cc:	681a      	ldr	r2, [r3, #0]
 80051ce:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80051d2:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 80051d4:	681a      	ldr	r2, [r3, #0]
 80051d6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80051da:	601a      	str	r2, [r3, #0]
  }
}
 80051dc:	4770      	bx	lr
 80051de:	bf00      	nop
 80051e0:	40023c00 	.word	0x40023c00

080051e4 <HAL_FLASHEx_Erase>:
{
 80051e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 80051e8:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8005288 <HAL_FLASHEx_Erase+0xa4>
 80051ec:	f898 3018 	ldrb.w	r3, [r8, #24]
 80051f0:	2b01      	cmp	r3, #1
{
 80051f2:	4605      	mov	r5, r0
 80051f4:	460f      	mov	r7, r1
  __HAL_LOCK(&pFlash);
 80051f6:	d042      	beq.n	800527e <HAL_FLASHEx_Erase+0x9a>
 80051f8:	2301      	movs	r3, #1
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 80051fa:	f24c 3050 	movw	r0, #50000	; 0xc350
  __HAL_LOCK(&pFlash);
 80051fe:	f888 3018 	strb.w	r3, [r8, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8005202:	f7ff ff11 	bl	8005028 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 8005206:	4604      	mov	r4, r0
 8005208:	b9b8      	cbnz	r0, 800523a <HAL_FLASHEx_Erase+0x56>
    *SectorError = 0xFFFFFFFFU;
 800520a:	f04f 33ff 	mov.w	r3, #4294967295
 800520e:	603b      	str	r3, [r7, #0]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 8005210:	682b      	ldr	r3, [r5, #0]
 8005212:	2b01      	cmp	r3, #1
 8005214:	d117      	bne.n	8005246 <HAL_FLASHEx_Erase+0x62>
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8005216:	6869      	ldr	r1, [r5, #4]
 8005218:	7c28      	ldrb	r0, [r5, #16]
 800521a:	f7ff ff73 	bl	8005104 <FLASH_MassErase>
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800521e:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005222:	f7ff ff01 	bl	8005028 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 8005226:	4a17      	ldr	r2, [pc, #92]	; (8005284 <HAL_FLASHEx_Erase+0xa0>)
 8005228:	6913      	ldr	r3, [r2, #16]
 800522a:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800522e:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8005232:	4604      	mov	r4, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 8005234:	6113      	str	r3, [r2, #16]
    FLASH_FlushCaches();
 8005236:	f7ff ffa9 	bl	800518c <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 800523a:	2300      	movs	r3, #0
 800523c:	f888 3018 	strb.w	r3, [r8, #24]
}
 8005240:	4620      	mov	r0, r4
 8005242:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8005246:	68ae      	ldr	r6, [r5, #8]
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 8005248:	f8df 9038 	ldr.w	r9, [pc, #56]	; 8005284 <HAL_FLASHEx_Erase+0xa0>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800524c:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8005250:	4413      	add	r3, r2
 8005252:	42b3      	cmp	r3, r6
 8005254:	d9ef      	bls.n	8005236 <HAL_FLASHEx_Erase+0x52>
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 8005256:	7c29      	ldrb	r1, [r5, #16]
 8005258:	4630      	mov	r0, r6
 800525a:	f7ff ff6f 	bl	800513c <FLASH_Erase_Sector>
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800525e:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005262:	f7ff fee1 	bl	8005028 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 8005266:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800526a:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 800526e:	f8c9 3010 	str.w	r3, [r9, #16]
        if (status != HAL_OK)
 8005272:	b110      	cbz	r0, 800527a <HAL_FLASHEx_Erase+0x96>
          *SectorError = index;
 8005274:	603e      	str	r6, [r7, #0]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8005276:	4604      	mov	r4, r0
          break;
 8005278:	e7dd      	b.n	8005236 <HAL_FLASHEx_Erase+0x52>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800527a:	3601      	adds	r6, #1
 800527c:	e7e6      	b.n	800524c <HAL_FLASHEx_Erase+0x68>
  __HAL_LOCK(&pFlash);
 800527e:	2402      	movs	r4, #2
 8005280:	e7de      	b.n	8005240 <HAL_FLASHEx_Erase+0x5c>
 8005282:	bf00      	nop
 8005284:	40023c00 	.word	0x40023c00
 8005288:	200018c4 	.word	0x200018c4

0800528c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800528c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005290:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8005454 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8005294:	4a6d      	ldr	r2, [pc, #436]	; (800544c <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005296:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005298:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800529a:	2401      	movs	r4, #1
 800529c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800529e:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 80052a2:	43ac      	bics	r4, r5
 80052a4:	f040 80b9 	bne.w	800541a <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80052a8:	684d      	ldr	r5, [r1, #4]
 80052aa:	f005 0403 	and.w	r4, r5, #3
 80052ae:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80052b2:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80052b4:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80052b6:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80052ba:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80052bc:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80052c0:	d834      	bhi.n	800532c <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 80052c2:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80052c4:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 80052c8:	68cf      	ldr	r7, [r1, #12]
 80052ca:	fa07 f708 	lsl.w	r7, r7, r8
 80052ce:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 80052d2:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80052d4:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80052d6:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80052da:	f3c5 1700 	ubfx	r7, r5, #4, #1
 80052de:	409f      	lsls	r7, r3
 80052e0:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 80052e4:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80052e6:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80052e8:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80052ec:	688f      	ldr	r7, [r1, #8]
 80052ee:	fa07 f708 	lsl.w	r7, r7, r8
 80052f2:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80052f6:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 80052f8:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80052fa:	d119      	bne.n	8005330 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 80052fc:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8005300:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005304:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8005308:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800530c:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8005310:	f04f 0e0f 	mov.w	lr, #15
 8005314:	fa0e fe0b 	lsl.w	lr, lr, fp
 8005318:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800531c:	690f      	ldr	r7, [r1, #16]
 800531e:	fa07 f70b 	lsl.w	r7, r7, fp
 8005322:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8005326:	f8ca 7020 	str.w	r7, [sl, #32]
 800532a:	e001      	b.n	8005330 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800532c:	2c03      	cmp	r4, #3
 800532e:	d1da      	bne.n	80052e6 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8005330:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005332:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8005336:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005338:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800533a:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 800533e:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8005340:	d06b      	beq.n	800541a <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005342:	f04f 0a00 	mov.w	sl, #0
 8005346:	f8cd a004 	str.w	sl, [sp, #4]
 800534a:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800534e:	4c40      	ldr	r4, [pc, #256]	; (8005450 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005350:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8005354:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 8005358:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 800535c:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 8005360:	9601      	str	r6, [sp, #4]
 8005362:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8005364:	f023 0603 	bic.w	r6, r3, #3
 8005368:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 800536c:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005370:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8005374:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005378:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800537c:	270f      	movs	r7, #15
 800537e:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005382:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005384:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005388:	d04e      	beq.n	8005428 <HAL_GPIO_Init+0x19c>
 800538a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800538e:	42a0      	cmp	r0, r4
 8005390:	d04c      	beq.n	800542c <HAL_GPIO_Init+0x1a0>
 8005392:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005396:	42a0      	cmp	r0, r4
 8005398:	d04a      	beq.n	8005430 <HAL_GPIO_Init+0x1a4>
 800539a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800539e:	42a0      	cmp	r0, r4
 80053a0:	d048      	beq.n	8005434 <HAL_GPIO_Init+0x1a8>
 80053a2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80053a6:	42a0      	cmp	r0, r4
 80053a8:	d046      	beq.n	8005438 <HAL_GPIO_Init+0x1ac>
 80053aa:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80053ae:	42a0      	cmp	r0, r4
 80053b0:	d044      	beq.n	800543c <HAL_GPIO_Init+0x1b0>
 80053b2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80053b6:	42a0      	cmp	r0, r4
 80053b8:	d042      	beq.n	8005440 <HAL_GPIO_Init+0x1b4>
 80053ba:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80053be:	42a0      	cmp	r0, r4
 80053c0:	d040      	beq.n	8005444 <HAL_GPIO_Init+0x1b8>
 80053c2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80053c6:	42a0      	cmp	r0, r4
 80053c8:	d03e      	beq.n	8005448 <HAL_GPIO_Init+0x1bc>
 80053ca:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80053ce:	42a0      	cmp	r0, r4
 80053d0:	bf0c      	ite	eq
 80053d2:	2409      	moveq	r4, #9
 80053d4:	240a      	movne	r4, #10
 80053d6:	fa04 f40e 	lsl.w	r4, r4, lr
 80053da:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 80053dc:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 80053de:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 80053e0:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80053e4:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 80053e6:	bf54      	ite	pl
 80053e8:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80053ea:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 80053ee:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 80053f0:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80053f2:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 80053f4:	bf54      	ite	pl
 80053f6:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80053f8:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 80053fc:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 80053fe:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8005400:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 8005402:	bf54      	ite	pl
 8005404:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8005406:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 800540a:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800540c:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800540e:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8005410:	bf54      	ite	pl
 8005412:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8005414:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 8005418:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800541a:	3301      	adds	r3, #1
 800541c:	2b10      	cmp	r3, #16
 800541e:	f47f af3b 	bne.w	8005298 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8005422:	b003      	add	sp, #12
 8005424:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005428:	4654      	mov	r4, sl
 800542a:	e7d4      	b.n	80053d6 <HAL_GPIO_Init+0x14a>
 800542c:	2401      	movs	r4, #1
 800542e:	e7d2      	b.n	80053d6 <HAL_GPIO_Init+0x14a>
 8005430:	2402      	movs	r4, #2
 8005432:	e7d0      	b.n	80053d6 <HAL_GPIO_Init+0x14a>
 8005434:	2403      	movs	r4, #3
 8005436:	e7ce      	b.n	80053d6 <HAL_GPIO_Init+0x14a>
 8005438:	2404      	movs	r4, #4
 800543a:	e7cc      	b.n	80053d6 <HAL_GPIO_Init+0x14a>
 800543c:	2405      	movs	r4, #5
 800543e:	e7ca      	b.n	80053d6 <HAL_GPIO_Init+0x14a>
 8005440:	2406      	movs	r4, #6
 8005442:	e7c8      	b.n	80053d6 <HAL_GPIO_Init+0x14a>
 8005444:	2407      	movs	r4, #7
 8005446:	e7c6      	b.n	80053d6 <HAL_GPIO_Init+0x14a>
 8005448:	2408      	movs	r4, #8
 800544a:	e7c4      	b.n	80053d6 <HAL_GPIO_Init+0x14a>
 800544c:	40013c00 	.word	0x40013c00
 8005450:	40020000 	.word	0x40020000
 8005454:	40023800 	.word	0x40023800

08005458 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8005458:	6903      	ldr	r3, [r0, #16]
 800545a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800545c:	bf14      	ite	ne
 800545e:	2001      	movne	r0, #1
 8005460:	2000      	moveq	r0, #0
 8005462:	4770      	bx	lr

08005464 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8005464:	b10a      	cbz	r2, 800546a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8005466:	6181      	str	r1, [r0, #24]
  }
}
 8005468:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800546a:	0409      	lsls	r1, r1, #16
 800546c:	e7fb      	b.n	8005466 <HAL_GPIO_WritePin+0x2>

0800546e <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800546e:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8005470:	ea01 0203 	and.w	r2, r1, r3
 8005474:	ea21 0103 	bic.w	r1, r1, r3
 8005478:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800547c:	6181      	str	r1, [r0, #24]
}
 800547e:	4770      	bx	lr

08005480 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005480:	6801      	ldr	r1, [r0, #0]
 8005482:	694b      	ldr	r3, [r1, #20]
 8005484:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8005488:	f04f 0200 	mov.w	r2, #0
 800548c:	d010      	beq.n	80054b0 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800548e:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8005492:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8005494:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8005496:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8005498:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800549c:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80054a0:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80054a2:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80054a6:	f043 0304 	orr.w	r3, r3, #4
 80054aa:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 80054ac:	2001      	movs	r0, #1
 80054ae:	4770      	bx	lr
  }
  return HAL_OK;
 80054b0:	4618      	mov	r0, r3
}
 80054b2:	4770      	bx	lr

080054b4 <I2C_WaitOnFlagUntilTimeout>:
{
 80054b4:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 80054b8:	4606      	mov	r6, r0
 80054ba:	460f      	mov	r7, r1
 80054bc:	4691      	mov	r9, r2
 80054be:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80054c0:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80054c4:	6833      	ldr	r3, [r6, #0]
 80054c6:	f1ba 0f01 	cmp.w	sl, #1
 80054ca:	bf0c      	ite	eq
 80054cc:	695c      	ldreq	r4, [r3, #20]
 80054ce:	699c      	ldrne	r4, [r3, #24]
 80054d0:	ea27 0404 	bic.w	r4, r7, r4
 80054d4:	b2a4      	uxth	r4, r4
 80054d6:	fab4 f484 	clz	r4, r4
 80054da:	0964      	lsrs	r4, r4, #5
 80054dc:	45a1      	cmp	r9, r4
 80054de:	d001      	beq.n	80054e4 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80054e0:	2000      	movs	r0, #0
 80054e2:	e017      	b.n	8005514 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 80054e4:	1c6a      	adds	r2, r5, #1
 80054e6:	d0ee      	beq.n	80054c6 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80054e8:	f7ff fb84 	bl	8004bf4 <HAL_GetTick>
 80054ec:	9b08      	ldr	r3, [sp, #32]
 80054ee:	1ac0      	subs	r0, r0, r3
 80054f0:	42a8      	cmp	r0, r5
 80054f2:	d801      	bhi.n	80054f8 <I2C_WaitOnFlagUntilTimeout+0x44>
 80054f4:	2d00      	cmp	r5, #0
 80054f6:	d1e5      	bne.n	80054c4 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80054f8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80054fa:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80054fc:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80054fe:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005502:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005506:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005508:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800550c:	f042 0220 	orr.w	r2, r2, #32
 8005510:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8005512:	2001      	movs	r0, #1
}
 8005514:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08005518 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8005518:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800551c:	4604      	mov	r4, r0
 800551e:	460f      	mov	r7, r1
 8005520:	4616      	mov	r6, r2
 8005522:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8005524:	6825      	ldr	r5, [r4, #0]
 8005526:	6968      	ldr	r0, [r5, #20]
 8005528:	ea27 0000 	bic.w	r0, r7, r0
 800552c:	b280      	uxth	r0, r0
 800552e:	b1b8      	cbz	r0, 8005560 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005530:	696b      	ldr	r3, [r5, #20]
 8005532:	055a      	lsls	r2, r3, #21
 8005534:	d516      	bpl.n	8005564 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005536:	682b      	ldr	r3, [r5, #0]
 8005538:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800553c:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800553e:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8005542:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005544:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005546:	2300      	movs	r3, #0
 8005548:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800554a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800554e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005552:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005554:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005558:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800555a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800555e:	2001      	movs	r0, #1
}
 8005560:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8005564:	1c73      	adds	r3, r6, #1
 8005566:	d0de      	beq.n	8005526 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005568:	f7ff fb44 	bl	8004bf4 <HAL_GetTick>
 800556c:	eba0 0008 	sub.w	r0, r0, r8
 8005570:	42b0      	cmp	r0, r6
 8005572:	d801      	bhi.n	8005578 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8005574:	2e00      	cmp	r6, #0
 8005576:	d1d5      	bne.n	8005524 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005578:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800557a:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800557c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800557e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005582:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005586:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005588:	f042 0220 	orr.w	r2, r2, #32
 800558c:	e7e4      	b.n	8005558 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800558e <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800558e:	b570      	push	{r4, r5, r6, lr}
 8005590:	4604      	mov	r4, r0
 8005592:	460d      	mov	r5, r1
 8005594:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005596:	6821      	ldr	r1, [r4, #0]
 8005598:	694b      	ldr	r3, [r1, #20]
 800559a:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800559e:	d001      	beq.n	80055a4 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 80055a0:	2000      	movs	r0, #0
 80055a2:	e010      	b.n	80055c6 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80055a4:	694a      	ldr	r2, [r1, #20]
 80055a6:	06d2      	lsls	r2, r2, #27
 80055a8:	d50e      	bpl.n	80055c8 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80055aa:	f06f 0210 	mvn.w	r2, #16
 80055ae:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80055b0:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80055b2:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80055b4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80055b8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80055bc:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80055be:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80055c0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 80055c4:	2001      	movs	r0, #1
}
 80055c6:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80055c8:	f7ff fb14 	bl	8004bf4 <HAL_GetTick>
 80055cc:	1b80      	subs	r0, r0, r6
 80055ce:	42a8      	cmp	r0, r5
 80055d0:	d801      	bhi.n	80055d6 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 80055d2:	2d00      	cmp	r5, #0
 80055d4:	d1df      	bne.n	8005596 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 80055d6:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 80055d8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80055da:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80055dc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80055e0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80055e4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80055e6:	f042 0220 	orr.w	r2, r2, #32
 80055ea:	e7e8      	b.n	80055be <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

080055ec <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80055ec:	b570      	push	{r4, r5, r6, lr}
 80055ee:	4604      	mov	r4, r0
 80055f0:	460d      	mov	r5, r1
 80055f2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80055f4:	6823      	ldr	r3, [r4, #0]
 80055f6:	695b      	ldr	r3, [r3, #20]
 80055f8:	075b      	lsls	r3, r3, #29
 80055fa:	d501      	bpl.n	8005600 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80055fc:	2000      	movs	r0, #0
}
 80055fe:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005600:	4620      	mov	r0, r4
 8005602:	f7ff ff3d 	bl	8005480 <I2C_IsAcknowledgeFailed>
 8005606:	b9a8      	cbnz	r0, 8005634 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005608:	1c6a      	adds	r2, r5, #1
 800560a:	d0f3      	beq.n	80055f4 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800560c:	f7ff faf2 	bl	8004bf4 <HAL_GetTick>
 8005610:	1b80      	subs	r0, r0, r6
 8005612:	42a8      	cmp	r0, r5
 8005614:	d801      	bhi.n	800561a <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8005616:	2d00      	cmp	r5, #0
 8005618:	d1ec      	bne.n	80055f4 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800561a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800561c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800561e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005620:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005624:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005628:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800562a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800562e:	f042 0220 	orr.w	r2, r2, #32
 8005632:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005634:	2001      	movs	r0, #1
 8005636:	e7e2      	b.n	80055fe <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08005638 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8005638:	b570      	push	{r4, r5, r6, lr}
 800563a:	4604      	mov	r4, r0
 800563c:	460d      	mov	r5, r1
 800563e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005640:	6823      	ldr	r3, [r4, #0]
 8005642:	695b      	ldr	r3, [r3, #20]
 8005644:	061b      	lsls	r3, r3, #24
 8005646:	d501      	bpl.n	800564c <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8005648:	2000      	movs	r0, #0
}
 800564a:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800564c:	4620      	mov	r0, r4
 800564e:	f7ff ff17 	bl	8005480 <I2C_IsAcknowledgeFailed>
 8005652:	b9a8      	cbnz	r0, 8005680 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005654:	1c6a      	adds	r2, r5, #1
 8005656:	d0f3      	beq.n	8005640 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005658:	f7ff facc 	bl	8004bf4 <HAL_GetTick>
 800565c:	1b80      	subs	r0, r0, r6
 800565e:	42a8      	cmp	r0, r5
 8005660:	d801      	bhi.n	8005666 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8005662:	2d00      	cmp	r5, #0
 8005664:	d1ec      	bne.n	8005640 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005666:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005668:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800566a:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800566c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005670:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005674:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005676:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800567a:	f042 0220 	orr.w	r2, r2, #32
 800567e:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005680:	2001      	movs	r0, #1
 8005682:	e7e2      	b.n	800564a <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08005684 <I2C_RequestMemoryWrite>:
{
 8005684:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005688:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800568a:	6802      	ldr	r2, [r0, #0]
{
 800568c:	b085      	sub	sp, #20
 800568e:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8005692:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005694:	6813      	ldr	r3, [r2, #0]
 8005696:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800569a:	6013      	str	r3, [r2, #0]
{
 800569c:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800569e:	463b      	mov	r3, r7
 80056a0:	f8cd 8000 	str.w	r8, [sp]
 80056a4:	2200      	movs	r2, #0
 80056a6:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80056aa:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80056ac:	f7ff ff02 	bl	80054b4 <I2C_WaitOnFlagUntilTimeout>
 80056b0:	6823      	ldr	r3, [r4, #0]
 80056b2:	b138      	cbz	r0, 80056c4 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80056b4:	681b      	ldr	r3, [r3, #0]
 80056b6:	05db      	lsls	r3, r3, #23
 80056b8:	d502      	bpl.n	80056c0 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80056ba:	f44f 7300 	mov.w	r3, #512	; 0x200
 80056be:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80056c0:	2003      	movs	r0, #3
 80056c2:	e00a      	b.n	80056da <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80056c4:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80056c8:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80056ca:	4919      	ldr	r1, [pc, #100]	; (8005730 <I2C_RequestMemoryWrite+0xac>)
 80056cc:	4643      	mov	r3, r8
 80056ce:	463a      	mov	r2, r7
 80056d0:	4620      	mov	r0, r4
 80056d2:	f7ff ff21 	bl	8005518 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80056d6:	b118      	cbz	r0, 80056e0 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 80056d8:	2001      	movs	r0, #1
}
 80056da:	b005      	add	sp, #20
 80056dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80056e0:	6823      	ldr	r3, [r4, #0]
 80056e2:	9003      	str	r0, [sp, #12]
 80056e4:	695a      	ldr	r2, [r3, #20]
 80056e6:	9203      	str	r2, [sp, #12]
 80056e8:	699b      	ldr	r3, [r3, #24]
 80056ea:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80056ec:	4642      	mov	r2, r8
 80056ee:	4639      	mov	r1, r7
 80056f0:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80056f2:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80056f4:	f7ff ffa0 	bl	8005638 <I2C_WaitOnTXEFlagUntilTimeout>
 80056f8:	b140      	cbz	r0, 800570c <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80056fa:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80056fc:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80056fe:	bf01      	itttt	eq
 8005700:	6822      	ldreq	r2, [r4, #0]
 8005702:	6813      	ldreq	r3, [r2, #0]
 8005704:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005708:	6013      	streq	r3, [r2, #0]
 800570a:	e7e5      	b.n	80056d8 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800570c:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005710:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005712:	d102      	bne.n	800571a <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005714:	b2ed      	uxtb	r5, r5
 8005716:	611d      	str	r5, [r3, #16]
 8005718:	e7df      	b.n	80056da <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800571a:	0a2a      	lsrs	r2, r5, #8
 800571c:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800571e:	4639      	mov	r1, r7
 8005720:	4642      	mov	r2, r8
 8005722:	4620      	mov	r0, r4
 8005724:	f7ff ff88 	bl	8005638 <I2C_WaitOnTXEFlagUntilTimeout>
 8005728:	2800      	cmp	r0, #0
 800572a:	d1e6      	bne.n	80056fa <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800572c:	6823      	ldr	r3, [r4, #0]
 800572e:	e7f1      	b.n	8005714 <I2C_RequestMemoryWrite+0x90>
 8005730:	00010002 	.word	0x00010002

08005734 <I2C_RequestMemoryRead>:
{
 8005734:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005738:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800573a:	6803      	ldr	r3, [r0, #0]
{
 800573c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800573e:	681a      	ldr	r2, [r3, #0]
 8005740:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005744:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005746:	681a      	ldr	r2, [r3, #0]
{
 8005748:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800574c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005750:	601a      	str	r2, [r3, #0]
{
 8005752:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005754:	463b      	mov	r3, r7
 8005756:	f8cd 8000 	str.w	r8, [sp]
 800575a:	2200      	movs	r2, #0
 800575c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005760:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005762:	f7ff fea7 	bl	80054b4 <I2C_WaitOnFlagUntilTimeout>
 8005766:	6823      	ldr	r3, [r4, #0]
 8005768:	b148      	cbz	r0, 800577e <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800576a:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800576c:	05db      	lsls	r3, r3, #23
 800576e:	d502      	bpl.n	8005776 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005770:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005774:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8005776:	2003      	movs	r0, #3
}
 8005778:	b004      	add	sp, #16
 800577a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800577e:	fa5f f986 	uxtb.w	r9, r6
 8005782:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8005786:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005788:	492a      	ldr	r1, [pc, #168]	; (8005834 <I2C_RequestMemoryRead+0x100>)
 800578a:	4643      	mov	r3, r8
 800578c:	463a      	mov	r2, r7
 800578e:	4620      	mov	r0, r4
 8005790:	f7ff fec2 	bl	8005518 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005794:	b108      	cbz	r0, 800579a <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8005796:	2001      	movs	r0, #1
 8005798:	e7ee      	b.n	8005778 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800579a:	6823      	ldr	r3, [r4, #0]
 800579c:	9003      	str	r0, [sp, #12]
 800579e:	695a      	ldr	r2, [r3, #20]
 80057a0:	9203      	str	r2, [sp, #12]
 80057a2:	699b      	ldr	r3, [r3, #24]
 80057a4:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80057a6:	4642      	mov	r2, r8
 80057a8:	4639      	mov	r1, r7
 80057aa:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80057ac:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80057ae:	f7ff ff43 	bl	8005638 <I2C_WaitOnTXEFlagUntilTimeout>
 80057b2:	b140      	cbz	r0, 80057c6 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80057b4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80057b6:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80057b8:	bf01      	itttt	eq
 80057ba:	6822      	ldreq	r2, [r4, #0]
 80057bc:	6813      	ldreq	r3, [r2, #0]
 80057be:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80057c2:	6013      	streq	r3, [r2, #0]
 80057c4:	e7e7      	b.n	8005796 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80057c6:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80057ca:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80057cc:	d11a      	bne.n	8005804 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80057ce:	b2ed      	uxtb	r5, r5
 80057d0:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80057d2:	4642      	mov	r2, r8
 80057d4:	4639      	mov	r1, r7
 80057d6:	4620      	mov	r0, r4
 80057d8:	f7ff ff2e 	bl	8005638 <I2C_WaitOnTXEFlagUntilTimeout>
 80057dc:	2800      	cmp	r0, #0
 80057de:	d1e9      	bne.n	80057b4 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80057e0:	6822      	ldr	r2, [r4, #0]
 80057e2:	6813      	ldr	r3, [r2, #0]
 80057e4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80057e8:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80057ea:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80057ee:	4602      	mov	r2, r0
 80057f0:	f8cd 8000 	str.w	r8, [sp]
 80057f4:	463b      	mov	r3, r7
 80057f6:	4620      	mov	r0, r4
 80057f8:	f7ff fe5c 	bl	80054b4 <I2C_WaitOnFlagUntilTimeout>
 80057fc:	6822      	ldr	r2, [r4, #0]
 80057fe:	b160      	cbz	r0, 800581a <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005800:	6813      	ldr	r3, [r2, #0]
 8005802:	e7b3      	b.n	800576c <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005804:	0a2a      	lsrs	r2, r5, #8
 8005806:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005808:	4639      	mov	r1, r7
 800580a:	4642      	mov	r2, r8
 800580c:	4620      	mov	r0, r4
 800580e:	f7ff ff13 	bl	8005638 <I2C_WaitOnTXEFlagUntilTimeout>
 8005812:	2800      	cmp	r0, #0
 8005814:	d1ce      	bne.n	80057b4 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005816:	6823      	ldr	r3, [r4, #0]
 8005818:	e7d9      	b.n	80057ce <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800581a:	f049 0301 	orr.w	r3, r9, #1
 800581e:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005820:	4904      	ldr	r1, [pc, #16]	; (8005834 <I2C_RequestMemoryRead+0x100>)
 8005822:	4643      	mov	r3, r8
 8005824:	463a      	mov	r2, r7
 8005826:	4620      	mov	r0, r4
 8005828:	f7ff fe76 	bl	8005518 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 800582c:	3800      	subs	r0, #0
 800582e:	bf18      	it	ne
 8005830:	2001      	movne	r0, #1
 8005832:	e7a1      	b.n	8005778 <I2C_RequestMemoryRead+0x44>
 8005834:	00010002 	.word	0x00010002

08005838 <HAL_I2C_Init>:
{
 8005838:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800583a:	4604      	mov	r4, r0
 800583c:	b908      	cbnz	r0, 8005842 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800583e:	2001      	movs	r0, #1
}
 8005840:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005842:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005846:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800584a:	b91b      	cbnz	r3, 8005854 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800584c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8005850:	f7fc f97a 	bl	8001b48 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005854:	2324      	movs	r3, #36	; 0x24
 8005856:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800585a:	6823      	ldr	r3, [r4, #0]
 800585c:	681a      	ldr	r2, [r3, #0]
 800585e:	f022 0201 	bic.w	r2, r2, #1
 8005862:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8005864:	681a      	ldr	r2, [r3, #0]
 8005866:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800586a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800586c:	681a      	ldr	r2, [r3, #0]
 800586e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005872:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8005874:	f000 fe74 	bl	8006560 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005878:	4b3f      	ldr	r3, [pc, #252]	; (8005978 <HAL_I2C_Init+0x140>)
 800587a:	6865      	ldr	r5, [r4, #4]
 800587c:	429d      	cmp	r5, r3
 800587e:	bf94      	ite	ls
 8005880:	4b3e      	ldrls	r3, [pc, #248]	; (800597c <HAL_I2C_Init+0x144>)
 8005882:	4b3f      	ldrhi	r3, [pc, #252]	; (8005980 <HAL_I2C_Init+0x148>)
 8005884:	4298      	cmp	r0, r3
 8005886:	bf8c      	ite	hi
 8005888:	2300      	movhi	r3, #0
 800588a:	2301      	movls	r3, #1
 800588c:	2b00      	cmp	r3, #0
 800588e:	d1d6      	bne.n	800583e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005890:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005892:	4e39      	ldr	r6, [pc, #228]	; (8005978 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005894:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8005896:	493b      	ldr	r1, [pc, #236]	; (8005984 <HAL_I2C_Init+0x14c>)
 8005898:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800589c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80058a0:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80058a2:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80058a4:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80058a6:	bf88      	it	hi
 80058a8:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 80058ac:	6a13      	ldr	r3, [r2, #32]
 80058ae:	bf88      	it	hi
 80058b0:	4371      	mulhi	r1, r6
 80058b2:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80058b6:	bf84      	itt	hi
 80058b8:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 80058bc:	fbb1 f1f6 	udivhi	r1, r1, r6
 80058c0:	3101      	adds	r1, #1
 80058c2:	4319      	orrs	r1, r3
 80058c4:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80058c6:	69d1      	ldr	r1, [r2, #28]
 80058c8:	1e43      	subs	r3, r0, #1
 80058ca:	482b      	ldr	r0, [pc, #172]	; (8005978 <HAL_I2C_Init+0x140>)
 80058cc:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 80058d0:	4285      	cmp	r5, r0
 80058d2:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80058d6:	d832      	bhi.n	800593e <HAL_I2C_Init+0x106>
 80058d8:	006d      	lsls	r5, r5, #1
 80058da:	f640 70fc 	movw	r0, #4092	; 0xffc
 80058de:	fbb3 f3f5 	udiv	r3, r3, r5
 80058e2:	3301      	adds	r3, #1
 80058e4:	4203      	tst	r3, r0
 80058e6:	d042      	beq.n	800596e <HAL_I2C_Init+0x136>
 80058e8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80058ec:	430b      	orrs	r3, r1
 80058ee:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80058f0:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80058f4:	6811      	ldr	r1, [r2, #0]
 80058f6:	4303      	orrs	r3, r0
 80058f8:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80058fc:	430b      	orrs	r3, r1
 80058fe:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8005900:	6891      	ldr	r1, [r2, #8]
 8005902:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8005906:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800590a:	4303      	orrs	r3, r0
 800590c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005910:	430b      	orrs	r3, r1
 8005912:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8005914:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8005918:	68d1      	ldr	r1, [r2, #12]
 800591a:	4303      	orrs	r3, r0
 800591c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005920:	430b      	orrs	r3, r1
 8005922:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8005924:	6813      	ldr	r3, [r2, #0]
 8005926:	f043 0301 	orr.w	r3, r3, #1
 800592a:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800592c:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800592e:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005930:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8005932:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8005936:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005938:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 800593c:	e780      	b.n	8005840 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800593e:	68a0      	ldr	r0, [r4, #8]
 8005940:	b950      	cbnz	r0, 8005958 <HAL_I2C_Init+0x120>
 8005942:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005946:	fbb3 f3f5 	udiv	r3, r3, r5
 800594a:	3301      	adds	r3, #1
 800594c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005950:	b17b      	cbz	r3, 8005972 <HAL_I2C_Init+0x13a>
 8005952:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005956:	e7c9      	b.n	80058ec <HAL_I2C_Init+0xb4>
 8005958:	2019      	movs	r0, #25
 800595a:	4345      	muls	r5, r0
 800595c:	fbb3 f3f5 	udiv	r3, r3, r5
 8005960:	3301      	adds	r3, #1
 8005962:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005966:	b123      	cbz	r3, 8005972 <HAL_I2C_Init+0x13a>
 8005968:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800596c:	e7be      	b.n	80058ec <HAL_I2C_Init+0xb4>
 800596e:	2304      	movs	r3, #4
 8005970:	e7bc      	b.n	80058ec <HAL_I2C_Init+0xb4>
 8005972:	2301      	movs	r3, #1
 8005974:	e7ba      	b.n	80058ec <HAL_I2C_Init+0xb4>
 8005976:	bf00      	nop
 8005978:	000186a0 	.word	0x000186a0
 800597c:	001e847f 	.word	0x001e847f
 8005980:	003d08ff 	.word	0x003d08ff
 8005984:	000f4240 	.word	0x000f4240

08005988 <HAL_I2C_Mem_Write>:
{
 8005988:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800598c:	4604      	mov	r4, r0
 800598e:	4699      	mov	r9, r3
 8005990:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8005992:	460f      	mov	r7, r1
 8005994:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005996:	f7ff f92d 	bl	8004bf4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800599a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800599e:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80059a0:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80059a2:	d003      	beq.n	80059ac <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 80059a4:	2002      	movs	r0, #2
}
 80059a6:	b003      	add	sp, #12
 80059a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80059ac:	9000      	str	r0, [sp, #0]
 80059ae:	493c      	ldr	r1, [pc, #240]	; (8005aa0 <HAL_I2C_Mem_Write+0x118>)
 80059b0:	2319      	movs	r3, #25
 80059b2:	2201      	movs	r2, #1
 80059b4:	4620      	mov	r0, r4
 80059b6:	f7ff fd7d 	bl	80054b4 <I2C_WaitOnFlagUntilTimeout>
 80059ba:	2800      	cmp	r0, #0
 80059bc:	d1f2      	bne.n	80059a4 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 80059be:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80059c2:	2b01      	cmp	r3, #1
 80059c4:	d0ee      	beq.n	80059a4 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80059c6:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80059c8:	2301      	movs	r3, #1
 80059ca:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80059ce:	6803      	ldr	r3, [r0, #0]
 80059d0:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80059d2:	bf5e      	ittt	pl
 80059d4:	6803      	ldrpl	r3, [r0, #0]
 80059d6:	f043 0301 	orrpl.w	r3, r3, #1
 80059da:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80059dc:	6803      	ldr	r3, [r0, #0]
 80059de:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80059e2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80059e4:	2321      	movs	r3, #33	; 0x21
 80059e6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80059ea:	2340      	movs	r3, #64	; 0x40
 80059ec:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80059f0:	2300      	movs	r3, #0
 80059f2:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80059f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80059f6:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80059f8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80059fc:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80059fe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005a00:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005a02:	4b28      	ldr	r3, [pc, #160]	; (8005aa4 <HAL_I2C_Mem_Write+0x11c>)
 8005a04:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005a06:	e9cd 6500 	strd	r6, r5, [sp]
 8005a0a:	464b      	mov	r3, r9
 8005a0c:	4642      	mov	r2, r8
 8005a0e:	4639      	mov	r1, r7
 8005a10:	4620      	mov	r0, r4
 8005a12:	f7ff fe37 	bl	8005684 <I2C_RequestMemoryWrite>
 8005a16:	2800      	cmp	r0, #0
 8005a18:	d02a      	beq.n	8005a70 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8005a1a:	2001      	movs	r0, #1
 8005a1c:	e7c3      	b.n	80059a6 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005a1e:	f7ff fe0b 	bl	8005638 <I2C_WaitOnTXEFlagUntilTimeout>
 8005a22:	b140      	cbz	r0, 8005a36 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005a24:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005a26:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005a28:	bf01      	itttt	eq
 8005a2a:	6822      	ldreq	r2, [r4, #0]
 8005a2c:	6813      	ldreq	r3, [r2, #0]
 8005a2e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005a32:	6013      	streq	r3, [r2, #0]
 8005a34:	e7f1      	b.n	8005a1a <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005a36:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005a38:	6827      	ldr	r7, [r4, #0]
 8005a3a:	461a      	mov	r2, r3
 8005a3c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8005a40:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8005a42:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8005a44:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8005a46:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005a48:	3a01      	subs	r2, #1
 8005a4a:	b292      	uxth	r2, r2
 8005a4c:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005a4e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8005a50:	1e48      	subs	r0, r1, #1
 8005a52:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005a54:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8005a56:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005a58:	d50a      	bpl.n	8005a70 <HAL_I2C_Mem_Write+0xe8>
 8005a5a:	b148      	cbz	r0, 8005a70 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005a5c:	785a      	ldrb	r2, [r3, #1]
 8005a5e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8005a60:	3302      	adds	r3, #2
 8005a62:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8005a64:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005a66:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005a68:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8005a6a:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8005a6c:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8005a6e:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005a70:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005a72:	462a      	mov	r2, r5
 8005a74:	4631      	mov	r1, r6
 8005a76:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8005a78:	2b00      	cmp	r3, #0
 8005a7a:	d1d0      	bne.n	8005a1e <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005a7c:	f7ff fdb6 	bl	80055ec <I2C_WaitOnBTFFlagUntilTimeout>
 8005a80:	2800      	cmp	r0, #0
 8005a82:	d1cf      	bne.n	8005a24 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005a84:	6822      	ldr	r2, [r4, #0]
 8005a86:	6813      	ldr	r3, [r2, #0]
 8005a88:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005a8c:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005a8e:	2320      	movs	r3, #32
 8005a90:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005a94:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005a98:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8005a9c:	e783      	b.n	80059a6 <HAL_I2C_Mem_Write+0x1e>
 8005a9e:	bf00      	nop
 8005aa0:	00100002 	.word	0x00100002
 8005aa4:	ffff0000 	.word	0xffff0000

08005aa8 <HAL_I2C_Mem_Read>:
{
 8005aa8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005aac:	4604      	mov	r4, r0
 8005aae:	b087      	sub	sp, #28
 8005ab0:	4699      	mov	r9, r3
 8005ab2:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8005ab4:	460d      	mov	r5, r1
 8005ab6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005ab8:	f7ff f89c 	bl	8004bf4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005abc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005ac0:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005ac2:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005ac4:	d004      	beq.n	8005ad0 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8005ac6:	2502      	movs	r5, #2
}
 8005ac8:	4628      	mov	r0, r5
 8005aca:	b007      	add	sp, #28
 8005acc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005ad0:	9000      	str	r0, [sp, #0]
 8005ad2:	4976      	ldr	r1, [pc, #472]	; (8005cac <HAL_I2C_Mem_Read+0x204>)
 8005ad4:	2319      	movs	r3, #25
 8005ad6:	2201      	movs	r2, #1
 8005ad8:	4620      	mov	r0, r4
 8005ada:	f7ff fceb 	bl	80054b4 <I2C_WaitOnFlagUntilTimeout>
 8005ade:	2800      	cmp	r0, #0
 8005ae0:	d1f1      	bne.n	8005ac6 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8005ae2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005ae6:	2b01      	cmp	r3, #1
 8005ae8:	d0ed      	beq.n	8005ac6 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005aea:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005aec:	2301      	movs	r3, #1
 8005aee:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005af2:	6803      	ldr	r3, [r0, #0]
 8005af4:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005af6:	bf5e      	ittt	pl
 8005af8:	6803      	ldrpl	r3, [r0, #0]
 8005afa:	f043 0301 	orrpl.w	r3, r3, #1
 8005afe:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005b00:	6803      	ldr	r3, [r0, #0]
 8005b02:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005b06:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005b08:	2322      	movs	r3, #34	; 0x22
 8005b0a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005b0e:	2340      	movs	r3, #64	; 0x40
 8005b10:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005b14:	2300      	movs	r3, #0
 8005b16:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005b18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005b1a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005b1c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8005b20:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005b22:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005b24:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005b26:	4b62      	ldr	r3, [pc, #392]	; (8005cb0 <HAL_I2C_Mem_Read+0x208>)
 8005b28:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005b2a:	4629      	mov	r1, r5
 8005b2c:	e9cd 7600 	strd	r7, r6, [sp]
 8005b30:	464b      	mov	r3, r9
 8005b32:	4642      	mov	r2, r8
 8005b34:	4620      	mov	r0, r4
 8005b36:	f7ff fdfd 	bl	8005734 <I2C_RequestMemoryRead>
 8005b3a:	4605      	mov	r5, r0
 8005b3c:	b108      	cbz	r0, 8005b42 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8005b3e:	2501      	movs	r5, #1
 8005b40:	e7c2      	b.n	8005ac8 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8005b42:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005b44:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8005b46:	b9b2      	cbnz	r2, 8005b76 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005b48:	9002      	str	r0, [sp, #8]
 8005b4a:	695a      	ldr	r2, [r3, #20]
 8005b4c:	9202      	str	r2, [sp, #8]
 8005b4e:	699a      	ldr	r2, [r3, #24]
 8005b50:	9202      	str	r2, [sp, #8]
 8005b52:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005b54:	681a      	ldr	r2, [r3, #0]
 8005b56:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005b5a:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b5c:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8005cb4 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8005b60:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005b62:	2b00      	cmp	r3, #0
 8005b64:	d12c      	bne.n	8005bc0 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8005b66:	2220      	movs	r2, #32
 8005b68:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005b6c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005b70:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8005b74:	e7a8      	b.n	8005ac8 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8005b76:	2a01      	cmp	r2, #1
 8005b78:	d10a      	bne.n	8005b90 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005b7a:	681a      	ldr	r2, [r3, #0]
 8005b7c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005b80:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005b82:	9003      	str	r0, [sp, #12]
 8005b84:	695a      	ldr	r2, [r3, #20]
 8005b86:	9203      	str	r2, [sp, #12]
 8005b88:	699a      	ldr	r2, [r3, #24]
 8005b8a:	9203      	str	r2, [sp, #12]
 8005b8c:	9a03      	ldr	r2, [sp, #12]
 8005b8e:	e7e1      	b.n	8005b54 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8005b90:	2a02      	cmp	r2, #2
 8005b92:	d10e      	bne.n	8005bb2 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005b94:	681a      	ldr	r2, [r3, #0]
 8005b96:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005b9a:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005b9c:	681a      	ldr	r2, [r3, #0]
 8005b9e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005ba2:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005ba4:	9004      	str	r0, [sp, #16]
 8005ba6:	695a      	ldr	r2, [r3, #20]
 8005ba8:	9204      	str	r2, [sp, #16]
 8005baa:	699b      	ldr	r3, [r3, #24]
 8005bac:	9304      	str	r3, [sp, #16]
 8005bae:	9b04      	ldr	r3, [sp, #16]
 8005bb0:	e7d4      	b.n	8005b5c <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005bb2:	9005      	str	r0, [sp, #20]
 8005bb4:	695a      	ldr	r2, [r3, #20]
 8005bb6:	9205      	str	r2, [sp, #20]
 8005bb8:	699b      	ldr	r3, [r3, #24]
 8005bba:	9305      	str	r3, [sp, #20]
 8005bbc:	9b05      	ldr	r3, [sp, #20]
 8005bbe:	e7cd      	b.n	8005b5c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8005bc0:	2b03      	cmp	r3, #3
 8005bc2:	d856      	bhi.n	8005c72 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8005bc4:	2b01      	cmp	r3, #1
 8005bc6:	d115      	bne.n	8005bf4 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005bc8:	4632      	mov	r2, r6
 8005bca:	4639      	mov	r1, r7
 8005bcc:	4620      	mov	r0, r4
 8005bce:	f7ff fcde 	bl	800558e <I2C_WaitOnRXNEFlagUntilTimeout>
 8005bd2:	2800      	cmp	r0, #0
 8005bd4:	d1b3      	bne.n	8005b3e <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005bd6:	6823      	ldr	r3, [r4, #0]
 8005bd8:	691a      	ldr	r2, [r3, #16]
 8005bda:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005bdc:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005bde:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005be0:	3301      	adds	r3, #1
 8005be2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005be4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005be6:	3b01      	subs	r3, #1
 8005be8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005bea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005bec:	3b01      	subs	r3, #1
 8005bee:	b29b      	uxth	r3, r3
 8005bf0:	8563      	strh	r3, [r4, #42]	; 0x2a
 8005bf2:	e7b5      	b.n	8005b60 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8005bf4:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005bf6:	9600      	str	r6, [sp, #0]
 8005bf8:	463b      	mov	r3, r7
 8005bfa:	f04f 0200 	mov.w	r2, #0
 8005bfe:	4641      	mov	r1, r8
 8005c00:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8005c02:	d119      	bne.n	8005c38 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005c04:	f7ff fc56 	bl	80054b4 <I2C_WaitOnFlagUntilTimeout>
 8005c08:	2800      	cmp	r0, #0
 8005c0a:	d198      	bne.n	8005b3e <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005c0c:	6823      	ldr	r3, [r4, #0]
 8005c0e:	681a      	ldr	r2, [r3, #0]
 8005c10:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005c14:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c16:	691a      	ldr	r2, [r3, #16]
 8005c18:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005c1a:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005c1c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005c1e:	1c53      	adds	r3, r2, #1
 8005c20:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005c22:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005c24:	3b01      	subs	r3, #1
 8005c26:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005c28:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005c2a:	3b01      	subs	r3, #1
 8005c2c:	b29b      	uxth	r3, r3
 8005c2e:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c30:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c32:	691b      	ldr	r3, [r3, #16]
 8005c34:	7053      	strb	r3, [r2, #1]
 8005c36:	e7d2      	b.n	8005bde <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005c38:	f7ff fc3c 	bl	80054b4 <I2C_WaitOnFlagUntilTimeout>
 8005c3c:	2800      	cmp	r0, #0
 8005c3e:	f47f af7e 	bne.w	8005b3e <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005c42:	6823      	ldr	r3, [r4, #0]
 8005c44:	681a      	ldr	r2, [r3, #0]
 8005c46:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005c4a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c4c:	691a      	ldr	r2, [r3, #16]
 8005c4e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005c50:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005c52:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005c54:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8005c56:	3301      	adds	r3, #1
 8005c58:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005c5a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005c5c:	3b01      	subs	r3, #1
 8005c5e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005c60:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005c62:	3b01      	subs	r3, #1
 8005c64:	b29b      	uxth	r3, r3
 8005c66:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005c68:	4602      	mov	r2, r0
 8005c6a:	463b      	mov	r3, r7
 8005c6c:	4641      	mov	r1, r8
 8005c6e:	4620      	mov	r0, r4
 8005c70:	e7c8      	b.n	8005c04 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005c72:	4632      	mov	r2, r6
 8005c74:	4639      	mov	r1, r7
 8005c76:	4620      	mov	r0, r4
 8005c78:	f7ff fc89 	bl	800558e <I2C_WaitOnRXNEFlagUntilTimeout>
 8005c7c:	2800      	cmp	r0, #0
 8005c7e:	f47f af5e 	bne.w	8005b3e <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c82:	6823      	ldr	r3, [r4, #0]
 8005c84:	691a      	ldr	r2, [r3, #16]
 8005c86:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005c88:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8005c8a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005c8c:	1c53      	adds	r3, r2, #1
 8005c8e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8005c90:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005c92:	3b01      	subs	r3, #1
 8005c94:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8005c96:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005c98:	3b01      	subs	r3, #1
 8005c9a:	b29b      	uxth	r3, r3
 8005c9c:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005c9e:	6823      	ldr	r3, [r4, #0]
 8005ca0:	6959      	ldr	r1, [r3, #20]
 8005ca2:	0749      	lsls	r1, r1, #29
 8005ca4:	f57f af5c 	bpl.w	8005b60 <HAL_I2C_Mem_Read+0xb8>
 8005ca8:	e7c3      	b.n	8005c32 <HAL_I2C_Mem_Read+0x18a>
 8005caa:	bf00      	nop
 8005cac:	00100002 	.word	0x00100002
 8005cb0:	ffff0000 	.word	0xffff0000
 8005cb4:	00010004 	.word	0x00010004

08005cb8 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005cb8:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005cba:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005cbe:	2b20      	cmp	r3, #32
 8005cc0:	b2dc      	uxtb	r4, r3
 8005cc2:	d116      	bne.n	8005cf2 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8005cc4:	2324      	movs	r3, #36	; 0x24
 8005cc6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005cca:	6803      	ldr	r3, [r0, #0]
 8005ccc:	681a      	ldr	r2, [r3, #0]
 8005cce:	f022 0201 	bic.w	r2, r2, #1
 8005cd2:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8005cd4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005cd6:	f022 0210 	bic.w	r2, r2, #16
 8005cda:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8005cdc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005cde:	4311      	orrs	r1, r2
 8005ce0:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005ce2:	681a      	ldr	r2, [r3, #0]
 8005ce4:	f042 0201 	orr.w	r2, r2, #1
 8005ce8:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005cea:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8005cee:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005cf0:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8005cf2:	2002      	movs	r0, #2
 8005cf4:	e7fc      	b.n	8005cf0 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08005cf6 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8005cf6:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005cf8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005cfc:	2b20      	cmp	r3, #32
 8005cfe:	b2dc      	uxtb	r4, r3
 8005d00:	d116      	bne.n	8005d30 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005d02:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8005d04:	2324      	movs	r3, #36	; 0x24
 8005d06:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8005d0a:	6813      	ldr	r3, [r2, #0]
 8005d0c:	f023 0301 	bic.w	r3, r3, #1
 8005d10:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8005d12:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8005d14:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8005d18:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8005d1a:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8005d1c:	b29b      	uxth	r3, r3
 8005d1e:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005d20:	6813      	ldr	r3, [r2, #0]
 8005d22:	f043 0301 	orr.w	r3, r3, #1
 8005d26:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005d28:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8005d2c:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005d2e:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8005d30:	2002      	movs	r0, #2
 8005d32:	e7fc      	b.n	8005d2e <HAL_I2CEx_ConfigDigitalFilter+0x38>

08005d34 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d34:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005d36:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005d3a:	01d2      	lsls	r2, r2, #7
 8005d3c:	3284      	adds	r2, #132	; 0x84
 8005d3e:	1883      	adds	r3, r0, r2
{
 8005d40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d44:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005d46:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d48:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005d4a:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005d4e:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005d52:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005d54:	68c5      	ldr	r5, [r0, #12]
 8005d56:	f10c 0701 	add.w	r7, ip, #1
 8005d5a:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d5e:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005d62:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d64:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005d66:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005d6a:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005d6c:	68c5      	ldr	r5, [r0, #12]
 8005d6e:	68ce      	ldr	r6, [r1, #12]
 8005d70:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8005d74:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005d76:	689d      	ldr	r5, [r3, #8]
 8005d78:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005d7c:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005d7e:	68c7      	ldr	r7, [r0, #12]
 8005d80:	688d      	ldr	r5, [r1, #8]
 8005d82:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005d86:	3501      	adds	r5, #1
 8005d88:	443d      	add	r5, r7
 8005d8a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8005d8e:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005d90:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005d92:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005d94:	f025 0507 	bic.w	r5, r5, #7
 8005d98:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005d9a:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005d9e:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005da0:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005da2:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005da6:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005daa:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005dae:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8005db2:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005db6:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005dba:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8005dbe:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005dc0:	695d      	ldr	r5, [r3, #20]
 8005dc2:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8005dc6:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005dc8:	694d      	ldr	r5, [r1, #20]
 8005dca:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005dcc:	69dd      	ldr	r5, [r3, #28]
 8005dce:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8005dd2:	f025 0507 	bic.w	r5, r5, #7
 8005dd6:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005dd8:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8005ddc:	433d      	orrs	r5, r7
 8005dde:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005de0:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005de2:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005de4:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005de8:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005dea:	b31e      	cbz	r6, 8005e34 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005dec:	2e01      	cmp	r6, #1
 8005dee:	d023      	beq.n	8005e38 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005df0:	1eb5      	subs	r5, r6, #2
 8005df2:	2d02      	cmp	r5, #2
 8005df4:	d922      	bls.n	8005e3c <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8005df6:	2e07      	cmp	r6, #7
 8005df8:	bf0c      	ite	eq
 8005dfa:	2502      	moveq	r5, #2
 8005dfc:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005dfe:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8005e00:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8005e04:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005e06:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005e0a:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005e0c:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005e0e:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005e10:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005e12:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005e14:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8005e18:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005e1a:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8005e1c:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8005e20:	f024 0407 	bic.w	r4, r4, #7
 8005e24:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005e26:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005e28:	5883      	ldr	r3, [r0, r2]
 8005e2a:	f043 0301 	orr.w	r3, r3, #1
 8005e2e:	5083      	str	r3, [r0, r2]
}
 8005e30:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005e34:	2504      	movs	r5, #4
 8005e36:	e7e2      	b.n	8005dfe <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005e38:	2503      	movs	r5, #3
 8005e3a:	e7e0      	b.n	8005dfe <LTDC_SetConfig+0xca>
    tmp = 2U;
 8005e3c:	2502      	movs	r5, #2
 8005e3e:	e7de      	b.n	8005dfe <LTDC_SetConfig+0xca>

08005e40 <HAL_LTDC_Init>:
{
 8005e40:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005e42:	4604      	mov	r4, r0
 8005e44:	2800      	cmp	r0, #0
 8005e46:	d063      	beq.n	8005f10 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005e48:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8005e4c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005e50:	b91b      	cbnz	r3, 8005e5a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005e52:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005e56:	f7fb fed3 	bl	8001c00 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005e5a:	2302      	movs	r3, #2
 8005e5c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005e60:	6823      	ldr	r3, [r4, #0]
 8005e62:	699a      	ldr	r2, [r3, #24]
 8005e64:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005e68:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005e6a:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005e6e:	4302      	orrs	r2, r0
 8005e70:	68e0      	ldr	r0, [r4, #12]
 8005e72:	6999      	ldr	r1, [r3, #24]
 8005e74:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005e76:	6920      	ldr	r0, [r4, #16]
 8005e78:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005e7a:	430a      	orrs	r2, r1
 8005e7c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005e7e:	689a      	ldr	r2, [r3, #8]
 8005e80:	4924      	ldr	r1, [pc, #144]	; (8005f14 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005e82:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005e84:	400a      	ands	r2, r1
 8005e86:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005e88:	689a      	ldr	r2, [r3, #8]
 8005e8a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005e8e:	69a0      	ldr	r0, [r4, #24]
 8005e90:	4302      	orrs	r2, r0
 8005e92:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005e94:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005e96:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005e98:	400a      	ands	r2, r1
 8005e9a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005e9c:	68da      	ldr	r2, [r3, #12]
 8005e9e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005ea2:	6a20      	ldr	r0, [r4, #32]
 8005ea4:	4302      	orrs	r2, r0
 8005ea6:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005ea8:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005eaa:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005eac:	400a      	ands	r2, r1
 8005eae:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005eb0:	691a      	ldr	r2, [r3, #16]
 8005eb2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005eb6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005eb8:	4302      	orrs	r2, r0
 8005eba:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005ebc:	695a      	ldr	r2, [r3, #20]
 8005ebe:	4011      	ands	r1, r2
 8005ec0:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005ec2:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005ec4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005ec6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005eca:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005ecc:	430a      	orrs	r2, r1
 8005ece:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005ed0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005ed2:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005ed6:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005eda:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8005ede:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005ee0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005ee2:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8005ee6:	430a      	orrs	r2, r1
 8005ee8:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8005eec:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005ef0:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005ef2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005ef4:	f042 0206 	orr.w	r2, r2, #6
 8005ef8:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005efa:	699a      	ldr	r2, [r3, #24]
 8005efc:	f042 0201 	orr.w	r2, r2, #1
 8005f00:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005f02:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005f04:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005f06:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005f0a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8005f0e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005f10:	2001      	movs	r0, #1
 8005f12:	e7fc      	b.n	8005f0e <HAL_LTDC_Init+0xce>
 8005f14:	f000f800 	.word	0xf000f800

08005f18 <HAL_LTDC_ErrorCallback>:
 8005f18:	4770      	bx	lr

08005f1a <HAL_LTDC_ReloadEventCallback>:
 8005f1a:	4770      	bx	lr

08005f1c <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005f1c:	6803      	ldr	r3, [r0, #0]
{
 8005f1e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005f20:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005f22:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005f24:	0772      	lsls	r2, r6, #29
{
 8005f26:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005f28:	d514      	bpl.n	8005f54 <HAL_LTDC_IRQHandler+0x38>
 8005f2a:	0769      	lsls	r1, r5, #29
 8005f2c:	d512      	bpl.n	8005f54 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005f2e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005f30:	f022 0204 	bic.w	r2, r2, #4
 8005f34:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005f36:	2204      	movs	r2, #4
 8005f38:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005f3a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8005f3e:	f043 0301 	orr.w	r3, r3, #1
 8005f42:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8005f46:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005f48:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005f4c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005f50:	f7ff ffe2 	bl	8005f18 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005f54:	07b2      	lsls	r2, r6, #30
 8005f56:	d516      	bpl.n	8005f86 <HAL_LTDC_IRQHandler+0x6a>
 8005f58:	07ab      	lsls	r3, r5, #30
 8005f5a:	d514      	bpl.n	8005f86 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005f5c:	6823      	ldr	r3, [r4, #0]
 8005f5e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005f60:	f022 0202 	bic.w	r2, r2, #2
 8005f64:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005f66:	2202      	movs	r2, #2
 8005f68:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005f6a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8005f6e:	4313      	orrs	r3, r2
 8005f70:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005f74:	2304      	movs	r3, #4
 8005f76:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005f7a:	2300      	movs	r3, #0
 8005f7c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005f80:	4620      	mov	r0, r4
 8005f82:	f7ff ffc9 	bl	8005f18 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005f86:	07f0      	lsls	r0, r6, #31
 8005f88:	d510      	bpl.n	8005fac <HAL_LTDC_IRQHandler+0x90>
 8005f8a:	07e9      	lsls	r1, r5, #31
 8005f8c:	d50e      	bpl.n	8005fac <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005f8e:	6823      	ldr	r3, [r4, #0]
 8005f90:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005f92:	f022 0201 	bic.w	r2, r2, #1
 8005f96:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005f98:	2201      	movs	r2, #1
 8005f9a:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8005f9c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005f9e:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005fa2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005fa6:	4620      	mov	r0, r4
 8005fa8:	f7fb f964 	bl	8001274 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005fac:	0732      	lsls	r2, r6, #28
 8005fae:	d511      	bpl.n	8005fd4 <HAL_LTDC_IRQHandler+0xb8>
 8005fb0:	072b      	lsls	r3, r5, #28
 8005fb2:	d50f      	bpl.n	8005fd4 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005fb4:	6823      	ldr	r3, [r4, #0]
 8005fb6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005fb8:	f022 0208 	bic.w	r2, r2, #8
 8005fbc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005fbe:	2208      	movs	r2, #8
 8005fc0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005fc2:	2301      	movs	r3, #1
 8005fc4:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005fc8:	2300      	movs	r3, #0
 8005fca:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005fce:	4620      	mov	r0, r4
 8005fd0:	f7ff ffa3 	bl	8005f1a <HAL_LTDC_ReloadEventCallback>
}
 8005fd4:	bd70      	pop	{r4, r5, r6, pc}

08005fd6 <HAL_LTDC_ConfigLayer>:
{
 8005fd6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005fda:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005fde:	2b01      	cmp	r3, #1
{
 8005fe0:	4606      	mov	r6, r0
 8005fe2:	460f      	mov	r7, r1
 8005fe4:	4694      	mov	ip, r2
 8005fe6:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005fea:	d01f      	beq.n	800602c <HAL_LTDC_ConfigLayer+0x56>
 8005fec:	f04f 0801 	mov.w	r8, #1
 8005ff0:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005ff4:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005ff8:	2434      	movs	r4, #52	; 0x34
 8005ffa:	460d      	mov	r5, r1
 8005ffc:	fb04 6402 	mla	r4, r4, r2, r6
 8006000:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006002:	3438      	adds	r4, #56	; 0x38
 8006004:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006006:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006008:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800600a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800600c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800600e:	682b      	ldr	r3, [r5, #0]
 8006010:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006012:	4630      	mov	r0, r6
 8006014:	4662      	mov	r2, ip
 8006016:	4639      	mov	r1, r7
 8006018:	f7ff fe8c 	bl	8005d34 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800601c:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800601e:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006020:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8006024:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8006028:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800602c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006030 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8006030:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8006034:	2b01      	cmp	r3, #1
 8006036:	f04f 0302 	mov.w	r3, #2
 800603a:	d012      	beq.n	8006062 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800603c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006040:	6803      	ldr	r3, [r0, #0]
 8006042:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006044:	f022 0201 	bic.w	r2, r2, #1
 8006048:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800604a:	4a07      	ldr	r2, [pc, #28]	; (8006068 <HAL_LTDC_ProgramLineEvent+0x38>)
 800604c:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800604e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006050:	f042 0201 	orr.w	r2, r2, #1
 8006054:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8006056:	2301      	movs	r3, #1
 8006058:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800605c:	2300      	movs	r3, #0
 800605e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8006062:	4618      	mov	r0, r3
}
 8006064:	4770      	bx	lr
 8006066:	bf00      	nop
 8006068:	40016800 	.word	0x40016800

0800606c <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800606c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8006070:	4604      	mov	r4, r0
 8006072:	b340      	cbz	r0, 80060c6 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006074:	6803      	ldr	r3, [r0, #0]
 8006076:	07dd      	lsls	r5, r3, #31
 8006078:	d410      	bmi.n	800609c <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800607a:	6823      	ldr	r3, [r4, #0]
 800607c:	0798      	lsls	r0, r3, #30
 800607e:	d45e      	bmi.n	800613e <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006080:	6823      	ldr	r3, [r4, #0]
 8006082:	071a      	lsls	r2, r3, #28
 8006084:	f100 80a0 	bmi.w	80061c8 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006088:	6823      	ldr	r3, [r4, #0]
 800608a:	075b      	lsls	r3, r3, #29
 800608c:	f100 80c0 	bmi.w	8006210 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006090:	69a0      	ldr	r0, [r4, #24]
 8006092:	2800      	cmp	r0, #0
 8006094:	f040 8128 	bne.w	80062e8 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8006098:	2000      	movs	r0, #0
 800609a:	e02b      	b.n	80060f4 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800609c:	4b8f      	ldr	r3, [pc, #572]	; (80062dc <HAL_RCC_OscConfig+0x270>)
 800609e:	689a      	ldr	r2, [r3, #8]
 80060a0:	f002 020c 	and.w	r2, r2, #12
 80060a4:	2a04      	cmp	r2, #4
 80060a6:	d007      	beq.n	80060b8 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80060a8:	689a      	ldr	r2, [r3, #8]
 80060aa:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80060ae:	2a08      	cmp	r2, #8
 80060b0:	d10b      	bne.n	80060ca <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80060b2:	685a      	ldr	r2, [r3, #4]
 80060b4:	0251      	lsls	r1, r2, #9
 80060b6:	d508      	bpl.n	80060ca <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80060b8:	4b88      	ldr	r3, [pc, #544]	; (80062dc <HAL_RCC_OscConfig+0x270>)
 80060ba:	681b      	ldr	r3, [r3, #0]
 80060bc:	039a      	lsls	r2, r3, #14
 80060be:	d5dc      	bpl.n	800607a <HAL_RCC_OscConfig+0xe>
 80060c0:	6863      	ldr	r3, [r4, #4]
 80060c2:	2b00      	cmp	r3, #0
 80060c4:	d1d9      	bne.n	800607a <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 80060c6:	2001      	movs	r0, #1
 80060c8:	e014      	b.n	80060f4 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80060ca:	6862      	ldr	r2, [r4, #4]
 80060cc:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 80060d0:	d113      	bne.n	80060fa <HAL_RCC_OscConfig+0x8e>
 80060d2:	681a      	ldr	r2, [r3, #0]
 80060d4:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80060d8:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80060da:	f7fe fd8b 	bl	8004bf4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80060de:	4e7f      	ldr	r6, [pc, #508]	; (80062dc <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80060e0:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80060e2:	6833      	ldr	r3, [r6, #0]
 80060e4:	039b      	lsls	r3, r3, #14
 80060e6:	d4c8      	bmi.n	800607a <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80060e8:	f7fe fd84 	bl	8004bf4 <HAL_GetTick>
 80060ec:	1b40      	subs	r0, r0, r5
 80060ee:	2864      	cmp	r0, #100	; 0x64
 80060f0:	d9f7      	bls.n	80060e2 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 80060f2:	2003      	movs	r0, #3
}
 80060f4:	b002      	add	sp, #8
 80060f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80060fa:	4d78      	ldr	r5, [pc, #480]	; (80062dc <HAL_RCC_OscConfig+0x270>)
 80060fc:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8006100:	682b      	ldr	r3, [r5, #0]
 8006102:	d107      	bne.n	8006114 <HAL_RCC_OscConfig+0xa8>
 8006104:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006108:	602b      	str	r3, [r5, #0]
 800610a:	682b      	ldr	r3, [r5, #0]
 800610c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006110:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006112:	e7e2      	b.n	80060da <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006114:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006118:	602b      	str	r3, [r5, #0]
 800611a:	682b      	ldr	r3, [r5, #0]
 800611c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006120:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006122:	2a00      	cmp	r2, #0
 8006124:	d1d9      	bne.n	80060da <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 8006126:	f7fe fd65 	bl	8004bf4 <HAL_GetTick>
 800612a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800612c:	682b      	ldr	r3, [r5, #0]
 800612e:	039f      	lsls	r7, r3, #14
 8006130:	d5a3      	bpl.n	800607a <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006132:	f7fe fd5f 	bl	8004bf4 <HAL_GetTick>
 8006136:	1b80      	subs	r0, r0, r6
 8006138:	2864      	cmp	r0, #100	; 0x64
 800613a:	d9f7      	bls.n	800612c <HAL_RCC_OscConfig+0xc0>
 800613c:	e7d9      	b.n	80060f2 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800613e:	4b67      	ldr	r3, [pc, #412]	; (80062dc <HAL_RCC_OscConfig+0x270>)
 8006140:	689a      	ldr	r2, [r3, #8]
 8006142:	f012 0f0c 	tst.w	r2, #12
 8006146:	d007      	beq.n	8006158 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006148:	689a      	ldr	r2, [r3, #8]
 800614a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800614e:	2a08      	cmp	r2, #8
 8006150:	d111      	bne.n	8006176 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006152:	685b      	ldr	r3, [r3, #4]
 8006154:	025e      	lsls	r6, r3, #9
 8006156:	d40e      	bmi.n	8006176 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006158:	4a60      	ldr	r2, [pc, #384]	; (80062dc <HAL_RCC_OscConfig+0x270>)
 800615a:	6813      	ldr	r3, [r2, #0]
 800615c:	079d      	lsls	r5, r3, #30
 800615e:	d502      	bpl.n	8006166 <HAL_RCC_OscConfig+0xfa>
 8006160:	68e3      	ldr	r3, [r4, #12]
 8006162:	2b01      	cmp	r3, #1
 8006164:	d1af      	bne.n	80060c6 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006166:	6813      	ldr	r3, [r2, #0]
 8006168:	6921      	ldr	r1, [r4, #16]
 800616a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800616e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006172:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006174:	e784      	b.n	8006080 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8006176:	68e2      	ldr	r2, [r4, #12]
 8006178:	4b59      	ldr	r3, [pc, #356]	; (80062e0 <HAL_RCC_OscConfig+0x274>)
 800617a:	b1b2      	cbz	r2, 80061aa <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 800617c:	2201      	movs	r2, #1
 800617e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006180:	f7fe fd38 	bl	8004bf4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006184:	4d55      	ldr	r5, [pc, #340]	; (80062dc <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8006186:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006188:	682b      	ldr	r3, [r5, #0]
 800618a:	0798      	lsls	r0, r3, #30
 800618c:	d507      	bpl.n	800619e <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800618e:	682b      	ldr	r3, [r5, #0]
 8006190:	6922      	ldr	r2, [r4, #16]
 8006192:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006196:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800619a:	602b      	str	r3, [r5, #0]
 800619c:	e770      	b.n	8006080 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800619e:	f7fe fd29 	bl	8004bf4 <HAL_GetTick>
 80061a2:	1b80      	subs	r0, r0, r6
 80061a4:	2802      	cmp	r0, #2
 80061a6:	d9ef      	bls.n	8006188 <HAL_RCC_OscConfig+0x11c>
 80061a8:	e7a3      	b.n	80060f2 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 80061aa:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80061ac:	f7fe fd22 	bl	8004bf4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80061b0:	4e4a      	ldr	r6, [pc, #296]	; (80062dc <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80061b2:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80061b4:	6833      	ldr	r3, [r6, #0]
 80061b6:	0799      	lsls	r1, r3, #30
 80061b8:	f57f af62 	bpl.w	8006080 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80061bc:	f7fe fd1a 	bl	8004bf4 <HAL_GetTick>
 80061c0:	1b40      	subs	r0, r0, r5
 80061c2:	2802      	cmp	r0, #2
 80061c4:	d9f6      	bls.n	80061b4 <HAL_RCC_OscConfig+0x148>
 80061c6:	e794      	b.n	80060f2 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80061c8:	6962      	ldr	r2, [r4, #20]
 80061ca:	4b45      	ldr	r3, [pc, #276]	; (80062e0 <HAL_RCC_OscConfig+0x274>)
 80061cc:	b182      	cbz	r2, 80061f0 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 80061ce:	2201      	movs	r2, #1
 80061d0:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80061d4:	f7fe fd0e 	bl	8004bf4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80061d8:	4e40      	ldr	r6, [pc, #256]	; (80062dc <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80061da:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80061dc:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80061de:	079f      	lsls	r7, r3, #30
 80061e0:	f53f af52 	bmi.w	8006088 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80061e4:	f7fe fd06 	bl	8004bf4 <HAL_GetTick>
 80061e8:	1b40      	subs	r0, r0, r5
 80061ea:	2802      	cmp	r0, #2
 80061ec:	d9f6      	bls.n	80061dc <HAL_RCC_OscConfig+0x170>
 80061ee:	e780      	b.n	80060f2 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 80061f0:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80061f4:	f7fe fcfe 	bl	8004bf4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80061f8:	4e38      	ldr	r6, [pc, #224]	; (80062dc <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80061fa:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80061fc:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80061fe:	0798      	lsls	r0, r3, #30
 8006200:	f57f af42 	bpl.w	8006088 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006204:	f7fe fcf6 	bl	8004bf4 <HAL_GetTick>
 8006208:	1b40      	subs	r0, r0, r5
 800620a:	2802      	cmp	r0, #2
 800620c:	d9f6      	bls.n	80061fc <HAL_RCC_OscConfig+0x190>
 800620e:	e770      	b.n	80060f2 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006210:	4b32      	ldr	r3, [pc, #200]	; (80062dc <HAL_RCC_OscConfig+0x270>)
 8006212:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006214:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8006218:	d128      	bne.n	800626c <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 800621a:	9201      	str	r2, [sp, #4]
 800621c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800621e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006222:	641a      	str	r2, [r3, #64]	; 0x40
 8006224:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006226:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800622a:	9301      	str	r3, [sp, #4]
 800622c:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800622e:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006230:	4d2c      	ldr	r5, [pc, #176]	; (80062e4 <HAL_RCC_OscConfig+0x278>)
 8006232:	682b      	ldr	r3, [r5, #0]
 8006234:	05d9      	lsls	r1, r3, #23
 8006236:	d51b      	bpl.n	8006270 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006238:	68a3      	ldr	r3, [r4, #8]
 800623a:	4d28      	ldr	r5, [pc, #160]	; (80062dc <HAL_RCC_OscConfig+0x270>)
 800623c:	2b01      	cmp	r3, #1
 800623e:	d127      	bne.n	8006290 <HAL_RCC_OscConfig+0x224>
 8006240:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006242:	f043 0301 	orr.w	r3, r3, #1
 8006246:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8006248:	f7fe fcd4 	bl	8004bf4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800624c:	4e23      	ldr	r6, [pc, #140]	; (80062dc <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800624e:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006250:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006254:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8006256:	079b      	lsls	r3, r3, #30
 8006258:	d539      	bpl.n	80062ce <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 800625a:	2f00      	cmp	r7, #0
 800625c:	f43f af18 	beq.w	8006090 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006260:	4a1e      	ldr	r2, [pc, #120]	; (80062dc <HAL_RCC_OscConfig+0x270>)
 8006262:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006264:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006268:	6413      	str	r3, [r2, #64]	; 0x40
 800626a:	e711      	b.n	8006090 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800626c:	2700      	movs	r7, #0
 800626e:	e7df      	b.n	8006230 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8006270:	682b      	ldr	r3, [r5, #0]
 8006272:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006276:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006278:	f7fe fcbc 	bl	8004bf4 <HAL_GetTick>
 800627c:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800627e:	682b      	ldr	r3, [r5, #0]
 8006280:	05da      	lsls	r2, r3, #23
 8006282:	d4d9      	bmi.n	8006238 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006284:	f7fe fcb6 	bl	8004bf4 <HAL_GetTick>
 8006288:	1b80      	subs	r0, r0, r6
 800628a:	2802      	cmp	r0, #2
 800628c:	d9f7      	bls.n	800627e <HAL_RCC_OscConfig+0x212>
 800628e:	e730      	b.n	80060f2 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006290:	2b05      	cmp	r3, #5
 8006292:	d104      	bne.n	800629e <HAL_RCC_OscConfig+0x232>
 8006294:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006296:	f043 0304 	orr.w	r3, r3, #4
 800629a:	672b      	str	r3, [r5, #112]	; 0x70
 800629c:	e7d0      	b.n	8006240 <HAL_RCC_OscConfig+0x1d4>
 800629e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80062a0:	f022 0201 	bic.w	r2, r2, #1
 80062a4:	672a      	str	r2, [r5, #112]	; 0x70
 80062a6:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80062a8:	f022 0204 	bic.w	r2, r2, #4
 80062ac:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80062ae:	2b00      	cmp	r3, #0
 80062b0:	d1ca      	bne.n	8006248 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 80062b2:	f7fe fc9f 	bl	8004bf4 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80062b6:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 80062ba:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80062bc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80062be:	0798      	lsls	r0, r3, #30
 80062c0:	d5cb      	bpl.n	800625a <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80062c2:	f7fe fc97 	bl	8004bf4 <HAL_GetTick>
 80062c6:	1b80      	subs	r0, r0, r6
 80062c8:	4540      	cmp	r0, r8
 80062ca:	d9f7      	bls.n	80062bc <HAL_RCC_OscConfig+0x250>
 80062cc:	e711      	b.n	80060f2 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80062ce:	f7fe fc91 	bl	8004bf4 <HAL_GetTick>
 80062d2:	1b40      	subs	r0, r0, r5
 80062d4:	4540      	cmp	r0, r8
 80062d6:	d9bd      	bls.n	8006254 <HAL_RCC_OscConfig+0x1e8>
 80062d8:	e70b      	b.n	80060f2 <HAL_RCC_OscConfig+0x86>
 80062da:	bf00      	nop
 80062dc:	40023800 	.word	0x40023800
 80062e0:	42470000 	.word	0x42470000
 80062e4:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80062e8:	4d36      	ldr	r5, [pc, #216]	; (80063c4 <HAL_RCC_OscConfig+0x358>)
 80062ea:	68ab      	ldr	r3, [r5, #8]
 80062ec:	f003 030c 	and.w	r3, r3, #12
 80062f0:	2b08      	cmp	r3, #8
 80062f2:	d03d      	beq.n	8006370 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80062f4:	4b34      	ldr	r3, [pc, #208]	; (80063c8 <HAL_RCC_OscConfig+0x35c>)
 80062f6:	2200      	movs	r2, #0
 80062f8:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80062fa:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80062fc:	d12b      	bne.n	8006356 <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 80062fe:	f7fe fc79 	bl	8004bf4 <HAL_GetTick>
 8006302:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006304:	682b      	ldr	r3, [r5, #0]
 8006306:	0199      	lsls	r1, r3, #6
 8006308:	d41f      	bmi.n	800634a <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800630a:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800630e:	4313      	orrs	r3, r2
 8006310:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006312:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006316:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006318:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800631c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800631e:	0852      	lsrs	r2, r2, #1
 8006320:	3a01      	subs	r2, #1
 8006322:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006326:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8006328:	4b27      	ldr	r3, [pc, #156]	; (80063c8 <HAL_RCC_OscConfig+0x35c>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800632a:	4d26      	ldr	r5, [pc, #152]	; (80063c4 <HAL_RCC_OscConfig+0x358>)
        __HAL_RCC_PLL_ENABLE();
 800632c:	2201      	movs	r2, #1
 800632e:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8006330:	f7fe fc60 	bl	8004bf4 <HAL_GetTick>
 8006334:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006336:	682b      	ldr	r3, [r5, #0]
 8006338:	019a      	lsls	r2, r3, #6
 800633a:	f53f aead 	bmi.w	8006098 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800633e:	f7fe fc59 	bl	8004bf4 <HAL_GetTick>
 8006342:	1b00      	subs	r0, r0, r4
 8006344:	2802      	cmp	r0, #2
 8006346:	d9f6      	bls.n	8006336 <HAL_RCC_OscConfig+0x2ca>
 8006348:	e6d3      	b.n	80060f2 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800634a:	f7fe fc53 	bl	8004bf4 <HAL_GetTick>
 800634e:	1b80      	subs	r0, r0, r6
 8006350:	2802      	cmp	r0, #2
 8006352:	d9d7      	bls.n	8006304 <HAL_RCC_OscConfig+0x298>
 8006354:	e6cd      	b.n	80060f2 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8006356:	f7fe fc4d 	bl	8004bf4 <HAL_GetTick>
 800635a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800635c:	682b      	ldr	r3, [r5, #0]
 800635e:	019b      	lsls	r3, r3, #6
 8006360:	f57f ae9a 	bpl.w	8006098 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006364:	f7fe fc46 	bl	8004bf4 <HAL_GetTick>
 8006368:	1b00      	subs	r0, r0, r4
 800636a:	2802      	cmp	r0, #2
 800636c:	d9f6      	bls.n	800635c <HAL_RCC_OscConfig+0x2f0>
 800636e:	e6c0      	b.n	80060f2 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8006370:	2801      	cmp	r0, #1
 8006372:	f43f aebf 	beq.w	80060f4 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8006376:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006378:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800637a:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800637e:	4291      	cmp	r1, r2
 8006380:	f47f aea1 	bne.w	80060c6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006384:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006386:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800638a:	428a      	cmp	r2, r1
 800638c:	f47f ae9b 	bne.w	80060c6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006390:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006392:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8006396:	401a      	ands	r2, r3
 8006398:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800639c:	f47f ae93 	bne.w	80060c6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80063a0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80063a2:	0852      	lsrs	r2, r2, #1
 80063a4:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 80063a8:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80063aa:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 80063ae:	f47f ae8a 	bne.w	80060c6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80063b2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80063b4:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80063b8:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 80063bc:	f43f ae6c 	beq.w	8006098 <HAL_RCC_OscConfig+0x2c>
 80063c0:	e681      	b.n	80060c6 <HAL_RCC_OscConfig+0x5a>
 80063c2:	bf00      	nop
 80063c4:	40023800 	.word	0x40023800
 80063c8:	42470000 	.word	0x42470000

080063cc <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80063cc:	4913      	ldr	r1, [pc, #76]	; (800641c <HAL_RCC_GetSysClockFreq+0x50>)
{
 80063ce:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80063d0:	688b      	ldr	r3, [r1, #8]
 80063d2:	f003 030c 	and.w	r3, r3, #12
 80063d6:	2b04      	cmp	r3, #4
 80063d8:	d01c      	beq.n	8006414 <HAL_RCC_GetSysClockFreq+0x48>
 80063da:	2b08      	cmp	r3, #8
 80063dc:	d11c      	bne.n	8006418 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80063de:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80063e0:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80063e2:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80063e4:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80063e8:	bf14      	ite	ne
 80063ea:	480d      	ldrne	r0, [pc, #52]	; (8006420 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80063ec:	480d      	ldreq	r0, [pc, #52]	; (8006424 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80063ee:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80063f2:	bf18      	it	ne
 80063f4:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80063f6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80063fa:	fba1 0100 	umull	r0, r1, r1, r0
 80063fe:	f7f9 ff47 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006402:	4b06      	ldr	r3, [pc, #24]	; (800641c <HAL_RCC_GetSysClockFreq+0x50>)
 8006404:	685b      	ldr	r3, [r3, #4]
 8006406:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800640a:	3301      	adds	r3, #1
 800640c:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800640e:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8006412:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006414:	4802      	ldr	r0, [pc, #8]	; (8006420 <HAL_RCC_GetSysClockFreq+0x54>)
 8006416:	e7fc      	b.n	8006412 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8006418:	4802      	ldr	r0, [pc, #8]	; (8006424 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800641a:	e7fa      	b.n	8006412 <HAL_RCC_GetSysClockFreq+0x46>
 800641c:	40023800 	.word	0x40023800
 8006420:	007a1200 	.word	0x007a1200
 8006424:	00f42400 	.word	0x00f42400

08006428 <HAL_RCC_ClockConfig>:
{
 8006428:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800642c:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800642e:	4604      	mov	r4, r0
 8006430:	b910      	cbnz	r0, 8006438 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8006432:	2001      	movs	r0, #1
}
 8006434:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8006438:	4b44      	ldr	r3, [pc, #272]	; (800654c <HAL_RCC_ClockConfig+0x124>)
 800643a:	681a      	ldr	r2, [r3, #0]
 800643c:	f002 020f 	and.w	r2, r2, #15
 8006440:	428a      	cmp	r2, r1
 8006442:	d328      	bcc.n	8006496 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006444:	6822      	ldr	r2, [r4, #0]
 8006446:	0797      	lsls	r7, r2, #30
 8006448:	d42d      	bmi.n	80064a6 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800644a:	07d0      	lsls	r0, r2, #31
 800644c:	d441      	bmi.n	80064d2 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800644e:	4b3f      	ldr	r3, [pc, #252]	; (800654c <HAL_RCC_ClockConfig+0x124>)
 8006450:	681a      	ldr	r2, [r3, #0]
 8006452:	f002 020f 	and.w	r2, r2, #15
 8006456:	42aa      	cmp	r2, r5
 8006458:	d866      	bhi.n	8006528 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800645a:	6822      	ldr	r2, [r4, #0]
 800645c:	0751      	lsls	r1, r2, #29
 800645e:	d46c      	bmi.n	800653a <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006460:	0713      	lsls	r3, r2, #28
 8006462:	d507      	bpl.n	8006474 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006464:	4a3a      	ldr	r2, [pc, #232]	; (8006550 <HAL_RCC_ClockConfig+0x128>)
 8006466:	6921      	ldr	r1, [r4, #16]
 8006468:	6893      	ldr	r3, [r2, #8]
 800646a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800646e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006472:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8006474:	f7ff ffaa 	bl	80063cc <HAL_RCC_GetSysClockFreq>
 8006478:	4b35      	ldr	r3, [pc, #212]	; (8006550 <HAL_RCC_ClockConfig+0x128>)
 800647a:	4a36      	ldr	r2, [pc, #216]	; (8006554 <HAL_RCC_ClockConfig+0x12c>)
 800647c:	689b      	ldr	r3, [r3, #8]
 800647e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8006482:	5cd3      	ldrb	r3, [r2, r3]
 8006484:	40d8      	lsrs	r0, r3
 8006486:	4b34      	ldr	r3, [pc, #208]	; (8006558 <HAL_RCC_ClockConfig+0x130>)
 8006488:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800648a:	4b34      	ldr	r3, [pc, #208]	; (800655c <HAL_RCC_ClockConfig+0x134>)
 800648c:	6818      	ldr	r0, [r3, #0]
 800648e:	f7fb fd6b 	bl	8001f68 <HAL_InitTick>
  return HAL_OK;
 8006492:	2000      	movs	r0, #0
 8006494:	e7ce      	b.n	8006434 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006496:	b2ca      	uxtb	r2, r1
 8006498:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800649a:	681b      	ldr	r3, [r3, #0]
 800649c:	f003 030f 	and.w	r3, r3, #15
 80064a0:	428b      	cmp	r3, r1
 80064a2:	d1c6      	bne.n	8006432 <HAL_RCC_ClockConfig+0xa>
 80064a4:	e7ce      	b.n	8006444 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80064a6:	4b2a      	ldr	r3, [pc, #168]	; (8006550 <HAL_RCC_ClockConfig+0x128>)
 80064a8:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80064ac:	bf1e      	ittt	ne
 80064ae:	6899      	ldrne	r1, [r3, #8]
 80064b0:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 80064b4:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80064b6:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80064b8:	bf42      	ittt	mi
 80064ba:	6899      	ldrmi	r1, [r3, #8]
 80064bc:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 80064c0:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80064c2:	4923      	ldr	r1, [pc, #140]	; (8006550 <HAL_RCC_ClockConfig+0x128>)
 80064c4:	68a0      	ldr	r0, [r4, #8]
 80064c6:	688b      	ldr	r3, [r1, #8]
 80064c8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80064cc:	4303      	orrs	r3, r0
 80064ce:	608b      	str	r3, [r1, #8]
 80064d0:	e7bb      	b.n	800644a <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80064d2:	6862      	ldr	r2, [r4, #4]
 80064d4:	4b1e      	ldr	r3, [pc, #120]	; (8006550 <HAL_RCC_ClockConfig+0x128>)
 80064d6:	2a01      	cmp	r2, #1
 80064d8:	d11c      	bne.n	8006514 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80064da:	681b      	ldr	r3, [r3, #0]
 80064dc:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80064e0:	d0a7      	beq.n	8006432 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80064e2:	4e1b      	ldr	r6, [pc, #108]	; (8006550 <HAL_RCC_ClockConfig+0x128>)
 80064e4:	68b3      	ldr	r3, [r6, #8]
 80064e6:	f023 0303 	bic.w	r3, r3, #3
 80064ea:	4313      	orrs	r3, r2
 80064ec:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 80064ee:	f7fe fb81 	bl	8004bf4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80064f2:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 80064f6:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80064f8:	68b3      	ldr	r3, [r6, #8]
 80064fa:	6862      	ldr	r2, [r4, #4]
 80064fc:	f003 030c 	and.w	r3, r3, #12
 8006500:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8006504:	d0a3      	beq.n	800644e <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006506:	f7fe fb75 	bl	8004bf4 <HAL_GetTick>
 800650a:	1bc0      	subs	r0, r0, r7
 800650c:	4540      	cmp	r0, r8
 800650e:	d9f3      	bls.n	80064f8 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8006510:	2003      	movs	r0, #3
 8006512:	e78f      	b.n	8006434 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006514:	1e91      	subs	r1, r2, #2
 8006516:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006518:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800651a:	d802      	bhi.n	8006522 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800651c:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8006520:	e7de      	b.n	80064e0 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006522:	f013 0f02 	tst.w	r3, #2
 8006526:	e7db      	b.n	80064e0 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006528:	b2ea      	uxtb	r2, r5
 800652a:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800652c:	681b      	ldr	r3, [r3, #0]
 800652e:	f003 030f 	and.w	r3, r3, #15
 8006532:	42ab      	cmp	r3, r5
 8006534:	f47f af7d 	bne.w	8006432 <HAL_RCC_ClockConfig+0xa>
 8006538:	e78f      	b.n	800645a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800653a:	4905      	ldr	r1, [pc, #20]	; (8006550 <HAL_RCC_ClockConfig+0x128>)
 800653c:	68e0      	ldr	r0, [r4, #12]
 800653e:	688b      	ldr	r3, [r1, #8]
 8006540:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8006544:	4303      	orrs	r3, r0
 8006546:	608b      	str	r3, [r1, #8]
 8006548:	e78a      	b.n	8006460 <HAL_RCC_ClockConfig+0x38>
 800654a:	bf00      	nop
 800654c:	40023c00 	.word	0x40023c00
 8006550:	40023800 	.word	0x40023800
 8006554:	08020378 	.word	0x08020378
 8006558:	20000074 	.word	0x20000074
 800655c:	2000007c 	.word	0x2000007c

08006560 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006560:	4b04      	ldr	r3, [pc, #16]	; (8006574 <HAL_RCC_GetPCLK1Freq+0x14>)
 8006562:	4a05      	ldr	r2, [pc, #20]	; (8006578 <HAL_RCC_GetPCLK1Freq+0x18>)
 8006564:	689b      	ldr	r3, [r3, #8]
 8006566:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800656a:	5cd3      	ldrb	r3, [r2, r3]
 800656c:	4a03      	ldr	r2, [pc, #12]	; (800657c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800656e:	6810      	ldr	r0, [r2, #0]
}
 8006570:	40d8      	lsrs	r0, r3
 8006572:	4770      	bx	lr
 8006574:	40023800 	.word	0x40023800
 8006578:	08020388 	.word	0x08020388
 800657c:	20000074 	.word	0x20000074

08006580 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8006580:	4b04      	ldr	r3, [pc, #16]	; (8006594 <HAL_RCC_GetPCLK2Freq+0x14>)
 8006582:	4a05      	ldr	r2, [pc, #20]	; (8006598 <HAL_RCC_GetPCLK2Freq+0x18>)
 8006584:	689b      	ldr	r3, [r3, #8]
 8006586:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800658a:	5cd3      	ldrb	r3, [r2, r3]
 800658c:	4a03      	ldr	r2, [pc, #12]	; (800659c <HAL_RCC_GetPCLK2Freq+0x1c>)
 800658e:	6810      	ldr	r0, [r2, #0]
}
 8006590:	40d8      	lsrs	r0, r3
 8006592:	4770      	bx	lr
 8006594:	40023800 	.word	0x40023800
 8006598:	08020388 	.word	0x08020388
 800659c:	20000074 	.word	0x20000074

080065a0 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80065a0:	230f      	movs	r3, #15
 80065a2:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80065a4:	4b0b      	ldr	r3, [pc, #44]	; (80065d4 <HAL_RCC_GetClockConfig+0x34>)
 80065a6:	689a      	ldr	r2, [r3, #8]
 80065a8:	f002 0203 	and.w	r2, r2, #3
 80065ac:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80065ae:	689a      	ldr	r2, [r3, #8]
 80065b0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80065b4:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80065b6:	689a      	ldr	r2, [r3, #8]
 80065b8:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 80065bc:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80065be:	689b      	ldr	r3, [r3, #8]
 80065c0:	08db      	lsrs	r3, r3, #3
 80065c2:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80065c6:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80065c8:	4b03      	ldr	r3, [pc, #12]	; (80065d8 <HAL_RCC_GetClockConfig+0x38>)
 80065ca:	681b      	ldr	r3, [r3, #0]
 80065cc:	f003 030f 	and.w	r3, r3, #15
 80065d0:	600b      	str	r3, [r1, #0]
}
 80065d2:	4770      	bx	lr
 80065d4:	40023800 	.word	0x40023800
 80065d8:	40023c00 	.word	0x40023c00

080065dc <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 80065dc:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80065de:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 80065e2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80065e4:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80065e6:	f040 808c 	bne.w	8006702 <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80065ea:	6823      	ldr	r3, [r4, #0]
 80065ec:	f013 0f0c 	tst.w	r3, #12
 80065f0:	d045      	beq.n	800667e <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80065f2:	4b8b      	ldr	r3, [pc, #556]	; (8006820 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80065f4:	4d8b      	ldr	r5, [pc, #556]	; (8006824 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 80065f6:	2200      	movs	r2, #0
 80065f8:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80065fa:	f7fe fafb 	bl	8004bf4 <HAL_GetTick>
 80065fe:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006600:	682b      	ldr	r3, [r5, #0]
 8006602:	009f      	lsls	r7, r3, #2
 8006604:	f100 80cf 	bmi.w	80067a6 <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006608:	6821      	ldr	r1, [r4, #0]
 800660a:	074e      	lsls	r6, r1, #29
 800660c:	d515      	bpl.n	800663a <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800660e:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006612:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006616:	061b      	lsls	r3, r3, #24
 8006618:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800661c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006620:	4313      	orrs	r3, r2
 8006622:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006626:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 800662a:	6a22      	ldr	r2, [r4, #32]
 800662c:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8006630:	3a01      	subs	r2, #1
 8006632:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006636:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800663a:	070d      	lsls	r5, r1, #28
 800663c:	d514      	bpl.n	8006668 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800663e:	4a79      	ldr	r2, [pc, #484]	; (8006824 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006640:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006642:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006646:	6920      	ldr	r0, [r4, #16]
 8006648:	071b      	lsls	r3, r3, #28
 800664a:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800664e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006652:	430b      	orrs	r3, r1
 8006654:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8006658:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800665c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800665e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006662:	430b      	orrs	r3, r1
 8006664:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006668:	4b6d      	ldr	r3, [pc, #436]	; (8006820 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800666a:	4e6e      	ldr	r6, [pc, #440]	; (8006824 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 800666c:	2201      	movs	r2, #1
 800666e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8006670:	f7fe fac0 	bl	8004bf4 <HAL_GetTick>
 8006674:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006676:	6833      	ldr	r3, [r6, #0]
 8006678:	0098      	lsls	r0, r3, #2
 800667a:	f140 809b 	bpl.w	80067b4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800667e:	6823      	ldr	r3, [r4, #0]
 8006680:	069b      	lsls	r3, r3, #26
 8006682:	d533      	bpl.n	80066ec <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8006684:	2300      	movs	r3, #0
 8006686:	9301      	str	r3, [sp, #4]
 8006688:	4b66      	ldr	r3, [pc, #408]	; (8006824 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800668a:	4d67      	ldr	r5, [pc, #412]	; (8006828 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800668c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800668e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006692:	641a      	str	r2, [r3, #64]	; 0x40
 8006694:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006696:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800669a:	9301      	str	r3, [sp, #4]
 800669c:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800669e:	682b      	ldr	r3, [r5, #0]
 80066a0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80066a4:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 80066a6:	f7fe faa5 	bl	8004bf4 <HAL_GetTick>
 80066aa:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 80066ac:	682b      	ldr	r3, [r5, #0]
 80066ae:	05d9      	lsls	r1, r3, #23
 80066b0:	f140 8087 	bpl.w	80067c2 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80066b4:	4d5b      	ldr	r5, [pc, #364]	; (8006824 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80066b6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80066b8:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 80066bc:	f040 8088 	bne.w	80067d0 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80066c0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80066c2:	f403 7240 	and.w	r2, r3, #768	; 0x300
 80066c6:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 80066ca:	4a56      	ldr	r2, [pc, #344]	; (8006824 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80066cc:	f040 80a4 	bne.w	8006818 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 80066d0:	6891      	ldr	r1, [r2, #8]
 80066d2:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 80066d6:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80066da:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 80066de:	4301      	orrs	r1, r0
 80066e0:	6091      	str	r1, [r2, #8]
 80066e2:	6f11      	ldr	r1, [r2, #112]	; 0x70
 80066e4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80066e8:	430b      	orrs	r3, r1
 80066ea:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80066ec:	6820      	ldr	r0, [r4, #0]
 80066ee:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80066f2:	bf1f      	itttt	ne
 80066f4:	4b4d      	ldrne	r3, [pc, #308]	; (800682c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 80066f6:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 80066fa:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 80066fe:	2000      	movne	r0, #0
 8006700:	e04f      	b.n	80067a2 <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 8006702:	4b47      	ldr	r3, [pc, #284]	; (8006820 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006704:	4e47      	ldr	r6, [pc, #284]	; (8006824 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 8006706:	2200      	movs	r2, #0
 8006708:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800670a:	f7fe fa73 	bl	8004bf4 <HAL_GetTick>
 800670e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006710:	6833      	ldr	r3, [r6, #0]
 8006712:	011f      	lsls	r7, r3, #4
 8006714:	d43f      	bmi.n	8006796 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006716:	6821      	ldr	r1, [r4, #0]
 8006718:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800671a:	bf41      	itttt	mi
 800671c:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8006720:	071b      	lslmi	r3, r3, #28
 8006722:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8006726:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800672a:	0788      	lsls	r0, r1, #30
 800672c:	d515      	bpl.n	800675a <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800672e:	4a3d      	ldr	r2, [pc, #244]	; (8006824 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006730:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006732:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006736:	6865      	ldr	r5, [r4, #4]
 8006738:	061b      	lsls	r3, r3, #24
 800673a:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800673e:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8006742:	4303      	orrs	r3, r0
 8006744:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006748:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 800674c:	69e3      	ldr	r3, [r4, #28]
 800674e:	f020 001f 	bic.w	r0, r0, #31
 8006752:	3b01      	subs	r3, #1
 8006754:	4303      	orrs	r3, r0
 8006756:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800675a:	0649      	lsls	r1, r1, #25
 800675c:	d50a      	bpl.n	8006774 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800675e:	68e3      	ldr	r3, [r4, #12]
 8006760:	6862      	ldr	r2, [r4, #4]
 8006762:	061b      	lsls	r3, r3, #24
 8006764:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006768:	68a2      	ldr	r2, [r4, #8]
 800676a:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800676e:	4a2d      	ldr	r2, [pc, #180]	; (8006824 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8006770:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8006774:	4b2a      	ldr	r3, [pc, #168]	; (8006820 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006776:	4e2b      	ldr	r6, [pc, #172]	; (8006824 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 8006778:	2201      	movs	r2, #1
 800677a:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800677c:	f7fe fa3a 	bl	8004bf4 <HAL_GetTick>
 8006780:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006782:	6833      	ldr	r3, [r6, #0]
 8006784:	011a      	lsls	r2, r3, #4
 8006786:	f53f af30 	bmi.w	80065ea <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800678a:	f7fe fa33 	bl	8004bf4 <HAL_GetTick>
 800678e:	1b40      	subs	r0, r0, r5
 8006790:	2802      	cmp	r0, #2
 8006792:	d9f6      	bls.n	8006782 <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8006794:	e004      	b.n	80067a0 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006796:	f7fe fa2d 	bl	8004bf4 <HAL_GetTick>
 800679a:	1b40      	subs	r0, r0, r5
 800679c:	2802      	cmp	r0, #2
 800679e:	d9b7      	bls.n	8006710 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 80067a0:	2003      	movs	r0, #3
}
 80067a2:	b003      	add	sp, #12
 80067a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80067a6:	f7fe fa25 	bl	8004bf4 <HAL_GetTick>
 80067aa:	1b80      	subs	r0, r0, r6
 80067ac:	2802      	cmp	r0, #2
 80067ae:	f67f af27 	bls.w	8006600 <HAL_RCCEx_PeriphCLKConfig+0x24>
 80067b2:	e7f5      	b.n	80067a0 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80067b4:	f7fe fa1e 	bl	8004bf4 <HAL_GetTick>
 80067b8:	1b40      	subs	r0, r0, r5
 80067ba:	2802      	cmp	r0, #2
 80067bc:	f67f af5b 	bls.w	8006676 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 80067c0:	e7ee      	b.n	80067a0 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 80067c2:	f7fe fa17 	bl	8004bf4 <HAL_GetTick>
 80067c6:	1b80      	subs	r0, r0, r6
 80067c8:	2802      	cmp	r0, #2
 80067ca:	f67f af6f 	bls.w	80066ac <HAL_RCCEx_PeriphCLKConfig+0xd0>
 80067ce:	e7e7      	b.n	80067a0 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80067d0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80067d2:	f402 7240 	and.w	r2, r2, #768	; 0x300
 80067d6:	4293      	cmp	r3, r2
 80067d8:	f43f af72 	beq.w	80066c0 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80067dc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 80067de:	4a10      	ldr	r2, [pc, #64]	; (8006820 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 80067e0:	2101      	movs	r1, #1
 80067e2:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80067e6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 80067ea:	2100      	movs	r1, #0
 80067ec:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 80067f0:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80067f2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80067f4:	07da      	lsls	r2, r3, #31
 80067f6:	f57f af63 	bpl.w	80066c0 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 80067fa:	f7fe f9fb 	bl	8004bf4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80067fe:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8006802:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006804:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006806:	079b      	lsls	r3, r3, #30
 8006808:	f53f af5a 	bmi.w	80066c0 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800680c:	f7fe f9f2 	bl	8004bf4 <HAL_GetTick>
 8006810:	1b80      	subs	r0, r0, r6
 8006812:	42b8      	cmp	r0, r7
 8006814:	d9f6      	bls.n	8006804 <HAL_RCCEx_PeriphCLKConfig+0x228>
 8006816:	e7c3      	b.n	80067a0 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006818:	6891      	ldr	r1, [r2, #8]
 800681a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800681e:	e75f      	b.n	80066e0 <HAL_RCCEx_PeriphCLKConfig+0x104>
 8006820:	42470000 	.word	0x42470000
 8006824:	40023800 	.word	0x40023800
 8006828:	40007000 	.word	0x40007000
 800682c:	42471000 	.word	0x42471000

08006830 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8006830:	b538      	push	{r3, r4, r5, lr}
 8006832:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8006834:	4604      	mov	r4, r0
 8006836:	b1c8      	cbz	r0, 800686c <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8006838:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800683c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006840:	b91b      	cbnz	r3, 800684a <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006842:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006846:	f7fb fb23 	bl	8001e90 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800684a:	2302      	movs	r3, #2
 800684c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006850:	1d21      	adds	r1, r4, #4
 8006852:	6820      	ldr	r0, [r4, #0]
 8006854:	f000 fd90 	bl	8007378 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8006858:	6862      	ldr	r2, [r4, #4]
 800685a:	6820      	ldr	r0, [r4, #0]
 800685c:	4629      	mov	r1, r5
 800685e:	f000 fdc6 	bl	80073ee <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006862:	2301      	movs	r3, #1
 8006864:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 8006868:	2000      	movs	r0, #0
}
 800686a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800686c:	2001      	movs	r0, #1
 800686e:	e7fc      	b.n	800686a <HAL_SDRAM_Init+0x3a>

08006870 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8006870:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006872:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8006876:	2b02      	cmp	r3, #2
{
 8006878:	4605      	mov	r5, r0
 800687a:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800687c:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800687e:	d012      	beq.n	80068a6 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8006880:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 8006884:	2c01      	cmp	r4, #1
 8006886:	d10f      	bne.n	80068a8 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006888:	2302      	movs	r3, #2
 800688a:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800688e:	6828      	ldr	r0, [r5, #0]
 8006890:	f000 fde3 	bl	800745a <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006894:	6833      	ldr	r3, [r6, #0]
 8006896:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006898:	bf06      	itte	eq
 800689a:	2305      	moveq	r3, #5
 800689c:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 80068a0:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80068a4:	2000      	movs	r0, #0
}
 80068a6:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 80068a8:	2001      	movs	r0, #1
 80068aa:	e7fc      	b.n	80068a6 <HAL_SDRAM_SendCommand+0x36>

080068ac <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80068ac:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80068ae:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80068b2:	2b02      	cmp	r3, #2
{
 80068b4:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80068b6:	b2d8      	uxtb	r0, r3
 80068b8:	d00d      	beq.n	80068d6 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 80068ba:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80068be:	2b01      	cmp	r3, #1
 80068c0:	b2dd      	uxtb	r5, r3
 80068c2:	d109      	bne.n	80068d8 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80068c4:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80068c6:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80068c8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80068cc:	f000 fdeb 	bl	80074a6 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 80068d0:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80068d4:	2000      	movs	r0, #0
}
 80068d6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80068d8:	2001      	movs	r0, #1
 80068da:	e7fc      	b.n	80068d6 <HAL_SDRAM_ProgramRefreshRate+0x2a>

080068dc <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 80068dc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80068e0:	461d      	mov	r5, r3
 80068e2:	4617      	mov	r7, r2
 80068e4:	4688      	mov	r8, r1
 80068e6:	4606      	mov	r6, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 80068e8:	f7fe f984 	bl	8004bf4 <HAL_GetTick>
 80068ec:	443d      	add	r5, r7
 80068ee:	1a2c      	subs	r4, r5, r0
  tmp_tickstart = HAL_GetTick();
 80068f0:	f7fe f980 	bl	8004bf4 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 80068f4:	4b22      	ldr	r3, [pc, #136]	; (8006980 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa4>)
 80068f6:	681b      	ldr	r3, [r3, #0]
 80068f8:	f3c3 33cb 	ubfx	r3, r3, #15, #12
  tmp_tickstart = HAL_GetTick();
 80068fc:	4605      	mov	r5, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 80068fe:	4363      	muls	r3, r4

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006900:	6832      	ldr	r2, [r6, #0]
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
      {
        tmp_timeout = 0U;
      }
      count--;
 8006902:	9301      	str	r3, [sp, #4]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006904:	6893      	ldr	r3, [r2, #8]
 8006906:	ea38 0303 	bics.w	r3, r8, r3
 800690a:	d001      	beq.n	8006910 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x34>
    }
  }

  return HAL_OK;
 800690c:	2000      	movs	r0, #0
 800690e:	e02d      	b.n	800696c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
    if (Timeout != HAL_MAX_DELAY)
 8006910:	1c7b      	adds	r3, r7, #1
 8006912:	d0f7      	beq.n	8006904 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x28>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8006914:	f7fe f96e 	bl	8004bf4 <HAL_GetTick>
 8006918:	1b40      	subs	r0, r0, r5
 800691a:	42a0      	cmp	r0, r4
 800691c:	d329      	bcc.n	8006972 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x96>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800691e:	6833      	ldr	r3, [r6, #0]
 8006920:	685a      	ldr	r2, [r3, #4]
 8006922:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8006926:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006928:	6872      	ldr	r2, [r6, #4]
 800692a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800692e:	d10a      	bne.n	8006946 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
 8006930:	68b2      	ldr	r2, [r6, #8]
 8006932:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8006936:	d002      	beq.n	800693e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006938:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800693c:	d103      	bne.n	8006946 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
          __HAL_SPI_DISABLE(hspi);
 800693e:	681a      	ldr	r2, [r3, #0]
 8006940:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006944:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006946:	6ab2      	ldr	r2, [r6, #40]	; 0x28
 8006948:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800694c:	d107      	bne.n	800695e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x82>
          SPI_RESET_CRC(hspi);
 800694e:	681a      	ldr	r2, [r3, #0]
 8006950:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006954:	601a      	str	r2, [r3, #0]
 8006956:	681a      	ldr	r2, [r3, #0]
 8006958:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800695c:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800695e:	2301      	movs	r3, #1
 8006960:	f886 3051 	strb.w	r3, [r6, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8006964:	2300      	movs	r3, #0
 8006966:	f886 3050 	strb.w	r3, [r6, #80]	; 0x50
        return HAL_TIMEOUT;
 800696a:	2003      	movs	r0, #3
}
 800696c:	b002      	add	sp, #8
 800696e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (count == 0U)
 8006972:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 8006974:	2b00      	cmp	r3, #0
      count--;
 8006976:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 8006978:	bf08      	it	eq
 800697a:	2400      	moveq	r4, #0
      count--;
 800697c:	3b01      	subs	r3, #1
 800697e:	e7bf      	b.n	8006900 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x24>
 8006980:	20000074 	.word	0x20000074

08006984 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8006984:	b538      	push	{r3, r4, r5, lr}
 8006986:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006988:	6842      	ldr	r2, [r0, #4]
 800698a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800698e:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006990:	d11f      	bne.n	80069d2 <SPI_EndRxTransaction+0x4e>
 8006992:	6882      	ldr	r2, [r0, #8]
 8006994:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8006998:	d002      	beq.n	80069a0 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800699a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800699e:	d107      	bne.n	80069b0 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 80069a0:	6825      	ldr	r5, [r4, #0]
 80069a2:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80069a4:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 80069a8:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 80069ac:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80069ae:	d007      	beq.n	80069c0 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80069b0:	460a      	mov	r2, r1
 80069b2:	2180      	movs	r1, #128	; 0x80
 80069b4:	4620      	mov	r0, r4
 80069b6:	f7ff ff91 	bl	80068dc <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80069ba:	b920      	cbnz	r0, 80069c6 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 80069bc:	2000      	movs	r0, #0
}
 80069be:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80069c0:	460a      	mov	r2, r1
 80069c2:	2101      	movs	r1, #1
 80069c4:	e7f6      	b.n	80069b4 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80069c6:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80069c8:	f043 0320 	orr.w	r3, r3, #32
 80069cc:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 80069ce:	2003      	movs	r0, #3
 80069d0:	e7f5      	b.n	80069be <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80069d2:	460a      	mov	r2, r1
 80069d4:	2101      	movs	r1, #1
 80069d6:	e7ee      	b.n	80069b6 <SPI_EndRxTransaction+0x32>

080069d8 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 80069d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80069da:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80069dc:	4a12      	ldr	r2, [pc, #72]	; (8006a28 <SPI_EndRxTxTransaction+0x50>)
 80069de:	6815      	ldr	r5, [r2, #0]
 80069e0:	4a12      	ldr	r2, [pc, #72]	; (8006a2c <SPI_EndRxTxTransaction+0x54>)
 80069e2:	fbb5 f5f2 	udiv	r5, r5, r2
 80069e6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80069ea:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80069ec:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80069ee:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80069f0:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 80069f4:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80069f6:	d10b      	bne.n	8006a10 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80069f8:	460a      	mov	r2, r1
 80069fa:	2180      	movs	r1, #128	; 0x80
 80069fc:	f7ff ff6e 	bl	80068dc <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8006a00:	b178      	cbz	r0, 8006a22 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006a02:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006a04:	f043 0320 	orr.w	r3, r3, #32
 8006a08:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8006a0a:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8006a0c:	b003      	add	sp, #12
 8006a0e:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8006a10:	9b01      	ldr	r3, [sp, #4]
 8006a12:	b133      	cbz	r3, 8006a22 <SPI_EndRxTxTransaction+0x4a>
      count--;
 8006a14:	9b01      	ldr	r3, [sp, #4]
 8006a16:	3b01      	subs	r3, #1
 8006a18:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8006a1a:	6823      	ldr	r3, [r4, #0]
 8006a1c:	689b      	ldr	r3, [r3, #8]
 8006a1e:	061b      	lsls	r3, r3, #24
 8006a20:	d4f6      	bmi.n	8006a10 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8006a22:	2000      	movs	r0, #0
 8006a24:	e7f2      	b.n	8006a0c <SPI_EndRxTxTransaction+0x34>
 8006a26:	bf00      	nop
 8006a28:	20000074 	.word	0x20000074
 8006a2c:	016e3600 	.word	0x016e3600

08006a30 <HAL_SPI_Init>:
{
 8006a30:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8006a32:	4604      	mov	r4, r0
 8006a34:	2800      	cmp	r0, #0
 8006a36:	d055      	beq.n	8006ae4 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8006a38:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8006a3a:	2b00      	cmp	r3, #0
 8006a3c:	d14e      	bne.n	8006adc <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006a3e:	6842      	ldr	r2, [r0, #4]
 8006a40:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8006a44:	d000      	beq.n	8006a48 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8006a46:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8006a48:	2300      	movs	r3, #0
 8006a4a:	62a3      	str	r3, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8006a4c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8006a50:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006a54:	b923      	cbnz	r3, 8006a60 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 8006a56:	f884 2050 	strb.w	r2, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8006a5a:	4620      	mov	r0, r4
 8006a5c:	f7fb f9ac 	bl	8001db8 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8006a60:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006a62:	68a0      	ldr	r0, [r4, #8]
 8006a64:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8006a66:	2302      	movs	r3, #2
 8006a68:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8006a6c:	680b      	ldr	r3, [r1, #0]
 8006a6e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006a72:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006a74:	6863      	ldr	r3, [r4, #4]
 8006a76:	f400 4004 	and.w	r0, r0, #33792	; 0x8400
 8006a7a:	f403 7382 	and.w	r3, r3, #260	; 0x104
 8006a7e:	4303      	orrs	r3, r0
 8006a80:	68e0      	ldr	r0, [r4, #12]
 8006a82:	f400 6000 	and.w	r0, r0, #2048	; 0x800
 8006a86:	4303      	orrs	r3, r0
 8006a88:	6920      	ldr	r0, [r4, #16]
 8006a8a:	f000 0002 	and.w	r0, r0, #2
 8006a8e:	4303      	orrs	r3, r0
 8006a90:	6960      	ldr	r0, [r4, #20]
 8006a92:	f000 0001 	and.w	r0, r0, #1
 8006a96:	4303      	orrs	r3, r0
 8006a98:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8006a9c:	4303      	orrs	r3, r0
 8006a9e:	69e0      	ldr	r0, [r4, #28]
 8006aa0:	f000 0038 	and.w	r0, r0, #56	; 0x38
 8006aa4:	4303      	orrs	r3, r0
 8006aa6:	6a20      	ldr	r0, [r4, #32]
 8006aa8:	f000 0080 	and.w	r0, r0, #128	; 0x80
 8006aac:	4303      	orrs	r3, r0
 8006aae:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006ab0:	f400 5000 	and.w	r0, r0, #8192	; 0x2000
 8006ab4:	4303      	orrs	r3, r0
 8006ab6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8006ab8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006aba:	0c12      	lsrs	r2, r2, #16
 8006abc:	f003 0310 	and.w	r3, r3, #16
 8006ac0:	f002 0204 	and.w	r2, r2, #4
 8006ac4:	431a      	orrs	r2, r3
 8006ac6:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006ac8:	69cb      	ldr	r3, [r1, #28]
 8006aca:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006ace:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006ad0:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8006ad2:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006ad4:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8006ad6:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8006ada:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8006adc:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8006ade:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006ae2:	e7b1      	b.n	8006a48 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8006ae4:	2001      	movs	r0, #1
 8006ae6:	e7f8      	b.n	8006ada <HAL_SPI_Init+0xaa>

08006ae8 <HAL_SPI_Transmit>:
{
 8006ae8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006aec:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8006aee:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8006af2:	2b01      	cmp	r3, #1
{
 8006af4:	4604      	mov	r4, r0
 8006af6:	460d      	mov	r5, r1
 8006af8:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8006afa:	f000 80a1 	beq.w	8006c40 <HAL_SPI_Transmit+0x158>
 8006afe:	2301      	movs	r3, #1
 8006b00:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006b04:	f7fe f876 	bl	8004bf4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8006b08:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8006b0c:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006b0e:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8006b10:	b2d8      	uxtb	r0, r3
 8006b12:	f040 8093 	bne.w	8006c3c <HAL_SPI_Transmit+0x154>
  if ((pData == NULL) || (Size == 0U))
 8006b16:	2d00      	cmp	r5, #0
 8006b18:	d05e      	beq.n	8006bd8 <HAL_SPI_Transmit+0xf0>
 8006b1a:	2f00      	cmp	r7, #0
 8006b1c:	d05c      	beq.n	8006bd8 <HAL_SPI_Transmit+0xf0>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006b1e:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8006b20:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006b22:	2303      	movs	r3, #3
 8006b24:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006b28:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006b2c:	f04f 0300 	mov.w	r3, #0
 8006b30:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8006b32:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8006b36:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006b38:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 8006b3a:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8006b3c:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->TxXferSize  = Size;
 8006b3e:	86a7      	strh	r7, [r4, #52]	; 0x34
    __HAL_SPI_DISABLE(hspi);
 8006b40:	6823      	ldr	r3, [r4, #0]
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006b42:	d107      	bne.n	8006b54 <HAL_SPI_Transmit+0x6c>
    __HAL_SPI_DISABLE(hspi);
 8006b44:	681a      	ldr	r2, [r3, #0]
 8006b46:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006b4a:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8006b4c:	681a      	ldr	r2, [r3, #0]
 8006b4e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8006b52:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006b54:	681a      	ldr	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006b56:	68e1      	ldr	r1, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006b58:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8006b5a:	bf5e      	ittt	pl
 8006b5c:	681a      	ldrpl	r2, [r3, #0]
 8006b5e:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8006b62:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006b64:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006b68:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006b6a:	d141      	bne.n	8006bf0 <HAL_SPI_Transmit+0x108>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006b6c:	b10a      	cbz	r2, 8006b72 <HAL_SPI_Transmit+0x8a>
 8006b6e:	2f01      	cmp	r7, #1
 8006b70:	d107      	bne.n	8006b82 <HAL_SPI_Transmit+0x9a>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006b72:	f835 2b02 	ldrh.w	r2, [r5], #2
 8006b76:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006b78:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006b7a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006b7c:	3b01      	subs	r3, #1
 8006b7e:	b29b      	uxth	r3, r3
 8006b80:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8006b82:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006b84:	b29b      	uxth	r3, r3
 8006b86:	b9a3      	cbnz	r3, 8006bb2 <HAL_SPI_Transmit+0xca>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006b88:	4642      	mov	r2, r8
 8006b8a:	4631      	mov	r1, r6
 8006b8c:	4620      	mov	r0, r4
 8006b8e:	f7ff ff23 	bl	80069d8 <SPI_EndRxTxTransaction>
 8006b92:	2800      	cmp	r0, #0
 8006b94:	d14f      	bne.n	8006c36 <HAL_SPI_Transmit+0x14e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006b96:	68a3      	ldr	r3, [r4, #8]
 8006b98:	b933      	cbnz	r3, 8006ba8 <HAL_SPI_Transmit+0xc0>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006b9a:	9301      	str	r3, [sp, #4]
 8006b9c:	6823      	ldr	r3, [r4, #0]
 8006b9e:	68da      	ldr	r2, [r3, #12]
 8006ba0:	9201      	str	r2, [sp, #4]
 8006ba2:	689b      	ldr	r3, [r3, #8]
 8006ba4:	9301      	str	r3, [sp, #4]
 8006ba6:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006ba8:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8006baa:	3800      	subs	r0, #0
 8006bac:	bf18      	it	ne
 8006bae:	2001      	movne	r0, #1
error:
 8006bb0:	e012      	b.n	8006bd8 <HAL_SPI_Transmit+0xf0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006bb2:	6822      	ldr	r2, [r4, #0]
 8006bb4:	6893      	ldr	r3, [r2, #8]
 8006bb6:	0798      	lsls	r0, r3, #30
 8006bb8:	d505      	bpl.n	8006bc6 <HAL_SPI_Transmit+0xde>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006bba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006bbc:	f833 1b02 	ldrh.w	r1, [r3], #2
 8006bc0:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006bc2:	6323      	str	r3, [r4, #48]	; 0x30
 8006bc4:	e7d9      	b.n	8006b7a <HAL_SPI_Transmit+0x92>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006bc6:	f7fe f815 	bl	8004bf4 <HAL_GetTick>
 8006bca:	eba0 0008 	sub.w	r0, r0, r8
 8006bce:	42b0      	cmp	r0, r6
 8006bd0:	d30b      	bcc.n	8006bea <HAL_SPI_Transmit+0x102>
 8006bd2:	1c71      	adds	r1, r6, #1
 8006bd4:	d0d5      	beq.n	8006b82 <HAL_SPI_Transmit+0x9a>
          errorcode = HAL_TIMEOUT;
 8006bd6:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8006bd8:	2301      	movs	r3, #1
 8006bda:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006bde:	2300      	movs	r3, #0
 8006be0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8006be4:	b002      	add	sp, #8
 8006be6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006bea:	2e00      	cmp	r6, #0
 8006bec:	d1c9      	bne.n	8006b82 <HAL_SPI_Transmit+0x9a>
 8006bee:	e7f2      	b.n	8006bd6 <HAL_SPI_Transmit+0xee>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006bf0:	b10a      	cbz	r2, 8006bf6 <HAL_SPI_Transmit+0x10e>
 8006bf2:	2f01      	cmp	r7, #1
 8006bf4:	d108      	bne.n	8006c08 <HAL_SPI_Transmit+0x120>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006bf6:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006bf8:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8006bfa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006bfc:	3301      	adds	r3, #1
 8006bfe:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006c00:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006c02:	3b01      	subs	r3, #1
 8006c04:	b29b      	uxth	r3, r3
 8006c06:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8006c08:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006c0a:	b29b      	uxth	r3, r3
 8006c0c:	2b00      	cmp	r3, #0
 8006c0e:	d0bb      	beq.n	8006b88 <HAL_SPI_Transmit+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006c10:	6823      	ldr	r3, [r4, #0]
 8006c12:	689a      	ldr	r2, [r3, #8]
 8006c14:	0792      	lsls	r2, r2, #30
 8006c16:	d502      	bpl.n	8006c1e <HAL_SPI_Transmit+0x136>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006c18:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006c1a:	7812      	ldrb	r2, [r2, #0]
 8006c1c:	e7ec      	b.n	8006bf8 <HAL_SPI_Transmit+0x110>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006c1e:	f7fd ffe9 	bl	8004bf4 <HAL_GetTick>
 8006c22:	eba0 0008 	sub.w	r0, r0, r8
 8006c26:	42b0      	cmp	r0, r6
 8006c28:	d302      	bcc.n	8006c30 <HAL_SPI_Transmit+0x148>
 8006c2a:	1c73      	adds	r3, r6, #1
 8006c2c:	d0ec      	beq.n	8006c08 <HAL_SPI_Transmit+0x120>
 8006c2e:	e7d2      	b.n	8006bd6 <HAL_SPI_Transmit+0xee>
 8006c30:	2e00      	cmp	r6, #0
 8006c32:	d1e9      	bne.n	8006c08 <HAL_SPI_Transmit+0x120>
 8006c34:	e7cf      	b.n	8006bd6 <HAL_SPI_Transmit+0xee>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006c36:	2320      	movs	r3, #32
 8006c38:	6563      	str	r3, [r4, #84]	; 0x54
 8006c3a:	e7ac      	b.n	8006b96 <HAL_SPI_Transmit+0xae>
    errorcode = HAL_BUSY;
 8006c3c:	2002      	movs	r0, #2
 8006c3e:	e7cb      	b.n	8006bd8 <HAL_SPI_Transmit+0xf0>
  __HAL_LOCK(hspi);
 8006c40:	2002      	movs	r0, #2
 8006c42:	e7cf      	b.n	8006be4 <HAL_SPI_Transmit+0xfc>

08006c44 <HAL_SPI_TransmitReceive>:
{
 8006c44:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006c48:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8006c4a:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8006c4e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8006c50:	2b01      	cmp	r3, #1
{
 8006c52:	4604      	mov	r4, r0
 8006c54:	460d      	mov	r5, r1
 8006c56:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8006c58:	f000 80e6 	beq.w	8006e28 <HAL_SPI_TransmitReceive+0x1e4>
 8006c5c:	2301      	movs	r3, #1
 8006c5e:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006c62:	f7fd ffc7 	bl	8004bf4 <HAL_GetTick>
  tmp_state           = hspi->State;
 8006c66:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8006c6a:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006c6c:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006c6e:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8006c70:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006c72:	d00a      	beq.n	8006c8a <HAL_SPI_TransmitReceive+0x46>
 8006c74:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8006c78:	f040 80d4 	bne.w	8006e24 <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8006c7c:	68a3      	ldr	r3, [r4, #8]
 8006c7e:	2b00      	cmp	r3, #0
 8006c80:	f040 80d0 	bne.w	8006e24 <HAL_SPI_TransmitReceive+0x1e0>
 8006c84:	2904      	cmp	r1, #4
 8006c86:	f040 80cd 	bne.w	8006e24 <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8006c8a:	2d00      	cmp	r5, #0
 8006c8c:	d040      	beq.n	8006d10 <HAL_SPI_TransmitReceive+0xcc>
 8006c8e:	f1b9 0f00 	cmp.w	r9, #0
 8006c92:	d03d      	beq.n	8006d10 <HAL_SPI_TransmitReceive+0xcc>
 8006c94:	2e00      	cmp	r6, #0
 8006c96:	d03b      	beq.n	8006d10 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006c98:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8006c9c:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006ca0:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006ca2:	bf1c      	itt	ne
 8006ca4:	2305      	movne	r3, #5
 8006ca6:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006caa:	2300      	movs	r3, #0
 8006cac:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8006cae:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006cb2:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006cb4:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8006cb6:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006cb8:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8006cba:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006cbc:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8006cbe:	bf58      	it	pl
 8006cc0:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8006cc2:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8006cc4:	bf58      	it	pl
 8006cc6:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 8006cca:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8006ccc:	bf58      	it	pl
 8006cce:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006cd0:	68e1      	ldr	r1, [r4, #12]
 8006cd2:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8006cd6:	d152      	bne.n	8006d7e <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006cd8:	b10a      	cbz	r2, 8006cde <HAL_SPI_TransmitReceive+0x9a>
 8006cda:	2e01      	cmp	r6, #1
 8006cdc:	d107      	bne.n	8006cee <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006cde:	f835 2b02 	ldrh.w	r2, [r5], #2
 8006ce2:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8006ce4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006ce6:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8006ce8:	3b01      	subs	r3, #1
 8006cea:	b29b      	uxth	r3, r3
 8006cec:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8006cee:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006cf0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006cf2:	b29b      	uxth	r3, r3
 8006cf4:	b973      	cbnz	r3, 8006d14 <HAL_SPI_TransmitReceive+0xd0>
 8006cf6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006cf8:	b29b      	uxth	r3, r3
 8006cfa:	b95b      	cbnz	r3, 8006d14 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006cfc:	4642      	mov	r2, r8
 8006cfe:	4639      	mov	r1, r7
 8006d00:	4620      	mov	r0, r4
 8006d02:	f7ff fe69 	bl	80069d8 <SPI_EndRxTxTransaction>
 8006d06:	2800      	cmp	r0, #0
 8006d08:	f000 8081 	beq.w	8006e0e <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006d0c:	2320      	movs	r3, #32
 8006d0e:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8006d10:	2001      	movs	r0, #1
 8006d12:	e02b      	b.n	8006d6c <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006d14:	6821      	ldr	r1, [r4, #0]
 8006d16:	688b      	ldr	r3, [r1, #8]
 8006d18:	079e      	lsls	r6, r3, #30
 8006d1a:	d50d      	bpl.n	8006d38 <HAL_SPI_TransmitReceive+0xf4>
 8006d1c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006d1e:	b29b      	uxth	r3, r3
 8006d20:	b153      	cbz	r3, 8006d38 <HAL_SPI_TransmitReceive+0xf4>
 8006d22:	b14d      	cbz	r5, 8006d38 <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006d24:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006d26:	f833 2b02 	ldrh.w	r2, [r3], #2
 8006d2a:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006d2c:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006d2e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006d30:	3b01      	subs	r3, #1
 8006d32:	b29b      	uxth	r3, r3
 8006d34:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8006d36:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006d38:	688a      	ldr	r2, [r1, #8]
 8006d3a:	f012 0201 	ands.w	r2, r2, #1
 8006d3e:	d00c      	beq.n	8006d5a <HAL_SPI_TransmitReceive+0x116>
 8006d40:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006d42:	b29b      	uxth	r3, r3
 8006d44:	b14b      	cbz	r3, 8006d5a <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006d46:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006d48:	68c9      	ldr	r1, [r1, #12]
 8006d4a:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006d4e:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006d50:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006d52:	3b01      	subs	r3, #1
 8006d54:	b29b      	uxth	r3, r3
 8006d56:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8006d58:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006d5a:	f7fd ff4b 	bl	8004bf4 <HAL_GetTick>
 8006d5e:	eba0 0008 	sub.w	r0, r0, r8
 8006d62:	42b8      	cmp	r0, r7
 8006d64:	d3c4      	bcc.n	8006cf0 <HAL_SPI_TransmitReceive+0xac>
 8006d66:	1c78      	adds	r0, r7, #1
 8006d68:	d0c2      	beq.n	8006cf0 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8006d6a:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8006d6c:	2301      	movs	r3, #1
 8006d6e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006d72:	2300      	movs	r3, #0
 8006d74:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8006d78:	b003      	add	sp, #12
 8006d7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006d7e:	b10a      	cbz	r2, 8006d84 <HAL_SPI_TransmitReceive+0x140>
 8006d80:	2e01      	cmp	r6, #1
 8006d82:	d108      	bne.n	8006d96 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006d84:	782a      	ldrb	r2, [r5, #0]
 8006d86:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006d88:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006d8a:	3301      	adds	r3, #1
 8006d8c:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8006d8e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006d90:	3b01      	subs	r3, #1
 8006d92:	b29b      	uxth	r3, r3
 8006d94:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8006d96:	2501      	movs	r5, #1
 8006d98:	e02d      	b.n	8006df6 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006d9a:	6822      	ldr	r2, [r4, #0]
 8006d9c:	6893      	ldr	r3, [r2, #8]
 8006d9e:	0799      	lsls	r1, r3, #30
 8006da0:	d50e      	bpl.n	8006dc0 <HAL_SPI_TransmitReceive+0x17c>
 8006da2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006da4:	b29b      	uxth	r3, r3
 8006da6:	b15b      	cbz	r3, 8006dc0 <HAL_SPI_TransmitReceive+0x17c>
 8006da8:	b155      	cbz	r5, 8006dc0 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8006daa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006dac:	781b      	ldrb	r3, [r3, #0]
 8006dae:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8006db0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006db2:	3301      	adds	r3, #1
 8006db4:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006db6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006db8:	3b01      	subs	r3, #1
 8006dba:	b29b      	uxth	r3, r3
 8006dbc:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8006dbe:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006dc0:	6822      	ldr	r2, [r4, #0]
 8006dc2:	6891      	ldr	r1, [r2, #8]
 8006dc4:	f011 0101 	ands.w	r1, r1, #1
 8006dc8:	d00d      	beq.n	8006de6 <HAL_SPI_TransmitReceive+0x1a2>
 8006dca:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006dcc:	b29b      	uxth	r3, r3
 8006dce:	b153      	cbz	r3, 8006de6 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006dd0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006dd2:	68d2      	ldr	r2, [r2, #12]
 8006dd4:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8006dd6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006dd8:	3301      	adds	r3, #1
 8006dda:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006ddc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006dde:	3b01      	subs	r3, #1
 8006de0:	b29b      	uxth	r3, r3
 8006de2:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8006de4:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006de6:	f7fd ff05 	bl	8004bf4 <HAL_GetTick>
 8006dea:	eba0 0008 	sub.w	r0, r0, r8
 8006dee:	42b8      	cmp	r0, r7
 8006df0:	d30a      	bcc.n	8006e08 <HAL_SPI_TransmitReceive+0x1c4>
 8006df2:	1c7b      	adds	r3, r7, #1
 8006df4:	d1b9      	bne.n	8006d6a <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006df6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006df8:	b29b      	uxth	r3, r3
 8006dfa:	2b00      	cmp	r3, #0
 8006dfc:	d1cd      	bne.n	8006d9a <HAL_SPI_TransmitReceive+0x156>
 8006dfe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006e00:	b29b      	uxth	r3, r3
 8006e02:	2b00      	cmp	r3, #0
 8006e04:	d1c9      	bne.n	8006d9a <HAL_SPI_TransmitReceive+0x156>
 8006e06:	e779      	b.n	8006cfc <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006e08:	2f00      	cmp	r7, #0
 8006e0a:	d1f4      	bne.n	8006df6 <HAL_SPI_TransmitReceive+0x1b2>
 8006e0c:	e7ad      	b.n	8006d6a <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006e0e:	68a3      	ldr	r3, [r4, #8]
 8006e10:	2b00      	cmp	r3, #0
 8006e12:	d1ab      	bne.n	8006d6c <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006e14:	6823      	ldr	r3, [r4, #0]
 8006e16:	9001      	str	r0, [sp, #4]
 8006e18:	68da      	ldr	r2, [r3, #12]
 8006e1a:	9201      	str	r2, [sp, #4]
 8006e1c:	689b      	ldr	r3, [r3, #8]
 8006e1e:	9301      	str	r3, [sp, #4]
 8006e20:	9b01      	ldr	r3, [sp, #4]
 8006e22:	e7a3      	b.n	8006d6c <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8006e24:	2002      	movs	r0, #2
 8006e26:	e7a1      	b.n	8006d6c <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8006e28:	2002      	movs	r0, #2
 8006e2a:	e7a5      	b.n	8006d78 <HAL_SPI_TransmitReceive+0x134>

08006e2c <HAL_SPI_Receive>:
{
 8006e2c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006e30:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006e32:	6843      	ldr	r3, [r0, #4]
 8006e34:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8006e38:	4604      	mov	r4, r0
 8006e3a:	4689      	mov	r9, r1
 8006e3c:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006e3e:	d10c      	bne.n	8006e5a <HAL_SPI_Receive+0x2e>
 8006e40:	6883      	ldr	r3, [r0, #8]
 8006e42:	b953      	cbnz	r3, 8006e5a <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006e44:	2304      	movs	r3, #4
 8006e46:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8006e4a:	4613      	mov	r3, r2
 8006e4c:	9500      	str	r5, [sp, #0]
 8006e4e:	460a      	mov	r2, r1
 8006e50:	f7ff fef8 	bl	8006c44 <HAL_SPI_TransmitReceive>
}
 8006e54:	b003      	add	sp, #12
 8006e56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8006e5a:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8006e5e:	2b01      	cmp	r3, #1
 8006e60:	f000 8086 	beq.w	8006f70 <HAL_SPI_Receive+0x144>
 8006e64:	2301      	movs	r3, #1
 8006e66:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006e6a:	f7fd fec3 	bl	8004bf4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8006e6e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8006e72:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006e74:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8006e76:	b2d8      	uxtb	r0, r3
 8006e78:	d178      	bne.n	8006f6c <HAL_SPI_Receive+0x140>
  if ((pData == NULL) || (Size == 0U))
 8006e7a:	f1b9 0f00 	cmp.w	r9, #0
 8006e7e:	d05c      	beq.n	8006f3a <HAL_SPI_Receive+0x10e>
 8006e80:	2f00      	cmp	r7, #0
 8006e82:	d05a      	beq.n	8006f3a <HAL_SPI_Receive+0x10e>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006e84:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8006e86:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006e8a:	2600      	movs	r6, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006e8c:	2304      	movs	r3, #4
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006e8e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006e92:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 8006e96:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006e9a:	6566      	str	r6, [r4, #84]	; 0x54
    __HAL_SPI_DISABLE(hspi);
 8006e9c:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006e9e:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 8006ea0:	87a7      	strh	r7, [r4, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8006ea2:	6326      	str	r6, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 8006ea4:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 8006ea6:	86e6      	strh	r6, [r4, #54]	; 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006ea8:	d107      	bne.n	8006eba <HAL_SPI_Receive+0x8e>
    __HAL_SPI_DISABLE(hspi);
 8006eaa:	681a      	ldr	r2, [r3, #0]
 8006eac:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006eb0:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8006eb2:	681a      	ldr	r2, [r3, #0]
 8006eb4:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8006eb8:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006eba:	681a      	ldr	r2, [r3, #0]
 8006ebc:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8006ebe:	bf5e      	ittt	pl
 8006ec0:	681a      	ldrpl	r2, [r3, #0]
 8006ec2:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8006ec6:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006ec8:	68e3      	ldr	r3, [r4, #12]
 8006eca:	b1f3      	cbz	r3, 8006f0a <HAL_SPI_Receive+0xde>
    while (hspi->RxXferCount > 0U)
 8006ecc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006ece:	b29b      	uxth	r3, r3
 8006ed0:	b1fb      	cbz	r3, 8006f12 <HAL_SPI_Receive+0xe6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006ed2:	6823      	ldr	r3, [r4, #0]
 8006ed4:	689a      	ldr	r2, [r3, #8]
 8006ed6:	07d2      	lsls	r2, r2, #31
 8006ed8:	d539      	bpl.n	8006f4e <HAL_SPI_Receive+0x122>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006eda:	68da      	ldr	r2, [r3, #12]
 8006edc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006ede:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006ee2:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006ee4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006ee6:	3b01      	subs	r3, #1
 8006ee8:	b29b      	uxth	r3, r3
 8006eea:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8006eec:	e7ee      	b.n	8006ecc <HAL_SPI_Receive+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006eee:	6823      	ldr	r3, [r4, #0]
 8006ef0:	689a      	ldr	r2, [r3, #8]
 8006ef2:	07d0      	lsls	r0, r2, #31
 8006ef4:	d518      	bpl.n	8006f28 <HAL_SPI_Receive+0xfc>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8006ef6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006ef8:	7b1b      	ldrb	r3, [r3, #12]
 8006efa:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8006efc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006efe:	3301      	adds	r3, #1
 8006f00:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006f02:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006f04:	3b01      	subs	r3, #1
 8006f06:	b29b      	uxth	r3, r3
 8006f08:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8006f0a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006f0c:	b29b      	uxth	r3, r3
 8006f0e:	2b00      	cmp	r3, #0
 8006f10:	d1ed      	bne.n	8006eee <HAL_SPI_Receive+0xc2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006f12:	4642      	mov	r2, r8
 8006f14:	4629      	mov	r1, r5
 8006f16:	4620      	mov	r0, r4
 8006f18:	f7ff fd34 	bl	8006984 <SPI_EndRxTransaction>
 8006f1c:	bb18      	cbnz	r0, 8006f66 <HAL_SPI_Receive+0x13a>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006f1e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8006f20:	3800      	subs	r0, #0
 8006f22:	bf18      	it	ne
 8006f24:	2001      	movne	r0, #1
error :
 8006f26:	e008      	b.n	8006f3a <HAL_SPI_Receive+0x10e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006f28:	f7fd fe64 	bl	8004bf4 <HAL_GetTick>
 8006f2c:	eba0 0008 	sub.w	r0, r0, r8
 8006f30:	42a8      	cmp	r0, r5
 8006f32:	d309      	bcc.n	8006f48 <HAL_SPI_Receive+0x11c>
 8006f34:	1c69      	adds	r1, r5, #1
 8006f36:	d0e8      	beq.n	8006f0a <HAL_SPI_Receive+0xde>
          errorcode = HAL_TIMEOUT;
 8006f38:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8006f3a:	2301      	movs	r3, #1
 8006f3c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006f40:	2300      	movs	r3, #0
 8006f42:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8006f46:	e785      	b.n	8006e54 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006f48:	2d00      	cmp	r5, #0
 8006f4a:	d1de      	bne.n	8006f0a <HAL_SPI_Receive+0xde>
 8006f4c:	e7f4      	b.n	8006f38 <HAL_SPI_Receive+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006f4e:	f7fd fe51 	bl	8004bf4 <HAL_GetTick>
 8006f52:	eba0 0008 	sub.w	r0, r0, r8
 8006f56:	42a8      	cmp	r0, r5
 8006f58:	d302      	bcc.n	8006f60 <HAL_SPI_Receive+0x134>
 8006f5a:	1c6b      	adds	r3, r5, #1
 8006f5c:	d0b6      	beq.n	8006ecc <HAL_SPI_Receive+0xa0>
 8006f5e:	e7eb      	b.n	8006f38 <HAL_SPI_Receive+0x10c>
 8006f60:	2d00      	cmp	r5, #0
 8006f62:	d1b3      	bne.n	8006ecc <HAL_SPI_Receive+0xa0>
 8006f64:	e7e8      	b.n	8006f38 <HAL_SPI_Receive+0x10c>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006f66:	2320      	movs	r3, #32
 8006f68:	6563      	str	r3, [r4, #84]	; 0x54
 8006f6a:	e7d8      	b.n	8006f1e <HAL_SPI_Receive+0xf2>
    errorcode = HAL_BUSY;
 8006f6c:	2002      	movs	r0, #2
 8006f6e:	e7e4      	b.n	8006f3a <HAL_SPI_Receive+0x10e>
  __HAL_LOCK(hspi);
 8006f70:	2002      	movs	r0, #2
 8006f72:	e76f      	b.n	8006e54 <HAL_SPI_Receive+0x28>

08006f74 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8006f74:	4770      	bx	lr
	...

08006f78 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006f78:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006f7c:	2b01      	cmp	r3, #1
 8006f7e:	d130      	bne.n	8006fe2 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006f80:	2302      	movs	r3, #2
 8006f82:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006f86:	6803      	ldr	r3, [r0, #0]
 8006f88:	68da      	ldr	r2, [r3, #12]
 8006f8a:	f042 0201 	orr.w	r2, r2, #1
 8006f8e:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006f90:	4a15      	ldr	r2, [pc, #84]	; (8006fe8 <HAL_TIM_Base_Start_IT+0x70>)
 8006f92:	4293      	cmp	r3, r2
 8006f94:	d01a      	beq.n	8006fcc <HAL_TIM_Base_Start_IT+0x54>
 8006f96:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006f9a:	d017      	beq.n	8006fcc <HAL_TIM_Base_Start_IT+0x54>
 8006f9c:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006fa0:	4293      	cmp	r3, r2
 8006fa2:	d013      	beq.n	8006fcc <HAL_TIM_Base_Start_IT+0x54>
 8006fa4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006fa8:	4293      	cmp	r3, r2
 8006faa:	d00f      	beq.n	8006fcc <HAL_TIM_Base_Start_IT+0x54>
 8006fac:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006fb0:	4293      	cmp	r3, r2
 8006fb2:	d00b      	beq.n	8006fcc <HAL_TIM_Base_Start_IT+0x54>
 8006fb4:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006fb8:	4293      	cmp	r3, r2
 8006fba:	d007      	beq.n	8006fcc <HAL_TIM_Base_Start_IT+0x54>
 8006fbc:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 8006fc0:	4293      	cmp	r3, r2
 8006fc2:	d003      	beq.n	8006fcc <HAL_TIM_Base_Start_IT+0x54>
 8006fc4:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8006fc8:	4293      	cmp	r3, r2
 8006fca:	d104      	bne.n	8006fd6 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006fcc:	689a      	ldr	r2, [r3, #8]
 8006fce:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006fd2:	2a06      	cmp	r2, #6
 8006fd4:	d003      	beq.n	8006fde <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8006fd6:	681a      	ldr	r2, [r3, #0]
 8006fd8:	f042 0201 	orr.w	r2, r2, #1
 8006fdc:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8006fde:	2000      	movs	r0, #0
}
 8006fe0:	4770      	bx	lr
    return HAL_ERROR;
 8006fe2:	2001      	movs	r0, #1
 8006fe4:	4770      	bx	lr
 8006fe6:	bf00      	nop
 8006fe8:	40010000 	.word	0x40010000

08006fec <HAL_TIM_OC_DelayElapsedCallback>:
 8006fec:	4770      	bx	lr

08006fee <HAL_TIM_IC_CaptureCallback>:
 8006fee:	4770      	bx	lr

08006ff0 <HAL_TIM_PWM_PulseFinishedCallback>:
 8006ff0:	4770      	bx	lr

08006ff2 <HAL_TIM_TriggerCallback>:
 8006ff2:	4770      	bx	lr

08006ff4 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006ff4:	6803      	ldr	r3, [r0, #0]
 8006ff6:	691a      	ldr	r2, [r3, #16]
 8006ff8:	0791      	lsls	r1, r2, #30
{
 8006ffa:	b510      	push	{r4, lr}
 8006ffc:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006ffe:	d50e      	bpl.n	800701e <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8007000:	68da      	ldr	r2, [r3, #12]
 8007002:	0792      	lsls	r2, r2, #30
 8007004:	d50b      	bpl.n	800701e <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8007006:	f06f 0202 	mvn.w	r2, #2
 800700a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800700c:	2201      	movs	r2, #1
 800700e:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007010:	699b      	ldr	r3, [r3, #24]
 8007012:	079b      	lsls	r3, r3, #30
 8007014:	d077      	beq.n	8007106 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8007016:	f7ff ffea 	bl	8006fee <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800701a:	2300      	movs	r3, #0
 800701c:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800701e:	6823      	ldr	r3, [r4, #0]
 8007020:	691a      	ldr	r2, [r3, #16]
 8007022:	0750      	lsls	r0, r2, #29
 8007024:	d510      	bpl.n	8007048 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8007026:	68da      	ldr	r2, [r3, #12]
 8007028:	0751      	lsls	r1, r2, #29
 800702a:	d50d      	bpl.n	8007048 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800702c:	f06f 0204 	mvn.w	r2, #4
 8007030:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007032:	2202      	movs	r2, #2
 8007034:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007036:	699b      	ldr	r3, [r3, #24]
 8007038:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800703c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800703e:	d068      	beq.n	8007112 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8007040:	f7ff ffd5 	bl	8006fee <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007044:	2300      	movs	r3, #0
 8007046:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8007048:	6823      	ldr	r3, [r4, #0]
 800704a:	691a      	ldr	r2, [r3, #16]
 800704c:	0712      	lsls	r2, r2, #28
 800704e:	d50f      	bpl.n	8007070 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8007050:	68da      	ldr	r2, [r3, #12]
 8007052:	0710      	lsls	r0, r2, #28
 8007054:	d50c      	bpl.n	8007070 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8007056:	f06f 0208 	mvn.w	r2, #8
 800705a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800705c:	2204      	movs	r2, #4
 800705e:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007060:	69db      	ldr	r3, [r3, #28]
 8007062:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007064:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007066:	d05a      	beq.n	800711e <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8007068:	f7ff ffc1 	bl	8006fee <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800706c:	2300      	movs	r3, #0
 800706e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8007070:	6823      	ldr	r3, [r4, #0]
 8007072:	691a      	ldr	r2, [r3, #16]
 8007074:	06d2      	lsls	r2, r2, #27
 8007076:	d510      	bpl.n	800709a <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8007078:	68da      	ldr	r2, [r3, #12]
 800707a:	06d0      	lsls	r0, r2, #27
 800707c:	d50d      	bpl.n	800709a <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800707e:	f06f 0210 	mvn.w	r2, #16
 8007082:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007084:	2208      	movs	r2, #8
 8007086:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007088:	69db      	ldr	r3, [r3, #28]
 800708a:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800708e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007090:	d04b      	beq.n	800712a <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8007092:	f7ff ffac 	bl	8006fee <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007096:	2300      	movs	r3, #0
 8007098:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800709a:	6823      	ldr	r3, [r4, #0]
 800709c:	691a      	ldr	r2, [r3, #16]
 800709e:	07d1      	lsls	r1, r2, #31
 80070a0:	d508      	bpl.n	80070b4 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80070a2:	68da      	ldr	r2, [r3, #12]
 80070a4:	07d2      	lsls	r2, r2, #31
 80070a6:	d505      	bpl.n	80070b4 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80070a8:	f06f 0201 	mvn.w	r2, #1
 80070ac:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80070ae:	4620      	mov	r0, r4
 80070b0:	f7fa fce4 	bl	8001a7c <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80070b4:	6823      	ldr	r3, [r4, #0]
 80070b6:	691a      	ldr	r2, [r3, #16]
 80070b8:	0610      	lsls	r0, r2, #24
 80070ba:	d508      	bpl.n	80070ce <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80070bc:	68da      	ldr	r2, [r3, #12]
 80070be:	0611      	lsls	r1, r2, #24
 80070c0:	d505      	bpl.n	80070ce <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80070c2:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80070c6:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80070c8:	4620      	mov	r0, r4
 80070ca:	f000 f8c8 	bl	800725e <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80070ce:	6823      	ldr	r3, [r4, #0]
 80070d0:	691a      	ldr	r2, [r3, #16]
 80070d2:	0652      	lsls	r2, r2, #25
 80070d4:	d508      	bpl.n	80070e8 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 80070d6:	68da      	ldr	r2, [r3, #12]
 80070d8:	0650      	lsls	r0, r2, #25
 80070da:	d505      	bpl.n	80070e8 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80070dc:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80070e0:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80070e2:	4620      	mov	r0, r4
 80070e4:	f7ff ff85 	bl	8006ff2 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80070e8:	6823      	ldr	r3, [r4, #0]
 80070ea:	691a      	ldr	r2, [r3, #16]
 80070ec:	0691      	lsls	r1, r2, #26
 80070ee:	d522      	bpl.n	8007136 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80070f0:	68da      	ldr	r2, [r3, #12]
 80070f2:	0692      	lsls	r2, r2, #26
 80070f4:	d51f      	bpl.n	8007136 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80070f6:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80070fa:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80070fc:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80070fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8007102:	f000 b8ab 	b.w	800725c <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8007106:	f7ff ff71 	bl	8006fec <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800710a:	4620      	mov	r0, r4
 800710c:	f7ff ff70 	bl	8006ff0 <HAL_TIM_PWM_PulseFinishedCallback>
 8007110:	e783      	b.n	800701a <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007112:	f7ff ff6b 	bl	8006fec <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007116:	4620      	mov	r0, r4
 8007118:	f7ff ff6a 	bl	8006ff0 <HAL_TIM_PWM_PulseFinishedCallback>
 800711c:	e792      	b.n	8007044 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800711e:	f7ff ff65 	bl	8006fec <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007122:	4620      	mov	r0, r4
 8007124:	f7ff ff64 	bl	8006ff0 <HAL_TIM_PWM_PulseFinishedCallback>
 8007128:	e7a0      	b.n	800706c <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800712a:	f7ff ff5f 	bl	8006fec <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800712e:	4620      	mov	r0, r4
 8007130:	f7ff ff5e 	bl	8006ff0 <HAL_TIM_PWM_PulseFinishedCallback>
 8007134:	e7af      	b.n	8007096 <HAL_TIM_IRQHandler+0xa2>
}
 8007136:	bd10      	pop	{r4, pc}

08007138 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007138:	4a30      	ldr	r2, [pc, #192]	; (80071fc <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800713a:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800713c:	4290      	cmp	r0, r2
 800713e:	d012      	beq.n	8007166 <TIM_Base_SetConfig+0x2e>
 8007140:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007144:	d00f      	beq.n	8007166 <TIM_Base_SetConfig+0x2e>
 8007146:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800714a:	4290      	cmp	r0, r2
 800714c:	d00b      	beq.n	8007166 <TIM_Base_SetConfig+0x2e>
 800714e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007152:	4290      	cmp	r0, r2
 8007154:	d007      	beq.n	8007166 <TIM_Base_SetConfig+0x2e>
 8007156:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800715a:	4290      	cmp	r0, r2
 800715c:	d003      	beq.n	8007166 <TIM_Base_SetConfig+0x2e>
 800715e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007162:	4290      	cmp	r0, r2
 8007164:	d119      	bne.n	800719a <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007166:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007168:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800716c:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800716e:	4a23      	ldr	r2, [pc, #140]	; (80071fc <TIM_Base_SetConfig+0xc4>)
 8007170:	4290      	cmp	r0, r2
 8007172:	d029      	beq.n	80071c8 <TIM_Base_SetConfig+0x90>
 8007174:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007178:	d026      	beq.n	80071c8 <TIM_Base_SetConfig+0x90>
 800717a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800717e:	4290      	cmp	r0, r2
 8007180:	d022      	beq.n	80071c8 <TIM_Base_SetConfig+0x90>
 8007182:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007186:	4290      	cmp	r0, r2
 8007188:	d01e      	beq.n	80071c8 <TIM_Base_SetConfig+0x90>
 800718a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800718e:	4290      	cmp	r0, r2
 8007190:	d01a      	beq.n	80071c8 <TIM_Base_SetConfig+0x90>
 8007192:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007196:	4290      	cmp	r0, r2
 8007198:	d016      	beq.n	80071c8 <TIM_Base_SetConfig+0x90>
 800719a:	4a19      	ldr	r2, [pc, #100]	; (8007200 <TIM_Base_SetConfig+0xc8>)
 800719c:	4290      	cmp	r0, r2
 800719e:	d013      	beq.n	80071c8 <TIM_Base_SetConfig+0x90>
 80071a0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80071a4:	4290      	cmp	r0, r2
 80071a6:	d00f      	beq.n	80071c8 <TIM_Base_SetConfig+0x90>
 80071a8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80071ac:	4290      	cmp	r0, r2
 80071ae:	d00b      	beq.n	80071c8 <TIM_Base_SetConfig+0x90>
 80071b0:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 80071b4:	4290      	cmp	r0, r2
 80071b6:	d007      	beq.n	80071c8 <TIM_Base_SetConfig+0x90>
 80071b8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80071bc:	4290      	cmp	r0, r2
 80071be:	d003      	beq.n	80071c8 <TIM_Base_SetConfig+0x90>
 80071c0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80071c4:	4290      	cmp	r0, r2
 80071c6:	d103      	bne.n	80071d0 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80071c8:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80071ca:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80071ce:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80071d0:	694a      	ldr	r2, [r1, #20]
 80071d2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80071d6:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80071d8:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80071da:	688b      	ldr	r3, [r1, #8]
 80071dc:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80071de:	680b      	ldr	r3, [r1, #0]
 80071e0:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80071e2:	4b06      	ldr	r3, [pc, #24]	; (80071fc <TIM_Base_SetConfig+0xc4>)
 80071e4:	4298      	cmp	r0, r3
 80071e6:	d003      	beq.n	80071f0 <TIM_Base_SetConfig+0xb8>
 80071e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80071ec:	4298      	cmp	r0, r3
 80071ee:	d101      	bne.n	80071f4 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80071f0:	690b      	ldr	r3, [r1, #16]
 80071f2:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80071f4:	2301      	movs	r3, #1
 80071f6:	6143      	str	r3, [r0, #20]
}
 80071f8:	4770      	bx	lr
 80071fa:	bf00      	nop
 80071fc:	40010000 	.word	0x40010000
 8007200:	40014000 	.word	0x40014000

08007204 <HAL_TIM_Base_Init>:
{
 8007204:	b510      	push	{r4, lr}
  if (htim == NULL)
 8007206:	4604      	mov	r4, r0
 8007208:	b330      	cbz	r0, 8007258 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800720a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800720e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007212:	b91b      	cbnz	r3, 800721c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8007214:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8007218:	f7ff feac 	bl	8006f74 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800721c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800721e:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8007220:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007224:	1d21      	adds	r1, r4, #4
 8007226:	f7ff ff87 	bl	8007138 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800722a:	2301      	movs	r3, #1
 800722c:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8007230:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007232:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8007236:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800723a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800723e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007242:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8007246:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800724a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800724e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 8007252:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8007256:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007258:	2001      	movs	r0, #1
 800725a:	e7fc      	b.n	8007256 <HAL_TIM_Base_Init+0x52>

0800725c <HAL_TIMEx_CommutCallback>:
 800725c:	4770      	bx	lr

0800725e <HAL_TIMEx_BreakCallback>:
 800725e:	4770      	bx	lr

08007260 <UART_SetConfig>:
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8007260:	6802      	ldr	r2, [r0, #0]
 8007262:	68c1      	ldr	r1, [r0, #12]
 8007264:	6913      	ldr	r3, [r2, #16]
 8007266:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800726a:	430b      	orrs	r3, r1
{
 800726c:	b570      	push	{r4, r5, r6, lr}
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800726e:	6113      	str	r3, [r2, #16]
{
 8007270:	4605      	mov	r5, r0
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8007272:	6883      	ldr	r3, [r0, #8]
 8007274:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1,
 8007276:	68d1      	ldr	r1, [r2, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8007278:	4303      	orrs	r3, r0
 800727a:	6968      	ldr	r0, [r5, #20]
 800727c:	4303      	orrs	r3, r0
 800727e:	69e8      	ldr	r0, [r5, #28]
  MODIFY_REG(huart->Instance->CR1,
 8007280:	f421 4116 	bic.w	r1, r1, #38400	; 0x9600
 8007284:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8007288:	4303      	orrs	r3, r0
  MODIFY_REG(huart->Instance->CR1,
 800728a:	430b      	orrs	r3, r1
 800728c:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800728e:	6953      	ldr	r3, [r2, #20]
 8007290:	69a9      	ldr	r1, [r5, #24]
 8007292:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007296:	430b      	orrs	r3, r1
 8007298:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800729a:	4b1f      	ldr	r3, [pc, #124]	; (8007318 <UART_SetConfig+0xb8>)
 800729c:	429a      	cmp	r2, r3
 800729e:	d003      	beq.n	80072a8 <UART_SetConfig+0x48>
 80072a0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80072a4:	429a      	cmp	r2, r3
 80072a6:	d123      	bne.n	80072f0 <UART_SetConfig+0x90>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 80072a8:	f7ff f96a 	bl	8006580 <HAL_RCC_GetPCLK2Freq>
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80072ac:	69eb      	ldr	r3, [r5, #28]
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 80072ae:	2119      	movs	r1, #25
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80072b0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 80072b4:	e9d5 4600 	ldrd	r4, r6, [r5]
 80072b8:	fba0 0101 	umull	r0, r1, r0, r1
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80072bc:	d11b      	bne.n	80072f6 <UART_SetConfig+0x96>
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 80072be:	19b2      	adds	r2, r6, r6
 80072c0:	f04f 0300 	mov.w	r3, #0
 80072c4:	415b      	adcs	r3, r3
 80072c6:	f7f8 ffe3 	bl	8000290 <__aeabi_uldivmod>
 80072ca:	2164      	movs	r1, #100	; 0x64
 80072cc:	fbb0 f5f1 	udiv	r5, r0, r1
 80072d0:	fb01 0315 	mls	r3, r1, r5, r0
 80072d4:	00db      	lsls	r3, r3, #3
 80072d6:	3332      	adds	r3, #50	; 0x32
 80072d8:	fbb3 f3f1 	udiv	r3, r3, r1
 80072dc:	f003 0207 	and.w	r2, r3, #7
 80072e0:	005b      	lsls	r3, r3, #1
 80072e2:	eb02 1205 	add.w	r2, r2, r5, lsl #4
 80072e6:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 80072ea:	4413      	add	r3, r2
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 80072ec:	60a3      	str	r3, [r4, #8]
  }
}
 80072ee:	bd70      	pop	{r4, r5, r6, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 80072f0:	f7ff f936 	bl	8006560 <HAL_RCC_GetPCLK1Freq>
 80072f4:	e7da      	b.n	80072ac <UART_SetConfig+0x4c>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 80072f6:	00b2      	lsls	r2, r6, #2
 80072f8:	0fb3      	lsrs	r3, r6, #30
 80072fa:	f7f8 ffc9 	bl	8000290 <__aeabi_uldivmod>
 80072fe:	2264      	movs	r2, #100	; 0x64
 8007300:	fbb0 f1f2 	udiv	r1, r0, r2
 8007304:	fb02 0311 	mls	r3, r2, r1, r0
 8007308:	011b      	lsls	r3, r3, #4
 800730a:	3332      	adds	r3, #50	; 0x32
 800730c:	fbb3 f3f2 	udiv	r3, r3, r2
 8007310:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8007314:	e7ea      	b.n	80072ec <UART_SetConfig+0x8c>
 8007316:	bf00      	nop
 8007318:	40011000 	.word	0x40011000

0800731c <HAL_UART_Init>:
{
 800731c:	b510      	push	{r4, lr}
  if (huart == NULL)
 800731e:	4604      	mov	r4, r0
 8007320:	b340      	cbz	r0, 8007374 <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 8007322:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007326:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800732a:	b91b      	cbnz	r3, 8007334 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 800732c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_UART_MspInit(huart);
 8007330:	f7fa fd78 	bl	8001e24 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8007334:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8007336:	2324      	movs	r3, #36	; 0x24
 8007338:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UART_DISABLE(huart);
 800733c:	68d3      	ldr	r3, [r2, #12]
 800733e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8007342:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8007344:	4620      	mov	r0, r4
 8007346:	f7ff ff8b 	bl	8007260 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800734a:	6823      	ldr	r3, [r4, #0]
 800734c:	691a      	ldr	r2, [r3, #16]
 800734e:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8007352:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8007354:	695a      	ldr	r2, [r3, #20]
 8007356:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800735a:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 800735c:	68da      	ldr	r2, [r3, #12]
 800735e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007362:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007364:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8007366:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007368:	6420      	str	r0, [r4, #64]	; 0x40
  huart->gState = HAL_UART_STATE_READY;
 800736a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  huart->RxState = HAL_UART_STATE_READY;
 800736e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
}
 8007372:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007374:	2001      	movs	r0, #1
 8007376:	e7fc      	b.n	8007372 <HAL_UART_Init+0x56>

08007378 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007378:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800737c:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8007380:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007382:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 8007386:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800738a:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800738e:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 8007392:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8007394:	b9a2      	cbnz	r2, 80073c0 <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007396:	ea43 0209 	orr.w	r2, r3, r9
 800739a:	432a      	orrs	r2, r5
 800739c:	ea42 0308 	orr.w	r3, r2, r8
 80073a0:	6801      	ldr	r1, [r0, #0]
 80073a2:	ea43 030e 	orr.w	r3, r3, lr
 80073a6:	ea43 030c 	orr.w	r3, r3, ip
 80073aa:	433b      	orrs	r3, r7
 80073ac:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 80073b0:	4333      	orrs	r3, r6
 80073b2:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 80073b6:	430b      	orrs	r3, r1
 80073b8:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 80073ba:	2000      	movs	r0, #0
 80073bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80073c0:	6802      	ldr	r2, [r0, #0]
 80073c2:	ea43 0309 	orr.w	r3, r3, r9
 80073c6:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 80073ca:	4313      	orrs	r3, r2
 80073cc:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 80073ce:	ea45 0308 	orr.w	r3, r5, r8
 80073d2:	6842      	ldr	r2, [r0, #4]
 80073d4:	ea43 030e 	orr.w	r3, r3, lr
 80073d8:	ea43 030c 	orr.w	r3, r3, ip
 80073dc:	433b      	orrs	r3, r7
 80073de:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 80073e2:	4333      	orrs	r3, r6
 80073e4:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 80073e8:	4313      	orrs	r3, r2
 80073ea:	6043      	str	r3, [r0, #4]
 80073ec:	e7e5      	b.n	80073ba <FMC_SDRAM_Init+0x42>

080073ee <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80073ee:	68cb      	ldr	r3, [r1, #12]
 80073f0:	f103 3cff 	add.w	ip, r3, #4294967295
 80073f4:	694b      	ldr	r3, [r1, #20]
{
 80073f6:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80073f8:	680f      	ldr	r7, [r1, #0]
 80073fa:	684c      	ldr	r4, [r1, #4]
 80073fc:	688e      	ldr	r6, [r1, #8]
 80073fe:	690d      	ldr	r5, [r1, #16]
 8007400:	6989      	ldr	r1, [r1, #24]
 8007402:	3b01      	subs	r3, #1
 8007404:	051b      	lsls	r3, r3, #20
 8007406:	3c01      	subs	r4, #1
 8007408:	3e01      	subs	r6, #1
 800740a:	3d01      	subs	r5, #1
 800740c:	3901      	subs	r1, #1
 800740e:	3f01      	subs	r7, #1
 8007410:	0124      	lsls	r4, r4, #4
 8007412:	0236      	lsls	r6, r6, #8
 8007414:	042d      	lsls	r5, r5, #16
 8007416:	0609      	lsls	r1, r1, #24
 8007418:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 800741c:	b95a      	cbnz	r2, 8007436 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800741e:	433b      	orrs	r3, r7
 8007420:	4323      	orrs	r3, r4
 8007422:	6882      	ldr	r2, [r0, #8]
 8007424:	4333      	orrs	r3, r6
 8007426:	432b      	orrs	r3, r5
 8007428:	430b      	orrs	r3, r1
 800742a:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800742e:	4313      	orrs	r3, r2
 8007430:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8007432:	2000      	movs	r0, #0
 8007434:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007436:	6882      	ldr	r2, [r0, #8]
 8007438:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800743c:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8007440:	431a      	orrs	r2, r3
 8007442:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8007444:	ea44 0306 	orr.w	r3, r4, r6
 8007448:	68c2      	ldr	r2, [r0, #12]
 800744a:	433b      	orrs	r3, r7
 800744c:	432b      	orrs	r3, r5
 800744e:	430b      	orrs	r3, r1
 8007450:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8007454:	4313      	orrs	r3, r2
 8007456:	60c3      	str	r3, [r0, #12]
 8007458:	e7eb      	b.n	8007432 <FMC_SDRAM_Timing_Init+0x44>

0800745a <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800745a:	b570      	push	{r4, r5, r6, lr}
 800745c:	4604      	mov	r4, r0
 800745e:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8007460:	6902      	ldr	r2, [r0, #16]
 8007462:	e9d1 3000 	ldrd	r3, r0, [r1]
 8007466:	4303      	orrs	r3, r0
 8007468:	68c8      	ldr	r0, [r1, #12]
 800746a:	0d92      	lsrs	r2, r2, #22
 800746c:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8007470:	0592      	lsls	r2, r2, #22
 8007472:	4313      	orrs	r3, r2
 8007474:	688a      	ldr	r2, [r1, #8]
 8007476:	3a01      	subs	r2, #1
 8007478:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800747c:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800747e:	f7fd fbb9 	bl	8004bf4 <HAL_GetTick>
 8007482:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007484:	69a3      	ldr	r3, [r4, #24]
 8007486:	f013 0320 	ands.w	r3, r3, #32
 800748a:	d101      	bne.n	8007490 <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800748c:	4618      	mov	r0, r3
 800748e:	e003      	b.n	8007498 <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 8007490:	1c6b      	adds	r3, r5, #1
 8007492:	d0f7      	beq.n	8007484 <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8007494:	b90d      	cbnz	r5, 800749a <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 8007496:	2003      	movs	r0, #3
}
 8007498:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800749a:	f7fd fbab 	bl	8004bf4 <HAL_GetTick>
 800749e:	1b80      	subs	r0, r0, r6
 80074a0:	42a8      	cmp	r0, r5
 80074a2:	d9ef      	bls.n	8007484 <FMC_SDRAM_SendCommand+0x2a>
 80074a4:	e7f7      	b.n	8007496 <FMC_SDRAM_SendCommand+0x3c>

080074a6 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 80074a6:	6943      	ldr	r3, [r0, #20]
 80074a8:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80074ac:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 80074b0:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 80074b4:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 80074b6:	2000      	movs	r0, #0
 80074b8:	4770      	bx	lr

080074ba <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 80074ba:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 80074bc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80074c0:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 80074c2:	f001 fe39 	bl	8009138 <xTaskGetSchedulerState>
 80074c6:	2801      	cmp	r0, #1
 80074c8:	d003      	beq.n	80074d2 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 80074ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 80074ce:	f000 bbe9 	b.w	8007ca4 <xPortSysTickHandler>
}
 80074d2:	bd08      	pop	{r3, pc}

080074d4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80074d4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80074d8:	b92b      	cbnz	r3, 80074e6 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 80074da:	4b06      	ldr	r3, [pc, #24]	; (80074f4 <osKernelInitialize+0x20>)
 80074dc:	6818      	ldr	r0, [r3, #0]
 80074de:	b928      	cbnz	r0, 80074ec <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80074e0:	2201      	movs	r2, #1
 80074e2:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80074e4:	4770      	bx	lr
    stat = osErrorISR;
 80074e6:	f06f 0005 	mvn.w	r0, #5
 80074ea:	4770      	bx	lr
    } else {
      stat = osError;
 80074ec:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80074f0:	4770      	bx	lr
 80074f2:	bf00      	nop
 80074f4:	20001b44 	.word	0x20001b44

080074f8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80074f8:	b510      	push	{r4, lr}
 80074fa:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80074fe:	b95c      	cbnz	r4, 8007518 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8007500:	4b08      	ldr	r3, [pc, #32]	; (8007524 <osKernelStart+0x2c>)
 8007502:	681a      	ldr	r2, [r3, #0]
 8007504:	2a01      	cmp	r2, #1
 8007506:	d10a      	bne.n	800751e <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007508:	4a07      	ldr	r2, [pc, #28]	; (8007528 <osKernelStart+0x30>)
 800750a:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800750c:	2202      	movs	r2, #2
 800750e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8007510:	f001 fb8c 	bl	8008c2c <vTaskStartScheduler>
      stat = osOK;
 8007514:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8007516:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8007518:	f06f 0005 	mvn.w	r0, #5
 800751c:	e7fb      	b.n	8007516 <osKernelStart+0x1e>
      stat = osError;
 800751e:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8007522:	e7f8      	b.n	8007516 <osKernelStart+0x1e>
 8007524:	20001b44 	.word	0x20001b44
 8007528:	e000ed00 	.word	0xe000ed00

0800752c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800752c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800752e:	b087      	sub	sp, #28
 8007530:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8007532:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007534:	460b      	mov	r3, r1
  hTask = NULL;
 8007536:	9205      	str	r2, [sp, #20]
 8007538:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800753c:	b9d2      	cbnz	r2, 8007574 <osThreadNew+0x48>
 800753e:	b1c8      	cbz	r0, 8007574 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8007540:	2c00      	cmp	r4, #0
 8007542:	d02f      	beq.n	80075a4 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8007544:	69a5      	ldr	r5, [r4, #24]
 8007546:	2d00      	cmp	r5, #0
 8007548:	bf08      	it	eq
 800754a:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800754c:	1e69      	subs	r1, r5, #1
 800754e:	2937      	cmp	r1, #55	; 0x37
 8007550:	46ac      	mov	ip, r5
 8007552:	d82b      	bhi.n	80075ac <osThreadNew+0x80>
 8007554:	6861      	ldr	r1, [r4, #4]
 8007556:	07c9      	lsls	r1, r1, #31
 8007558:	d428      	bmi.n	80075ac <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800755a:	6966      	ldr	r6, [r4, #20]
 800755c:	b16e      	cbz	r6, 800757a <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800755e:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007560:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8007564:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007566:	b157      	cbz	r7, 800757e <osThreadNew+0x52>
 8007568:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 800756c:	d902      	bls.n	8007574 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800756e:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007570:	b104      	cbz	r4, 8007574 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007572:	b9ee      	cbnz	r6, 80075b0 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8007574:	9805      	ldr	r0, [sp, #20]
}
 8007576:	b007      	add	sp, #28
 8007578:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800757a:	2280      	movs	r2, #128	; 0x80
 800757c:	e7f0      	b.n	8007560 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800757e:	f1be 0f00 	cmp.w	lr, #0
 8007582:	d1f7      	bne.n	8007574 <osThreadNew+0x48>
      if (mem == 0) {
 8007584:	6924      	ldr	r4, [r4, #16]
 8007586:	2c00      	cmp	r4, #0
 8007588:	d1f4      	bne.n	8007574 <osThreadNew+0x48>
 800758a:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800758c:	a905      	add	r1, sp, #20
 800758e:	e9cd c100 	strd	ip, r1, [sp]
 8007592:	b292      	uxth	r2, r2
 8007594:	4621      	mov	r1, r4
 8007596:	f001 fb1c 	bl	8008bd2 <xTaskCreate>
 800759a:	2801      	cmp	r0, #1
            hTask = NULL;
 800759c:	bf1c      	itt	ne
 800759e:	2300      	movne	r3, #0
 80075a0:	9305      	strne	r3, [sp, #20]
 80075a2:	e7e7      	b.n	8007574 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 80075a4:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80075a8:	2280      	movs	r2, #128	; 0x80
 80075aa:	e7ef      	b.n	800758c <osThreadNew+0x60>
        return (NULL);
 80075ac:	4610      	mov	r0, r2
 80075ae:	e7e2      	b.n	8007576 <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80075b0:	e9cd 4701 	strd	r4, r7, [sp, #4]
 80075b4:	9500      	str	r5, [sp, #0]
 80075b6:	f001 fad4 	bl	8008b62 <xTaskCreateStatic>
 80075ba:	9005      	str	r0, [sp, #20]
 80075bc:	e7da      	b.n	8007574 <osThreadNew+0x48>

080075be <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 80075be:	b510      	push	{r4, lr}
 80075c0:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80075c4:	b924      	cbnz	r4, 80075d0 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 80075c6:	b110      	cbz	r0, 80075ce <osDelay+0x10>
      vTaskDelay(ticks);
 80075c8:	f001 fc8e 	bl	8008ee8 <vTaskDelay>
    stat = osOK;
 80075cc:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 80075ce:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80075d0:	f06f 0005 	mvn.w	r0, #5
 80075d4:	e7fb      	b.n	80075ce <osDelay+0x10>

080075d6 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80075d6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80075d8:	4604      	mov	r4, r0
 80075da:	460e      	mov	r6, r1
 80075dc:	4615      	mov	r5, r2
 80075de:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80075e2:	b11a      	cbz	r2, 80075ec <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 80075e4:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80075e6:	4620      	mov	r0, r4
 80075e8:	b003      	add	sp, #12
 80075ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80075ec:	2800      	cmp	r0, #0
 80075ee:	d0f9      	beq.n	80075e4 <osSemaphoreNew+0xe>
 80075f0:	4288      	cmp	r0, r1
 80075f2:	d3f7      	bcc.n	80075e4 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 80075f4:	b1e5      	cbz	r5, 8007630 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80075f6:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 80075fa:	b1bb      	cbz	r3, 800762c <osSemaphoreNew+0x56>
 80075fc:	2f4f      	cmp	r7, #79	; 0x4f
 80075fe:	d9f1      	bls.n	80075e4 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8007600:	2801      	cmp	r0, #1
 8007602:	d12a      	bne.n	800765a <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007604:	2103      	movs	r1, #3
 8007606:	9100      	str	r1, [sp, #0]
 8007608:	4611      	mov	r1, r2
 800760a:	f000 fcf4 	bl	8007ff6 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800760e:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8007610:	2800      	cmp	r0, #0
 8007612:	d0e7      	beq.n	80075e4 <osSemaphoreNew+0xe>
 8007614:	b1de      	cbz	r6, 800764e <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007616:	2300      	movs	r3, #0
 8007618:	461a      	mov	r2, r3
 800761a:	4619      	mov	r1, r3
 800761c:	f000 fda0 	bl	8008160 <xQueueGenericSend>
 8007620:	2801      	cmp	r0, #1
 8007622:	d014      	beq.n	800764e <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8007624:	4620      	mov	r0, r4
 8007626:	f001 f8fd 	bl	8008824 <vQueueDelete>
 800762a:	e7db      	b.n	80075e4 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800762c:	2f00      	cmp	r7, #0
 800762e:	d1d9      	bne.n	80075e4 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8007630:	2c01      	cmp	r4, #1
 8007632:	d105      	bne.n	8007640 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 8007634:	2203      	movs	r2, #3
 8007636:	2100      	movs	r1, #0
 8007638:	4620      	mov	r0, r4
 800763a:	f000 fd2a 	bl	8008092 <xQueueGenericCreate>
 800763e:	e7e6      	b.n	800760e <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8007640:	4620      	mov	r0, r4
 8007642:	4631      	mov	r1, r6
 8007644:	f000 fd6e 	bl	8008124 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8007648:	4604      	mov	r4, r0
 800764a:	2800      	cmp	r0, #0
 800764c:	d0ca      	beq.n	80075e4 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 800764e:	b955      	cbnz	r5, 8007666 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8007650:	4629      	mov	r1, r5
 8007652:	4620      	mov	r0, r4
 8007654:	f001 f8c0 	bl	80087d8 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8007658:	e7c5      	b.n	80075e6 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800765a:	461a      	mov	r2, r3
 800765c:	f000 fd40 	bl	80080e0 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8007660:	4604      	mov	r4, r0
 8007662:	2800      	cmp	r0, #0
 8007664:	d0be      	beq.n	80075e4 <osSemaphoreNew+0xe>
          name = attr->name;
 8007666:	682d      	ldr	r5, [r5, #0]
 8007668:	e7f2      	b.n	8007650 <osSemaphoreNew+0x7a>

0800766a <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800766a:	b513      	push	{r0, r1, r4, lr}
 800766c:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800766e:	b308      	cbz	r0, 80076b4 <osSemaphoreAcquire+0x4a>
 8007670:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007674:	b1b3      	cbz	r3, 80076a4 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 8007676:	b9e9      	cbnz	r1, 80076b4 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007678:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800767a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800767c:	f001 f83b 	bl	80086f6 <xQueueReceiveFromISR>
 8007680:	2801      	cmp	r0, #1
 8007682:	d114      	bne.n	80076ae <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8007684:	9b01      	ldr	r3, [sp, #4]
 8007686:	b913      	cbnz	r3, 800768e <osSemaphoreAcquire+0x24>
  stat = osOK;
 8007688:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800768a:	b002      	add	sp, #8
 800768c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800768e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007692:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007696:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800769a:	f3bf 8f4f 	dsb	sy
 800769e:	f3bf 8f6f 	isb	sy
 80076a2:	e7f1      	b.n	8007688 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80076a4:	f000 ff64 	bl	8008570 <xQueueSemaphoreTake>
 80076a8:	2801      	cmp	r0, #1
 80076aa:	d0ed      	beq.n	8007688 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 80076ac:	b92c      	cbnz	r4, 80076ba <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 80076ae:	f06f 0002 	mvn.w	r0, #2
 80076b2:	e7ea      	b.n	800768a <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 80076b4:	f06f 0003 	mvn.w	r0, #3
 80076b8:	e7e7      	b.n	800768a <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 80076ba:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80076be:	e7e4      	b.n	800768a <osSemaphoreAcquire+0x20>

080076c0 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80076c0:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80076c2:	b310      	cbz	r0, 800770a <osSemaphoreRelease+0x4a>
 80076c4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80076c8:	b1b3      	cbz	r3, 80076f8 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 80076ca:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80076cc:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 80076ce:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80076d0:	f000 fe5b 	bl	800838a <xQueueGiveFromISR>
 80076d4:	2801      	cmp	r0, #1
 80076d6:	d115      	bne.n	8007704 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 80076d8:	9b01      	ldr	r3, [sp, #4]
 80076da:	b913      	cbnz	r3, 80076e2 <osSemaphoreRelease+0x22>
  stat = osOK;
 80076dc:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 80076de:	b002      	add	sp, #8
 80076e0:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 80076e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80076e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80076ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80076ee:	f3bf 8f4f 	dsb	sy
 80076f2:	f3bf 8f6f 	isb	sy
 80076f6:	e7f1      	b.n	80076dc <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80076f8:	461a      	mov	r2, r3
 80076fa:	4619      	mov	r1, r3
 80076fc:	f000 fd30 	bl	8008160 <xQueueGenericSend>
 8007700:	2801      	cmp	r0, #1
 8007702:	d0eb      	beq.n	80076dc <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8007704:	f06f 0002 	mvn.w	r0, #2
 8007708:	e7e9      	b.n	80076de <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 800770a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800770e:	e7e6      	b.n	80076de <osSemaphoreRelease+0x1e>

08007710 <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
 8007710:	b130      	cbz	r0, 8007720 <osSemaphoreGetCount+0x10>
 8007712:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
 8007716:	b10b      	cbz	r3, 800771c <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
 8007718:	f001 b851 	b.w	80087be <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
 800771c:	f001 b83a 	b.w	8008794 <uxQueueMessagesWaiting>
  }

  return (count);
}
 8007720:	4770      	bx	lr

08007722 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007722:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007724:	4605      	mov	r5, r0
 8007726:	460e      	mov	r6, r1
 8007728:	4614      	mov	r4, r2
 800772a:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800772e:	b11f      	cbz	r7, 8007738 <osMessageQueueNew+0x16>
  hQueue = NULL;
 8007730:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8007732:	4628      	mov	r0, r5
 8007734:	b003      	add	sp, #12
 8007736:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007738:	2800      	cmp	r0, #0
 800773a:	d0f9      	beq.n	8007730 <osMessageQueueNew+0xe>
 800773c:	2900      	cmp	r1, #0
 800773e:	d0f7      	beq.n	8007730 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8007740:	b1da      	cbz	r2, 800777a <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007742:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8007746:	b183      	cbz	r3, 800776a <osMessageQueueNew+0x48>
 8007748:	2a4f      	cmp	r2, #79	; 0x4f
 800774a:	d9f1      	bls.n	8007730 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800774c:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800774e:	2a00      	cmp	r2, #0
 8007750:	d0ee      	beq.n	8007730 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007752:	6966      	ldr	r6, [r4, #20]
 8007754:	434d      	muls	r5, r1
 8007756:	42ae      	cmp	r6, r5
 8007758:	d3ea      	bcc.n	8007730 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800775a:	9700      	str	r7, [sp, #0]
 800775c:	f000 fc4b 	bl	8007ff6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8007760:	4605      	mov	r5, r0
 8007762:	2800      	cmp	r0, #0
 8007764:	d0e4      	beq.n	8007730 <osMessageQueueNew+0xe>
        name = attr->name;
 8007766:	6824      	ldr	r4, [r4, #0]
 8007768:	e011      	b.n	800778e <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800776a:	2a00      	cmp	r2, #0
 800776c:	d1e0      	bne.n	8007730 <osMessageQueueNew+0xe>
 800776e:	6923      	ldr	r3, [r4, #16]
 8007770:	2b00      	cmp	r3, #0
 8007772:	d1dd      	bne.n	8007730 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8007774:	6963      	ldr	r3, [r4, #20]
 8007776:	2b00      	cmp	r3, #0
 8007778:	d1da      	bne.n	8007730 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800777a:	4628      	mov	r0, r5
 800777c:	2200      	movs	r2, #0
 800777e:	4631      	mov	r1, r6
 8007780:	f000 fc87 	bl	8008092 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8007784:	4605      	mov	r5, r0
 8007786:	2800      	cmp	r0, #0
 8007788:	d0d2      	beq.n	8007730 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800778a:	2c00      	cmp	r4, #0
 800778c:	d1eb      	bne.n	8007766 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800778e:	4621      	mov	r1, r4
 8007790:	4628      	mov	r0, r5
 8007792:	f001 f821 	bl	80087d8 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8007796:	e7cc      	b.n	8007732 <osMessageQueueNew+0x10>

08007798 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007798:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800779a:	461c      	mov	r4, r3
 800779c:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80077a0:	b1c6      	cbz	r6, 80077d4 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80077a2:	b318      	cbz	r0, 80077ec <osMessageQueuePut+0x54>
 80077a4:	b311      	cbz	r1, 80077ec <osMessageQueuePut+0x54>
 80077a6:	bb0b      	cbnz	r3, 80077ec <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80077a8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80077aa:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80077ac:	f000 fd8b 	bl	80082c6 <xQueueGenericSendFromISR>
 80077b0:	2801      	cmp	r0, #1
 80077b2:	d118      	bne.n	80077e6 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80077b4:	9b01      	ldr	r3, [sp, #4]
 80077b6:	b913      	cbnz	r3, 80077be <osMessageQueuePut+0x26>
  stat = osOK;
 80077b8:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80077ba:	b002      	add	sp, #8
 80077bc:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 80077be:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80077c2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80077c6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80077ca:	f3bf 8f4f 	dsb	sy
 80077ce:	f3bf 8f6f 	isb	sy
 80077d2:	e7f1      	b.n	80077b8 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80077d4:	b150      	cbz	r0, 80077ec <osMessageQueuePut+0x54>
 80077d6:	b149      	cbz	r1, 80077ec <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80077d8:	4633      	mov	r3, r6
 80077da:	4622      	mov	r2, r4
 80077dc:	f000 fcc0 	bl	8008160 <xQueueGenericSend>
 80077e0:	2801      	cmp	r0, #1
 80077e2:	d0e9      	beq.n	80077b8 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 80077e4:	b92c      	cbnz	r4, 80077f2 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 80077e6:	f06f 0002 	mvn.w	r0, #2
 80077ea:	e7e6      	b.n	80077ba <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 80077ec:	f06f 0003 	mvn.w	r0, #3
 80077f0:	e7e3      	b.n	80077ba <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 80077f2:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80077f6:	e7e0      	b.n	80077ba <osMessageQueuePut+0x22>

080077f8 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 80077f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80077fa:	461c      	mov	r4, r3
 80077fc:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007800:	b1c3      	cbz	r3, 8007834 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007802:	b310      	cbz	r0, 800784a <osMessageQueueGet+0x52>
 8007804:	b309      	cbz	r1, 800784a <osMessageQueueGet+0x52>
 8007806:	bb04      	cbnz	r4, 800784a <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007808:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800780a:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800780c:	f000 ff73 	bl	80086f6 <xQueueReceiveFromISR>
 8007810:	2801      	cmp	r0, #1
 8007812:	d117      	bne.n	8007844 <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8007814:	9b01      	ldr	r3, [sp, #4]
 8007816:	b913      	cbnz	r3, 800781e <osMessageQueueGet+0x26>
  stat = osOK;
 8007818:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800781a:	b003      	add	sp, #12
 800781c:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800781e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007822:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007826:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800782a:	f3bf 8f4f 	dsb	sy
 800782e:	f3bf 8f6f 	isb	sy
 8007832:	e7f1      	b.n	8007818 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007834:	b148      	cbz	r0, 800784a <osMessageQueueGet+0x52>
 8007836:	b141      	cbz	r1, 800784a <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007838:	4622      	mov	r2, r4
 800783a:	f000 fdfa 	bl	8008432 <xQueueReceive>
 800783e:	2801      	cmp	r0, #1
 8007840:	d0ea      	beq.n	8007818 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8007842:	b92c      	cbnz	r4, 8007850 <osMessageQueueGet+0x58>
          stat = osErrorResource;
 8007844:	f06f 0002 	mvn.w	r0, #2
 8007848:	e7e7      	b.n	800781a <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 800784a:	f06f 0003 	mvn.w	r0, #3
 800784e:	e7e4      	b.n	800781a <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8007850:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007854:	e7e1      	b.n	800781a <osMessageQueueGet+0x22>

08007856 <osMessageQueueGetCount>:
 8007856:	f7ff bf5b 	b.w	8007710 <osSemaphoreGetCount>
	...

0800785c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800785c:	4b03      	ldr	r3, [pc, #12]	; (800786c <vApplicationGetIdleTaskMemory+0x10>)
 800785e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8007860:	4b03      	ldr	r3, [pc, #12]	; (8007870 <vApplicationGetIdleTaskMemory+0x14>)
 8007862:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8007864:	2380      	movs	r3, #128	; 0x80
 8007866:	6013      	str	r3, [r2, #0]
}
 8007868:	4770      	bx	lr
 800786a:	bf00      	nop
 800786c:	20001ae4 	.word	0x20001ae4
 8007870:	200018e4 	.word	0x200018e4

08007874 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007874:	4b03      	ldr	r3, [pc, #12]	; (8007884 <vApplicationGetTimerTaskMemory+0x10>)
 8007876:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8007878:	4b03      	ldr	r3, [pc, #12]	; (8007888 <vApplicationGetTimerTaskMemory+0x14>)
 800787a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800787c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007880:	6013      	str	r3, [r2, #0]
}
 8007882:	4770      	bx	lr
 8007884:	20001f48 	.word	0x20001f48
 8007888:	20001b48 	.word	0x20001b48

0800788c <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800788c:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800788e:	4b0f      	ldr	r3, [pc, #60]	; (80078cc <prvInsertBlockIntoFreeList+0x40>)
 8007890:	461a      	mov	r2, r3
 8007892:	681b      	ldr	r3, [r3, #0]
 8007894:	4283      	cmp	r3, r0
 8007896:	d3fb      	bcc.n	8007890 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8007898:	6854      	ldr	r4, [r2, #4]
 800789a:	1911      	adds	r1, r2, r4
 800789c:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800789e:	bf01      	itttt	eq
 80078a0:	6841      	ldreq	r1, [r0, #4]
 80078a2:	4610      	moveq	r0, r2
 80078a4:	1909      	addeq	r1, r1, r4
 80078a6:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80078a8:	6844      	ldr	r4, [r0, #4]
 80078aa:	1901      	adds	r1, r0, r4
 80078ac:	428b      	cmp	r3, r1
 80078ae:	d107      	bne.n	80078c0 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80078b0:	4907      	ldr	r1, [pc, #28]	; (80078d0 <prvInsertBlockIntoFreeList+0x44>)
 80078b2:	6809      	ldr	r1, [r1, #0]
 80078b4:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80078b6:	bf1f      	itttt	ne
 80078b8:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80078ba:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80078bc:	1909      	addne	r1, r1, r4
 80078be:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80078c0:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 80078c2:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80078c4:	bf18      	it	ne
 80078c6:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80078c8:	bd10      	pop	{r4, pc}
 80078ca:	bf00      	nop
 80078cc:	20011fc0 	.word	0x20011fc0
 80078d0:	20001fa8 	.word	0x20001fa8

080078d4 <pvPortMalloc>:
{
 80078d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80078d8:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80078da:	f001 f9ed 	bl	8008cb8 <vTaskSuspendAll>
		if( pxEnd == NULL )
 80078de:	4842      	ldr	r0, [pc, #264]	; (80079e8 <pvPortMalloc+0x114>)
 80078e0:	4d42      	ldr	r5, [pc, #264]	; (80079ec <pvPortMalloc+0x118>)
 80078e2:	6803      	ldr	r3, [r0, #0]
 80078e4:	bb0b      	cbnz	r3, 800792a <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 80078e6:	4942      	ldr	r1, [pc, #264]	; (80079f0 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 80078e8:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 80078ea:	bf1f      	itttt	ne
 80078ec:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80078ee:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 80078f2:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 80078f6:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80078f8:	bf14      	ite	ne
 80078fa:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 80078fc:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8007900:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007902:	4e3c      	ldr	r6, [pc, #240]	; (80079f4 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8007904:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007906:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800790a:	2300      	movs	r3, #0
 800790c:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800790e:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8007910:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007914:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007916:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 800791a:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800791c:	4a36      	ldr	r2, [pc, #216]	; (80079f8 <pvPortMalloc+0x124>)
 800791e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007920:	4a36      	ldr	r2, [pc, #216]	; (80079fc <pvPortMalloc+0x128>)
 8007922:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007924:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8007928:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800792a:	682f      	ldr	r7, [r5, #0]
 800792c:	4227      	tst	r7, r4
 800792e:	d155      	bne.n	80079dc <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8007930:	2c00      	cmp	r4, #0
 8007932:	d046      	beq.n	80079c2 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8007934:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007938:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800793a:	bf1c      	itt	ne
 800793c:	f023 0307 	bicne.w	r3, r3, #7
 8007940:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8007942:	2b00      	cmp	r3, #0
 8007944:	d04a      	beq.n	80079dc <pvPortMalloc+0x108>
 8007946:	4c2d      	ldr	r4, [pc, #180]	; (80079fc <pvPortMalloc+0x128>)
 8007948:	6826      	ldr	r6, [r4, #0]
 800794a:	429e      	cmp	r6, r3
 800794c:	d346      	bcc.n	80079dc <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800794e:	4a29      	ldr	r2, [pc, #164]	; (80079f4 <pvPortMalloc+0x120>)
 8007950:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8007952:	6869      	ldr	r1, [r5, #4]
 8007954:	4299      	cmp	r1, r3
 8007956:	d204      	bcs.n	8007962 <pvPortMalloc+0x8e>
 8007958:	f8d5 c000 	ldr.w	ip, [r5]
 800795c:	f1bc 0f00 	cmp.w	ip, #0
 8007960:	d115      	bne.n	800798e <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8007962:	6800      	ldr	r0, [r0, #0]
 8007964:	42a8      	cmp	r0, r5
 8007966:	d039      	beq.n	80079dc <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007968:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800796a:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800796c:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007970:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007972:	2910      	cmp	r1, #16
 8007974:	d912      	bls.n	800799c <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8007976:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8007978:	0742      	lsls	r2, r0, #29
 800797a:	d00b      	beq.n	8007994 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800797c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007980:	f383 8811 	msr	BASEPRI, r3
 8007984:	f3bf 8f6f 	isb	sy
 8007988:	f3bf 8f4f 	dsb	sy
 800798c:	e7fe      	b.n	800798c <pvPortMalloc+0xb8>
 800798e:	462a      	mov	r2, r5
 8007990:	4665      	mov	r5, ip
 8007992:	e7de      	b.n	8007952 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007994:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8007996:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007998:	f7ff ff78 	bl	800788c <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800799c:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800799e:	4916      	ldr	r1, [pc, #88]	; (80079f8 <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 80079a0:	4a17      	ldr	r2, [pc, #92]	; (8007a00 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80079a2:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80079a4:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80079a6:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 80079a8:	2300      	movs	r3, #0
 80079aa:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 80079ac:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80079ae:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80079b0:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 80079b2:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80079b6:	bf38      	it	cc
 80079b8:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80079ba:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80079be:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 80079c0:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 80079c2:	f001 fa1d 	bl	8008e00 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80079c6:	0763      	lsls	r3, r4, #29
 80079c8:	d00a      	beq.n	80079e0 <pvPortMalloc+0x10c>
 80079ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079ce:	f383 8811 	msr	BASEPRI, r3
 80079d2:	f3bf 8f6f 	isb	sy
 80079d6:	f3bf 8f4f 	dsb	sy
 80079da:	e7fe      	b.n	80079da <pvPortMalloc+0x106>
void *pvReturn = NULL;
 80079dc:	2400      	movs	r4, #0
 80079de:	e7f0      	b.n	80079c2 <pvPortMalloc+0xee>
}
 80079e0:	4620      	mov	r0, r4
 80079e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80079e6:	bf00      	nop
 80079e8:	20001fa8 	.word	0x20001fa8
 80079ec:	20011fac 	.word	0x20011fac
 80079f0:	20001fac 	.word	0x20001fac
 80079f4:	20011fc0 	.word	0x20011fc0
 80079f8:	20011fb4 	.word	0x20011fb4
 80079fc:	20011fb0 	.word	0x20011fb0
 8007a00:	20011fb8 	.word	0x20011fb8

08007a04 <vPortFree>:
{
 8007a04:	b510      	push	{r4, lr}
	if( pv != NULL )
 8007a06:	4604      	mov	r4, r0
 8007a08:	b390      	cbz	r0, 8007a70 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8007a0a:	4a1a      	ldr	r2, [pc, #104]	; (8007a74 <vPortFree+0x70>)
 8007a0c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007a10:	6812      	ldr	r2, [r2, #0]
 8007a12:	4213      	tst	r3, r2
 8007a14:	d108      	bne.n	8007a28 <vPortFree+0x24>
 8007a16:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a1a:	f383 8811 	msr	BASEPRI, r3
 8007a1e:	f3bf 8f6f 	isb	sy
 8007a22:	f3bf 8f4f 	dsb	sy
 8007a26:	e7fe      	b.n	8007a26 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007a28:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8007a2c:	b141      	cbz	r1, 8007a40 <vPortFree+0x3c>
 8007a2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a32:	f383 8811 	msr	BASEPRI, r3
 8007a36:	f3bf 8f6f 	isb	sy
 8007a3a:	f3bf 8f4f 	dsb	sy
 8007a3e:	e7fe      	b.n	8007a3e <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8007a40:	ea23 0302 	bic.w	r3, r3, r2
 8007a44:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8007a48:	f001 f936 	bl	8008cb8 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007a4c:	4a0a      	ldr	r2, [pc, #40]	; (8007a78 <vPortFree+0x74>)
 8007a4e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8007a52:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007a54:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007a58:	440b      	add	r3, r1
 8007a5a:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007a5c:	f7ff ff16 	bl	800788c <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8007a60:	4a06      	ldr	r2, [pc, #24]	; (8007a7c <vPortFree+0x78>)
 8007a62:	6813      	ldr	r3, [r2, #0]
}
 8007a64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8007a68:	3301      	adds	r3, #1
 8007a6a:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8007a6c:	f001 b9c8 	b.w	8008e00 <xTaskResumeAll>
}
 8007a70:	bd10      	pop	{r4, pc}
 8007a72:	bf00      	nop
 8007a74:	20011fac 	.word	0x20011fac
 8007a78:	20011fb0 	.word	0x20011fb0
 8007a7c:	20011fbc 	.word	0x20011fbc

08007a80 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007a80:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8007a84:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007a88:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007a8c:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007a8e:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007a90:	2300      	movs	r3, #0
 8007a92:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8007a94:	4770      	bx	lr

08007a96 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8007a96:	2300      	movs	r3, #0
 8007a98:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8007a9a:	4770      	bx	lr

08007a9c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8007a9c:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8007a9e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007aa0:	689a      	ldr	r2, [r3, #8]
 8007aa2:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007aa4:	689a      	ldr	r2, [r3, #8]
 8007aa6:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8007aa8:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007aaa:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007aac:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007aae:	3301      	adds	r3, #1
 8007ab0:	6003      	str	r3, [r0, #0]
}
 8007ab2:	4770      	bx	lr

08007ab4 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8007ab4:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8007ab6:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8007ab8:	1c63      	adds	r3, r4, #1
 8007aba:	d10a      	bne.n	8007ad2 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8007abc:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8007abe:	685a      	ldr	r2, [r3, #4]
 8007ac0:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007ac2:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007ac4:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007ac6:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007ac8:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007aca:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007acc:	3301      	adds	r3, #1
 8007ace:	6003      	str	r3, [r0, #0]
}
 8007ad0:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007ad2:	f100 0208 	add.w	r2, r0, #8
 8007ad6:	4613      	mov	r3, r2
 8007ad8:	6852      	ldr	r2, [r2, #4]
 8007ada:	6815      	ldr	r5, [r2, #0]
 8007adc:	42a5      	cmp	r5, r4
 8007ade:	d9fa      	bls.n	8007ad6 <vListInsert+0x22>
 8007ae0:	e7ed      	b.n	8007abe <vListInsert+0xa>

08007ae2 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007ae2:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007ae6:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007ae8:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8007aea:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8007aec:	6859      	ldr	r1, [r3, #4]
 8007aee:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007af0:	bf08      	it	eq
 8007af2:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007af4:	2200      	movs	r2, #0
 8007af6:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8007af8:	681a      	ldr	r2, [r3, #0]
 8007afa:	3a01      	subs	r2, #1
 8007afc:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8007afe:	6818      	ldr	r0, [r3, #0]
}
 8007b00:	4770      	bx	lr
	...

08007b04 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007b04:	4808      	ldr	r0, [pc, #32]	; (8007b28 <prvPortStartFirstTask+0x24>)
 8007b06:	6800      	ldr	r0, [r0, #0]
 8007b08:	6800      	ldr	r0, [r0, #0]
 8007b0a:	f380 8808 	msr	MSP, r0
 8007b0e:	f04f 0000 	mov.w	r0, #0
 8007b12:	f380 8814 	msr	CONTROL, r0
 8007b16:	b662      	cpsie	i
 8007b18:	b661      	cpsie	f
 8007b1a:	f3bf 8f4f 	dsb	sy
 8007b1e:	f3bf 8f6f 	isb	sy
 8007b22:	df00      	svc	0
 8007b24:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8007b26:	0000      	.short	0x0000
 8007b28:	e000ed08 	.word	0xe000ed08

08007b2c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8007b2c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8007b3c <vPortEnableVFP+0x10>
 8007b30:	6801      	ldr	r1, [r0, #0]
 8007b32:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007b36:	6001      	str	r1, [r0, #0]
 8007b38:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8007b3a:	0000      	.short	0x0000
 8007b3c:	e000ed88 	.word	0xe000ed88

08007b40 <prvTaskExitError>:
{
 8007b40:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8007b42:	2300      	movs	r3, #0
 8007b44:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8007b46:	4b0d      	ldr	r3, [pc, #52]	; (8007b7c <prvTaskExitError+0x3c>)
 8007b48:	681b      	ldr	r3, [r3, #0]
 8007b4a:	3301      	adds	r3, #1
 8007b4c:	d008      	beq.n	8007b60 <prvTaskExitError+0x20>
 8007b4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b52:	f383 8811 	msr	BASEPRI, r3
 8007b56:	f3bf 8f6f 	isb	sy
 8007b5a:	f3bf 8f4f 	dsb	sy
 8007b5e:	e7fe      	b.n	8007b5e <prvTaskExitError+0x1e>
 8007b60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b64:	f383 8811 	msr	BASEPRI, r3
 8007b68:	f3bf 8f6f 	isb	sy
 8007b6c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8007b70:	9b01      	ldr	r3, [sp, #4]
 8007b72:	2b00      	cmp	r3, #0
 8007b74:	d0fc      	beq.n	8007b70 <prvTaskExitError+0x30>
}
 8007b76:	b002      	add	sp, #8
 8007b78:	4770      	bx	lr
 8007b7a:	bf00      	nop
 8007b7c:	20000080 	.word	0x20000080

08007b80 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007b80:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8007b84:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007b88:	4b07      	ldr	r3, [pc, #28]	; (8007ba8 <pxPortInitialiseStack+0x28>)
 8007b8a:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007b8e:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007b92:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007b96:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8007b9a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007b9e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007ba2:	3844      	subs	r0, #68	; 0x44
 8007ba4:	4770      	bx	lr
 8007ba6:	bf00      	nop
 8007ba8:	08007b41 	.word	0x08007b41
 8007bac:	00000000 	.word	0x00000000

08007bb0 <SVC_Handler>:
	__asm volatile (
 8007bb0:	4b07      	ldr	r3, [pc, #28]	; (8007bd0 <pxCurrentTCBConst2>)
 8007bb2:	6819      	ldr	r1, [r3, #0]
 8007bb4:	6808      	ldr	r0, [r1, #0]
 8007bb6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007bba:	f380 8809 	msr	PSP, r0
 8007bbe:	f3bf 8f6f 	isb	sy
 8007bc2:	f04f 0000 	mov.w	r0, #0
 8007bc6:	f380 8811 	msr	BASEPRI, r0
 8007bca:	4770      	bx	lr
 8007bcc:	f3af 8000 	nop.w

08007bd0 <pxCurrentTCBConst2>:
 8007bd0:	20012010 	.word	0x20012010

08007bd4 <vPortEnterCritical>:
 8007bd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007bd8:	f383 8811 	msr	BASEPRI, r3
 8007bdc:	f3bf 8f6f 	isb	sy
 8007be0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007be4:	4a0a      	ldr	r2, [pc, #40]	; (8007c10 <vPortEnterCritical+0x3c>)
 8007be6:	6813      	ldr	r3, [r2, #0]
 8007be8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8007bea:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8007bec:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8007bee:	d10e      	bne.n	8007c0e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007bf0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007bf4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8007bf8:	b2db      	uxtb	r3, r3
 8007bfa:	b143      	cbz	r3, 8007c0e <vPortEnterCritical+0x3a>
 8007bfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c00:	f383 8811 	msr	BASEPRI, r3
 8007c04:	f3bf 8f6f 	isb	sy
 8007c08:	f3bf 8f4f 	dsb	sy
 8007c0c:	e7fe      	b.n	8007c0c <vPortEnterCritical+0x38>
}
 8007c0e:	4770      	bx	lr
 8007c10:	20000080 	.word	0x20000080

08007c14 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007c14:	4a08      	ldr	r2, [pc, #32]	; (8007c38 <vPortExitCritical+0x24>)
 8007c16:	6813      	ldr	r3, [r2, #0]
 8007c18:	b943      	cbnz	r3, 8007c2c <vPortExitCritical+0x18>
 8007c1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c1e:	f383 8811 	msr	BASEPRI, r3
 8007c22:	f3bf 8f6f 	isb	sy
 8007c26:	f3bf 8f4f 	dsb	sy
 8007c2a:	e7fe      	b.n	8007c2a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007c2c:	3b01      	subs	r3, #1
 8007c2e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007c30:	b90b      	cbnz	r3, 8007c36 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007c32:	f383 8811 	msr	BASEPRI, r3
}
 8007c36:	4770      	bx	lr
 8007c38:	20000080 	.word	0x20000080
 8007c3c:	00000000 	.word	0x00000000

08007c40 <PendSV_Handler>:
	__asm volatile
 8007c40:	f3ef 8009 	mrs	r0, PSP
 8007c44:	f3bf 8f6f 	isb	sy
 8007c48:	4b15      	ldr	r3, [pc, #84]	; (8007ca0 <pxCurrentTCBConst>)
 8007c4a:	681a      	ldr	r2, [r3, #0]
 8007c4c:	f01e 0f10 	tst.w	lr, #16
 8007c50:	bf08      	it	eq
 8007c52:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007c56:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007c5a:	6010      	str	r0, [r2, #0]
 8007c5c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007c60:	f04f 0050 	mov.w	r0, #80	; 0x50
 8007c64:	f380 8811 	msr	BASEPRI, r0
 8007c68:	f3bf 8f4f 	dsb	sy
 8007c6c:	f3bf 8f6f 	isb	sy
 8007c70:	f001 f95e 	bl	8008f30 <vTaskSwitchContext>
 8007c74:	f04f 0000 	mov.w	r0, #0
 8007c78:	f380 8811 	msr	BASEPRI, r0
 8007c7c:	bc09      	pop	{r0, r3}
 8007c7e:	6819      	ldr	r1, [r3, #0]
 8007c80:	6808      	ldr	r0, [r1, #0]
 8007c82:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007c86:	f01e 0f10 	tst.w	lr, #16
 8007c8a:	bf08      	it	eq
 8007c8c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007c90:	f380 8809 	msr	PSP, r0
 8007c94:	f3bf 8f6f 	isb	sy
 8007c98:	4770      	bx	lr
 8007c9a:	bf00      	nop
 8007c9c:	f3af 8000 	nop.w

08007ca0 <pxCurrentTCBConst>:
 8007ca0:	20012010 	.word	0x20012010

08007ca4 <xPortSysTickHandler>:
{
 8007ca4:	b508      	push	{r3, lr}
	__asm volatile
 8007ca6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007caa:	f383 8811 	msr	BASEPRI, r3
 8007cae:	f3bf 8f6f 	isb	sy
 8007cb2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007cb6:	f001 f80d 	bl	8008cd4 <xTaskIncrementTick>
 8007cba:	b128      	cbz	r0, 8007cc8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8007cbc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007cc0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007cc4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8007cc8:	2300      	movs	r3, #0
 8007cca:	f383 8811 	msr	BASEPRI, r3
}
 8007cce:	bd08      	pop	{r3, pc}

08007cd0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007cd0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8007cd4:	2300      	movs	r3, #0
 8007cd6:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007cd8:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8007cda:	4b05      	ldr	r3, [pc, #20]	; (8007cf0 <vPortSetupTimerInterrupt+0x20>)
 8007cdc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007ce0:	681b      	ldr	r3, [r3, #0]
 8007ce2:	fbb3 f3f1 	udiv	r3, r3, r1
 8007ce6:	3b01      	subs	r3, #1
 8007ce8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8007cea:	2307      	movs	r3, #7
 8007cec:	6113      	str	r3, [r2, #16]
}
 8007cee:	4770      	bx	lr
 8007cf0:	20000074 	.word	0x20000074

08007cf4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007cf4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8007cf8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007cfa:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8007cfe:	4a3a      	ldr	r2, [pc, #232]	; (8007de8 <xPortStartScheduler+0xf4>)
 8007d00:	4291      	cmp	r1, r2
 8007d02:	d108      	bne.n	8007d16 <xPortStartScheduler+0x22>
	__asm volatile
 8007d04:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d08:	f383 8811 	msr	BASEPRI, r3
 8007d0c:	f3bf 8f6f 	isb	sy
 8007d10:	f3bf 8f4f 	dsb	sy
 8007d14:	e7fe      	b.n	8007d14 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007d16:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8007d1a:	4b34      	ldr	r3, [pc, #208]	; (8007dec <xPortStartScheduler+0xf8>)
 8007d1c:	429a      	cmp	r2, r3
 8007d1e:	d108      	bne.n	8007d32 <xPortStartScheduler+0x3e>
 8007d20:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d24:	f383 8811 	msr	BASEPRI, r3
 8007d28:	f3bf 8f6f 	isb	sy
 8007d2c:	f3bf 8f4f 	dsb	sy
 8007d30:	e7fe      	b.n	8007d30 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007d32:	4b2f      	ldr	r3, [pc, #188]	; (8007df0 <xPortStartScheduler+0xfc>)
 8007d34:	781a      	ldrb	r2, [r3, #0]
 8007d36:	b2d2      	uxtb	r2, r2
 8007d38:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8007d3a:	22ff      	movs	r2, #255	; 0xff
 8007d3c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007d3e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007d40:	4a2c      	ldr	r2, [pc, #176]	; (8007df4 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007d42:	b2db      	uxtb	r3, r3
 8007d44:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007d48:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007d4c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8007d50:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007d52:	4a29      	ldr	r2, [pc, #164]	; (8007df8 <xPortStartScheduler+0x104>)
 8007d54:	2307      	movs	r3, #7
 8007d56:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007d58:	2100      	movs	r1, #0
 8007d5a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8007d5e:	0600      	lsls	r0, r0, #24
 8007d60:	f103 34ff 	add.w	r4, r3, #4294967295
 8007d64:	d40c      	bmi.n	8007d80 <xPortStartScheduler+0x8c>
 8007d66:	b111      	cbz	r1, 8007d6e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007d68:	2b03      	cmp	r3, #3
 8007d6a:	6013      	str	r3, [r2, #0]
 8007d6c:	d011      	beq.n	8007d92 <xPortStartScheduler+0x9e>
 8007d6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d72:	f383 8811 	msr	BASEPRI, r3
 8007d76:	f3bf 8f6f 	isb	sy
 8007d7a:	f3bf 8f4f 	dsb	sy
 8007d7e:	e7fe      	b.n	8007d7e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8007d80:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007d84:	005b      	lsls	r3, r3, #1
 8007d86:	b2db      	uxtb	r3, r3
 8007d88:	f88d 3003 	strb.w	r3, [sp, #3]
 8007d8c:	2101      	movs	r1, #1
 8007d8e:	4623      	mov	r3, r4
 8007d90:	e7e3      	b.n	8007d5a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007d92:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007d96:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007d98:	9b01      	ldr	r3, [sp, #4]
 8007d9a:	4a15      	ldr	r2, [pc, #84]	; (8007df0 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007d9c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007da0:	b2db      	uxtb	r3, r3
 8007da2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007da4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007da8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8007dac:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007db0:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007db4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8007db8:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8007dbc:	f7ff ff88 	bl	8007cd0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007dc0:	4b0e      	ldr	r3, [pc, #56]	; (8007dfc <xPortStartScheduler+0x108>)
 8007dc2:	2500      	movs	r5, #0
 8007dc4:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8007dc6:	f7ff feb1 	bl	8007b2c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8007dca:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 8007dce:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007dd2:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8007dd6:	f7ff fe95 	bl	8007b04 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007dda:	f001 f8a9 	bl	8008f30 <vTaskSwitchContext>
	prvTaskExitError();
 8007dde:	f7ff feaf 	bl	8007b40 <prvTaskExitError>
}
 8007de2:	4628      	mov	r0, r5
 8007de4:	b003      	add	sp, #12
 8007de6:	bd30      	pop	{r4, r5, pc}
 8007de8:	410fc271 	.word	0x410fc271
 8007dec:	410fc270 	.word	0x410fc270
 8007df0:	e000e400 	.word	0xe000e400
 8007df4:	20011fc8 	.word	0x20011fc8
 8007df8:	20011fcc 	.word	0x20011fcc
 8007dfc:	20000080 	.word	0x20000080

08007e00 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007e00:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007e04:	2b0f      	cmp	r3, #15
 8007e06:	d90e      	bls.n	8007e26 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007e08:	4a11      	ldr	r2, [pc, #68]	; (8007e50 <vPortValidateInterruptPriority+0x50>)
 8007e0a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007e0c:	4a11      	ldr	r2, [pc, #68]	; (8007e54 <vPortValidateInterruptPriority+0x54>)
 8007e0e:	7812      	ldrb	r2, [r2, #0]
 8007e10:	429a      	cmp	r2, r3
 8007e12:	d908      	bls.n	8007e26 <vPortValidateInterruptPriority+0x26>
 8007e14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e18:	f383 8811 	msr	BASEPRI, r3
 8007e1c:	f3bf 8f6f 	isb	sy
 8007e20:	f3bf 8f4f 	dsb	sy
 8007e24:	e7fe      	b.n	8007e24 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007e26:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007e2a:	4a0b      	ldr	r2, [pc, #44]	; (8007e58 <vPortValidateInterruptPriority+0x58>)
 8007e2c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8007e30:	6812      	ldr	r2, [r2, #0]
 8007e32:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8007e36:	4293      	cmp	r3, r2
 8007e38:	d908      	bls.n	8007e4c <vPortValidateInterruptPriority+0x4c>
 8007e3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e3e:	f383 8811 	msr	BASEPRI, r3
 8007e42:	f3bf 8f6f 	isb	sy
 8007e46:	f3bf 8f4f 	dsb	sy
 8007e4a:	e7fe      	b.n	8007e4a <vPortValidateInterruptPriority+0x4a>
	}
 8007e4c:	4770      	bx	lr
 8007e4e:	bf00      	nop
 8007e50:	e000e3f0 	.word	0xe000e3f0
 8007e54:	20011fc8 	.word	0x20011fc8
 8007e58:	20011fcc 	.word	0x20011fcc

08007e5c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007e5c:	b510      	push	{r4, lr}
 8007e5e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007e60:	f7ff feb8 	bl	8007bd4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007e64:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007e66:	f7ff fed5 	bl	8007c14 <vPortExitCritical>

	return xReturn;
}
 8007e6a:	fab4 f084 	clz	r0, r4
 8007e6e:	0940      	lsrs	r0, r0, #5
 8007e70:	bd10      	pop	{r4, pc}

08007e72 <prvCopyDataToQueue>:
{
 8007e72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007e74:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007e76:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007e78:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8007e7a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007e7c:	b952      	cbnz	r2, 8007e94 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007e7e:	6807      	ldr	r7, [r0, #0]
 8007e80:	bb47      	cbnz	r7, 8007ed4 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007e82:	6880      	ldr	r0, [r0, #8]
 8007e84:	f001 f9aa 	bl	80091dc <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007e88:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007e8a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007e8c:	3601      	adds	r6, #1
 8007e8e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8007e90:	4628      	mov	r0, r5
 8007e92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007e94:	b965      	cbnz	r5, 8007eb0 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007e96:	6840      	ldr	r0, [r0, #4]
 8007e98:	f015 fd7c 	bl	801d994 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007e9c:	6863      	ldr	r3, [r4, #4]
 8007e9e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007ea0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007ea2:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007ea4:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007ea6:	4293      	cmp	r3, r2
 8007ea8:	d3f0      	bcc.n	8007e8c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007eaa:	6823      	ldr	r3, [r4, #0]
 8007eac:	6063      	str	r3, [r4, #4]
 8007eae:	e7ed      	b.n	8007e8c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007eb0:	68c0      	ldr	r0, [r0, #12]
 8007eb2:	f015 fd6f 	bl	801d994 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007eb6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007eb8:	68e3      	ldr	r3, [r4, #12]
 8007eba:	4251      	negs	r1, r2
 8007ebc:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007ebe:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007ec0:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007ec2:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007ec4:	bf3e      	ittt	cc
 8007ec6:	68a3      	ldrcc	r3, [r4, #8]
 8007ec8:	185b      	addcc	r3, r3, r1
 8007eca:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007ecc:	2d02      	cmp	r5, #2
 8007ece:	d101      	bne.n	8007ed4 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007ed0:	b116      	cbz	r6, 8007ed8 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8007ed2:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8007ed4:	2500      	movs	r5, #0
 8007ed6:	e7d9      	b.n	8007e8c <prvCopyDataToQueue+0x1a>
 8007ed8:	4635      	mov	r5, r6
 8007eda:	e7d7      	b.n	8007e8c <prvCopyDataToQueue+0x1a>

08007edc <prvCopyDataFromQueue>:
{
 8007edc:	4603      	mov	r3, r0
 8007ede:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007ee0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8007ee2:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007ee4:	b16a      	cbz	r2, 8007f02 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007ee6:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007ee8:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007eea:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007eec:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007eee:	bf28      	it	cs
 8007ef0:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007ef2:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007ef4:	bf28      	it	cs
 8007ef6:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007ef8:	68d9      	ldr	r1, [r3, #12]
}
 8007efa:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007efe:	f015 bd49 	b.w	801d994 <memcpy>
}
 8007f02:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007f06:	4770      	bx	lr

08007f08 <prvUnlockQueue>:
{
 8007f08:	b570      	push	{r4, r5, r6, lr}
 8007f0a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007f0c:	f7ff fe62 	bl	8007bd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007f10:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007f14:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007f18:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007f1a:	2d00      	cmp	r5, #0
 8007f1c:	dc14      	bgt.n	8007f48 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8007f1e:	23ff      	movs	r3, #255	; 0xff
 8007f20:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8007f24:	f7ff fe76 	bl	8007c14 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007f28:	f7ff fe54 	bl	8007bd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007f2c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007f30:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007f34:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007f36:	2d00      	cmp	r5, #0
 8007f38:	dc12      	bgt.n	8007f60 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8007f3a:	23ff      	movs	r3, #255	; 0xff
 8007f3c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8007f40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007f44:	f7ff be66 	b.w	8007c14 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007f48:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007f4a:	2b00      	cmp	r3, #0
 8007f4c:	d0e7      	beq.n	8007f1e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007f4e:	4630      	mov	r0, r6
 8007f50:	f001 f860 	bl	8009014 <xTaskRemoveFromEventList>
 8007f54:	b108      	cbz	r0, 8007f5a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8007f56:	f001 f8e9 	bl	800912c <vTaskMissedYield>
			--cTxLock;
 8007f5a:	3d01      	subs	r5, #1
 8007f5c:	b26d      	sxtb	r5, r5
 8007f5e:	e7dc      	b.n	8007f1a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007f60:	6923      	ldr	r3, [r4, #16]
 8007f62:	2b00      	cmp	r3, #0
 8007f64:	d0e9      	beq.n	8007f3a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007f66:	4630      	mov	r0, r6
 8007f68:	f001 f854 	bl	8009014 <xTaskRemoveFromEventList>
 8007f6c:	b108      	cbz	r0, 8007f72 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8007f6e:	f001 f8dd 	bl	800912c <vTaskMissedYield>
				--cRxLock;
 8007f72:	3d01      	subs	r5, #1
 8007f74:	b26d      	sxtb	r5, r5
 8007f76:	e7de      	b.n	8007f36 <prvUnlockQueue+0x2e>

08007f78 <xQueueGenericReset>:
{
 8007f78:	b538      	push	{r3, r4, r5, lr}
 8007f7a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007f7c:	4604      	mov	r4, r0
 8007f7e:	b940      	cbnz	r0, 8007f92 <xQueueGenericReset+0x1a>
 8007f80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f84:	f383 8811 	msr	BASEPRI, r3
 8007f88:	f3bf 8f6f 	isb	sy
 8007f8c:	f3bf 8f4f 	dsb	sy
 8007f90:	e7fe      	b.n	8007f90 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007f92:	f7ff fe1f 	bl	8007bd4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007f96:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 8007f9a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007f9c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007f9e:	434b      	muls	r3, r1
 8007fa0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007fa2:	1a5b      	subs	r3, r3, r1
 8007fa4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007fa6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007fa8:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007faa:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8007fac:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007fae:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8007fb0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007fb4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8007fb8:	b9a5      	cbnz	r5, 8007fe4 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007fba:	6923      	ldr	r3, [r4, #16]
 8007fbc:	b173      	cbz	r3, 8007fdc <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007fbe:	f104 0010 	add.w	r0, r4, #16
 8007fc2:	f001 f827 	bl	8009014 <xTaskRemoveFromEventList>
 8007fc6:	b148      	cbz	r0, 8007fdc <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8007fc8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007fcc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007fd0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007fd4:	f3bf 8f4f 	dsb	sy
 8007fd8:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007fdc:	f7ff fe1a 	bl	8007c14 <vPortExitCritical>
}
 8007fe0:	2001      	movs	r0, #1
 8007fe2:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007fe4:	f104 0010 	add.w	r0, r4, #16
 8007fe8:	f7ff fd4a 	bl	8007a80 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007fec:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007ff0:	f7ff fd46 	bl	8007a80 <vListInitialise>
 8007ff4:	e7f2      	b.n	8007fdc <xQueueGenericReset+0x64>

08007ff6 <xQueueGenericCreateStatic>:
	{
 8007ff6:	b513      	push	{r0, r1, r4, lr}
 8007ff8:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007ffa:	b940      	cbnz	r0, 800800e <xQueueGenericCreateStatic+0x18>
 8007ffc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008000:	f383 8811 	msr	BASEPRI, r3
 8008004:	f3bf 8f6f 	isb	sy
 8008008:	f3bf 8f4f 	dsb	sy
 800800c:	e7fe      	b.n	800800c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800800e:	b943      	cbnz	r3, 8008022 <xQueueGenericCreateStatic+0x2c>
 8008010:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008014:	f383 8811 	msr	BASEPRI, r3
 8008018:	f3bf 8f6f 	isb	sy
 800801c:	f3bf 8f4f 	dsb	sy
 8008020:	e7fe      	b.n	8008020 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008022:	b14a      	cbz	r2, 8008038 <xQueueGenericCreateStatic+0x42>
 8008024:	b991      	cbnz	r1, 800804c <xQueueGenericCreateStatic+0x56>
 8008026:	f04f 0350 	mov.w	r3, #80	; 0x50
 800802a:	f383 8811 	msr	BASEPRI, r3
 800802e:	f3bf 8f6f 	isb	sy
 8008032:	f3bf 8f4f 	dsb	sy
 8008036:	e7fe      	b.n	8008036 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8008038:	b141      	cbz	r1, 800804c <xQueueGenericCreateStatic+0x56>
 800803a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800803e:	f383 8811 	msr	BASEPRI, r3
 8008042:	f3bf 8f6f 	isb	sy
 8008046:	f3bf 8f4f 	dsb	sy
 800804a:	e7fe      	b.n	800804a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800804c:	2350      	movs	r3, #80	; 0x50
 800804e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8008050:	9b01      	ldr	r3, [sp, #4]
 8008052:	2b50      	cmp	r3, #80	; 0x50
 8008054:	d008      	beq.n	8008068 <xQueueGenericCreateStatic+0x72>
 8008056:	f04f 0350 	mov.w	r3, #80	; 0x50
 800805a:	f383 8811 	msr	BASEPRI, r3
 800805e:	f3bf 8f6f 	isb	sy
 8008062:	f3bf 8f4f 	dsb	sy
 8008066:	e7fe      	b.n	8008066 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008068:	2900      	cmp	r1, #0
 800806a:	bf08      	it	eq
 800806c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800806e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008070:	6022      	str	r2, [r4, #0]
 8008072:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8008074:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008078:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800807c:	4619      	mov	r1, r3
 800807e:	4620      	mov	r0, r4
 8008080:	f7ff ff7a 	bl	8007f78 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008084:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8008088:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800808c:	4620      	mov	r0, r4
 800808e:	b002      	add	sp, #8
 8008090:	bd10      	pop	{r4, pc}

08008092 <xQueueGenericCreate>:
	{
 8008092:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008094:	460d      	mov	r5, r1
 8008096:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008098:	4606      	mov	r6, r0
 800809a:	b940      	cbnz	r0, 80080ae <xQueueGenericCreate+0x1c>
 800809c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080a0:	f383 8811 	msr	BASEPRI, r3
 80080a4:	f3bf 8f6f 	isb	sy
 80080a8:	f3bf 8f4f 	dsb	sy
 80080ac:	e7fe      	b.n	80080ac <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80080ae:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80080b0:	3050      	adds	r0, #80	; 0x50
 80080b2:	f7ff fc0f 	bl	80078d4 <pvPortMalloc>
		if( pxNewQueue != NULL )
 80080b6:	4604      	mov	r4, r0
 80080b8:	b170      	cbz	r0, 80080d8 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80080ba:	2300      	movs	r3, #0
 80080bc:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80080c0:	b165      	cbz	r5, 80080dc <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80080c2:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 80080c6:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 80080ca:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80080cc:	2101      	movs	r1, #1
 80080ce:	4620      	mov	r0, r4
 80080d0:	f7ff ff52 	bl	8007f78 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80080d4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 80080d8:	4620      	mov	r0, r4
 80080da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80080dc:	4603      	mov	r3, r0
 80080de:	e7f2      	b.n	80080c6 <xQueueGenericCreate+0x34>

080080e0 <xQueueCreateCountingSemaphoreStatic>:
	{
 80080e0:	b513      	push	{r0, r1, r4, lr}
 80080e2:	4613      	mov	r3, r2
 80080e4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80080e6:	b940      	cbnz	r0, 80080fa <xQueueCreateCountingSemaphoreStatic+0x1a>
 80080e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080ec:	f383 8811 	msr	BASEPRI, r3
 80080f0:	f3bf 8f6f 	isb	sy
 80080f4:	f3bf 8f4f 	dsb	sy
 80080f8:	e7fe      	b.n	80080f8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80080fa:	4288      	cmp	r0, r1
 80080fc:	d208      	bcs.n	8008110 <xQueueCreateCountingSemaphoreStatic+0x30>
 80080fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008102:	f383 8811 	msr	BASEPRI, r3
 8008106:	f3bf 8f6f 	isb	sy
 800810a:	f3bf 8f4f 	dsb	sy
 800810e:	e7fe      	b.n	800810e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008110:	2202      	movs	r2, #2
 8008112:	9200      	str	r2, [sp, #0]
 8008114:	2200      	movs	r2, #0
 8008116:	4611      	mov	r1, r2
 8008118:	f7ff ff6d 	bl	8007ff6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800811c:	b100      	cbz	r0, 8008120 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800811e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8008120:	b002      	add	sp, #8
 8008122:	bd10      	pop	{r4, pc}

08008124 <xQueueCreateCountingSemaphore>:
	{
 8008124:	b510      	push	{r4, lr}
 8008126:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008128:	b940      	cbnz	r0, 800813c <xQueueCreateCountingSemaphore+0x18>
 800812a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800812e:	f383 8811 	msr	BASEPRI, r3
 8008132:	f3bf 8f6f 	isb	sy
 8008136:	f3bf 8f4f 	dsb	sy
 800813a:	e7fe      	b.n	800813a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800813c:	4288      	cmp	r0, r1
 800813e:	d208      	bcs.n	8008152 <xQueueCreateCountingSemaphore+0x2e>
 8008140:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008144:	f383 8811 	msr	BASEPRI, r3
 8008148:	f3bf 8f6f 	isb	sy
 800814c:	f3bf 8f4f 	dsb	sy
 8008150:	e7fe      	b.n	8008150 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008152:	2202      	movs	r2, #2
 8008154:	2100      	movs	r1, #0
 8008156:	f7ff ff9c 	bl	8008092 <xQueueGenericCreate>
		if( xHandle != NULL )
 800815a:	b100      	cbz	r0, 800815e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800815c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800815e:	bd10      	pop	{r4, pc}

08008160 <xQueueGenericSend>:
{
 8008160:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008164:	b085      	sub	sp, #20
 8008166:	4688      	mov	r8, r1
 8008168:	9201      	str	r2, [sp, #4]
 800816a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800816c:	4604      	mov	r4, r0
 800816e:	b940      	cbnz	r0, 8008182 <xQueueGenericSend+0x22>
 8008170:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008174:	f383 8811 	msr	BASEPRI, r3
 8008178:	f3bf 8f6f 	isb	sy
 800817c:	f3bf 8f4f 	dsb	sy
 8008180:	e7fe      	b.n	8008180 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008182:	b951      	cbnz	r1, 800819a <xQueueGenericSend+0x3a>
 8008184:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008186:	b143      	cbz	r3, 800819a <xQueueGenericSend+0x3a>
 8008188:	f04f 0350 	mov.w	r3, #80	; 0x50
 800818c:	f383 8811 	msr	BASEPRI, r3
 8008190:	f3bf 8f6f 	isb	sy
 8008194:	f3bf 8f4f 	dsb	sy
 8008198:	e7fe      	b.n	8008198 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800819a:	2f02      	cmp	r7, #2
 800819c:	d10b      	bne.n	80081b6 <xQueueGenericSend+0x56>
 800819e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80081a0:	2b01      	cmp	r3, #1
 80081a2:	d008      	beq.n	80081b6 <xQueueGenericSend+0x56>
 80081a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081a8:	f383 8811 	msr	BASEPRI, r3
 80081ac:	f3bf 8f6f 	isb	sy
 80081b0:	f3bf 8f4f 	dsb	sy
 80081b4:	e7fe      	b.n	80081b4 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80081b6:	f000 ffbf 	bl	8009138 <xTaskGetSchedulerState>
 80081ba:	4606      	mov	r6, r0
 80081bc:	b950      	cbnz	r0, 80081d4 <xQueueGenericSend+0x74>
 80081be:	9b01      	ldr	r3, [sp, #4]
 80081c0:	b14b      	cbz	r3, 80081d6 <xQueueGenericSend+0x76>
 80081c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081c6:	f383 8811 	msr	BASEPRI, r3
 80081ca:	f3bf 8f6f 	isb	sy
 80081ce:	f3bf 8f4f 	dsb	sy
 80081d2:	e7fe      	b.n	80081d2 <xQueueGenericSend+0x72>
 80081d4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 80081d6:	f04f 0900 	mov.w	r9, #0
 80081da:	e037      	b.n	800824c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 80081dc:	9d01      	ldr	r5, [sp, #4]
 80081de:	b91d      	cbnz	r5, 80081e8 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 80081e0:	f7ff fd18 	bl	8007c14 <vPortExitCritical>
			return errQUEUE_FULL;
 80081e4:	2000      	movs	r0, #0
 80081e6:	e052      	b.n	800828e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 80081e8:	b916      	cbnz	r6, 80081f0 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80081ea:	a802      	add	r0, sp, #8
 80081ec:	f000 ff56 	bl	800909c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80081f0:	f7ff fd10 	bl	8007c14 <vPortExitCritical>
		vTaskSuspendAll();
 80081f4:	f000 fd60 	bl	8008cb8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80081f8:	f7ff fcec 	bl	8007bd4 <vPortEnterCritical>
 80081fc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008200:	2bff      	cmp	r3, #255	; 0xff
 8008202:	bf08      	it	eq
 8008204:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8008208:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800820c:	2bff      	cmp	r3, #255	; 0xff
 800820e:	bf08      	it	eq
 8008210:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8008214:	f7ff fcfe 	bl	8007c14 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008218:	a901      	add	r1, sp, #4
 800821a:	a802      	add	r0, sp, #8
 800821c:	f000 ff4a 	bl	80090b4 <xTaskCheckForTimeOut>
 8008220:	2800      	cmp	r0, #0
 8008222:	d14a      	bne.n	80082ba <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008224:	f7ff fcd6 	bl	8007bd4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8008228:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800822a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800822c:	429a      	cmp	r2, r3
 800822e:	d131      	bne.n	8008294 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008230:	f7ff fcf0 	bl	8007c14 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008234:	9901      	ldr	r1, [sp, #4]
 8008236:	f104 0010 	add.w	r0, r4, #16
 800823a:	f000 feb3 	bl	8008fa4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800823e:	4620      	mov	r0, r4
 8008240:	f7ff fe62 	bl	8007f08 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008244:	f000 fddc 	bl	8008e00 <xTaskResumeAll>
 8008248:	b360      	cbz	r0, 80082a4 <xQueueGenericSend+0x144>
 800824a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800824c:	f7ff fcc2 	bl	8007bd4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008250:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008252:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008254:	429a      	cmp	r2, r3
 8008256:	d301      	bcc.n	800825c <xQueueGenericSend+0xfc>
 8008258:	2f02      	cmp	r7, #2
 800825a:	d1bf      	bne.n	80081dc <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800825c:	463a      	mov	r2, r7
 800825e:	4641      	mov	r1, r8
 8008260:	4620      	mov	r0, r4
 8008262:	f7ff fe06 	bl	8007e72 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008266:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008268:	b11b      	cbz	r3, 8008272 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800826a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800826e:	f000 fed1 	bl	8009014 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008272:	b148      	cbz	r0, 8008288 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8008274:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008278:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800827c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008280:	f3bf 8f4f 	dsb	sy
 8008284:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008288:	f7ff fcc4 	bl	8007c14 <vPortExitCritical>
				return pdPASS;
 800828c:	2001      	movs	r0, #1
}
 800828e:	b005      	add	sp, #20
 8008290:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8008294:	f7ff fcbe 	bl	8007c14 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008298:	4620      	mov	r0, r4
 800829a:	f7ff fe35 	bl	8007f08 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800829e:	f000 fdaf 	bl	8008e00 <xTaskResumeAll>
 80082a2:	e7d2      	b.n	800824a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 80082a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80082a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80082ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80082b0:	f3bf 8f4f 	dsb	sy
 80082b4:	f3bf 8f6f 	isb	sy
 80082b8:	e7c7      	b.n	800824a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 80082ba:	4620      	mov	r0, r4
 80082bc:	f7ff fe24 	bl	8007f08 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80082c0:	f000 fd9e 	bl	8008e00 <xTaskResumeAll>
 80082c4:	e78e      	b.n	80081e4 <xQueueGenericSend+0x84>

080082c6 <xQueueGenericSendFromISR>:
{
 80082c6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80082ca:	4689      	mov	r9, r1
 80082cc:	4690      	mov	r8, r2
 80082ce:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80082d0:	4604      	mov	r4, r0
 80082d2:	b940      	cbnz	r0, 80082e6 <xQueueGenericSendFromISR+0x20>
 80082d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082d8:	f383 8811 	msr	BASEPRI, r3
 80082dc:	f3bf 8f6f 	isb	sy
 80082e0:	f3bf 8f4f 	dsb	sy
 80082e4:	e7fe      	b.n	80082e4 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80082e6:	b951      	cbnz	r1, 80082fe <xQueueGenericSendFromISR+0x38>
 80082e8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80082ea:	b143      	cbz	r3, 80082fe <xQueueGenericSendFromISR+0x38>
 80082ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082f0:	f383 8811 	msr	BASEPRI, r3
 80082f4:	f3bf 8f6f 	isb	sy
 80082f8:	f3bf 8f4f 	dsb	sy
 80082fc:	e7fe      	b.n	80082fc <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80082fe:	2f02      	cmp	r7, #2
 8008300:	d10b      	bne.n	800831a <xQueueGenericSendFromISR+0x54>
 8008302:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008304:	2b01      	cmp	r3, #1
 8008306:	d008      	beq.n	800831a <xQueueGenericSendFromISR+0x54>
 8008308:	f04f 0350 	mov.w	r3, #80	; 0x50
 800830c:	f383 8811 	msr	BASEPRI, r3
 8008310:	f3bf 8f6f 	isb	sy
 8008314:	f3bf 8f4f 	dsb	sy
 8008318:	e7fe      	b.n	8008318 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800831a:	f7ff fd71 	bl	8007e00 <vPortValidateInterruptPriority>
	__asm volatile
 800831e:	f3ef 8611 	mrs	r6, BASEPRI
 8008322:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008326:	f383 8811 	msr	BASEPRI, r3
 800832a:	f3bf 8f6f 	isb	sy
 800832e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008332:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008334:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008336:	429a      	cmp	r2, r3
 8008338:	d301      	bcc.n	800833e <xQueueGenericSendFromISR+0x78>
 800833a:	2f02      	cmp	r7, #2
 800833c:	d123      	bne.n	8008386 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800833e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008342:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8008344:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008346:	463a      	mov	r2, r7
 8008348:	4649      	mov	r1, r9
 800834a:	4620      	mov	r0, r4
 800834c:	f7ff fd91 	bl	8007e72 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8008350:	1c6b      	adds	r3, r5, #1
 8008352:	d113      	bne.n	800837c <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008354:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008356:	b90b      	cbnz	r3, 800835c <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8008358:	2001      	movs	r0, #1
 800835a:	e00b      	b.n	8008374 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800835c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008360:	f000 fe58 	bl	8009014 <xTaskRemoveFromEventList>
 8008364:	2800      	cmp	r0, #0
 8008366:	d0f7      	beq.n	8008358 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8008368:	f1b8 0f00 	cmp.w	r8, #0
 800836c:	d0f4      	beq.n	8008358 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800836e:	2001      	movs	r0, #1
 8008370:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008374:	f386 8811 	msr	BASEPRI, r6
}
 8008378:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800837c:	3501      	adds	r5, #1
 800837e:	b26d      	sxtb	r5, r5
 8008380:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8008384:	e7e8      	b.n	8008358 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8008386:	2000      	movs	r0, #0
 8008388:	e7f4      	b.n	8008374 <xQueueGenericSendFromISR+0xae>

0800838a <xQueueGiveFromISR>:
{
 800838a:	b570      	push	{r4, r5, r6, lr}
 800838c:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800838e:	4604      	mov	r4, r0
 8008390:	b940      	cbnz	r0, 80083a4 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008392:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008396:	f383 8811 	msr	BASEPRI, r3
 800839a:	f3bf 8f6f 	isb	sy
 800839e:	f3bf 8f4f 	dsb	sy
 80083a2:	e7fe      	b.n	80083a2 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 80083a4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80083a6:	b143      	cbz	r3, 80083ba <xQueueGiveFromISR+0x30>
 80083a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083ac:	f383 8811 	msr	BASEPRI, r3
 80083b0:	f3bf 8f6f 	isb	sy
 80083b4:	f3bf 8f4f 	dsb	sy
 80083b8:	e7fe      	b.n	80083b8 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80083ba:	6803      	ldr	r3, [r0, #0]
 80083bc:	b953      	cbnz	r3, 80083d4 <xQueueGiveFromISR+0x4a>
 80083be:	6883      	ldr	r3, [r0, #8]
 80083c0:	b143      	cbz	r3, 80083d4 <xQueueGiveFromISR+0x4a>
 80083c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083c6:	f383 8811 	msr	BASEPRI, r3
 80083ca:	f3bf 8f6f 	isb	sy
 80083ce:	f3bf 8f4f 	dsb	sy
 80083d2:	e7fe      	b.n	80083d2 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80083d4:	f7ff fd14 	bl	8007e00 <vPortValidateInterruptPriority>
	__asm volatile
 80083d8:	f3ef 8611 	mrs	r6, BASEPRI
 80083dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083e0:	f383 8811 	msr	BASEPRI, r3
 80083e4:	f3bf 8f6f 	isb	sy
 80083e8:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80083ec:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80083ee:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80083f0:	4293      	cmp	r3, r2
 80083f2:	d91c      	bls.n	800842e <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 80083f4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80083f8:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 80083fa:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 80083fc:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80083fe:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8008400:	d110      	bne.n	8008424 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008402:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008404:	b90b      	cbnz	r3, 800840a <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8008406:	2001      	movs	r0, #1
 8008408:	e009      	b.n	800841e <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800840a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800840e:	f000 fe01 	bl	8009014 <xTaskRemoveFromEventList>
 8008412:	2800      	cmp	r0, #0
 8008414:	d0f7      	beq.n	8008406 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008416:	2d00      	cmp	r5, #0
 8008418:	d0f5      	beq.n	8008406 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800841a:	2001      	movs	r0, #1
 800841c:	6028      	str	r0, [r5, #0]
	__asm volatile
 800841e:	f386 8811 	msr	BASEPRI, r6
}
 8008422:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008424:	3301      	adds	r3, #1
 8008426:	b25b      	sxtb	r3, r3
 8008428:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800842c:	e7eb      	b.n	8008406 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800842e:	2000      	movs	r0, #0
 8008430:	e7f5      	b.n	800841e <xQueueGiveFromISR+0x94>

08008432 <xQueueReceive>:
{
 8008432:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008436:	460f      	mov	r7, r1
 8008438:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800843a:	4604      	mov	r4, r0
 800843c:	b940      	cbnz	r0, 8008450 <xQueueReceive+0x1e>
	__asm volatile
 800843e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008442:	f383 8811 	msr	BASEPRI, r3
 8008446:	f3bf 8f6f 	isb	sy
 800844a:	f3bf 8f4f 	dsb	sy
 800844e:	e7fe      	b.n	800844e <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008450:	b951      	cbnz	r1, 8008468 <xQueueReceive+0x36>
 8008452:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008454:	b143      	cbz	r3, 8008468 <xQueueReceive+0x36>
 8008456:	f04f 0350 	mov.w	r3, #80	; 0x50
 800845a:	f383 8811 	msr	BASEPRI, r3
 800845e:	f3bf 8f6f 	isb	sy
 8008462:	f3bf 8f4f 	dsb	sy
 8008466:	e7fe      	b.n	8008466 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008468:	f000 fe66 	bl	8009138 <xTaskGetSchedulerState>
 800846c:	4606      	mov	r6, r0
 800846e:	b950      	cbnz	r0, 8008486 <xQueueReceive+0x54>
 8008470:	9b01      	ldr	r3, [sp, #4]
 8008472:	b14b      	cbz	r3, 8008488 <xQueueReceive+0x56>
 8008474:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008478:	f383 8811 	msr	BASEPRI, r3
 800847c:	f3bf 8f6f 	isb	sy
 8008480:	f3bf 8f4f 	dsb	sy
 8008484:	e7fe      	b.n	8008484 <xQueueReceive+0x52>
 8008486:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008488:	f04f 0800 	mov.w	r8, #0
 800848c:	e03d      	b.n	800850a <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800848e:	9d01      	ldr	r5, [sp, #4]
 8008490:	b91d      	cbnz	r5, 800849a <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8008492:	f7ff fbbf 	bl	8007c14 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8008496:	2000      	movs	r0, #0
 8008498:	e056      	b.n	8008548 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 800849a:	b916      	cbnz	r6, 80084a2 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800849c:	a802      	add	r0, sp, #8
 800849e:	f000 fdfd 	bl	800909c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80084a2:	f7ff fbb7 	bl	8007c14 <vPortExitCritical>
		vTaskSuspendAll();
 80084a6:	f000 fc07 	bl	8008cb8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80084aa:	f7ff fb93 	bl	8007bd4 <vPortEnterCritical>
 80084ae:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80084b2:	2bff      	cmp	r3, #255	; 0xff
 80084b4:	bf08      	it	eq
 80084b6:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 80084ba:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80084be:	2bff      	cmp	r3, #255	; 0xff
 80084c0:	bf08      	it	eq
 80084c2:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 80084c6:	f7ff fba5 	bl	8007c14 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80084ca:	a901      	add	r1, sp, #4
 80084cc:	a802      	add	r0, sp, #8
 80084ce:	f000 fdf1 	bl	80090b4 <xTaskCheckForTimeOut>
 80084d2:	2800      	cmp	r0, #0
 80084d4:	d141      	bne.n	800855a <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80084d6:	4620      	mov	r0, r4
 80084d8:	f7ff fcc0 	bl	8007e5c <prvIsQueueEmpty>
 80084dc:	b3b8      	cbz	r0, 800854e <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80084de:	9901      	ldr	r1, [sp, #4]
 80084e0:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80084e4:	f000 fd5e 	bl	8008fa4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80084e8:	4620      	mov	r0, r4
 80084ea:	f7ff fd0d 	bl	8007f08 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80084ee:	f000 fc87 	bl	8008e00 <xTaskResumeAll>
 80084f2:	b948      	cbnz	r0, 8008508 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 80084f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80084f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80084fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008500:	f3bf 8f4f 	dsb	sy
 8008504:	f3bf 8f6f 	isb	sy
 8008508:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800850a:	f7ff fb63 	bl	8007bd4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800850e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008510:	2d00      	cmp	r5, #0
 8008512:	d0bc      	beq.n	800848e <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008514:	4639      	mov	r1, r7
 8008516:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008518:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800851a:	f7ff fcdf 	bl	8007edc <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800851e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008520:	6923      	ldr	r3, [r4, #16]
 8008522:	b173      	cbz	r3, 8008542 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008524:	f104 0010 	add.w	r0, r4, #16
 8008528:	f000 fd74 	bl	8009014 <xTaskRemoveFromEventList>
 800852c:	b148      	cbz	r0, 8008542 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800852e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008532:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008536:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800853a:	f3bf 8f4f 	dsb	sy
 800853e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008542:	f7ff fb67 	bl	8007c14 <vPortExitCritical>
				return pdPASS;
 8008546:	2001      	movs	r0, #1
}
 8008548:	b004      	add	sp, #16
 800854a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800854e:	4620      	mov	r0, r4
 8008550:	f7ff fcda 	bl	8007f08 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008554:	f000 fc54 	bl	8008e00 <xTaskResumeAll>
 8008558:	e7d6      	b.n	8008508 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 800855a:	4620      	mov	r0, r4
 800855c:	f7ff fcd4 	bl	8007f08 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008560:	f000 fc4e 	bl	8008e00 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008564:	4620      	mov	r0, r4
 8008566:	f7ff fc79 	bl	8007e5c <prvIsQueueEmpty>
 800856a:	2800      	cmp	r0, #0
 800856c:	d0cc      	beq.n	8008508 <xQueueReceive+0xd6>
 800856e:	e792      	b.n	8008496 <xQueueReceive+0x64>

08008570 <xQueueSemaphoreTake>:
{
 8008570:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008572:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8008574:	4604      	mov	r4, r0
{
 8008576:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008578:	b940      	cbnz	r0, 800858c <xQueueSemaphoreTake+0x1c>
 800857a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800857e:	f383 8811 	msr	BASEPRI, r3
 8008582:	f3bf 8f6f 	isb	sy
 8008586:	f3bf 8f4f 	dsb	sy
 800858a:	e7fe      	b.n	800858a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800858c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800858e:	b145      	cbz	r5, 80085a2 <xQueueSemaphoreTake+0x32>
 8008590:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008594:	f383 8811 	msr	BASEPRI, r3
 8008598:	f3bf 8f6f 	isb	sy
 800859c:	f3bf 8f4f 	dsb	sy
 80085a0:	e7fe      	b.n	80085a0 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80085a2:	f000 fdc9 	bl	8009138 <xTaskGetSchedulerState>
 80085a6:	4606      	mov	r6, r0
 80085a8:	b950      	cbnz	r0, 80085c0 <xQueueSemaphoreTake+0x50>
 80085aa:	9b01      	ldr	r3, [sp, #4]
 80085ac:	b15b      	cbz	r3, 80085c6 <xQueueSemaphoreTake+0x56>
 80085ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085b2:	f383 8811 	msr	BASEPRI, r3
 80085b6:	f3bf 8f6f 	isb	sy
 80085ba:	f3bf 8f4f 	dsb	sy
 80085be:	e7fe      	b.n	80085be <xQueueSemaphoreTake+0x4e>
 80085c0:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 80085c2:	2700      	movs	r7, #0
 80085c4:	e053      	b.n	800866e <xQueueSemaphoreTake+0xfe>
 80085c6:	4605      	mov	r5, r0
 80085c8:	e7fb      	b.n	80085c2 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 80085ca:	9b01      	ldr	r3, [sp, #4]
 80085cc:	b963      	cbnz	r3, 80085e8 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 80085ce:	b145      	cbz	r5, 80085e2 <xQueueSemaphoreTake+0x72>
 80085d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085d4:	f383 8811 	msr	BASEPRI, r3
 80085d8:	f3bf 8f6f 	isb	sy
 80085dc:	f3bf 8f4f 	dsb	sy
 80085e0:	e7fe      	b.n	80085e0 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 80085e2:	f7ff fb17 	bl	8007c14 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80085e6:	e062      	b.n	80086ae <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 80085e8:	b916      	cbnz	r6, 80085f0 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80085ea:	a802      	add	r0, sp, #8
 80085ec:	f000 fd56 	bl	800909c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80085f0:	f7ff fb10 	bl	8007c14 <vPortExitCritical>
		vTaskSuspendAll();
 80085f4:	f000 fb60 	bl	8008cb8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80085f8:	f7ff faec 	bl	8007bd4 <vPortEnterCritical>
 80085fc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008600:	2bff      	cmp	r3, #255	; 0xff
 8008602:	bf08      	it	eq
 8008604:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8008608:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800860c:	2bff      	cmp	r3, #255	; 0xff
 800860e:	bf08      	it	eq
 8008610:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8008614:	f7ff fafe 	bl	8007c14 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008618:	a901      	add	r1, sp, #4
 800861a:	a802      	add	r0, sp, #8
 800861c:	f000 fd4a 	bl	80090b4 <xTaskCheckForTimeOut>
 8008620:	2800      	cmp	r0, #0
 8008622:	d14d      	bne.n	80086c0 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008624:	4620      	mov	r0, r4
 8008626:	f7ff fc19 	bl	8007e5c <prvIsQueueEmpty>
 800862a:	2800      	cmp	r0, #0
 800862c:	d042      	beq.n	80086b4 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800862e:	6823      	ldr	r3, [r4, #0]
 8008630:	b93b      	cbnz	r3, 8008642 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8008632:	f7ff facf 	bl	8007bd4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008636:	68a0      	ldr	r0, [r4, #8]
 8008638:	f000 fd8e 	bl	8009158 <xTaskPriorityInherit>
 800863c:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800863e:	f7ff fae9 	bl	8007c14 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008642:	9901      	ldr	r1, [sp, #4]
 8008644:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008648:	f000 fcac 	bl	8008fa4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800864c:	4620      	mov	r0, r4
 800864e:	f7ff fc5b 	bl	8007f08 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008652:	f000 fbd5 	bl	8008e00 <xTaskResumeAll>
 8008656:	b948      	cbnz	r0, 800866c <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8008658:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800865c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008660:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008664:	f3bf 8f4f 	dsb	sy
 8008668:	f3bf 8f6f 	isb	sy
 800866c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800866e:	f7ff fab1 	bl	8007bd4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8008672:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008674:	2b00      	cmp	r3, #0
 8008676:	d0a8      	beq.n	80085ca <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008678:	3b01      	subs	r3, #1
 800867a:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800867c:	6823      	ldr	r3, [r4, #0]
 800867e:	b913      	cbnz	r3, 8008686 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8008680:	f000 fe42 	bl	8009308 <pvTaskIncrementMutexHeldCount>
 8008684:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008686:	6923      	ldr	r3, [r4, #16]
 8008688:	b173      	cbz	r3, 80086a8 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800868a:	f104 0010 	add.w	r0, r4, #16
 800868e:	f000 fcc1 	bl	8009014 <xTaskRemoveFromEventList>
 8008692:	b148      	cbz	r0, 80086a8 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8008694:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008698:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800869c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80086a0:	f3bf 8f4f 	dsb	sy
 80086a4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80086a8:	f7ff fab4 	bl	8007c14 <vPortExitCritical>
				return pdPASS;
 80086ac:	2501      	movs	r5, #1
}
 80086ae:	4628      	mov	r0, r5
 80086b0:	b005      	add	sp, #20
 80086b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 80086b4:	4620      	mov	r0, r4
 80086b6:	f7ff fc27 	bl	8007f08 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80086ba:	f000 fba1 	bl	8008e00 <xTaskResumeAll>
 80086be:	e7d5      	b.n	800866c <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 80086c0:	4620      	mov	r0, r4
 80086c2:	f7ff fc21 	bl	8007f08 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80086c6:	f000 fb9b 	bl	8008e00 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80086ca:	4620      	mov	r0, r4
 80086cc:	f7ff fbc6 	bl	8007e5c <prvIsQueueEmpty>
 80086d0:	2800      	cmp	r0, #0
 80086d2:	d0cb      	beq.n	800866c <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 80086d4:	2d00      	cmp	r5, #0
 80086d6:	d0ea      	beq.n	80086ae <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 80086d8:	f7ff fa7c 	bl	8007bd4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80086dc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80086de:	b119      	cbz	r1, 80086e8 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80086e0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80086e2:	6819      	ldr	r1, [r3, #0]
 80086e4:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80086e8:	68a0      	ldr	r0, [r4, #8]
 80086ea:	f000 fdbb 	bl	8009264 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 80086ee:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 80086f0:	f7ff fa90 	bl	8007c14 <vPortExitCritical>
 80086f4:	e7db      	b.n	80086ae <xQueueSemaphoreTake+0x13e>

080086f6 <xQueueReceiveFromISR>:
{
 80086f6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80086fa:	4689      	mov	r9, r1
 80086fc:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 80086fe:	4605      	mov	r5, r0
 8008700:	b940      	cbnz	r0, 8008714 <xQueueReceiveFromISR+0x1e>
 8008702:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008706:	f383 8811 	msr	BASEPRI, r3
 800870a:	f3bf 8f6f 	isb	sy
 800870e:	f3bf 8f4f 	dsb	sy
 8008712:	e7fe      	b.n	8008712 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008714:	b951      	cbnz	r1, 800872c <xQueueReceiveFromISR+0x36>
 8008716:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008718:	b143      	cbz	r3, 800872c <xQueueReceiveFromISR+0x36>
 800871a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800871e:	f383 8811 	msr	BASEPRI, r3
 8008722:	f3bf 8f6f 	isb	sy
 8008726:	f3bf 8f4f 	dsb	sy
 800872a:	e7fe      	b.n	800872a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800872c:	f7ff fb68 	bl	8007e00 <vPortValidateInterruptPriority>
	__asm volatile
 8008730:	f3ef 8711 	mrs	r7, BASEPRI
 8008734:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008738:	f383 8811 	msr	BASEPRI, r3
 800873c:	f3bf 8f6f 	isb	sy
 8008740:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008744:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008746:	b31c      	cbz	r4, 8008790 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008748:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800874c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800874e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008750:	4628      	mov	r0, r5
 8008752:	f7ff fbc3 	bl	8007edc <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008756:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8008758:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800875a:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800875c:	d113      	bne.n	8008786 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800875e:	692b      	ldr	r3, [r5, #16]
 8008760:	b90b      	cbnz	r3, 8008766 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8008762:	2001      	movs	r0, #1
 8008764:	e00b      	b.n	800877e <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008766:	f105 0010 	add.w	r0, r5, #16
 800876a:	f000 fc53 	bl	8009014 <xTaskRemoveFromEventList>
 800876e:	2800      	cmp	r0, #0
 8008770:	d0f7      	beq.n	8008762 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8008772:	f1b8 0f00 	cmp.w	r8, #0
 8008776:	d0f4      	beq.n	8008762 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8008778:	2001      	movs	r0, #1
 800877a:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800877e:	f387 8811 	msr	BASEPRI, r7
}
 8008782:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008786:	3601      	adds	r6, #1
 8008788:	b276      	sxtb	r6, r6
 800878a:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800878e:	e7e8      	b.n	8008762 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8008790:	4620      	mov	r0, r4
 8008792:	e7f4      	b.n	800877e <xQueueReceiveFromISR+0x88>

08008794 <uxQueueMessagesWaiting>:
{
 8008794:	b513      	push	{r0, r1, r4, lr}
	configASSERT( xQueue );
 8008796:	4604      	mov	r4, r0
 8008798:	b940      	cbnz	r0, 80087ac <uxQueueMessagesWaiting+0x18>
	__asm volatile
 800879a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800879e:	f383 8811 	msr	BASEPRI, r3
 80087a2:	f3bf 8f6f 	isb	sy
 80087a6:	f3bf 8f4f 	dsb	sy
 80087aa:	e7fe      	b.n	80087aa <uxQueueMessagesWaiting+0x16>
	taskENTER_CRITICAL();
 80087ac:	f7ff fa12 	bl	8007bd4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 80087b0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80087b2:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 80087b4:	f7ff fa2e 	bl	8007c14 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 80087b8:	9801      	ldr	r0, [sp, #4]
 80087ba:	b002      	add	sp, #8
 80087bc:	bd10      	pop	{r4, pc}

080087be <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 80087be:	b940      	cbnz	r0, 80087d2 <uxQueueMessagesWaitingFromISR+0x14>
 80087c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087c4:	f383 8811 	msr	BASEPRI, r3
 80087c8:	f3bf 8f6f 	isb	sy
 80087cc:	f3bf 8f4f 	dsb	sy
 80087d0:	e7fe      	b.n	80087d0 <uxQueueMessagesWaitingFromISR+0x12>
	uxReturn = pxQueue->uxMessagesWaiting;
 80087d2:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 80087d4:	4770      	bx	lr
	...

080087d8 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80087d8:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80087da:	4a07      	ldr	r2, [pc, #28]	; (80087f8 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80087dc:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80087de:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 80087e2:	b92c      	cbnz	r4, 80087f0 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80087e4:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80087e8:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80087ec:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80087ee:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80087f0:	3301      	adds	r3, #1
 80087f2:	2b08      	cmp	r3, #8
 80087f4:	d1f3      	bne.n	80087de <vQueueAddToRegistry+0x6>
 80087f6:	e7fa      	b.n	80087ee <vQueueAddToRegistry+0x16>
 80087f8:	20011fd0 	.word	0x20011fd0

080087fc <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 80087fc:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80087fe:	4a08      	ldr	r2, [pc, #32]	; (8008820 <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008800:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008802:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8008806:	684c      	ldr	r4, [r1, #4]
 8008808:	4284      	cmp	r4, r0
 800880a:	d104      	bne.n	8008816 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800880c:	2000      	movs	r0, #0
 800880e:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8008812:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008814:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008816:	3301      	adds	r3, #1
 8008818:	2b08      	cmp	r3, #8
 800881a:	d1f2      	bne.n	8008802 <vQueueUnregisterQueue+0x6>
 800881c:	e7fa      	b.n	8008814 <vQueueUnregisterQueue+0x18>
 800881e:	bf00      	nop
 8008820:	20011fd0 	.word	0x20011fd0

08008824 <vQueueDelete>:
{
 8008824:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8008826:	4604      	mov	r4, r0
 8008828:	b940      	cbnz	r0, 800883c <vQueueDelete+0x18>
 800882a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800882e:	f383 8811 	msr	BASEPRI, r3
 8008832:	f3bf 8f6f 	isb	sy
 8008836:	f3bf 8f4f 	dsb	sy
 800883a:	e7fe      	b.n	800883a <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 800883c:	f7ff ffde 	bl	80087fc <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8008840:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8008844:	b923      	cbnz	r3, 8008850 <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8008846:	4620      	mov	r0, r4
}
 8008848:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800884c:	f7ff b8da 	b.w	8007a04 <vPortFree>
}
 8008850:	bd10      	pop	{r4, pc}

08008852 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8008852:	b570      	push	{r4, r5, r6, lr}
 8008854:	4604      	mov	r4, r0
 8008856:	460d      	mov	r5, r1
 8008858:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800885a:	f7ff f9bb 	bl	8007bd4 <vPortEnterCritical>
 800885e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008862:	2bff      	cmp	r3, #255	; 0xff
 8008864:	bf04      	itt	eq
 8008866:	2300      	moveq	r3, #0
 8008868:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800886c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008870:	2bff      	cmp	r3, #255	; 0xff
 8008872:	bf04      	itt	eq
 8008874:	2300      	moveq	r3, #0
 8008876:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800887a:	f7ff f9cb 	bl	8007c14 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800887e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008880:	b92b      	cbnz	r3, 800888e <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8008882:	4632      	mov	r2, r6
 8008884:	4629      	mov	r1, r5
 8008886:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800888a:	f000 fba5 	bl	8008fd8 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800888e:	4620      	mov	r0, r4
	}
 8008890:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008894:	f7ff bb38 	b.w	8007f08 <prvUnlockQueue>

08008898 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008898:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800889c:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800889e:	f7ff f999 	bl	8007bd4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80088a2:	4b30      	ldr	r3, [pc, #192]	; (8008964 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80088a4:	4e30      	ldr	r6, [pc, #192]	; (8008968 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80088a6:	681a      	ldr	r2, [r3, #0]
 80088a8:	4f30      	ldr	r7, [pc, #192]	; (800896c <prvAddNewTaskToReadyList+0xd4>)
 80088aa:	3201      	adds	r2, #1
 80088ac:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80088ae:	6835      	ldr	r5, [r6, #0]
 80088b0:	2d00      	cmp	r5, #0
 80088b2:	d14b      	bne.n	800894c <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80088b4:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80088b6:	681b      	ldr	r3, [r3, #0]
 80088b8:	2b01      	cmp	r3, #1
 80088ba:	d11f      	bne.n	80088fc <prvAddNewTaskToReadyList+0x64>
 80088bc:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80088be:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80088c0:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80088c2:	f7ff f8dd 	bl	8007a80 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80088c6:	2d38      	cmp	r5, #56	; 0x38
 80088c8:	f108 0814 	add.w	r8, r8, #20
 80088cc:	d1f7      	bne.n	80088be <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80088ce:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8008994 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80088d2:	4d27      	ldr	r5, [pc, #156]	; (8008970 <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 80088d4:	4640      	mov	r0, r8
 80088d6:	f7ff f8d3 	bl	8007a80 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80088da:	4628      	mov	r0, r5
 80088dc:	f7ff f8d0 	bl	8007a80 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80088e0:	4824      	ldr	r0, [pc, #144]	; (8008974 <prvAddNewTaskToReadyList+0xdc>)
 80088e2:	f7ff f8cd 	bl	8007a80 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80088e6:	4824      	ldr	r0, [pc, #144]	; (8008978 <prvAddNewTaskToReadyList+0xe0>)
 80088e8:	f7ff f8ca 	bl	8007a80 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80088ec:	4823      	ldr	r0, [pc, #140]	; (800897c <prvAddNewTaskToReadyList+0xe4>)
 80088ee:	f7ff f8c7 	bl	8007a80 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80088f2:	4b23      	ldr	r3, [pc, #140]	; (8008980 <prvAddNewTaskToReadyList+0xe8>)
 80088f4:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80088f8:	4b22      	ldr	r3, [pc, #136]	; (8008984 <prvAddNewTaskToReadyList+0xec>)
 80088fa:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 80088fc:	4a22      	ldr	r2, [pc, #136]	; (8008988 <prvAddNewTaskToReadyList+0xf0>)
 80088fe:	6813      	ldr	r3, [r2, #0]
 8008900:	3301      	adds	r3, #1
 8008902:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008904:	4a21      	ldr	r2, [pc, #132]	; (800898c <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8008906:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8008908:	6811      	ldr	r1, [r2, #0]
 800890a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800890c:	2014      	movs	r0, #20
 800890e:	428b      	cmp	r3, r1
 8008910:	fb00 7003 	mla	r0, r0, r3, r7
 8008914:	f104 0104 	add.w	r1, r4, #4
 8008918:	bf88      	it	hi
 800891a:	6013      	strhi	r3, [r2, #0]
 800891c:	f7ff f8be 	bl	8007a9c <vListInsertEnd>
	taskEXIT_CRITICAL();
 8008920:	f7ff f978 	bl	8007c14 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008924:	4b1a      	ldr	r3, [pc, #104]	; (8008990 <prvAddNewTaskToReadyList+0xf8>)
 8008926:	681b      	ldr	r3, [r3, #0]
 8008928:	b173      	cbz	r3, 8008948 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800892a:	6833      	ldr	r3, [r6, #0]
 800892c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800892e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008930:	429a      	cmp	r2, r3
 8008932:	d209      	bcs.n	8008948 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8008934:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008938:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800893c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008940:	f3bf 8f4f 	dsb	sy
 8008944:	f3bf 8f6f 	isb	sy
}
 8008948:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800894c:	4b10      	ldr	r3, [pc, #64]	; (8008990 <prvAddNewTaskToReadyList+0xf8>)
 800894e:	681b      	ldr	r3, [r3, #0]
 8008950:	2b00      	cmp	r3, #0
 8008952:	d1d3      	bne.n	80088fc <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008954:	6833      	ldr	r3, [r6, #0]
 8008956:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008958:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800895a:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800895c:	bf98      	it	ls
 800895e:	6034      	strls	r4, [r6, #0]
 8008960:	e7cc      	b.n	80088fc <prvAddNewTaskToReadyList+0x64>
 8008962:	bf00      	nop
 8008964:	2001247c 	.word	0x2001247c
 8008968:	20012010 	.word	0x20012010
 800896c:	2001201c 	.word	0x2001201c
 8008970:	200124a4 	.word	0x200124a4
 8008974:	200124c4 	.word	0x200124c4
 8008978:	200124f0 	.word	0x200124f0
 800897c:	200124dc 	.word	0x200124dc
 8008980:	20012014 	.word	0x20012014
 8008984:	20012018 	.word	0x20012018
 8008988:	20012488 	.word	0x20012488
 800898c:	2001248c 	.word	0x2001248c
 8008990:	200124d8 	.word	0x200124d8
 8008994:	20012490 	.word	0x20012490

08008998 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008998:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800899a:	4b15      	ldr	r3, [pc, #84]	; (80089f0 <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800899c:	4e15      	ldr	r6, [pc, #84]	; (80089f4 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800899e:	681d      	ldr	r5, [r3, #0]
{
 80089a0:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80089a2:	6830      	ldr	r0, [r6, #0]
 80089a4:	3004      	adds	r0, #4
{
 80089a6:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80089a8:	f7ff f89b 	bl	8007ae2 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80089ac:	1c63      	adds	r3, r4, #1
 80089ae:	d107      	bne.n	80089c0 <prvAddCurrentTaskToDelayedList+0x28>
 80089b0:	b137      	cbz	r7, 80089c0 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80089b2:	6831      	ldr	r1, [r6, #0]
 80089b4:	4810      	ldr	r0, [pc, #64]	; (80089f8 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80089b6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80089ba:	3104      	adds	r1, #4
 80089bc:	f7ff b86e 	b.w	8007a9c <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80089c0:	6833      	ldr	r3, [r6, #0]
 80089c2:	192c      	adds	r4, r5, r4
 80089c4:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80089c6:	d307      	bcc.n	80089d8 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80089c8:	4b0c      	ldr	r3, [pc, #48]	; (80089fc <prvAddCurrentTaskToDelayedList+0x64>)
 80089ca:	6818      	ldr	r0, [r3, #0]
 80089cc:	6831      	ldr	r1, [r6, #0]
}
 80089ce:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80089d2:	3104      	adds	r1, #4
 80089d4:	f7ff b86e 	b.w	8007ab4 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80089d8:	4b09      	ldr	r3, [pc, #36]	; (8008a00 <prvAddCurrentTaskToDelayedList+0x68>)
 80089da:	6818      	ldr	r0, [r3, #0]
 80089dc:	6831      	ldr	r1, [r6, #0]
 80089de:	3104      	adds	r1, #4
 80089e0:	f7ff f868 	bl	8007ab4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80089e4:	4b07      	ldr	r3, [pc, #28]	; (8008a04 <prvAddCurrentTaskToDelayedList+0x6c>)
 80089e6:	681a      	ldr	r2, [r3, #0]
 80089e8:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80089ea:	bf88      	it	hi
 80089ec:	601c      	strhi	r4, [r3, #0]
}
 80089ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80089f0:	20012504 	.word	0x20012504
 80089f4:	20012010 	.word	0x20012010
 80089f8:	200124dc 	.word	0x200124dc
 80089fc:	20012018 	.word	0x20012018
 8008a00:	20012014 	.word	0x20012014
 8008a04:	200124b8 	.word	0x200124b8

08008a08 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008a08:	4a06      	ldr	r2, [pc, #24]	; (8008a24 <prvResetNextTaskUnblockTime+0x1c>)
 8008a0a:	6813      	ldr	r3, [r2, #0]
 8008a0c:	6819      	ldr	r1, [r3, #0]
 8008a0e:	4b06      	ldr	r3, [pc, #24]	; (8008a28 <prvResetNextTaskUnblockTime+0x20>)
 8008a10:	b919      	cbnz	r1, 8008a1a <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8008a12:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008a16:	601a      	str	r2, [r3, #0]
}
 8008a18:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a1a:	6812      	ldr	r2, [r2, #0]
 8008a1c:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008a1e:	68d2      	ldr	r2, [r2, #12]
 8008a20:	6852      	ldr	r2, [r2, #4]
 8008a22:	e7f8      	b.n	8008a16 <prvResetNextTaskUnblockTime+0xe>
 8008a24:	20012014 	.word	0x20012014
 8008a28:	200124b8 	.word	0x200124b8

08008a2c <prvDeleteTCB>:
	{
 8008a2c:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008a2e:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8008a32:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008a34:	b93b      	cbnz	r3, 8008a46 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8008a36:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8008a38:	f7fe ffe4 	bl	8007a04 <vPortFree>
				vPortFree( pxTCB );
 8008a3c:	4620      	mov	r0, r4
	}
 8008a3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8008a42:	f7fe bfdf 	b.w	8007a04 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008a46:	2b01      	cmp	r3, #1
 8008a48:	d0f9      	beq.n	8008a3e <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008a4a:	2b02      	cmp	r3, #2
 8008a4c:	d008      	beq.n	8008a60 <prvDeleteTCB+0x34>
 8008a4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a52:	f383 8811 	msr	BASEPRI, r3
 8008a56:	f3bf 8f6f 	isb	sy
 8008a5a:	f3bf 8f4f 	dsb	sy
 8008a5e:	e7fe      	b.n	8008a5e <prvDeleteTCB+0x32>
	}
 8008a60:	bd10      	pop	{r4, pc}
	...

08008a64 <prvIdleTask>:
{
 8008a64:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008a66:	4c13      	ldr	r4, [pc, #76]	; (8008ab4 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a68:	4f13      	ldr	r7, [pc, #76]	; (8008ab8 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8008a6a:	4d14      	ldr	r5, [pc, #80]	; (8008abc <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008a6c:	6823      	ldr	r3, [r4, #0]
 8008a6e:	b973      	cbnz	r3, 8008a8e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8008a70:	4b13      	ldr	r3, [pc, #76]	; (8008ac0 <prvIdleTask+0x5c>)
 8008a72:	681b      	ldr	r3, [r3, #0]
 8008a74:	2b01      	cmp	r3, #1
 8008a76:	d9f8      	bls.n	8008a6a <prvIdleTask+0x6>
				taskYIELD();
 8008a78:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008a7c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008a80:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008a84:	f3bf 8f4f 	dsb	sy
 8008a88:	f3bf 8f6f 	isb	sy
 8008a8c:	e7ed      	b.n	8008a6a <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8008a8e:	f7ff f8a1 	bl	8007bd4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a92:	68fb      	ldr	r3, [r7, #12]
 8008a94:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008a96:	1d30      	adds	r0, r6, #4
 8008a98:	f7ff f823 	bl	8007ae2 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8008a9c:	682b      	ldr	r3, [r5, #0]
 8008a9e:	3b01      	subs	r3, #1
 8008aa0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8008aa2:	6823      	ldr	r3, [r4, #0]
 8008aa4:	3b01      	subs	r3, #1
 8008aa6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8008aa8:	f7ff f8b4 	bl	8007c14 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8008aac:	4630      	mov	r0, r6
 8008aae:	f7ff ffbd 	bl	8008a2c <prvDeleteTCB>
 8008ab2:	e7db      	b.n	8008a6c <prvIdleTask+0x8>
 8008ab4:	20012480 	.word	0x20012480
 8008ab8:	200124f0 	.word	0x200124f0
 8008abc:	2001247c 	.word	0x2001247c
 8008ac0:	2001201c 	.word	0x2001201c

08008ac4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008ac4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008ac8:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008acc:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8008ad0:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008ad2:	4606      	mov	r6, r0
 8008ad4:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008ad6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008ad8:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008ada:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008adc:	f014 ff68 	bl	801d9b0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8008ae0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008ae2:	f1a9 0904 	sub.w	r9, r9, #4
 8008ae6:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008ae8:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8008aec:	b3b5      	cbz	r5, 8008b5c <prvInitialiseNewTask.constprop.0+0x98>
 8008aee:	1e6b      	subs	r3, r5, #1
 8008af0:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8008af4:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008af6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8008afa:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8008afe:	b108      	cbz	r0, 8008b04 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008b00:	42ab      	cmp	r3, r5
 8008b02:	d1f8      	bne.n	8008af6 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008b04:	2300      	movs	r3, #0
 8008b06:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8008b0a:	9d08      	ldr	r5, [sp, #32]
 8008b0c:	2d37      	cmp	r5, #55	; 0x37
 8008b0e:	bf28      	it	cs
 8008b10:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008b12:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008b16:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008b18:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008b1a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8008b1c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008b20:	f7fe ffb9 	bl	8007a96 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008b24:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008b28:	f104 0018 	add.w	r0, r4, #24
 8008b2c:	f7fe ffb3 	bl	8007a96 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008b30:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008b34:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008b36:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008b38:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8008b3a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008b3e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008b42:	463a      	mov	r2, r7
 8008b44:	4631      	mov	r1, r6
 8008b46:	4648      	mov	r0, r9
 8008b48:	f7ff f81a 	bl	8007b80 <pxPortInitialiseStack>
 8008b4c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8008b4e:	f1b8 0f00 	cmp.w	r8, #0
 8008b52:	d001      	beq.n	8008b58 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008b54:	f8c8 4000 	str.w	r4, [r8]
}
 8008b58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8008b5c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8008b60:	e7d3      	b.n	8008b0a <prvInitialiseNewTask.constprop.0+0x46>

08008b62 <xTaskCreateStatic>:
	{
 8008b62:	b570      	push	{r4, r5, r6, lr}
 8008b64:	b086      	sub	sp, #24
 8008b66:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008b6a:	b945      	cbnz	r5, 8008b7e <xTaskCreateStatic+0x1c>
 8008b6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b70:	f383 8811 	msr	BASEPRI, r3
 8008b74:	f3bf 8f6f 	isb	sy
 8008b78:	f3bf 8f4f 	dsb	sy
 8008b7c:	e7fe      	b.n	8008b7c <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8008b7e:	b944      	cbnz	r4, 8008b92 <xTaskCreateStatic+0x30>
 8008b80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b84:	f383 8811 	msr	BASEPRI, r3
 8008b88:	f3bf 8f6f 	isb	sy
 8008b8c:	f3bf 8f4f 	dsb	sy
 8008b90:	e7fe      	b.n	8008b90 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8008b92:	2660      	movs	r6, #96	; 0x60
 8008b94:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8008b96:	9e05      	ldr	r6, [sp, #20]
 8008b98:	2e60      	cmp	r6, #96	; 0x60
 8008b9a:	d008      	beq.n	8008bae <xTaskCreateStatic+0x4c>
 8008b9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ba0:	f383 8811 	msr	BASEPRI, r3
 8008ba4:	f3bf 8f6f 	isb	sy
 8008ba8:	f3bf 8f4f 	dsb	sy
 8008bac:	e7fe      	b.n	8008bac <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8008bae:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8008bb0:	2502      	movs	r5, #2
 8008bb2:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008bb6:	ad04      	add	r5, sp, #16
 8008bb8:	9501      	str	r5, [sp, #4]
 8008bba:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8008bbc:	9402      	str	r4, [sp, #8]
 8008bbe:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008bc0:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008bc2:	f7ff ff7f 	bl	8008ac4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008bc6:	4620      	mov	r0, r4
 8008bc8:	f7ff fe66 	bl	8008898 <prvAddNewTaskToReadyList>
	}
 8008bcc:	9804      	ldr	r0, [sp, #16]
 8008bce:	b006      	add	sp, #24
 8008bd0:	bd70      	pop	{r4, r5, r6, pc}

08008bd2 <xTaskCreate>:
	{
 8008bd2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008bd6:	4607      	mov	r7, r0
 8008bd8:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008bda:	0090      	lsls	r0, r2, #2
	{
 8008bdc:	4688      	mov	r8, r1
 8008bde:	4616      	mov	r6, r2
 8008be0:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008be2:	f7fe fe77 	bl	80078d4 <pvPortMalloc>
			if( pxStack != NULL )
 8008be6:	4605      	mov	r5, r0
 8008be8:	b1e8      	cbz	r0, 8008c26 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008bea:	2060      	movs	r0, #96	; 0x60
 8008bec:	f7fe fe72 	bl	80078d4 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008bf0:	4604      	mov	r4, r0
 8008bf2:	b1a8      	cbz	r0, 8008c20 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008bf4:	2300      	movs	r3, #0
 8008bf6:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008bfa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8008bfc:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008bfe:	9301      	str	r3, [sp, #4]
 8008c00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008c02:	9002      	str	r0, [sp, #8]
 8008c04:	9300      	str	r3, [sp, #0]
 8008c06:	4632      	mov	r2, r6
 8008c08:	464b      	mov	r3, r9
 8008c0a:	4641      	mov	r1, r8
 8008c0c:	4638      	mov	r0, r7
 8008c0e:	f7ff ff59 	bl	8008ac4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008c12:	4620      	mov	r0, r4
 8008c14:	f7ff fe40 	bl	8008898 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008c18:	2001      	movs	r0, #1
	}
 8008c1a:	b005      	add	sp, #20
 8008c1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8008c20:	4628      	mov	r0, r5
 8008c22:	f7fe feef 	bl	8007a04 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008c26:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8008c2a:	e7f6      	b.n	8008c1a <xTaskCreate+0x48>

08008c2c <vTaskStartScheduler>:
{
 8008c2c:	b510      	push	{r4, lr}
 8008c2e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008c30:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008c32:	aa07      	add	r2, sp, #28
 8008c34:	a906      	add	r1, sp, #24
 8008c36:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008c38:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008c3c:	f7fe fe0e 	bl	800785c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008c40:	9b05      	ldr	r3, [sp, #20]
 8008c42:	9302      	str	r3, [sp, #8]
 8008c44:	9b06      	ldr	r3, [sp, #24]
 8008c46:	9a07      	ldr	r2, [sp, #28]
 8008c48:	4916      	ldr	r1, [pc, #88]	; (8008ca4 <vTaskStartScheduler+0x78>)
 8008c4a:	4817      	ldr	r0, [pc, #92]	; (8008ca8 <vTaskStartScheduler+0x7c>)
 8008c4c:	e9cd 4300 	strd	r4, r3, [sp]
 8008c50:	4623      	mov	r3, r4
 8008c52:	f7ff ff86 	bl	8008b62 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008c56:	b318      	cbz	r0, 8008ca0 <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 8008c58:	f000 fbb4 	bl	80093c4 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008c5c:	2801      	cmp	r0, #1
 8008c5e:	d114      	bne.n	8008c8a <vTaskStartScheduler+0x5e>
 8008c60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c64:	f383 8811 	msr	BASEPRI, r3
 8008c68:	f3bf 8f6f 	isb	sy
 8008c6c:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008c70:	4b0e      	ldr	r3, [pc, #56]	; (8008cac <vTaskStartScheduler+0x80>)
 8008c72:	f04f 32ff 	mov.w	r2, #4294967295
 8008c76:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008c78:	4b0d      	ldr	r3, [pc, #52]	; (8008cb0 <vTaskStartScheduler+0x84>)
 8008c7a:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008c7c:	4b0d      	ldr	r3, [pc, #52]	; (8008cb4 <vTaskStartScheduler+0x88>)
 8008c7e:	601c      	str	r4, [r3, #0]
}
 8008c80:	b008      	add	sp, #32
 8008c82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8008c86:	f7ff b835 	b.w	8007cf4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008c8a:	3001      	adds	r0, #1
 8008c8c:	d108      	bne.n	8008ca0 <vTaskStartScheduler+0x74>
 8008c8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c92:	f383 8811 	msr	BASEPRI, r3
 8008c96:	f3bf 8f6f 	isb	sy
 8008c9a:	f3bf 8f4f 	dsb	sy
 8008c9e:	e7fe      	b.n	8008c9e <vTaskStartScheduler+0x72>
}
 8008ca0:	b008      	add	sp, #32
 8008ca2:	bd10      	pop	{r4, pc}
 8008ca4:	08020390 	.word	0x08020390
 8008ca8:	08008a65 	.word	0x08008a65
 8008cac:	200124b8 	.word	0x200124b8
 8008cb0:	200124d8 	.word	0x200124d8
 8008cb4:	20012504 	.word	0x20012504

08008cb8 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8008cb8:	4a02      	ldr	r2, [pc, #8]	; (8008cc4 <vTaskSuspendAll+0xc>)
 8008cba:	6813      	ldr	r3, [r2, #0]
 8008cbc:	3301      	adds	r3, #1
 8008cbe:	6013      	str	r3, [r2, #0]
}
 8008cc0:	4770      	bx	lr
 8008cc2:	bf00      	nop
 8008cc4:	20012484 	.word	0x20012484

08008cc8 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008cc8:	4b01      	ldr	r3, [pc, #4]	; (8008cd0 <xTaskGetTickCount+0x8>)
 8008cca:	6818      	ldr	r0, [r3, #0]
}
 8008ccc:	4770      	bx	lr
 8008cce:	bf00      	nop
 8008cd0:	20012504 	.word	0x20012504

08008cd4 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008cd4:	4b3f      	ldr	r3, [pc, #252]	; (8008dd4 <xTaskIncrementTick+0x100>)
 8008cd6:	681b      	ldr	r3, [r3, #0]
{
 8008cd8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008cdc:	2b00      	cmp	r3, #0
 8008cde:	d173      	bne.n	8008dc8 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008ce0:	4b3d      	ldr	r3, [pc, #244]	; (8008dd8 <xTaskIncrementTick+0x104>)
 8008ce2:	681d      	ldr	r5, [r3, #0]
 8008ce4:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8008ce6:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008ce8:	b9bd      	cbnz	r5, 8008d1a <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8008cea:	4b3c      	ldr	r3, [pc, #240]	; (8008ddc <xTaskIncrementTick+0x108>)
 8008cec:	681a      	ldr	r2, [r3, #0]
 8008cee:	6812      	ldr	r2, [r2, #0]
 8008cf0:	b142      	cbz	r2, 8008d04 <xTaskIncrementTick+0x30>
 8008cf2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cf6:	f383 8811 	msr	BASEPRI, r3
 8008cfa:	f3bf 8f6f 	isb	sy
 8008cfe:	f3bf 8f4f 	dsb	sy
 8008d02:	e7fe      	b.n	8008d02 <xTaskIncrementTick+0x2e>
 8008d04:	4a36      	ldr	r2, [pc, #216]	; (8008de0 <xTaskIncrementTick+0x10c>)
 8008d06:	6819      	ldr	r1, [r3, #0]
 8008d08:	6810      	ldr	r0, [r2, #0]
 8008d0a:	6018      	str	r0, [r3, #0]
 8008d0c:	6011      	str	r1, [r2, #0]
 8008d0e:	4a35      	ldr	r2, [pc, #212]	; (8008de4 <xTaskIncrementTick+0x110>)
 8008d10:	6813      	ldr	r3, [r2, #0]
 8008d12:	3301      	adds	r3, #1
 8008d14:	6013      	str	r3, [r2, #0]
 8008d16:	f7ff fe77 	bl	8008a08 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008d1a:	4e33      	ldr	r6, [pc, #204]	; (8008de8 <xTaskIncrementTick+0x114>)
 8008d1c:	4f33      	ldr	r7, [pc, #204]	; (8008dec <xTaskIncrementTick+0x118>)
 8008d1e:	6833      	ldr	r3, [r6, #0]
 8008d20:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8008df8 <xTaskIncrementTick+0x124>
 8008d24:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 8008d26:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008d2a:	d211      	bcs.n	8008d50 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008d2c:	f8d8 3000 	ldr.w	r3, [r8]
 8008d30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d32:	2214      	movs	r2, #20
 8008d34:	4353      	muls	r3, r2
 8008d36:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8008d38:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 8008d3a:	4b2d      	ldr	r3, [pc, #180]	; (8008df0 <xTaskIncrementTick+0x11c>)
 8008d3c:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 8008d3e:	bf28      	it	cs
 8008d40:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 8008d42:	2b00      	cmp	r3, #0
 8008d44:	bf18      	it	ne
 8008d46:	2401      	movne	r4, #1
}
 8008d48:	4620      	mov	r0, r4
 8008d4a:	b003      	add	sp, #12
 8008d4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008d50:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8008ddc <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008d54:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8008dfc <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008d58:	f8d9 3000 	ldr.w	r3, [r9]
 8008d5c:	681b      	ldr	r3, [r3, #0]
 8008d5e:	b91b      	cbnz	r3, 8008d68 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008d60:	f04f 33ff 	mov.w	r3, #4294967295
 8008d64:	6033      	str	r3, [r6, #0]
					break;
 8008d66:	e7e1      	b.n	8008d2c <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d68:	f8d9 3000 	ldr.w	r3, [r9]
 8008d6c:	68db      	ldr	r3, [r3, #12]
 8008d6e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008d72:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8008d76:	4295      	cmp	r5, r2
 8008d78:	d201      	bcs.n	8008d7e <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008d7a:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008d7c:	e7d6      	b.n	8008d2c <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008d7e:	f10b 0104 	add.w	r1, fp, #4
 8008d82:	4608      	mov	r0, r1
 8008d84:	9101      	str	r1, [sp, #4]
 8008d86:	f7fe feac 	bl	8007ae2 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008d8a:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8008d8e:	9901      	ldr	r1, [sp, #4]
 8008d90:	b122      	cbz	r2, 8008d9c <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008d92:	f10b 0018 	add.w	r0, fp, #24
 8008d96:	f7fe fea4 	bl	8007ae2 <uxListRemove>
 8008d9a:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8008d9c:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8008da0:	f8da 2000 	ldr.w	r2, [sl]
 8008da4:	2314      	movs	r3, #20
 8008da6:	4290      	cmp	r0, r2
 8008da8:	bf88      	it	hi
 8008daa:	f8ca 0000 	strhi.w	r0, [sl]
 8008dae:	fb03 7000 	mla	r0, r3, r0, r7
 8008db2:	f7fe fe73 	bl	8007a9c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008db6:	f8d8 1000 	ldr.w	r1, [r8]
 8008dba:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8008dbe:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8008dc0:	429a      	cmp	r2, r3
 8008dc2:	bf28      	it	cs
 8008dc4:	2401      	movcs	r4, #1
 8008dc6:	e7c7      	b.n	8008d58 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8008dc8:	4a0a      	ldr	r2, [pc, #40]	; (8008df4 <xTaskIncrementTick+0x120>)
 8008dca:	6813      	ldr	r3, [r2, #0]
 8008dcc:	3301      	adds	r3, #1
 8008dce:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008dd0:	2400      	movs	r4, #0
	return xSwitchRequired;
 8008dd2:	e7b9      	b.n	8008d48 <xTaskIncrementTick+0x74>
 8008dd4:	20012484 	.word	0x20012484
 8008dd8:	20012504 	.word	0x20012504
 8008ddc:	20012014 	.word	0x20012014
 8008de0:	20012018 	.word	0x20012018
 8008de4:	200124bc 	.word	0x200124bc
 8008de8:	200124b8 	.word	0x200124b8
 8008dec:	2001201c 	.word	0x2001201c
 8008df0:	20012508 	.word	0x20012508
 8008df4:	200124c0 	.word	0x200124c0
 8008df8:	20012010 	.word	0x20012010
 8008dfc:	2001248c 	.word	0x2001248c

08008e00 <xTaskResumeAll>:
{
 8008e00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8008e02:	4c31      	ldr	r4, [pc, #196]	; (8008ec8 <xTaskResumeAll+0xc8>)
 8008e04:	6823      	ldr	r3, [r4, #0]
 8008e06:	b943      	cbnz	r3, 8008e1a <xTaskResumeAll+0x1a>
 8008e08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e0c:	f383 8811 	msr	BASEPRI, r3
 8008e10:	f3bf 8f6f 	isb	sy
 8008e14:	f3bf 8f4f 	dsb	sy
 8008e18:	e7fe      	b.n	8008e18 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8008e1a:	f7fe fedb 	bl	8007bd4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008e1e:	6823      	ldr	r3, [r4, #0]
 8008e20:	3b01      	subs	r3, #1
 8008e22:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008e24:	6824      	ldr	r4, [r4, #0]
 8008e26:	b12c      	cbz	r4, 8008e34 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8008e28:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008e2a:	f7fe fef3 	bl	8007c14 <vPortExitCritical>
}
 8008e2e:	4620      	mov	r0, r4
 8008e30:	b003      	add	sp, #12
 8008e32:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008e34:	4b25      	ldr	r3, [pc, #148]	; (8008ecc <xTaskResumeAll+0xcc>)
 8008e36:	681b      	ldr	r3, [r3, #0]
 8008e38:	2b00      	cmp	r3, #0
 8008e3a:	d0f5      	beq.n	8008e28 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008e3c:	4d24      	ldr	r5, [pc, #144]	; (8008ed0 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8008e3e:	4e25      	ldr	r6, [pc, #148]	; (8008ed4 <xTaskResumeAll+0xd4>)
 8008e40:	4f25      	ldr	r7, [pc, #148]	; (8008ed8 <xTaskResumeAll+0xd8>)
 8008e42:	e01e      	b.n	8008e82 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008e44:	68eb      	ldr	r3, [r5, #12]
 8008e46:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008e48:	f104 0018 	add.w	r0, r4, #24
 8008e4c:	f7fe fe49 	bl	8007ae2 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008e50:	1d21      	adds	r1, r4, #4
 8008e52:	4608      	mov	r0, r1
 8008e54:	9101      	str	r1, [sp, #4]
 8008e56:	f7fe fe44 	bl	8007ae2 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008e5a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008e5c:	6832      	ldr	r2, [r6, #0]
 8008e5e:	9901      	ldr	r1, [sp, #4]
 8008e60:	2014      	movs	r0, #20
 8008e62:	4293      	cmp	r3, r2
 8008e64:	fb00 7003 	mla	r0, r0, r3, r7
 8008e68:	bf88      	it	hi
 8008e6a:	6033      	strhi	r3, [r6, #0]
 8008e6c:	f7fe fe16 	bl	8007a9c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008e70:	4b1a      	ldr	r3, [pc, #104]	; (8008edc <xTaskResumeAll+0xdc>)
 8008e72:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008e74:	681b      	ldr	r3, [r3, #0]
 8008e76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e78:	429a      	cmp	r2, r3
 8008e7a:	d302      	bcc.n	8008e82 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8008e7c:	4b18      	ldr	r3, [pc, #96]	; (8008ee0 <xTaskResumeAll+0xe0>)
 8008e7e:	2201      	movs	r2, #1
 8008e80:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008e82:	682b      	ldr	r3, [r5, #0]
 8008e84:	2b00      	cmp	r3, #0
 8008e86:	d1dd      	bne.n	8008e44 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8008e88:	b10c      	cbz	r4, 8008e8e <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8008e8a:	f7ff fdbd 	bl	8008a08 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8008e8e:	4d15      	ldr	r5, [pc, #84]	; (8008ee4 <xTaskResumeAll+0xe4>)
 8008e90:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8008e92:	b144      	cbz	r4, 8008ea6 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8008e94:	4e12      	ldr	r6, [pc, #72]	; (8008ee0 <xTaskResumeAll+0xe0>)
 8008e96:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008e98:	f7ff ff1c 	bl	8008cd4 <xTaskIncrementTick>
 8008e9c:	b100      	cbz	r0, 8008ea0 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8008e9e:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8008ea0:	3c01      	subs	r4, #1
 8008ea2:	d1f9      	bne.n	8008e98 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 8008ea4:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008ea6:	4b0e      	ldr	r3, [pc, #56]	; (8008ee0 <xTaskResumeAll+0xe0>)
 8008ea8:	681b      	ldr	r3, [r3, #0]
 8008eaa:	2b00      	cmp	r3, #0
 8008eac:	d0bc      	beq.n	8008e28 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8008eae:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008eb2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008eb6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008eba:	f3bf 8f4f 	dsb	sy
 8008ebe:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008ec2:	2401      	movs	r4, #1
 8008ec4:	e7b1      	b.n	8008e2a <xTaskResumeAll+0x2a>
 8008ec6:	bf00      	nop
 8008ec8:	20012484 	.word	0x20012484
 8008ecc:	2001247c 	.word	0x2001247c
 8008ed0:	200124c4 	.word	0x200124c4
 8008ed4:	2001248c 	.word	0x2001248c
 8008ed8:	2001201c 	.word	0x2001201c
 8008edc:	20012010 	.word	0x20012010
 8008ee0:	20012508 	.word	0x20012508
 8008ee4:	200124c0 	.word	0x200124c0

08008ee8 <vTaskDelay>:
	{
 8008ee8:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8008eea:	b950      	cbnz	r0, 8008f02 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8008eec:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008ef0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008ef4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008ef8:	f3bf 8f4f 	dsb	sy
 8008efc:	f3bf 8f6f 	isb	sy
	}
 8008f00:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8008f02:	4b0a      	ldr	r3, [pc, #40]	; (8008f2c <vTaskDelay+0x44>)
 8008f04:	6819      	ldr	r1, [r3, #0]
 8008f06:	b141      	cbz	r1, 8008f1a <vTaskDelay+0x32>
 8008f08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f0c:	f383 8811 	msr	BASEPRI, r3
 8008f10:	f3bf 8f6f 	isb	sy
 8008f14:	f3bf 8f4f 	dsb	sy
 8008f18:	e7fe      	b.n	8008f18 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8008f1a:	f7ff fecd 	bl	8008cb8 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008f1e:	f7ff fd3b 	bl	8008998 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008f22:	f7ff ff6d 	bl	8008e00 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8008f26:	2800      	cmp	r0, #0
 8008f28:	d0e0      	beq.n	8008eec <vTaskDelay+0x4>
 8008f2a:	e7e9      	b.n	8008f00 <vTaskDelay+0x18>
 8008f2c:	20012484 	.word	0x20012484

08008f30 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008f30:	4b17      	ldr	r3, [pc, #92]	; (8008f90 <vTaskSwitchContext+0x60>)
 8008f32:	681a      	ldr	r2, [r3, #0]
 8008f34:	4b17      	ldr	r3, [pc, #92]	; (8008f94 <vTaskSwitchContext+0x64>)
{
 8008f36:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008f38:	b112      	cbz	r2, 8008f40 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008f3a:	2201      	movs	r2, #1
 8008f3c:	601a      	str	r2, [r3, #0]
}
 8008f3e:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008f40:	4d15      	ldr	r5, [pc, #84]	; (8008f98 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 8008f42:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008f44:	682a      	ldr	r2, [r5, #0]
 8008f46:	4915      	ldr	r1, [pc, #84]	; (8008f9c <vTaskSwitchContext+0x6c>)
 8008f48:	2614      	movs	r6, #20
 8008f4a:	fb06 f302 	mul.w	r3, r6, r2
 8008f4e:	18c8      	adds	r0, r1, r3
 8008f50:	58cc      	ldr	r4, [r1, r3]
 8008f52:	b18c      	cbz	r4, 8008f78 <vTaskSwitchContext+0x48>
 8008f54:	6844      	ldr	r4, [r0, #4]
 8008f56:	3308      	adds	r3, #8
 8008f58:	6864      	ldr	r4, [r4, #4]
 8008f5a:	6044      	str	r4, [r0, #4]
 8008f5c:	440b      	add	r3, r1
 8008f5e:	429c      	cmp	r4, r3
 8008f60:	bf04      	itt	eq
 8008f62:	6863      	ldreq	r3, [r4, #4]
 8008f64:	6043      	streq	r3, [r0, #4]
 8008f66:	2314      	movs	r3, #20
 8008f68:	fb03 1102 	mla	r1, r3, r2, r1
 8008f6c:	684b      	ldr	r3, [r1, #4]
 8008f6e:	68d9      	ldr	r1, [r3, #12]
 8008f70:	4b0b      	ldr	r3, [pc, #44]	; (8008fa0 <vTaskSwitchContext+0x70>)
 8008f72:	6019      	str	r1, [r3, #0]
 8008f74:	602a      	str	r2, [r5, #0]
}
 8008f76:	e7e2      	b.n	8008f3e <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008f78:	b942      	cbnz	r2, 8008f8c <vTaskSwitchContext+0x5c>
 8008f7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f7e:	f383 8811 	msr	BASEPRI, r3
 8008f82:	f3bf 8f6f 	isb	sy
 8008f86:	f3bf 8f4f 	dsb	sy
 8008f8a:	e7fe      	b.n	8008f8a <vTaskSwitchContext+0x5a>
 8008f8c:	3a01      	subs	r2, #1
 8008f8e:	e7dc      	b.n	8008f4a <vTaskSwitchContext+0x1a>
 8008f90:	20012484 	.word	0x20012484
 8008f94:	20012508 	.word	0x20012508
 8008f98:	2001248c 	.word	0x2001248c
 8008f9c:	2001201c 	.word	0x2001201c
 8008fa0:	20012010 	.word	0x20012010

08008fa4 <vTaskPlaceOnEventList>:
{
 8008fa4:	b510      	push	{r4, lr}
 8008fa6:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008fa8:	b940      	cbnz	r0, 8008fbc <vTaskPlaceOnEventList+0x18>
 8008faa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fae:	f383 8811 	msr	BASEPRI, r3
 8008fb2:	f3bf 8f6f 	isb	sy
 8008fb6:	f3bf 8f4f 	dsb	sy
 8008fba:	e7fe      	b.n	8008fba <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008fbc:	4b05      	ldr	r3, [pc, #20]	; (8008fd4 <vTaskPlaceOnEventList+0x30>)
 8008fbe:	6819      	ldr	r1, [r3, #0]
 8008fc0:	3118      	adds	r1, #24
 8008fc2:	f7fe fd77 	bl	8007ab4 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008fc6:	4620      	mov	r0, r4
 8008fc8:	2101      	movs	r1, #1
}
 8008fca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008fce:	f7ff bce3 	b.w	8008998 <prvAddCurrentTaskToDelayedList>
 8008fd2:	bf00      	nop
 8008fd4:	20012010 	.word	0x20012010

08008fd8 <vTaskPlaceOnEventListRestricted>:
	{
 8008fd8:	b538      	push	{r3, r4, r5, lr}
 8008fda:	460d      	mov	r5, r1
 8008fdc:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8008fde:	b940      	cbnz	r0, 8008ff2 <vTaskPlaceOnEventListRestricted+0x1a>
 8008fe0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fe4:	f383 8811 	msr	BASEPRI, r3
 8008fe8:	f3bf 8f6f 	isb	sy
 8008fec:	f3bf 8f4f 	dsb	sy
 8008ff0:	e7fe      	b.n	8008ff0 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008ff2:	4b07      	ldr	r3, [pc, #28]	; (8009010 <vTaskPlaceOnEventListRestricted+0x38>)
 8008ff4:	6819      	ldr	r1, [r3, #0]
 8008ff6:	3118      	adds	r1, #24
 8008ff8:	f7fe fd50 	bl	8007a9c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008ffc:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008ffe:	4621      	mov	r1, r4
 8009000:	bf0c      	ite	eq
 8009002:	4628      	moveq	r0, r5
 8009004:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8009008:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800900c:	f7ff bcc4 	b.w	8008998 <prvAddCurrentTaskToDelayedList>
 8009010:	20012010 	.word	0x20012010

08009014 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009014:	68c3      	ldr	r3, [r0, #12]
{
 8009016:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009018:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800901a:	b944      	cbnz	r4, 800902e <xTaskRemoveFromEventList+0x1a>
 800901c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009020:	f383 8811 	msr	BASEPRI, r3
 8009024:	f3bf 8f6f 	isb	sy
 8009028:	f3bf 8f4f 	dsb	sy
 800902c:	e7fe      	b.n	800902c <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800902e:	f104 0118 	add.w	r1, r4, #24
 8009032:	4608      	mov	r0, r1
 8009034:	9101      	str	r1, [sp, #4]
 8009036:	f7fe fd54 	bl	8007ae2 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800903a:	4b12      	ldr	r3, [pc, #72]	; (8009084 <xTaskRemoveFromEventList+0x70>)
 800903c:	9901      	ldr	r1, [sp, #4]
 800903e:	681b      	ldr	r3, [r3, #0]
 8009040:	b9eb      	cbnz	r3, 800907e <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8009042:	1d21      	adds	r1, r4, #4
 8009044:	4608      	mov	r0, r1
 8009046:	9101      	str	r1, [sp, #4]
 8009048:	f7fe fd4b 	bl	8007ae2 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800904c:	4a0e      	ldr	r2, [pc, #56]	; (8009088 <xTaskRemoveFromEventList+0x74>)
 800904e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009050:	6810      	ldr	r0, [r2, #0]
 8009052:	9901      	ldr	r1, [sp, #4]
 8009054:	4283      	cmp	r3, r0
 8009056:	bf88      	it	hi
 8009058:	6013      	strhi	r3, [r2, #0]
 800905a:	4a0c      	ldr	r2, [pc, #48]	; (800908c <xTaskRemoveFromEventList+0x78>)
 800905c:	2014      	movs	r0, #20
 800905e:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009062:	f7fe fd1b 	bl	8007a9c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8009066:	4b0a      	ldr	r3, [pc, #40]	; (8009090 <xTaskRemoveFromEventList+0x7c>)
 8009068:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800906a:	681b      	ldr	r3, [r3, #0]
 800906c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800906e:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8009070:	bf85      	ittet	hi
 8009072:	4b08      	ldrhi	r3, [pc, #32]	; (8009094 <xTaskRemoveFromEventList+0x80>)
 8009074:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8009076:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8009078:	6018      	strhi	r0, [r3, #0]
}
 800907a:	b002      	add	sp, #8
 800907c:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800907e:	4806      	ldr	r0, [pc, #24]	; (8009098 <xTaskRemoveFromEventList+0x84>)
 8009080:	e7ef      	b.n	8009062 <xTaskRemoveFromEventList+0x4e>
 8009082:	bf00      	nop
 8009084:	20012484 	.word	0x20012484
 8009088:	2001248c 	.word	0x2001248c
 800908c:	2001201c 	.word	0x2001201c
 8009090:	20012010 	.word	0x20012010
 8009094:	20012508 	.word	0x20012508
 8009098:	200124c4 	.word	0x200124c4

0800909c <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800909c:	4b03      	ldr	r3, [pc, #12]	; (80090ac <vTaskInternalSetTimeOutState+0x10>)
 800909e:	681b      	ldr	r3, [r3, #0]
 80090a0:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80090a2:	4b03      	ldr	r3, [pc, #12]	; (80090b0 <vTaskInternalSetTimeOutState+0x14>)
 80090a4:	681b      	ldr	r3, [r3, #0]
 80090a6:	6043      	str	r3, [r0, #4]
}
 80090a8:	4770      	bx	lr
 80090aa:	bf00      	nop
 80090ac:	200124bc 	.word	0x200124bc
 80090b0:	20012504 	.word	0x20012504

080090b4 <xTaskCheckForTimeOut>:
{
 80090b4:	b570      	push	{r4, r5, r6, lr}
 80090b6:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 80090b8:	4605      	mov	r5, r0
 80090ba:	b940      	cbnz	r0, 80090ce <xTaskCheckForTimeOut+0x1a>
 80090bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090c0:	f383 8811 	msr	BASEPRI, r3
 80090c4:	f3bf 8f6f 	isb	sy
 80090c8:	f3bf 8f4f 	dsb	sy
 80090cc:	e7fe      	b.n	80090cc <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 80090ce:	b941      	cbnz	r1, 80090e2 <xTaskCheckForTimeOut+0x2e>
 80090d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090d4:	f383 8811 	msr	BASEPRI, r3
 80090d8:	f3bf 8f6f 	isb	sy
 80090dc:	f3bf 8f4f 	dsb	sy
 80090e0:	e7fe      	b.n	80090e0 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 80090e2:	f7fe fd77 	bl	8007bd4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 80090e6:	4b0f      	ldr	r3, [pc, #60]	; (8009124 <xTaskCheckForTimeOut+0x70>)
 80090e8:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 80090ea:	6823      	ldr	r3, [r4, #0]
 80090ec:	1c5a      	adds	r2, r3, #1
 80090ee:	d010      	beq.n	8009112 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80090f0:	480d      	ldr	r0, [pc, #52]	; (8009128 <xTaskCheckForTimeOut+0x74>)
 80090f2:	682e      	ldr	r6, [r5, #0]
 80090f4:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80090f6:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80090f8:	4286      	cmp	r6, r0
 80090fa:	d001      	beq.n	8009100 <xTaskCheckForTimeOut+0x4c>
 80090fc:	428a      	cmp	r2, r1
 80090fe:	d90f      	bls.n	8009120 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009100:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8009102:	4283      	cmp	r3, r0
 8009104:	d90a      	bls.n	800911c <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8009106:	1a5b      	subs	r3, r3, r1
 8009108:	4413      	add	r3, r2
 800910a:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800910c:	4628      	mov	r0, r5
 800910e:	f7ff ffc5 	bl	800909c <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8009112:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009114:	f7fe fd7e 	bl	8007c14 <vPortExitCritical>
}
 8009118:	4620      	mov	r0, r4
 800911a:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800911c:	2300      	movs	r3, #0
 800911e:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8009120:	2401      	movs	r4, #1
 8009122:	e7f7      	b.n	8009114 <xTaskCheckForTimeOut+0x60>
 8009124:	20012504 	.word	0x20012504
 8009128:	200124bc 	.word	0x200124bc

0800912c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800912c:	4b01      	ldr	r3, [pc, #4]	; (8009134 <vTaskMissedYield+0x8>)
 800912e:	2201      	movs	r2, #1
 8009130:	601a      	str	r2, [r3, #0]
}
 8009132:	4770      	bx	lr
 8009134:	20012508 	.word	0x20012508

08009138 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009138:	4b05      	ldr	r3, [pc, #20]	; (8009150 <xTaskGetSchedulerState+0x18>)
 800913a:	681b      	ldr	r3, [r3, #0]
 800913c:	b133      	cbz	r3, 800914c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800913e:	4b05      	ldr	r3, [pc, #20]	; (8009154 <xTaskGetSchedulerState+0x1c>)
 8009140:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 8009142:	2b00      	cmp	r3, #0
 8009144:	bf0c      	ite	eq
 8009146:	2002      	moveq	r0, #2
 8009148:	2000      	movne	r0, #0
 800914a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800914c:	2001      	movs	r0, #1
	}
 800914e:	4770      	bx	lr
 8009150:	200124d8 	.word	0x200124d8
 8009154:	20012484 	.word	0x20012484

08009158 <xTaskPriorityInherit>:
	{
 8009158:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800915a:	4604      	mov	r4, r0
 800915c:	b348      	cbz	r0, 80091b2 <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800915e:	4d1c      	ldr	r5, [pc, #112]	; (80091d0 <xTaskPriorityInherit+0x78>)
 8009160:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009162:	682a      	ldr	r2, [r5, #0]
 8009164:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8009166:	4293      	cmp	r3, r2
 8009168:	d229      	bcs.n	80091be <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800916a:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800916c:	4e19      	ldr	r6, [pc, #100]	; (80091d4 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800916e:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009170:	bfa1      	itttt	ge
 8009172:	682a      	ldrge	r2, [r5, #0]
 8009174:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8009176:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800917a:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800917c:	2214      	movs	r2, #20
 800917e:	fb02 6303 	mla	r3, r2, r3, r6
 8009182:	6942      	ldr	r2, [r0, #20]
 8009184:	429a      	cmp	r2, r3
 8009186:	d116      	bne.n	80091b6 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009188:	1d01      	adds	r1, r0, #4
 800918a:	4608      	mov	r0, r1
 800918c:	9101      	str	r1, [sp, #4]
 800918e:	f7fe fca8 	bl	8007ae2 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009192:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009194:	4a10      	ldr	r2, [pc, #64]	; (80091d8 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009196:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009198:	6810      	ldr	r0, [r2, #0]
 800919a:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800919c:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800919e:	4283      	cmp	r3, r0
 80091a0:	f04f 0014 	mov.w	r0, #20
 80091a4:	fb00 6003 	mla	r0, r0, r3, r6
 80091a8:	bf88      	it	hi
 80091aa:	6013      	strhi	r3, [r2, #0]
 80091ac:	f7fe fc76 	bl	8007a9c <vListInsertEnd>
				xReturn = pdTRUE;
 80091b0:	2001      	movs	r0, #1
	}
 80091b2:	b002      	add	sp, #8
 80091b4:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80091b6:	682b      	ldr	r3, [r5, #0]
 80091b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80091ba:	62c3      	str	r3, [r0, #44]	; 0x2c
 80091bc:	e7f8      	b.n	80091b0 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 80091be:	682b      	ldr	r3, [r5, #0]
 80091c0:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80091c2:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 80091c4:	42a0      	cmp	r0, r4
 80091c6:	bf2c      	ite	cs
 80091c8:	2000      	movcs	r0, #0
 80091ca:	2001      	movcc	r0, #1
 80091cc:	e7f1      	b.n	80091b2 <xTaskPriorityInherit+0x5a>
 80091ce:	bf00      	nop
 80091d0:	20012010 	.word	0x20012010
 80091d4:	2001201c 	.word	0x2001201c
 80091d8:	2001248c 	.word	0x2001248c

080091dc <xTaskPriorityDisinherit>:
	{
 80091dc:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 80091de:	b910      	cbnz	r0, 80091e6 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 80091e0:	2000      	movs	r0, #0
	}
 80091e2:	b002      	add	sp, #8
 80091e4:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 80091e6:	4b1c      	ldr	r3, [pc, #112]	; (8009258 <xTaskPriorityDisinherit+0x7c>)
 80091e8:	681c      	ldr	r4, [r3, #0]
 80091ea:	4284      	cmp	r4, r0
 80091ec:	d008      	beq.n	8009200 <xTaskPriorityDisinherit+0x24>
 80091ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091f2:	f383 8811 	msr	BASEPRI, r3
 80091f6:	f3bf 8f6f 	isb	sy
 80091fa:	f3bf 8f4f 	dsb	sy
 80091fe:	e7fe      	b.n	80091fe <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8009200:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8009202:	b943      	cbnz	r3, 8009216 <xTaskPriorityDisinherit+0x3a>
 8009204:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009208:	f383 8811 	msr	BASEPRI, r3
 800920c:	f3bf 8f6f 	isb	sy
 8009210:	f3bf 8f4f 	dsb	sy
 8009214:	e7fe      	b.n	8009214 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009216:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8009218:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800921a:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800921c:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800921e:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009220:	d0de      	beq.n	80091e0 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009222:	2b00      	cmp	r3, #0
 8009224:	d1dc      	bne.n	80091e0 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009226:	1d21      	adds	r1, r4, #4
 8009228:	4608      	mov	r0, r1
 800922a:	9101      	str	r1, [sp, #4]
 800922c:	f7fe fc59 	bl	8007ae2 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009230:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8009232:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009234:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009236:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800923a:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800923c:	4a07      	ldr	r2, [pc, #28]	; (800925c <xTaskPriorityDisinherit+0x80>)
 800923e:	6810      	ldr	r0, [r2, #0]
 8009240:	4283      	cmp	r3, r0
 8009242:	bf88      	it	hi
 8009244:	6013      	strhi	r3, [r2, #0]
 8009246:	4a06      	ldr	r2, [pc, #24]	; (8009260 <xTaskPriorityDisinherit+0x84>)
 8009248:	2014      	movs	r0, #20
 800924a:	fb00 2003 	mla	r0, r0, r3, r2
 800924e:	f7fe fc25 	bl	8007a9c <vListInsertEnd>
					xReturn = pdTRUE;
 8009252:	2001      	movs	r0, #1
		return xReturn;
 8009254:	e7c5      	b.n	80091e2 <xTaskPriorityDisinherit+0x6>
 8009256:	bf00      	nop
 8009258:	20012010 	.word	0x20012010
 800925c:	2001248c 	.word	0x2001248c
 8009260:	2001201c 	.word	0x2001201c

08009264 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009264:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8009266:	4604      	mov	r4, r0
 8009268:	2800      	cmp	r0, #0
 800926a:	d044      	beq.n	80092f6 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800926c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800926e:	b942      	cbnz	r2, 8009282 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009270:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009274:	f383 8811 	msr	BASEPRI, r3
 8009278:	f3bf 8f6f 	isb	sy
 800927c:	f3bf 8f4f 	dsb	sy
 8009280:	e7fe      	b.n	8009280 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8009282:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8009284:	4299      	cmp	r1, r3
 8009286:	bf38      	it	cc
 8009288:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800928a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800928c:	428b      	cmp	r3, r1
 800928e:	d032      	beq.n	80092f6 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009290:	2a01      	cmp	r2, #1
 8009292:	d130      	bne.n	80092f6 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8009294:	4a19      	ldr	r2, [pc, #100]	; (80092fc <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009296:	6812      	ldr	r2, [r2, #0]
 8009298:	4282      	cmp	r2, r0
 800929a:	d108      	bne.n	80092ae <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800929c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092a0:	f383 8811 	msr	BASEPRI, r3
 80092a4:	f3bf 8f6f 	isb	sy
 80092a8:	f3bf 8f4f 	dsb	sy
 80092ac:	e7fe      	b.n	80092ac <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80092ae:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80092b0:	4d13      	ldr	r5, [pc, #76]	; (8009300 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 80092b2:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80092b4:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80092b6:	f04f 0214 	mov.w	r2, #20
 80092ba:	fb02 5303 	mla	r3, r2, r3, r5
 80092be:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80092c0:	bfa4      	itt	ge
 80092c2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 80092c6:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80092c8:	429a      	cmp	r2, r3
 80092ca:	d114      	bne.n	80092f6 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80092cc:	1d01      	adds	r1, r0, #4
 80092ce:	4608      	mov	r0, r1
 80092d0:	9101      	str	r1, [sp, #4]
 80092d2:	f7fe fc06 	bl	8007ae2 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80092d6:	4a0b      	ldr	r2, [pc, #44]	; (8009304 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 80092d8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80092da:	6810      	ldr	r0, [r2, #0]
 80092dc:	9901      	ldr	r1, [sp, #4]
 80092de:	4283      	cmp	r3, r0
 80092e0:	f04f 0014 	mov.w	r0, #20
 80092e4:	fb00 5003 	mla	r0, r0, r3, r5
 80092e8:	bf88      	it	hi
 80092ea:	6013      	strhi	r3, [r2, #0]
	}
 80092ec:	b003      	add	sp, #12
 80092ee:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 80092f2:	f7fe bbd3 	b.w	8007a9c <vListInsertEnd>
	}
 80092f6:	b003      	add	sp, #12
 80092f8:	bd30      	pop	{r4, r5, pc}
 80092fa:	bf00      	nop
 80092fc:	20012010 	.word	0x20012010
 8009300:	2001201c 	.word	0x2001201c
 8009304:	2001248c 	.word	0x2001248c

08009308 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8009308:	4b04      	ldr	r3, [pc, #16]	; (800931c <pvTaskIncrementMutexHeldCount+0x14>)
 800930a:	681a      	ldr	r2, [r3, #0]
 800930c:	b11a      	cbz	r2, 8009316 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800930e:	6819      	ldr	r1, [r3, #0]
 8009310:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8009312:	3201      	adds	r2, #1
 8009314:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8009316:	6818      	ldr	r0, [r3, #0]
	}
 8009318:	4770      	bx	lr
 800931a:	bf00      	nop
 800931c:	20012010 	.word	0x20012010

08009320 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009320:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009322:	4c11      	ldr	r4, [pc, #68]	; (8009368 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009324:	f7fe fc56 	bl	8007bd4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009328:	6825      	ldr	r5, [r4, #0]
 800932a:	b9bd      	cbnz	r5, 800935c <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800932c:	4f0f      	ldr	r7, [pc, #60]	; (800936c <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800932e:	4e10      	ldr	r6, [pc, #64]	; (8009370 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009330:	4638      	mov	r0, r7
 8009332:	f7fe fba5 	bl	8007a80 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009336:	4630      	mov	r0, r6
 8009338:	f7fe fba2 	bl	8007a80 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800933c:	4b0d      	ldr	r3, [pc, #52]	; (8009374 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800933e:	4a0e      	ldr	r2, [pc, #56]	; (8009378 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8009340:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8009342:	4b0e      	ldr	r3, [pc, #56]	; (800937c <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009344:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8009346:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009348:	200a      	movs	r0, #10
 800934a:	4b0d      	ldr	r3, [pc, #52]	; (8009380 <prvCheckForValidListAndQueue+0x60>)
 800934c:	9500      	str	r5, [sp, #0]
 800934e:	f7fe fe52 	bl	8007ff6 <xQueueGenericCreateStatic>
 8009352:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009354:	b110      	cbz	r0, 800935c <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8009356:	490b      	ldr	r1, [pc, #44]	; (8009384 <prvCheckForValidListAndQueue+0x64>)
 8009358:	f7ff fa3e 	bl	80087d8 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800935c:	b003      	add	sp, #12
 800935e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009362:	f7fe bc57 	b.w	8007c14 <vPortExitCritical>
 8009366:	bf00      	nop
 8009368:	20012630 	.word	0x20012630
 800936c:	200125b4 	.word	0x200125b4
 8009370:	200125c8 	.word	0x200125c8
 8009374:	2001250c 	.word	0x2001250c
 8009378:	20012514 	.word	0x20012514
 800937c:	20012510 	.word	0x20012510
 8009380:	200125e0 	.word	0x200125e0
 8009384:	08020395 	.word	0x08020395

08009388 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8009388:	4291      	cmp	r1, r2
{
 800938a:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800938c:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800938e:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009390:	d80a      	bhi.n	80093a8 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009392:	1ad2      	subs	r2, r2, r3
 8009394:	6983      	ldr	r3, [r0, #24]
 8009396:	429a      	cmp	r2, r3
 8009398:	d20d      	bcs.n	80093b6 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800939a:	4b08      	ldr	r3, [pc, #32]	; (80093bc <prvInsertTimerInActiveList+0x34>)
 800939c:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800939e:	6818      	ldr	r0, [r3, #0]
 80093a0:	f7fe fb88 	bl	8007ab4 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 80093a4:	2000      	movs	r0, #0
}
 80093a6:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80093a8:	429a      	cmp	r2, r3
 80093aa:	d201      	bcs.n	80093b0 <prvInsertTimerInActiveList+0x28>
 80093ac:	4299      	cmp	r1, r3
 80093ae:	d202      	bcs.n	80093b6 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80093b0:	4b03      	ldr	r3, [pc, #12]	; (80093c0 <prvInsertTimerInActiveList+0x38>)
 80093b2:	1d01      	adds	r1, r0, #4
 80093b4:	e7f3      	b.n	800939e <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 80093b6:	2001      	movs	r0, #1
	return xProcessTimerNow;
 80093b8:	e7f5      	b.n	80093a6 <prvInsertTimerInActiveList+0x1e>
 80093ba:	bf00      	nop
 80093bc:	20012510 	.word	0x20012510
 80093c0:	2001250c 	.word	0x2001250c

080093c4 <xTimerCreateTimerTask>:
{
 80093c4:	b510      	push	{r4, lr}
 80093c6:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 80093c8:	f7ff ffaa 	bl	8009320 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 80093cc:	4b12      	ldr	r3, [pc, #72]	; (8009418 <xTimerCreateTimerTask+0x54>)
 80093ce:	681b      	ldr	r3, [r3, #0]
 80093d0:	b1b3      	cbz	r3, 8009400 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80093d2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80093d4:	aa07      	add	r2, sp, #28
 80093d6:	a906      	add	r1, sp, #24
 80093d8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80093da:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80093de:	f7fe fa49 	bl	8007874 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80093e2:	9b05      	ldr	r3, [sp, #20]
 80093e4:	9302      	str	r3, [sp, #8]
 80093e6:	9b06      	ldr	r3, [sp, #24]
 80093e8:	9301      	str	r3, [sp, #4]
 80093ea:	2302      	movs	r3, #2
 80093ec:	9300      	str	r3, [sp, #0]
 80093ee:	9a07      	ldr	r2, [sp, #28]
 80093f0:	490a      	ldr	r1, [pc, #40]	; (800941c <xTimerCreateTimerTask+0x58>)
 80093f2:	480b      	ldr	r0, [pc, #44]	; (8009420 <xTimerCreateTimerTask+0x5c>)
 80093f4:	4623      	mov	r3, r4
 80093f6:	f7ff fbb4 	bl	8008b62 <xTaskCreateStatic>
 80093fa:	4b0a      	ldr	r3, [pc, #40]	; (8009424 <xTimerCreateTimerTask+0x60>)
 80093fc:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80093fe:	b940      	cbnz	r0, 8009412 <xTimerCreateTimerTask+0x4e>
 8009400:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009404:	f383 8811 	msr	BASEPRI, r3
 8009408:	f3bf 8f6f 	isb	sy
 800940c:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009410:	e7fe      	b.n	8009410 <xTimerCreateTimerTask+0x4c>
}
 8009412:	2001      	movs	r0, #1
 8009414:	b008      	add	sp, #32
 8009416:	bd10      	pop	{r4, pc}
 8009418:	20012630 	.word	0x20012630
 800941c:	0802039a 	.word	0x0802039a
 8009420:	0800952d 	.word	0x0800952d
 8009424:	20012634 	.word	0x20012634

08009428 <xTimerGenericCommand>:
{
 8009428:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800942a:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800942c:	4604      	mov	r4, r0
{
 800942e:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009430:	b940      	cbnz	r0, 8009444 <xTimerGenericCommand+0x1c>
 8009432:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009436:	f383 8811 	msr	BASEPRI, r3
 800943a:	f3bf 8f6f 	isb	sy
 800943e:	f3bf 8f4f 	dsb	sy
 8009442:	e7fe      	b.n	8009442 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009444:	4d0d      	ldr	r5, [pc, #52]	; (800947c <xTimerGenericCommand+0x54>)
 8009446:	6828      	ldr	r0, [r5, #0]
 8009448:	b180      	cbz	r0, 800946c <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800944a:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800944c:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009450:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009452:	dc0d      	bgt.n	8009470 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009454:	f7ff fe70 	bl	8009138 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009458:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800945a:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800945c:	bf08      	it	eq
 800945e:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009460:	6828      	ldr	r0, [r5, #0]
 8009462:	bf18      	it	ne
 8009464:	461a      	movne	r2, r3
 8009466:	4669      	mov	r1, sp
 8009468:	f7fe fe7a 	bl	8008160 <xQueueGenericSend>
}
 800946c:	b004      	add	sp, #16
 800946e:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009470:	2300      	movs	r3, #0
 8009472:	4669      	mov	r1, sp
 8009474:	f7fe ff27 	bl	80082c6 <xQueueGenericSendFromISR>
 8009478:	e7f8      	b.n	800946c <xTimerGenericCommand+0x44>
 800947a:	bf00      	nop
 800947c:	20012630 	.word	0x20012630

08009480 <prvSampleTimeNow>:
{
 8009480:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8009484:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8009528 <prvSampleTimeNow+0xa8>
{
 8009488:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800948a:	f7ff fc1d 	bl	8008cc8 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800948e:	f8d8 3000 	ldr.w	r3, [r8]
 8009492:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8009494:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8009496:	d940      	bls.n	800951a <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009498:	4f21      	ldr	r7, [pc, #132]	; (8009520 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800949a:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800949e:	683b      	ldr	r3, [r7, #0]
 80094a0:	681a      	ldr	r2, [r3, #0]
 80094a2:	b95a      	cbnz	r2, 80094bc <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 80094a4:	4a1f      	ldr	r2, [pc, #124]	; (8009524 <prvSampleTimeNow+0xa4>)
 80094a6:	6811      	ldr	r1, [r2, #0]
 80094a8:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 80094aa:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 80094ac:	2301      	movs	r3, #1
}
 80094ae:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 80094b0:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 80094b2:	f8c8 5000 	str.w	r5, [r8]
}
 80094b6:	b004      	add	sp, #16
 80094b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80094bc:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80094be:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80094c0:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80094c4:	1d21      	adds	r1, r4, #4
 80094c6:	4608      	mov	r0, r1
 80094c8:	9103      	str	r1, [sp, #12]
 80094ca:	f7fe fb0a 	bl	8007ae2 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80094ce:	6a23      	ldr	r3, [r4, #32]
 80094d0:	4620      	mov	r0, r4
 80094d2:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80094d4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80094d8:	9903      	ldr	r1, [sp, #12]
 80094da:	f013 0f04 	tst.w	r3, #4
 80094de:	d0de      	beq.n	800949e <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80094e0:	69a3      	ldr	r3, [r4, #24]
 80094e2:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 80094e4:	459a      	cmp	sl, r3
 80094e6:	d205      	bcs.n	80094f4 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80094e8:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80094ea:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80094ec:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80094ee:	f7fe fae1 	bl	8007ab4 <vListInsert>
 80094f2:	e7d4      	b.n	800949e <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80094f4:	2300      	movs	r3, #0
 80094f6:	f8cd 9000 	str.w	r9, [sp]
 80094fa:	4652      	mov	r2, sl
 80094fc:	4619      	mov	r1, r3
 80094fe:	4620      	mov	r0, r4
 8009500:	f7ff ff92 	bl	8009428 <xTimerGenericCommand>
				configASSERT( xResult );
 8009504:	2800      	cmp	r0, #0
 8009506:	d1ca      	bne.n	800949e <prvSampleTimeNow+0x1e>
 8009508:	f04f 0350 	mov.w	r3, #80	; 0x50
 800950c:	f383 8811 	msr	BASEPRI, r3
 8009510:	f3bf 8f6f 	isb	sy
 8009514:	f3bf 8f4f 	dsb	sy
 8009518:	e7fe      	b.n	8009518 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800951a:	2300      	movs	r3, #0
 800951c:	e7c7      	b.n	80094ae <prvSampleTimeNow+0x2e>
 800951e:	bf00      	nop
 8009520:	2001250c 	.word	0x2001250c
 8009524:	20012510 	.word	0x20012510
 8009528:	200125dc 	.word	0x200125dc

0800952c <prvTimerTask>:
{
 800952c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009530:	4d6e      	ldr	r5, [pc, #440]	; (80096ec <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009532:	4e6f      	ldr	r6, [pc, #444]	; (80096f0 <prvTimerTask+0x1c4>)
{
 8009534:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009536:	682b      	ldr	r3, [r5, #0]
 8009538:	f8d3 8000 	ldr.w	r8, [r3]
 800953c:	f1b8 0f00 	cmp.w	r8, #0
 8009540:	d035      	beq.n	80095ae <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009542:	68db      	ldr	r3, [r3, #12]
 8009544:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009548:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800954a:	f7ff fbb5 	bl	8008cb8 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800954e:	a804      	add	r0, sp, #16
 8009550:	f7ff ff96 	bl	8009480 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8009554:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009556:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009558:	2b00      	cmp	r3, #0
 800955a:	d169      	bne.n	8009630 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800955c:	2c00      	cmp	r4, #0
 800955e:	d14c      	bne.n	80095fa <prvTimerTask+0xce>
 8009560:	4540      	cmp	r0, r8
 8009562:	d350      	bcc.n	8009606 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8009564:	f7ff fc4c 	bl	8008e00 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009568:	682b      	ldr	r3, [r5, #0]
 800956a:	68db      	ldr	r3, [r3, #12]
 800956c:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800956e:	1d38      	adds	r0, r7, #4
 8009570:	f7fe fab7 	bl	8007ae2 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009574:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8009578:	0758      	lsls	r0, r3, #29
 800957a:	d51a      	bpl.n	80095b2 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800957c:	69b9      	ldr	r1, [r7, #24]
 800957e:	4643      	mov	r3, r8
 8009580:	464a      	mov	r2, r9
 8009582:	4441      	add	r1, r8
 8009584:	4638      	mov	r0, r7
 8009586:	f7ff feff 	bl	8009388 <prvInsertTimerInActiveList>
 800958a:	b1b0      	cbz	r0, 80095ba <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800958c:	9400      	str	r4, [sp, #0]
 800958e:	4623      	mov	r3, r4
 8009590:	4642      	mov	r2, r8
 8009592:	4621      	mov	r1, r4
 8009594:	4638      	mov	r0, r7
 8009596:	f7ff ff47 	bl	8009428 <xTimerGenericCommand>
			configASSERT( xResult );
 800959a:	b970      	cbnz	r0, 80095ba <prvTimerTask+0x8e>
 800959c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095a0:	f383 8811 	msr	BASEPRI, r3
 80095a4:	f3bf 8f6f 	isb	sy
 80095a8:	f3bf 8f4f 	dsb	sy
 80095ac:	e7fe      	b.n	80095ac <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80095ae:	2401      	movs	r4, #1
 80095b0:	e7cb      	b.n	800954a <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80095b2:	f023 0301 	bic.w	r3, r3, #1
 80095b6:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80095ba:	6a3b      	ldr	r3, [r7, #32]
 80095bc:	4638      	mov	r0, r7
 80095be:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80095c0:	6830      	ldr	r0, [r6, #0]
 80095c2:	2200      	movs	r2, #0
 80095c4:	a904      	add	r1, sp, #16
 80095c6:	f7fe ff34 	bl	8008432 <xQueueReceive>
 80095ca:	2800      	cmp	r0, #0
 80095cc:	d0b3      	beq.n	8009536 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80095ce:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80095d0:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80095d2:	2b00      	cmp	r3, #0
 80095d4:	db2f      	blt.n	8009636 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80095d6:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80095d8:	6963      	ldr	r3, [r4, #20]
 80095da:	2b00      	cmp	r3, #0
 80095dc:	d132      	bne.n	8009644 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80095de:	a803      	add	r0, sp, #12
 80095e0:	f7ff ff4e 	bl	8009480 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 80095e4:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80095e6:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 80095e8:	2b09      	cmp	r3, #9
 80095ea:	d8e9      	bhi.n	80095c0 <prvTimerTask+0x94>
 80095ec:	e8df f003 	tbb	[pc, r3]
 80095f0:	572e2e2e 	.word	0x572e2e2e
 80095f4:	2e2e765e 	.word	0x2e2e765e
 80095f8:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80095fa:	4b3e      	ldr	r3, [pc, #248]	; (80096f4 <prvTimerTask+0x1c8>)
 80095fc:	681b      	ldr	r3, [r3, #0]
 80095fe:	681c      	ldr	r4, [r3, #0]
 8009600:	fab4 f484 	clz	r4, r4
 8009604:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009606:	6830      	ldr	r0, [r6, #0]
 8009608:	4622      	mov	r2, r4
 800960a:	eba8 0109 	sub.w	r1, r8, r9
 800960e:	f7ff f920 	bl	8008852 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8009612:	f7ff fbf5 	bl	8008e00 <xTaskResumeAll>
 8009616:	2800      	cmp	r0, #0
 8009618:	d1d2      	bne.n	80095c0 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800961a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800961e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009622:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009626:	f3bf 8f4f 	dsb	sy
 800962a:	f3bf 8f6f 	isb	sy
 800962e:	e7c7      	b.n	80095c0 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8009630:	f7ff fbe6 	bl	8008e00 <xTaskResumeAll>
}
 8009634:	e7c4      	b.n	80095c0 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009636:	9b05      	ldr	r3, [sp, #20]
 8009638:	9907      	ldr	r1, [sp, #28]
 800963a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800963c:	9b04      	ldr	r3, [sp, #16]
 800963e:	2b00      	cmp	r3, #0
 8009640:	dbbe      	blt.n	80095c0 <prvTimerTask+0x94>
 8009642:	e7c8      	b.n	80095d6 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009644:	1d20      	adds	r0, r4, #4
 8009646:	f7fe fa4c 	bl	8007ae2 <uxListRemove>
 800964a:	e7c8      	b.n	80095de <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800964c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009650:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009652:	f043 0301 	orr.w	r3, r3, #1
 8009656:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800965a:	9b05      	ldr	r3, [sp, #20]
 800965c:	4620      	mov	r0, r4
 800965e:	4419      	add	r1, r3
 8009660:	f7ff fe92 	bl	8009388 <prvInsertTimerInActiveList>
 8009664:	2800      	cmp	r0, #0
 8009666:	d0ab      	beq.n	80095c0 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009668:	6a23      	ldr	r3, [r4, #32]
 800966a:	4620      	mov	r0, r4
 800966c:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800966e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009672:	0759      	lsls	r1, r3, #29
 8009674:	d5a4      	bpl.n	80095c0 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009676:	69a2      	ldr	r2, [r4, #24]
 8009678:	9905      	ldr	r1, [sp, #20]
 800967a:	2300      	movs	r3, #0
 800967c:	440a      	add	r2, r1
 800967e:	9300      	str	r3, [sp, #0]
 8009680:	4619      	mov	r1, r3
 8009682:	4620      	mov	r0, r4
 8009684:	f7ff fed0 	bl	8009428 <xTimerGenericCommand>
							configASSERT( xResult );
 8009688:	2800      	cmp	r0, #0
 800968a:	d199      	bne.n	80095c0 <prvTimerTask+0x94>
 800968c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009690:	f383 8811 	msr	BASEPRI, r3
 8009694:	f3bf 8f6f 	isb	sy
 8009698:	f3bf 8f4f 	dsb	sy
 800969c:	e7fe      	b.n	800969c <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800969e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80096a2:	f023 0301 	bic.w	r3, r3, #1
 80096a6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 80096aa:	e789      	b.n	80095c0 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80096ac:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80096b0:	f043 0301 	orr.w	r3, r3, #1
 80096b4:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80096b8:	9905      	ldr	r1, [sp, #20]
 80096ba:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80096bc:	b941      	cbnz	r1, 80096d0 <prvTimerTask+0x1a4>
 80096be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096c2:	f383 8811 	msr	BASEPRI, r3
 80096c6:	f3bf 8f6f 	isb	sy
 80096ca:	f3bf 8f4f 	dsb	sy
 80096ce:	e7fe      	b.n	80096ce <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80096d0:	4603      	mov	r3, r0
 80096d2:	4401      	add	r1, r0
 80096d4:	4620      	mov	r0, r4
 80096d6:	f7ff fe57 	bl	8009388 <prvInsertTimerInActiveList>
					break;
 80096da:	e771      	b.n	80095c0 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80096dc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80096e0:	079a      	lsls	r2, r3, #30
 80096e2:	d4de      	bmi.n	80096a2 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 80096e4:	4620      	mov	r0, r4
 80096e6:	f7fe f98d 	bl	8007a04 <vPortFree>
 80096ea:	e769      	b.n	80095c0 <prvTimerTask+0x94>
 80096ec:	2001250c 	.word	0x2001250c
 80096f0:	20012630 	.word	0x20012630
 80096f4:	20012510 	.word	0x20012510

080096f8 <TM_RNG_Init>:
 */
#include "tm_stm32f4_rng.h"

void TM_RNG_Init(void) {
	/* Enable RNG clock source */
	RCC->AHB2ENR |= RCC_AHB2ENR_RNGEN;
 80096f8:	4a05      	ldr	r2, [pc, #20]	; (8009710 <TM_RNG_Init+0x18>)
 80096fa:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80096fc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009700:	6353      	str	r3, [r2, #52]	; 0x34
	
	/* RNG Peripheral enable */
	RNG->CR |= RNG_CR_RNGEN;
 8009702:	4a04      	ldr	r2, [pc, #16]	; (8009714 <TM_RNG_Init+0x1c>)
 8009704:	6813      	ldr	r3, [r2, #0]
 8009706:	f043 0304 	orr.w	r3, r3, #4
 800970a:	6013      	str	r3, [r2, #0]
}
 800970c:	4770      	bx	lr
 800970e:	bf00      	nop
 8009710:	40023800 	.word	0x40023800
 8009714:	50060800 	.word	0x50060800

08009718 <TM_RNG_Get>:
	RCC->AHB2ENR &= ~RCC_AHB2ENR_RNGEN;
}

uint32_t TM_RNG_Get(void) {
	/* Wait until one RNG number is ready */
	while (!(RNG->SR & (RNG_SR_DRDY)));
 8009718:	4b02      	ldr	r3, [pc, #8]	; (8009724 <TM_RNG_Get+0xc>)
 800971a:	685a      	ldr	r2, [r3, #4]
 800971c:	07d2      	lsls	r2, r2, #31
 800971e:	d5fc      	bpl.n	800971a <TM_RNG_Get+0x2>

	/* Get a 32-bit Random number */
	return RNG->DR;
 8009720:	6898      	ldr	r0, [r3, #8]
}
 8009722:	4770      	bx	lr
 8009724:	50060800 	.word	0x50060800

08009728 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009728:	8880      	ldrh	r0, [r0, #4]
 800972a:	4770      	bx	lr

0800972c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800972c:	b570      	push	{r4, r5, r6, lr}
 800972e:	6803      	ldr	r3, [r0, #0]
 8009730:	4605      	mov	r5, r0
 8009732:	460c      	mov	r4, r1
 8009734:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009736:	2100      	movs	r1, #0
 8009738:	4798      	blx	r3
 800973a:	682b      	ldr	r3, [r5, #0]
 800973c:	4606      	mov	r6, r0
 800973e:	6a1b      	ldr	r3, [r3, #32]
 8009740:	4628      	mov	r0, r5
 8009742:	4798      	blx	r3
 8009744:	1ba4      	subs	r4, r4, r6
 8009746:	b2a4      	uxth	r4, r4
 8009748:	fbb4 f0f0 	udiv	r0, r4, r0
 800974c:	bd70      	pop	{r4, r5, r6, pc}

0800974e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800974e:	2300      	movs	r3, #0
 8009750:	8083      	strh	r3, [r0, #4]
 8009752:	4770      	bx	lr

08009754 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009754:	b510      	push	{r4, lr}
 8009756:	6803      	ldr	r3, [r0, #0]
 8009758:	8881      	ldrh	r1, [r0, #4]
 800975a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800975c:	4604      	mov	r4, r0
 800975e:	4798      	blx	r3
 8009760:	88a3      	ldrh	r3, [r4, #4]
 8009762:	3301      	adds	r3, #1
 8009764:	80a3      	strh	r3, [r4, #4]
 8009766:	bd10      	pop	{r4, pc}

08009768 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8009768:	6803      	ldr	r3, [r0, #0]
 800976a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800976c:	4718      	bx	r3

0800976e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800976e:	4770      	bx	lr

08009770 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009770:	4a02      	ldr	r2, [pc, #8]	; (800977c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009772:	6002      	str	r2, [r0, #0]
 8009774:	2200      	movs	r2, #0
 8009776:	8082      	strh	r2, [r0, #4]
 8009778:	4770      	bx	lr
 800977a:	bf00      	nop
 800977c:	080203ac 	.word	0x080203ac

08009780 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009780:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009782:	2000      	movs	r0, #0
 8009784:	b12b      	cbz	r3, 8009792 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009786:	b920      	cbnz	r0, 8009792 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009788:	1a5a      	subs	r2, r3, r1
 800978a:	4250      	negs	r0, r2
 800978c:	4150      	adcs	r0, r2
 800978e:	699b      	ldr	r3, [r3, #24]
 8009790:	e7f8      	b.n	8009784 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8009792:	4770      	bx	lr

08009794 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009794:	2300      	movs	r3, #0
 8009796:	6148      	str	r0, [r1, #20]
 8009798:	618b      	str	r3, [r1, #24]
 800979a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800979c:	b913      	cbnz	r3, 80097a4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800979e:	6281      	str	r1, [r0, #40]	; 0x28
 80097a0:	4770      	bx	lr
 80097a2:	4613      	mov	r3, r2
 80097a4:	699a      	ldr	r2, [r3, #24]
 80097a6:	2a00      	cmp	r2, #0
 80097a8:	d1fb      	bne.n	80097a2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80097aa:	6199      	str	r1, [r3, #24]
 80097ac:	4770      	bx	lr

080097ae <_ZN8touchgfx9Container9removeAllEv>:
 80097ae:	2200      	movs	r2, #0
 80097b0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80097b2:	b123      	cbz	r3, 80097be <_ZN8touchgfx9Container9removeAllEv+0x10>
 80097b4:	6999      	ldr	r1, [r3, #24]
 80097b6:	6281      	str	r1, [r0, #40]	; 0x28
 80097b8:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80097bc:	e7f8      	b.n	80097b0 <_ZN8touchgfx9Container9removeAllEv+0x2>
 80097be:	4770      	bx	lr

080097c0 <_ZN8touchgfx9Container6unlinkEv>:
 80097c0:	2300      	movs	r3, #0
 80097c2:	6283      	str	r3, [r0, #40]	; 0x28
 80097c4:	4770      	bx	lr

080097c6 <_ZNK8touchgfx9Container12getSolidRectEv>:
 80097c6:	2200      	movs	r2, #0
 80097c8:	8002      	strh	r2, [r0, #0]
 80097ca:	8042      	strh	r2, [r0, #2]
 80097cc:	8082      	strh	r2, [r0, #4]
 80097ce:	80c2      	strh	r2, [r0, #6]
 80097d0:	4770      	bx	lr

080097d2 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80097d2:	b570      	push	{r4, r5, r6, lr}
 80097d4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80097d6:	460d      	mov	r5, r1
 80097d8:	4616      	mov	r6, r2
 80097da:	b13c      	cbz	r4, 80097ec <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80097dc:	6823      	ldr	r3, [r4, #0]
 80097de:	4620      	mov	r0, r4
 80097e0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80097e2:	4632      	mov	r2, r6
 80097e4:	4629      	mov	r1, r5
 80097e6:	4798      	blx	r3
 80097e8:	69a4      	ldr	r4, [r4, #24]
 80097ea:	e7f6      	b.n	80097da <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80097ec:	bd70      	pop	{r4, r5, r6, pc}

080097ee <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80097ee:	b538      	push	{r3, r4, r5, lr}
 80097f0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80097f2:	460d      	mov	r5, r1
 80097f4:	b134      	cbz	r4, 8009804 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80097f6:	682b      	ldr	r3, [r5, #0]
 80097f8:	4621      	mov	r1, r4
 80097fa:	689b      	ldr	r3, [r3, #8]
 80097fc:	4628      	mov	r0, r5
 80097fe:	4798      	blx	r3
 8009800:	69a4      	ldr	r4, [r4, #24]
 8009802:	e7f7      	b.n	80097f4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8009804:	bd38      	pop	{r3, r4, r5, pc}

08009806 <_ZN8touchgfx9ContainerD1Ev>:
 8009806:	4770      	bx	lr

08009808 <_ZN8touchgfx9ContainerD0Ev>:
 8009808:	b510      	push	{r4, lr}
 800980a:	212c      	movs	r1, #44	; 0x2c
 800980c:	4604      	mov	r4, r0
 800980e:	f014 f814 	bl	801d83a <_ZdlPvj>
 8009812:	4620      	mov	r0, r4
 8009814:	bd10      	pop	{r4, pc}

08009816 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8009816:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009818:	b19b      	cbz	r3, 8009842 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800981a:	428b      	cmp	r3, r1
 800981c:	d109      	bne.n	8009832 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800981e:	699a      	ldr	r2, [r3, #24]
 8009820:	2100      	movs	r1, #0
 8009822:	6159      	str	r1, [r3, #20]
 8009824:	6282      	str	r2, [r0, #40]	; 0x28
 8009826:	b902      	cbnz	r2, 800982a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8009828:	4770      	bx	lr
 800982a:	6199      	str	r1, [r3, #24]
 800982c:	4770      	bx	lr
 800982e:	4613      	mov	r3, r2
 8009830:	b13a      	cbz	r2, 8009842 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009832:	699a      	ldr	r2, [r3, #24]
 8009834:	428a      	cmp	r2, r1
 8009836:	d1fa      	bne.n	800982e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8009838:	698a      	ldr	r2, [r1, #24]
 800983a:	619a      	str	r2, [r3, #24]
 800983c:	2300      	movs	r3, #0
 800983e:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8009842:	4770      	bx	lr

08009844 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8009844:	b410      	push	{r4}
 8009846:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009848:	4604      	mov	r4, r0
 800984a:	b92b      	cbnz	r3, 8009858 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800984c:	6803      	ldr	r3, [r0, #0]
 800984e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009852:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009854:	4611      	mov	r1, r2
 8009856:	4718      	bx	r3
 8009858:	b941      	cbnz	r1, 800986c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800985a:	6193      	str	r3, [r2, #24]
 800985c:	6282      	str	r2, [r0, #40]	; 0x28
 800985e:	6154      	str	r4, [r2, #20]
 8009860:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009864:	4770      	bx	lr
 8009866:	4603      	mov	r3, r0
 8009868:	2800      	cmp	r0, #0
 800986a:	d0f9      	beq.n	8009860 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800986c:	4299      	cmp	r1, r3
 800986e:	6998      	ldr	r0, [r3, #24]
 8009870:	d1f9      	bne.n	8009866 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009872:	6190      	str	r0, [r2, #24]
 8009874:	618a      	str	r2, [r1, #24]
 8009876:	e7f2      	b.n	800985e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08009878 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8009878:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800987c:	461f      	mov	r7, r3
 800987e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8009882:	460d      	mov	r5, r1
 8009884:	4616      	mov	r6, r2
 8009886:	b103      	cbz	r3, 800988a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8009888:	6038      	str	r0, [r7, #0]
 800988a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800988c:	b314      	cbz	r4, 80098d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800988e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009892:	b1eb      	cbz	r3, 80098d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009894:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8009898:	428d      	cmp	r5, r1
 800989a:	db19      	blt.n	80098d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800989c:	8923      	ldrh	r3, [r4, #8]
 800989e:	b289      	uxth	r1, r1
 80098a0:	440b      	add	r3, r1
 80098a2:	b21b      	sxth	r3, r3
 80098a4:	429d      	cmp	r5, r3
 80098a6:	da13      	bge.n	80098d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80098a8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80098ac:	4296      	cmp	r6, r2
 80098ae:	db0f      	blt.n	80098d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80098b0:	8963      	ldrh	r3, [r4, #10]
 80098b2:	b292      	uxth	r2, r2
 80098b4:	4413      	add	r3, r2
 80098b6:	b21b      	sxth	r3, r3
 80098b8:	429e      	cmp	r6, r3
 80098ba:	da09      	bge.n	80098d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80098bc:	6823      	ldr	r3, [r4, #0]
 80098be:	1ab2      	subs	r2, r6, r2
 80098c0:	1a69      	subs	r1, r5, r1
 80098c2:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 80098c6:	b212      	sxth	r2, r2
 80098c8:	463b      	mov	r3, r7
 80098ca:	b209      	sxth	r1, r1
 80098cc:	4620      	mov	r0, r4
 80098ce:	47c0      	blx	r8
 80098d0:	69a4      	ldr	r4, [r4, #24]
 80098d2:	e7db      	b.n	800988c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80098d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080098d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80098d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80098dc:	4c6e      	ldr	r4, [pc, #440]	; (8009a98 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80098de:	b0a1      	sub	sp, #132	; 0x84
 80098e0:	6824      	ldr	r4, [r4, #0]
 80098e2:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80098e4:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80098e8:	9303      	str	r3, [sp, #12]
 80098ea:	2400      	movs	r4, #0
 80098ec:	802c      	strh	r4, [r5, #0]
 80098ee:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 80098f0:	802c      	strh	r4, [r5, #0]
 80098f2:	601c      	str	r4, [r3, #0]
 80098f4:	4606      	mov	r6, r0
 80098f6:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80098fa:	f7ff ffbd 	bl	8009878 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80098fe:	f1b9 0f03 	cmp.w	r9, #3
 8009902:	f340 80c2 	ble.w	8009a8a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8009906:	4631      	mov	r1, r6
 8009908:	a80c      	add	r0, sp, #48	; 0x30
 800990a:	f004 fbf9 	bl	800e100 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800990e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8009912:	9306      	str	r3, [sp, #24]
 8009914:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8009918:	9307      	str	r3, [sp, #28]
 800991a:	9b03      	ldr	r3, [sp, #12]
 800991c:	f8d3 a000 	ldr.w	sl, [r3]
 8009920:	f1ba 0f00 	cmp.w	sl, #0
 8009924:	f000 80b4 	beq.w	8009a90 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8009928:	4651      	mov	r1, sl
 800992a:	a810      	add	r0, sp, #64	; 0x40
 800992c:	f004 fbe8 	bl	800e100 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009930:	9b01      	ldr	r3, [sp, #4]
 8009932:	9a06      	ldr	r2, [sp, #24]
 8009934:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8009938:	189d      	adds	r5, r3, r2
 800993a:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800993e:	9a07      	ldr	r2, [sp, #28]
 8009940:	2002      	movs	r0, #2
 8009942:	fb91 f1f0 	sdiv	r1, r1, r0
 8009946:	4419      	add	r1, r3
 8009948:	1a6d      	subs	r5, r5, r1
 800994a:	9b02      	ldr	r3, [sp, #8]
 800994c:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8009950:	4413      	add	r3, r2
 8009952:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8009956:	fb92 f2f0 	sdiv	r2, r2, r0
 800995a:	440a      	add	r2, r1
 800995c:	1a9b      	subs	r3, r3, r2
 800995e:	435b      	muls	r3, r3
 8009960:	fb05 3505 	mla	r5, r5, r5, r3
 8009964:	4f4d      	ldr	r7, [pc, #308]	; (8009a9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8009966:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009968:	ac10      	add	r4, sp, #64	; 0x40
 800996a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800996c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800996e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009970:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009972:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009974:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8009978:	f1b9 0f0c 	cmp.w	r9, #12
 800997c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009980:	f04f 0303 	mov.w	r3, #3
 8009984:	bfc8      	it	gt
 8009986:	4698      	movgt	r8, r3
 8009988:	f8cd 9000 	str.w	r9, [sp]
 800998c:	f04f 0400 	mov.w	r4, #0
 8009990:	bfdc      	itt	le
 8009992:	f109 32ff 	addle.w	r2, r9, #4294967295
 8009996:	fb92 f8f3 	sdivle	r8, r2, r3
 800999a:	1c63      	adds	r3, r4, #1
 800999c:	aa10      	add	r2, sp, #64	; 0x40
 800999e:	f004 0401 	and.w	r4, r4, #1
 80099a2:	9308      	str	r3, [sp, #32]
 80099a4:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80099a8:	9b00      	ldr	r3, [sp, #0]
 80099aa:	fb93 f3f8 	sdiv	r3, r3, r8
 80099ae:	b29b      	uxth	r3, r3
 80099b0:	3404      	adds	r4, #4
 80099b2:	f04f 0b00 	mov.w	fp, #0
 80099b6:	9304      	str	r3, [sp, #16]
 80099b8:	9a04      	ldr	r2, [sp, #16]
 80099ba:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80099be:	fb13 f302 	smulbb	r3, r3, r2
 80099c2:	9a01      	ldr	r2, [sp, #4]
 80099c4:	b29b      	uxth	r3, r3
 80099c6:	1899      	adds	r1, r3, r2
 80099c8:	9305      	str	r3, [sp, #20]
 80099ca:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80099ce:	b209      	sxth	r1, r1
 80099d0:	4299      	cmp	r1, r3
 80099d2:	db4d      	blt.n	8009a70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80099d4:	8932      	ldrh	r2, [r6, #8]
 80099d6:	4413      	add	r3, r2
 80099d8:	b21b      	sxth	r3, r3
 80099da:	4299      	cmp	r1, r3
 80099dc:	da48      	bge.n	8009a70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80099de:	9b04      	ldr	r3, [sp, #16]
 80099e0:	6827      	ldr	r7, [r4, #0]
 80099e2:	fb17 f703 	smulbb	r7, r7, r3
 80099e6:	9b02      	ldr	r3, [sp, #8]
 80099e8:	b2bf      	uxth	r7, r7
 80099ea:	18fa      	adds	r2, r7, r3
 80099ec:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80099f0:	b212      	sxth	r2, r2
 80099f2:	429a      	cmp	r2, r3
 80099f4:	db3c      	blt.n	8009a70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80099f6:	8970      	ldrh	r0, [r6, #10]
 80099f8:	4403      	add	r3, r0
 80099fa:	b21b      	sxth	r3, r3
 80099fc:	429a      	cmp	r2, r3
 80099fe:	da37      	bge.n	8009a70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009a00:	2300      	movs	r3, #0
 8009a02:	930b      	str	r3, [sp, #44]	; 0x2c
 8009a04:	4630      	mov	r0, r6
 8009a06:	ab0b      	add	r3, sp, #44	; 0x2c
 8009a08:	f7ff ff36 	bl	8009878 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009a0c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8009a0e:	b37a      	cbz	r2, 8009a70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009a10:	4552      	cmp	r2, sl
 8009a12:	d02d      	beq.n	8009a70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009a14:	4611      	mov	r1, r2
 8009a16:	a80e      	add	r0, sp, #56	; 0x38
 8009a18:	9209      	str	r2, [sp, #36]	; 0x24
 8009a1a:	f004 fb71 	bl	800e100 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009a1e:	9a06      	ldr	r2, [sp, #24]
 8009a20:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8009a24:	9b01      	ldr	r3, [sp, #4]
 8009a26:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8009a2a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8009a2e:	4413      	add	r3, r2
 8009a30:	f04f 0e02 	mov.w	lr, #2
 8009a34:	fb91 f1fe 	sdiv	r1, r1, lr
 8009a38:	4401      	add	r1, r0
 8009a3a:	1a58      	subs	r0, r3, r1
 8009a3c:	9a07      	ldr	r2, [sp, #28]
 8009a3e:	9b02      	ldr	r3, [sp, #8]
 8009a40:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8009a44:	fb9c fcfe 	sdiv	ip, ip, lr
 8009a48:	4413      	add	r3, r2
 8009a4a:	448c      	add	ip, r1
 8009a4c:	eba3 030c 	sub.w	r3, r3, ip
 8009a50:	435b      	muls	r3, r3
 8009a52:	fb00 3300 	mla	r3, r0, r0, r3
 8009a56:	42ab      	cmp	r3, r5
 8009a58:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8009a5a:	d208      	bcs.n	8009a6e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8009a5c:	9803      	ldr	r0, [sp, #12]
 8009a5e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8009a60:	6001      	str	r1, [r0, #0]
 8009a62:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8009a64:	9805      	ldr	r0, [sp, #20]
 8009a66:	8008      	strh	r0, [r1, #0]
 8009a68:	992b      	ldr	r1, [sp, #172]	; 0xac
 8009a6a:	461d      	mov	r5, r3
 8009a6c:	800f      	strh	r7, [r1, #0]
 8009a6e:	4692      	mov	sl, r2
 8009a70:	f10b 0b01 	add.w	fp, fp, #1
 8009a74:	f1bb 0f04 	cmp.w	fp, #4
 8009a78:	f104 0408 	add.w	r4, r4, #8
 8009a7c:	d19c      	bne.n	80099b8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8009a7e:	9b00      	ldr	r3, [sp, #0]
 8009a80:	9c08      	ldr	r4, [sp, #32]
 8009a82:	444b      	add	r3, r9
 8009a84:	4544      	cmp	r4, r8
 8009a86:	9300      	str	r3, [sp, #0]
 8009a88:	d187      	bne.n	800999a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8009a8a:	b021      	add	sp, #132	; 0x84
 8009a8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009a90:	f04f 35ff 	mov.w	r5, #4294967295
 8009a94:	e766      	b.n	8009964 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8009a96:	bf00      	nop
 8009a98:	20012644 	.word	0x20012644
 8009a9c:	0801ea10 	.word	0x0801ea10

08009aa0 <_ZN8touchgfx4RectaNERKS0_>:
 8009aa0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009aa4:	f9b1 7000 	ldrsh.w	r7, [r1]
 8009aa8:	888c      	ldrh	r4, [r1, #4]
 8009aaa:	f9b0 9000 	ldrsh.w	r9, [r0]
 8009aae:	443c      	add	r4, r7
 8009ab0:	b2a4      	uxth	r4, r4
 8009ab2:	fa0f f884 	sxth.w	r8, r4
 8009ab6:	45c1      	cmp	r9, r8
 8009ab8:	da2f      	bge.n	8009b1a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009aba:	8882      	ldrh	r2, [r0, #4]
 8009abc:	444a      	add	r2, r9
 8009abe:	b292      	uxth	r2, r2
 8009ac0:	fa0f fe82 	sxth.w	lr, r2
 8009ac4:	4577      	cmp	r7, lr
 8009ac6:	da28      	bge.n	8009b1a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009ac8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009acc:	88cb      	ldrh	r3, [r1, #6]
 8009ace:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8009ad2:	442b      	add	r3, r5
 8009ad4:	b21b      	sxth	r3, r3
 8009ad6:	429e      	cmp	r6, r3
 8009ad8:	da1f      	bge.n	8009b1a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009ada:	88c3      	ldrh	r3, [r0, #6]
 8009adc:	4433      	add	r3, r6
 8009ade:	b29b      	uxth	r3, r3
 8009ae0:	fa0f fc83 	sxth.w	ip, r3
 8009ae4:	4565      	cmp	r5, ip
 8009ae6:	da18      	bge.n	8009b1a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009ae8:	454f      	cmp	r7, r9
 8009aea:	bfb8      	it	lt
 8009aec:	464f      	movlt	r7, r9
 8009aee:	42b5      	cmp	r5, r6
 8009af0:	bfb8      	it	lt
 8009af2:	4635      	movlt	r5, r6
 8009af4:	45f0      	cmp	r8, lr
 8009af6:	bfd8      	it	le
 8009af8:	4622      	movle	r2, r4
 8009afa:	1bd2      	subs	r2, r2, r7
 8009afc:	8082      	strh	r2, [r0, #4]
 8009afe:	884a      	ldrh	r2, [r1, #2]
 8009b00:	88c9      	ldrh	r1, [r1, #6]
 8009b02:	8007      	strh	r7, [r0, #0]
 8009b04:	440a      	add	r2, r1
 8009b06:	b292      	uxth	r2, r2
 8009b08:	b211      	sxth	r1, r2
 8009b0a:	458c      	cmp	ip, r1
 8009b0c:	bfa8      	it	ge
 8009b0e:	4613      	movge	r3, r2
 8009b10:	1b5b      	subs	r3, r3, r5
 8009b12:	80c3      	strh	r3, [r0, #6]
 8009b14:	8045      	strh	r5, [r0, #2]
 8009b16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009b1a:	2300      	movs	r3, #0
 8009b1c:	8003      	strh	r3, [r0, #0]
 8009b1e:	8043      	strh	r3, [r0, #2]
 8009b20:	8083      	strh	r3, [r0, #4]
 8009b22:	80c3      	strh	r3, [r0, #6]
 8009b24:	e7f7      	b.n	8009b16 <_ZN8touchgfx4RectaNERKS0_+0x76>

08009b26 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8009b26:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8009b2a:	2b00      	cmp	r3, #0
 8009b2c:	dd06      	ble.n	8009b3c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8009b2e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8009b32:	2800      	cmp	r0, #0
 8009b34:	bfcc      	ite	gt
 8009b36:	2000      	movgt	r0, #0
 8009b38:	2001      	movle	r0, #1
 8009b3a:	4770      	bx	lr
 8009b3c:	2001      	movs	r0, #1
 8009b3e:	4770      	bx	lr

08009b40 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009b40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009b44:	2300      	movs	r3, #0
 8009b46:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8009b48:	8003      	strh	r3, [r0, #0]
 8009b4a:	4604      	mov	r4, r0
 8009b4c:	8043      	strh	r3, [r0, #2]
 8009b4e:	8083      	strh	r3, [r0, #4]
 8009b50:	80c3      	strh	r3, [r0, #6]
 8009b52:	2d00      	cmp	r5, #0
 8009b54:	d040      	beq.n	8009bd8 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8009b56:	1d28      	adds	r0, r5, #4
 8009b58:	f7ff ffe5 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009b5c:	b988      	cbnz	r0, 8009b82 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009b5e:	4620      	mov	r0, r4
 8009b60:	f7ff ffe1 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009b64:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009b68:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8009b6c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8009b70:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8009b74:	b138      	cbz	r0, 8009b86 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8009b76:	8022      	strh	r2, [r4, #0]
 8009b78:	8063      	strh	r3, [r4, #2]
 8009b7a:	f8a4 e004 	strh.w	lr, [r4, #4]
 8009b7e:	f8a4 c006 	strh.w	ip, [r4, #6]
 8009b82:	69ad      	ldr	r5, [r5, #24]
 8009b84:	e7e5      	b.n	8009b52 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8009b86:	f9b4 0000 	ldrsh.w	r0, [r4]
 8009b8a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8009b8e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8009b92:	4290      	cmp	r0, r2
 8009b94:	4607      	mov	r7, r0
 8009b96:	bfa8      	it	ge
 8009b98:	4617      	movge	r7, r2
 8009b9a:	4472      	add	r2, lr
 8009b9c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8009ba0:	8027      	strh	r7, [r4, #0]
 8009ba2:	4299      	cmp	r1, r3
 8009ba4:	460e      	mov	r6, r1
 8009ba6:	4440      	add	r0, r8
 8009ba8:	bfa8      	it	ge
 8009baa:	461e      	movge	r6, r3
 8009bac:	4471      	add	r1, lr
 8009bae:	4463      	add	r3, ip
 8009bb0:	b200      	sxth	r0, r0
 8009bb2:	b212      	sxth	r2, r2
 8009bb4:	b209      	sxth	r1, r1
 8009bb6:	b21b      	sxth	r3, r3
 8009bb8:	4290      	cmp	r0, r2
 8009bba:	bfac      	ite	ge
 8009bbc:	ebc7 0200 	rsbge	r2, r7, r0
 8009bc0:	ebc7 0202 	rsblt	r2, r7, r2
 8009bc4:	4299      	cmp	r1, r3
 8009bc6:	bfac      	ite	ge
 8009bc8:	ebc6 0301 	rsbge	r3, r6, r1
 8009bcc:	ebc6 0303 	rsblt	r3, r6, r3
 8009bd0:	8066      	strh	r6, [r4, #2]
 8009bd2:	80a2      	strh	r2, [r4, #4]
 8009bd4:	80e3      	strh	r3, [r4, #6]
 8009bd6:	e7d4      	b.n	8009b82 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009bd8:	4620      	mov	r0, r4
 8009bda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009bde <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8009bde:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009be2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009be6:	b383      	cbz	r3, 8009c4a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009be8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009bea:	b374      	cbz	r4, 8009c4a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009bec:	f9b1 5000 	ldrsh.w	r5, [r1]
 8009bf0:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8009bf4:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8009bf8:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8009bfc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009c00:	b303      	cbz	r3, 8009c44 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009c02:	4668      	mov	r0, sp
 8009c04:	1d21      	adds	r1, r4, #4
 8009c06:	f8ad 5000 	strh.w	r5, [sp]
 8009c0a:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009c0e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009c12:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009c16:	f7ff ff43 	bl	8009aa0 <_ZN8touchgfx4RectaNERKS0_>
 8009c1a:	4668      	mov	r0, sp
 8009c1c:	f7ff ff83 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009c20:	b980      	cbnz	r0, 8009c44 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009c22:	f8bd 3000 	ldrh.w	r3, [sp]
 8009c26:	88a2      	ldrh	r2, [r4, #4]
 8009c28:	1a9b      	subs	r3, r3, r2
 8009c2a:	f8ad 3000 	strh.w	r3, [sp]
 8009c2e:	88e2      	ldrh	r2, [r4, #6]
 8009c30:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009c34:	1a9b      	subs	r3, r3, r2
 8009c36:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009c3a:	6823      	ldr	r3, [r4, #0]
 8009c3c:	4669      	mov	r1, sp
 8009c3e:	689b      	ldr	r3, [r3, #8]
 8009c40:	4620      	mov	r0, r4
 8009c42:	4798      	blx	r3
 8009c44:	69a4      	ldr	r4, [r4, #24]
 8009c46:	2c00      	cmp	r4, #0
 8009c48:	d1d8      	bne.n	8009bfc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8009c4a:	b002      	add	sp, #8
 8009c4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009c50 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009c50:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009c52:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009c56:	460d      	mov	r5, r1
 8009c58:	4616      	mov	r6, r2
 8009c5a:	b323      	cbz	r3, 8009ca6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009c5c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009c5e:	b314      	cbz	r4, 8009ca6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009c60:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009c64:	b1eb      	cbz	r3, 8009ca2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009c66:	6828      	ldr	r0, [r5, #0]
 8009c68:	6869      	ldr	r1, [r5, #4]
 8009c6a:	466b      	mov	r3, sp
 8009c6c:	c303      	stmia	r3!, {r0, r1}
 8009c6e:	4668      	mov	r0, sp
 8009c70:	1d21      	adds	r1, r4, #4
 8009c72:	f7ff ff15 	bl	8009aa0 <_ZN8touchgfx4RectaNERKS0_>
 8009c76:	4668      	mov	r0, sp
 8009c78:	f7ff ff55 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009c7c:	b988      	cbnz	r0, 8009ca2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009c7e:	f8bd 3000 	ldrh.w	r3, [sp]
 8009c82:	88a2      	ldrh	r2, [r4, #4]
 8009c84:	1a9b      	subs	r3, r3, r2
 8009c86:	f8ad 3000 	strh.w	r3, [sp]
 8009c8a:	88e2      	ldrh	r2, [r4, #6]
 8009c8c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009c90:	1a9b      	subs	r3, r3, r2
 8009c92:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009c96:	6823      	ldr	r3, [r4, #0]
 8009c98:	4632      	mov	r2, r6
 8009c9a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009c9c:	4669      	mov	r1, sp
 8009c9e:	4620      	mov	r0, r4
 8009ca0:	4798      	blx	r3
 8009ca2:	69a4      	ldr	r4, [r4, #24]
 8009ca4:	e7db      	b.n	8009c5e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8009ca6:	b002      	add	sp, #8
 8009ca8:	bd70      	pop	{r4, r5, r6, pc}

08009caa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8009caa:	b513      	push	{r0, r1, r4, lr}
 8009cac:	6803      	ldr	r3, [r0, #0]
 8009cae:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8009cb2:	2300      	movs	r3, #0
 8009cb4:	e9cd 3300 	strd	r3, r3, [sp]
 8009cb8:	466b      	mov	r3, sp
 8009cba:	47a0      	blx	r4
 8009cbc:	b002      	add	sp, #8
 8009cbe:	bd10      	pop	{r4, pc}

08009cc0 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8009cc0:	2301      	movs	r3, #1
 8009cc2:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009cc6:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8009cca:	4770      	bx	lr

08009ccc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8009ccc:	2301      	movs	r3, #1
 8009cce:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009cd2:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8009cd6:	4770      	bx	lr

08009cd8 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8009cd8:	6843      	ldr	r3, [r0, #4]
 8009cda:	2201      	movs	r2, #1
 8009cdc:	725a      	strb	r2, [r3, #9]
 8009cde:	6840      	ldr	r0, [r0, #4]
 8009ce0:	6803      	ldr	r3, [r0, #0]
 8009ce2:	691b      	ldr	r3, [r3, #16]
 8009ce4:	4718      	bx	r3

08009ce6 <_ZN8touchgfx3HAL8flushDMAEv>:
 8009ce6:	6840      	ldr	r0, [r0, #4]
 8009ce8:	6803      	ldr	r3, [r0, #0]
 8009cea:	689b      	ldr	r3, [r3, #8]
 8009cec:	4718      	bx	r3

08009cee <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8009cee:	b530      	push	{r4, r5, lr}
 8009cf0:	b08b      	sub	sp, #44	; 0x2c
 8009cf2:	6804      	ldr	r4, [r0, #0]
 8009cf4:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8009cf8:	9509      	str	r5, [sp, #36]	; 0x24
 8009cfa:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8009cfe:	9508      	str	r5, [sp, #32]
 8009d00:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8009d04:	9507      	str	r5, [sp, #28]
 8009d06:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8009d0a:	9506      	str	r5, [sp, #24]
 8009d0c:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8009d10:	9505      	str	r5, [sp, #20]
 8009d12:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8009d16:	9504      	str	r5, [sp, #16]
 8009d18:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8009d1c:	9503      	str	r5, [sp, #12]
 8009d1e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8009d22:	9502      	str	r5, [sp, #8]
 8009d24:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8009d28:	e9cd 3500 	strd	r3, r5, [sp]
 8009d2c:	4613      	mov	r3, r2
 8009d2e:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8009d30:	2200      	movs	r2, #0
 8009d32:	47a0      	blx	r4
 8009d34:	b00b      	add	sp, #44	; 0x2c
 8009d36:	bd30      	pop	{r4, r5, pc}

08009d38 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009d38:	4b04      	ldr	r3, [pc, #16]	; (8009d4c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8009d3a:	781b      	ldrb	r3, [r3, #0]
 8009d3c:	b123      	cbz	r3, 8009d48 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8009d3e:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8009d42:	f080 0001 	eor.w	r0, r0, #1
 8009d46:	4770      	bx	lr
 8009d48:	2001      	movs	r0, #1
 8009d4a:	4770      	bx	lr
 8009d4c:	20012642 	.word	0x20012642

08009d50 <_ZN8touchgfx3HAL8endFrameEv>:
 8009d50:	b510      	push	{r4, lr}
 8009d52:	4604      	mov	r4, r0
 8009d54:	6840      	ldr	r0, [r0, #4]
 8009d56:	6803      	ldr	r3, [r0, #0]
 8009d58:	689b      	ldr	r3, [r3, #8]
 8009d5a:	4798      	blx	r3
 8009d5c:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8009d60:	b113      	cbz	r3, 8009d68 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009d62:	2301      	movs	r3, #1
 8009d64:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8009d68:	bd10      	pop	{r4, pc}

08009d6a <_ZN8touchgfx3HAL10initializeEv>:
 8009d6a:	b510      	push	{r4, lr}
 8009d6c:	4604      	mov	r4, r0
 8009d6e:	f7f6 fe73 	bl	8000a58 <_ZN8touchgfx10OSWrappers10initializeEv>
 8009d72:	f7f6 fd7b 	bl	800086c <_ZN8touchgfx4GPIO4initEv>
 8009d76:	6860      	ldr	r0, [r4, #4]
 8009d78:	6803      	ldr	r3, [r0, #0]
 8009d7a:	68db      	ldr	r3, [r3, #12]
 8009d7c:	4798      	blx	r3
 8009d7e:	68e0      	ldr	r0, [r4, #12]
 8009d80:	6803      	ldr	r3, [r0, #0]
 8009d82:	689b      	ldr	r3, [r3, #8]
 8009d84:	4798      	blx	r3
 8009d86:	6823      	ldr	r3, [r4, #0]
 8009d88:	4620      	mov	r0, r4
 8009d8a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009d8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009d90:	4718      	bx	r3
	...

08009d94 <_ZN8touchgfx3HAL4tickEv>:
 8009d94:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009d96:	6803      	ldr	r3, [r0, #0]
 8009d98:	4d5b      	ldr	r5, [pc, #364]	; (8009f08 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8009d9a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8009d9e:	4604      	mov	r4, r0
 8009da0:	4798      	blx	r3
 8009da2:	2800      	cmp	r0, #0
 8009da4:	f000 8095 	beq.w	8009ed2 <_ZN8touchgfx3HAL4tickEv+0x13e>
 8009da8:	2001      	movs	r0, #1
 8009daa:	f7f6 fcdd 	bl	8000768 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009dae:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8009db2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009db6:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8009dba:	2600      	movs	r6, #0
 8009dbc:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8009dc0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8009dc4:	b133      	cbz	r3, 8009dd4 <_ZN8touchgfx3HAL4tickEv+0x40>
 8009dc6:	6823      	ldr	r3, [r4, #0]
 8009dc8:	4620      	mov	r0, r4
 8009dca:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8009dce:	4798      	blx	r3
 8009dd0:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8009dd4:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8009dd8:	6862      	ldr	r2, [r4, #4]
 8009dda:	f083 0301 	eor.w	r3, r3, #1
 8009dde:	7253      	strb	r3, [r2, #9]
 8009de0:	2601      	movs	r6, #1
 8009de2:	702e      	strb	r6, [r5, #0]
 8009de4:	f003 f808 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
 8009de8:	6803      	ldr	r3, [r0, #0]
 8009dea:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009dec:	4798      	blx	r3
 8009dee:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8009df2:	b90b      	cbnz	r3, 8009df8 <_ZN8touchgfx3HAL4tickEv+0x64>
 8009df4:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8009df8:	f002 fffe 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
 8009dfc:	6803      	ldr	r3, [r0, #0]
 8009dfe:	695b      	ldr	r3, [r3, #20]
 8009e00:	4798      	blx	r3
 8009e02:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8009e04:	6803      	ldr	r3, [r0, #0]
 8009e06:	691b      	ldr	r3, [r3, #16]
 8009e08:	4798      	blx	r3
 8009e0a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8009e0e:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8009e12:	3b01      	subs	r3, #1
 8009e14:	b2db      	uxtb	r3, r3
 8009e16:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009e1a:	b10a      	cbz	r2, 8009e20 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8009e1c:	2b00      	cmp	r3, #0
 8009e1e:	d1eb      	bne.n	8009df8 <_ZN8touchgfx3HAL4tickEv+0x64>
 8009e20:	4a3a      	ldr	r2, [pc, #232]	; (8009f0c <_ZN8touchgfx3HAL4tickEv+0x178>)
 8009e22:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8009e26:	7813      	ldrb	r3, [r2, #0]
 8009e28:	3301      	adds	r3, #1
 8009e2a:	b25b      	sxtb	r3, r3
 8009e2c:	4299      	cmp	r1, r3
 8009e2e:	7013      	strb	r3, [r2, #0]
 8009e30:	dc10      	bgt.n	8009e54 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009e32:	68e0      	ldr	r0, [r4, #12]
 8009e34:	2300      	movs	r3, #0
 8009e36:	7013      	strb	r3, [r2, #0]
 8009e38:	6803      	ldr	r3, [r0, #0]
 8009e3a:	aa03      	add	r2, sp, #12
 8009e3c:	68db      	ldr	r3, [r3, #12]
 8009e3e:	a902      	add	r1, sp, #8
 8009e40:	4798      	blx	r3
 8009e42:	6823      	ldr	r3, [r4, #0]
 8009e44:	2800      	cmp	r0, #0
 8009e46:	d050      	beq.n	8009eea <_ZN8touchgfx3HAL4tickEv+0x156>
 8009e48:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8009e4c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8009e50:	4620      	mov	r0, r4
 8009e52:	4798      	blx	r3
 8009e54:	6960      	ldr	r0, [r4, #20]
 8009e56:	2300      	movs	r3, #0
 8009e58:	f88d 3007 	strb.w	r3, [sp, #7]
 8009e5c:	b158      	cbz	r0, 8009e76 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8009e5e:	6803      	ldr	r3, [r0, #0]
 8009e60:	f10d 0107 	add.w	r1, sp, #7
 8009e64:	68db      	ldr	r3, [r3, #12]
 8009e66:	4798      	blx	r3
 8009e68:	b128      	cbz	r0, 8009e76 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8009e6a:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8009e6c:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8009e70:	6803      	ldr	r3, [r0, #0]
 8009e72:	68db      	ldr	r3, [r3, #12]
 8009e74:	4798      	blx	r3
 8009e76:	f104 001c 	add.w	r0, r4, #28
 8009e7a:	f013 fc29 	bl	801d6d0 <_ZN8touchgfx8Gestures4tickEv>
 8009e7e:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8009e82:	b30b      	cbz	r3, 8009ec8 <_ZN8touchgfx3HAL4tickEv+0x134>
 8009e84:	6920      	ldr	r0, [r4, #16]
 8009e86:	6803      	ldr	r3, [r0, #0]
 8009e88:	691b      	ldr	r3, [r3, #16]
 8009e8a:	4798      	blx	r3
 8009e8c:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8009e8e:	4606      	mov	r6, r0
 8009e90:	b903      	cbnz	r3, 8009e94 <_ZN8touchgfx3HAL4tickEv+0x100>
 8009e92:	6760      	str	r0, [r4, #116]	; 0x74
 8009e94:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8009e96:	4a1e      	ldr	r2, [pc, #120]	; (8009f10 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009e98:	1af3      	subs	r3, r6, r3
 8009e9a:	4293      	cmp	r3, r2
 8009e9c:	d914      	bls.n	8009ec8 <_ZN8touchgfx3HAL4tickEv+0x134>
 8009e9e:	6920      	ldr	r0, [r4, #16]
 8009ea0:	6803      	ldr	r3, [r0, #0]
 8009ea2:	699b      	ldr	r3, [r3, #24]
 8009ea4:	4798      	blx	r3
 8009ea6:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8009ea8:	2264      	movs	r2, #100	; 0x64
 8009eaa:	1af3      	subs	r3, r6, r3
 8009eac:	fbb3 f3f2 	udiv	r3, r3, r2
 8009eb0:	fbb0 f0f3 	udiv	r0, r0, r3
 8009eb4:	2800      	cmp	r0, #0
 8009eb6:	dc1d      	bgt.n	8009ef4 <_ZN8touchgfx3HAL4tickEv+0x160>
 8009eb8:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8009ebc:	6920      	ldr	r0, [r4, #16]
 8009ebe:	6803      	ldr	r3, [r0, #0]
 8009ec0:	2100      	movs	r1, #0
 8009ec2:	69db      	ldr	r3, [r3, #28]
 8009ec4:	4798      	blx	r3
 8009ec6:	6766      	str	r6, [r4, #116]	; 0x74
 8009ec8:	f002 ff96 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
 8009ecc:	6803      	ldr	r3, [r0, #0]
 8009ece:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009ed0:	4798      	blx	r3
 8009ed2:	6823      	ldr	r3, [r4, #0]
 8009ed4:	4620      	mov	r0, r4
 8009ed6:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8009eda:	4798      	blx	r3
 8009edc:	2001      	movs	r0, #1
 8009ede:	f7f6 fc6d 	bl	80007bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009ee2:	2300      	movs	r3, #0
 8009ee4:	702b      	strb	r3, [r5, #0]
 8009ee6:	b004      	add	sp, #16
 8009ee8:	bd70      	pop	{r4, r5, r6, pc}
 8009eea:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8009eee:	4620      	mov	r0, r4
 8009ef0:	4798      	blx	r3
 8009ef2:	e7af      	b.n	8009e54 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009ef4:	2863      	cmp	r0, #99	; 0x63
 8009ef6:	bfcb      	itete	gt
 8009ef8:	2300      	movgt	r3, #0
 8009efa:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8009efe:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8009f02:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8009f06:	e7d9      	b.n	8009ebc <_ZN8touchgfx3HAL4tickEv+0x128>
 8009f08:	20012648 	.word	0x20012648
 8009f0c:	20012649 	.word	0x20012649
 8009f10:	05f5e100 	.word	0x05f5e100

08009f14 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009f14:	b510      	push	{r4, lr}
 8009f16:	4604      	mov	r4, r0
 8009f18:	f7f6 fdce 	bl	8000ab8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8009f1c:	6863      	ldr	r3, [r4, #4]
 8009f1e:	2200      	movs	r2, #0
 8009f20:	729a      	strb	r2, [r3, #10]
 8009f22:	bd10      	pop	{r4, pc}

08009f24 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009f24:	65c1      	str	r1, [r0, #92]	; 0x5c
 8009f26:	301c      	adds	r0, #28
 8009f28:	f013 bbd0 	b.w	801d6cc <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009f2c <_ZN8touchgfx3HAL5touchEll>:
 8009f2c:	b530      	push	{r4, r5, lr}
 8009f2e:	b087      	sub	sp, #28
 8009f30:	4604      	mov	r4, r0
 8009f32:	a804      	add	r0, sp, #16
 8009f34:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009f38:	f002 fd46 	bl	800c9c8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009f3c:	9b04      	ldr	r3, [sp, #16]
 8009f3e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009f42:	a906      	add	r1, sp, #24
 8009f44:	9b05      	ldr	r3, [sp, #20]
 8009f46:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8009f4a:	a803      	add	r0, sp, #12
 8009f4c:	f002 fd8e 	bl	800ca6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009f50:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8009f54:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009f58:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009f5c:	f104 001c 	add.w	r0, r4, #28
 8009f60:	b189      	cbz	r1, 8009f86 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009f62:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8009f66:	9300      	str	r3, [sp, #0]
 8009f68:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8009f6c:	4613      	mov	r3, r2
 8009f6e:	462a      	mov	r2, r5
 8009f70:	f013 fbbc 	bl	801d6ec <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009f74:	b128      	cbz	r0, 8009f82 <_ZN8touchgfx3HAL5touchEll+0x56>
 8009f76:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8009f7a:	6623      	str	r3, [r4, #96]	; 0x60
 8009f7c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009f80:	6663      	str	r3, [r4, #100]	; 0x64
 8009f82:	b007      	add	sp, #28
 8009f84:	bd30      	pop	{r4, r5, pc}
 8009f86:	f013 fbf1 	bl	801d76c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009f8a:	2301      	movs	r3, #1
 8009f8c:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8009f90:	e7f1      	b.n	8009f76 <_ZN8touchgfx3HAL5touchEll+0x4a>

08009f92 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8009f92:	b510      	push	{r4, lr}
 8009f94:	2b00      	cmp	r3, #0
 8009f96:	d046      	beq.n	800a026 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009f98:	ea81 0002 	eor.w	r0, r1, r2
 8009f9c:	07c4      	lsls	r4, r0, #31
 8009f9e:	d508      	bpl.n	8009fb2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009fa0:	440b      	add	r3, r1
 8009fa2:	3a01      	subs	r2, #1
 8009fa4:	428b      	cmp	r3, r1
 8009fa6:	d93e      	bls.n	800a026 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009fa8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009fac:	f801 0b01 	strb.w	r0, [r1], #1
 8009fb0:	e7f8      	b.n	8009fa4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009fb2:	07d0      	lsls	r0, r2, #31
 8009fb4:	bf42      	ittt	mi
 8009fb6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8009fba:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009fbe:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009fc2:	2b01      	cmp	r3, #1
 8009fc4:	d911      	bls.n	8009fea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009fc6:	ea81 0402 	eor.w	r4, r1, r2
 8009fca:	07a4      	lsls	r4, r4, #30
 8009fcc:	4610      	mov	r0, r2
 8009fce:	d022      	beq.n	800a016 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8009fd0:	f023 0401 	bic.w	r4, r3, #1
 8009fd4:	440c      	add	r4, r1
 8009fd6:	428c      	cmp	r4, r1
 8009fd8:	4602      	mov	r2, r0
 8009fda:	d904      	bls.n	8009fe6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8009fdc:	8812      	ldrh	r2, [r2, #0]
 8009fde:	f821 2b02 	strh.w	r2, [r1], #2
 8009fe2:	3002      	adds	r0, #2
 8009fe4:	e7f7      	b.n	8009fd6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8009fe6:	f003 0301 	and.w	r3, r3, #1
 8009fea:	f023 0003 	bic.w	r0, r3, #3
 8009fee:	4408      	add	r0, r1
 8009ff0:	4288      	cmp	r0, r1
 8009ff2:	4614      	mov	r4, r2
 8009ff4:	d904      	bls.n	800a000 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8009ff6:	6824      	ldr	r4, [r4, #0]
 8009ff8:	f841 4b04 	str.w	r4, [r1], #4
 8009ffc:	3204      	adds	r2, #4
 8009ffe:	e7f7      	b.n	8009ff0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800a000:	f003 0303 	and.w	r3, r3, #3
 800a004:	440b      	add	r3, r1
 800a006:	3a01      	subs	r2, #1
 800a008:	428b      	cmp	r3, r1
 800a00a:	d90c      	bls.n	800a026 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a00c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a010:	f801 0b01 	strb.w	r0, [r1], #1
 800a014:	e7f8      	b.n	800a008 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800a016:	0790      	lsls	r0, r2, #30
 800a018:	d0e7      	beq.n	8009fea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a01a:	f832 0b02 	ldrh.w	r0, [r2], #2
 800a01e:	f821 0b02 	strh.w	r0, [r1], #2
 800a022:	3b02      	subs	r3, #2
 800a024:	e7e1      	b.n	8009fea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a026:	2001      	movs	r0, #1
 800a028:	bd10      	pop	{r4, pc}

0800a02a <_ZN8touchgfx3HAL7noTouchEv>:
 800a02a:	b510      	push	{r4, lr}
 800a02c:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800a030:	4604      	mov	r4, r0
 800a032:	b153      	cbz	r3, 800a04a <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800a034:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800a038:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800a03c:	2101      	movs	r1, #1
 800a03e:	301c      	adds	r0, #28
 800a040:	f013 fb94 	bl	801d76c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a044:	2300      	movs	r3, #0
 800a046:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800a04a:	bd10      	pop	{r4, pc}

0800a04c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800a04c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a050:	b085      	sub	sp, #20
 800a052:	ad04      	add	r5, sp, #16
 800a054:	4604      	mov	r4, r0
 800a056:	2000      	movs	r0, #0
 800a058:	f845 0d04 	str.w	r0, [r5, #-4]!
 800a05c:	69a0      	ldr	r0, [r4, #24]
 800a05e:	6806      	ldr	r6, [r0, #0]
 800a060:	9501      	str	r5, [sp, #4]
 800a062:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800a066:	9500      	str	r5, [sp, #0]
 800a068:	6835      	ldr	r5, [r6, #0]
 800a06a:	4699      	mov	r9, r3
 800a06c:	460f      	mov	r7, r1
 800a06e:	4690      	mov	r8, r2
 800a070:	47a8      	blx	r5
 800a072:	4d10      	ldr	r5, [pc, #64]	; (800a0b4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800a074:	4606      	mov	r6, r0
 800a076:	f8a5 9000 	strh.w	r9, [r5]
 800a07a:	f7f8 fd13 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800a07e:	6803      	ldr	r3, [r0, #0]
 800a080:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a082:	4798      	blx	r3
 800a084:	b128      	cbz	r0, 800a092 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800a086:	2801      	cmp	r0, #1
 800a088:	d00b      	beq.n	800a0a2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800a08a:	4630      	mov	r0, r6
 800a08c:	b005      	add	sp, #20
 800a08e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a092:	882b      	ldrh	r3, [r5, #0]
 800a094:	fb08 7203 	mla	r2, r8, r3, r7
 800a098:	9b03      	ldr	r3, [sp, #12]
 800a09a:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800a09e:	63e3      	str	r3, [r4, #60]	; 0x3c
 800a0a0:	e7f3      	b.n	800a08a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a0a2:	882a      	ldrh	r2, [r5, #0]
 800a0a4:	9b03      	ldr	r3, [sp, #12]
 800a0a6:	fb08 7202 	mla	r2, r8, r2, r7
 800a0aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800a0ae:	1a9a      	subs	r2, r3, r2
 800a0b0:	63e2      	str	r2, [r4, #60]	; 0x3c
 800a0b2:	e7ea      	b.n	800a08a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a0b4:	2001263e 	.word	0x2001263e

0800a0b8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800a0b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a0ba:	b08b      	sub	sp, #44	; 0x2c
 800a0bc:	4617      	mov	r7, r2
 800a0be:	4604      	mov	r4, r0
 800a0c0:	460e      	mov	r6, r1
 800a0c2:	461d      	mov	r5, r3
 800a0c4:	f7f8 fcee 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800a0c8:	6803      	ldr	r3, [r0, #0]
 800a0ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a0cc:	4798      	blx	r3
 800a0ce:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800a0d2:	9007      	str	r0, [sp, #28]
 800a0d4:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a0d8:	4b0d      	ldr	r3, [pc, #52]	; (800a110 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800a0da:	6822      	ldr	r2, [r4, #0]
 800a0dc:	881b      	ldrh	r3, [r3, #0]
 800a0de:	9306      	str	r3, [sp, #24]
 800a0e0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800a0e4:	9305      	str	r3, [sp, #20]
 800a0e6:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800a0ea:	9304      	str	r3, [sp, #16]
 800a0ec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a0f0:	9303      	str	r3, [sp, #12]
 800a0f2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a0f6:	9302      	str	r3, [sp, #8]
 800a0f8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a0fc:	e9cd 5300 	strd	r5, r3, [sp]
 800a100:	4631      	mov	r1, r6
 800a102:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800a104:	463b      	mov	r3, r7
 800a106:	2200      	movs	r2, #0
 800a108:	4620      	mov	r0, r4
 800a10a:	47a8      	blx	r5
 800a10c:	b00b      	add	sp, #44	; 0x2c
 800a10e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a110:	2001263e 	.word	0x2001263e

0800a114 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800a114:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a118:	4698      	mov	r8, r3
 800a11a:	6803      	ldr	r3, [r0, #0]
 800a11c:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800a11e:	4b15      	ldr	r3, [pc, #84]	; (800a174 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800a120:	b08b      	sub	sp, #44	; 0x2c
 800a122:	4617      	mov	r7, r2
 800a124:	f8b3 9000 	ldrh.w	r9, [r3]
 800a128:	460e      	mov	r6, r1
 800a12a:	4604      	mov	r4, r0
 800a12c:	f7f8 fcba 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800a130:	6803      	ldr	r3, [r0, #0]
 800a132:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a134:	4798      	blx	r3
 800a136:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800a13a:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a13e:	2302      	movs	r3, #2
 800a140:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800a144:	2301      	movs	r3, #1
 800a146:	9305      	str	r3, [sp, #20]
 800a148:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800a14c:	9304      	str	r3, [sp, #16]
 800a14e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800a152:	9303      	str	r3, [sp, #12]
 800a154:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a158:	9302      	str	r3, [sp, #8]
 800a15a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a15e:	2200      	movs	r2, #0
 800a160:	e9cd 8300 	strd	r8, r3, [sp]
 800a164:	4631      	mov	r1, r6
 800a166:	463b      	mov	r3, r7
 800a168:	4620      	mov	r0, r4
 800a16a:	47a8      	blx	r5
 800a16c:	b00b      	add	sp, #44	; 0x2c
 800a16e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a172:	bf00      	nop
 800a174:	2001263e 	.word	0x2001263e

0800a178 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800a178:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a17c:	4698      	mov	r8, r3
 800a17e:	6803      	ldr	r3, [r0, #0]
 800a180:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800a182:	4b11      	ldr	r3, [pc, #68]	; (800a1c8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800a184:	b087      	sub	sp, #28
 800a186:	f8b3 9000 	ldrh.w	r9, [r3]
 800a18a:	460e      	mov	r6, r1
 800a18c:	4617      	mov	r7, r2
 800a18e:	4604      	mov	r4, r0
 800a190:	f7f8 fc88 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800a194:	6803      	ldr	r3, [r0, #0]
 800a196:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a198:	4798      	blx	r3
 800a19a:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800a19e:	f8cd 900c 	str.w	r9, [sp, #12]
 800a1a2:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800a1a6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800a1aa:	9302      	str	r3, [sp, #8]
 800a1ac:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800a1b0:	9301      	str	r3, [sp, #4]
 800a1b2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800a1b6:	9300      	str	r3, [sp, #0]
 800a1b8:	463a      	mov	r2, r7
 800a1ba:	4643      	mov	r3, r8
 800a1bc:	4631      	mov	r1, r6
 800a1be:	4620      	mov	r0, r4
 800a1c0:	47a8      	blx	r5
 800a1c2:	b007      	add	sp, #28
 800a1c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a1c8:	2001263e 	.word	0x2001263e

0800a1cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800a1cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1d0:	4604      	mov	r4, r0
 800a1d2:	b08f      	sub	sp, #60	; 0x3c
 800a1d4:	4610      	mov	r0, r2
 800a1d6:	460d      	mov	r5, r1
 800a1d8:	4691      	mov	r9, r2
 800a1da:	461e      	mov	r6, r3
 800a1dc:	f005 fe60 	bl	800fea0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a1e0:	2800      	cmp	r0, #0
 800a1e2:	f000 809d 	beq.w	800a320 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800a1e6:	6823      	ldr	r3, [r4, #0]
 800a1e8:	f8df b198 	ldr.w	fp, [pc, #408]	; 800a384 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800a1ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a1ee:	f8df a198 	ldr.w	sl, [pc, #408]	; 800a388 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800a1f2:	4f61      	ldr	r7, [pc, #388]	; (800a378 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a1f4:	4620      	mov	r0, r4
 800a1f6:	4798      	blx	r3
 800a1f8:	6823      	ldr	r3, [r4, #0]
 800a1fa:	4620      	mov	r0, r4
 800a1fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1fe:	4798      	blx	r3
 800a200:	f8bb 3000 	ldrh.w	r3, [fp]
 800a204:	9301      	str	r3, [sp, #4]
 800a206:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800a20a:	f8ba 3000 	ldrh.w	r3, [sl]
 800a20e:	9302      	str	r3, [sp, #8]
 800a210:	883b      	ldrh	r3, [r7, #0]
 800a212:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800a216:	9303      	str	r3, [sp, #12]
 800a218:	4b58      	ldr	r3, [pc, #352]	; (800a37c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a21a:	9305      	str	r3, [sp, #20]
 800a21c:	881a      	ldrh	r2, [r3, #0]
 800a21e:	9204      	str	r2, [sp, #16]
 800a220:	4640      	mov	r0, r8
 800a222:	f005 fed1 	bl	800ffc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a226:	8038      	strh	r0, [r7, #0]
 800a228:	4640      	mov	r0, r8
 800a22a:	f005 ff01 	bl	8010030 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a22e:	9b05      	ldr	r3, [sp, #20]
 800a230:	b280      	uxth	r0, r0
 800a232:	8018      	strh	r0, [r3, #0]
 800a234:	4b52      	ldr	r3, [pc, #328]	; (800a380 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800a236:	781b      	ldrb	r3, [r3, #0]
 800a238:	2b00      	cmp	r3, #0
 800a23a:	d174      	bne.n	800a326 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800a23c:	883b      	ldrh	r3, [r7, #0]
 800a23e:	f8ab 3000 	strh.w	r3, [fp]
 800a242:	f8aa 0000 	strh.w	r0, [sl]
 800a246:	4648      	mov	r0, r9
 800a248:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800a24c:	f005 fe28 	bl	800fea0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a250:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800a254:	2200      	movs	r2, #0
 800a256:	4611      	mov	r1, r2
 800a258:	4628      	mov	r0, r5
 800a25a:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800a25e:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800a262:	f7f8 fd70 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
 800a266:	2301      	movs	r3, #1
 800a268:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800a26c:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800a270:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a274:	2b00      	cmp	r3, #0
 800a276:	dd5c      	ble.n	800a332 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800a278:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a27c:	2b00      	cmp	r3, #0
 800a27e:	dd58      	ble.n	800a332 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800a280:	462a      	mov	r2, r5
 800a282:	ab0a      	add	r3, sp, #40	; 0x28
 800a284:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a288:	6851      	ldr	r1, [r2, #4]
 800a28a:	c303      	stmia	r3!, {r0, r1}
 800a28c:	4631      	mov	r1, r6
 800a28e:	a80a      	add	r0, sp, #40	; 0x28
 800a290:	f7ff fc06 	bl	8009aa0 <_ZN8touchgfx4RectaNERKS0_>
 800a294:	4b38      	ldr	r3, [pc, #224]	; (800a378 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a296:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a29a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800a29e:	2100      	movs	r1, #0
 800a2a0:	aa0a      	add	r2, sp, #40	; 0x28
 800a2a2:	4b36      	ldr	r3, [pc, #216]	; (800a37c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a2a4:	910c      	str	r1, [sp, #48]	; 0x30
 800a2a6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800a2aa:	f9b3 3000 	ldrsh.w	r3, [r3]
 800a2ae:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800a2b2:	ab08      	add	r3, sp, #32
 800a2b4:	e883 0003 	stmia.w	r3, {r0, r1}
 800a2b8:	4618      	mov	r0, r3
 800a2ba:	a90c      	add	r1, sp, #48	; 0x30
 800a2bc:	f7ff fbf0 	bl	8009aa0 <_ZN8touchgfx4RectaNERKS0_>
 800a2c0:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800a2c2:	2b00      	cmp	r3, #0
 800a2c4:	d13c      	bne.n	800a340 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800a2c6:	2000      	movs	r0, #0
 800a2c8:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 800a2cc:	2600      	movs	r6, #0
 800a2ce:	682a      	ldr	r2, [r5, #0]
 800a2d0:	696b      	ldr	r3, [r5, #20]
 800a2d2:	616e      	str	r6, [r5, #20]
 800a2d4:	9305      	str	r3, [sp, #20]
 800a2d6:	6892      	ldr	r2, [r2, #8]
 800a2d8:	a908      	add	r1, sp, #32
 800a2da:	4628      	mov	r0, r5
 800a2dc:	4790      	blx	r2
 800a2de:	9b05      	ldr	r3, [sp, #20]
 800a2e0:	616b      	str	r3, [r5, #20]
 800a2e2:	4652      	mov	r2, sl
 800a2e4:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 800a2e8:	4649      	mov	r1, r9
 800a2ea:	4628      	mov	r0, r5
 800a2ec:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800a2f0:	f7f8 fd29 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
 800a2f4:	4b23      	ldr	r3, [pc, #140]	; (800a384 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800a2f6:	9a01      	ldr	r2, [sp, #4]
 800a2f8:	801a      	strh	r2, [r3, #0]
 800a2fa:	4b23      	ldr	r3, [pc, #140]	; (800a388 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800a2fc:	9a02      	ldr	r2, [sp, #8]
 800a2fe:	801a      	strh	r2, [r3, #0]
 800a300:	4b1d      	ldr	r3, [pc, #116]	; (800a378 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a302:	9a03      	ldr	r2, [sp, #12]
 800a304:	801a      	strh	r2, [r3, #0]
 800a306:	4b1d      	ldr	r3, [pc, #116]	; (800a37c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a308:	9a04      	ldr	r2, [sp, #16]
 800a30a:	801a      	strh	r2, [r3, #0]
 800a30c:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800a310:	6823      	ldr	r3, [r4, #0]
 800a312:	4620      	mov	r0, r4
 800a314:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a316:	4798      	blx	r3
 800a318:	6823      	ldr	r3, [r4, #0]
 800a31a:	4620      	mov	r0, r4
 800a31c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a31e:	4798      	blx	r3
 800a320:	b00f      	add	sp, #60	; 0x3c
 800a322:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a326:	883b      	ldrh	r3, [r7, #0]
 800a328:	f8ab 0000 	strh.w	r0, [fp]
 800a32c:	f8aa 3000 	strh.w	r3, [sl]
 800a330:	e789      	b.n	800a246 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800a332:	462a      	mov	r2, r5
 800a334:	ab0a      	add	r3, sp, #40	; 0x28
 800a336:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a33a:	6851      	ldr	r1, [r2, #4]
 800a33c:	c303      	stmia	r3!, {r0, r1}
 800a33e:	e7a9      	b.n	800a294 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800a340:	a807      	add	r0, sp, #28
 800a342:	f005 ffb1 	bl	80102a8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a346:	4606      	mov	r6, r0
 800a348:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800a34a:	6803      	ldr	r3, [r0, #0]
 800a34c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a34e:	4798      	blx	r3
 800a350:	4286      	cmp	r6, r0
 800a352:	d1b8      	bne.n	800a2c6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800a354:	f7f8 fba6 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800a358:	6803      	ldr	r3, [r0, #0]
 800a35a:	4606      	mov	r6, r0
 800a35c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a35e:	9305      	str	r3, [sp, #20]
 800a360:	a807      	add	r0, sp, #28
 800a362:	f005 ffa1 	bl	80102a8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a366:	9b05      	ldr	r3, [sp, #20]
 800a368:	4601      	mov	r1, r0
 800a36a:	4630      	mov	r0, r6
 800a36c:	4798      	blx	r3
 800a36e:	f080 0001 	eor.w	r0, r0, #1
 800a372:	b2c0      	uxtb	r0, r0
 800a374:	e7a8      	b.n	800a2c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800a376:	bf00      	nop
 800a378:	20012638 	.word	0x20012638
 800a37c:	2001263a 	.word	0x2001263a
 800a380:	2001263c 	.word	0x2001263c
 800a384:	2001263e 	.word	0x2001263e
 800a388:	20012640 	.word	0x20012640

0800a38c <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800a38c:	b510      	push	{r4, lr}
 800a38e:	4b07      	ldr	r3, [pc, #28]	; (800a3ac <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800a390:	781b      	ldrb	r3, [r3, #0]
 800a392:	4604      	mov	r4, r0
 800a394:	b13b      	cbz	r3, 800a3a6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a396:	6803      	ldr	r3, [r0, #0]
 800a398:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a39a:	4798      	blx	r3
 800a39c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a39e:	4283      	cmp	r3, r0
 800a3a0:	d101      	bne.n	800a3a6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a3a2:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800a3a4:	bd10      	pop	{r4, pc}
 800a3a6:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800a3a8:	e7fc      	b.n	800a3a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800a3aa:	bf00      	nop
 800a3ac:	20012642 	.word	0x20012642

0800a3b0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800a3b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a3b4:	b08a      	sub	sp, #40	; 0x28
 800a3b6:	461d      	mov	r5, r3
 800a3b8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800a3bc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a3c0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a3c4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a3c8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a3cc:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a3d0:	2400      	movs	r4, #0
 800a3d2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a3d6:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800a3da:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a3de:	4690      	mov	r8, r2
 800a3e0:	4607      	mov	r7, r0
 800a3e2:	9404      	str	r4, [sp, #16]
 800a3e4:	f88d 4020 	strb.w	r4, [sp, #32]
 800a3e8:	f7ff ffd0 	bl	800a38c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a3ec:	fb06 8505 	mla	r5, r6, r5, r8
 800a3f0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a3f4:	6878      	ldr	r0, [r7, #4]
 800a3f6:	9505      	str	r5, [sp, #20]
 800a3f8:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a3fc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800a400:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800a404:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800a408:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800a40c:	6803      	ldr	r3, [r0, #0]
 800a40e:	a901      	add	r1, sp, #4
 800a410:	685b      	ldr	r3, [r3, #4]
 800a412:	4798      	blx	r3
 800a414:	b00a      	add	sp, #40	; 0x28
 800a416:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a41a <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800a41a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a41e:	b08b      	sub	sp, #44	; 0x2c
 800a420:	2400      	movs	r4, #0
 800a422:	461d      	mov	r5, r3
 800a424:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800a428:	4688      	mov	r8, r1
 800a42a:	4691      	mov	r9, r2
 800a42c:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800a430:	9404      	str	r4, [sp, #16]
 800a432:	4607      	mov	r7, r0
 800a434:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a438:	f7ff ffa8 	bl	800a38c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a43c:	fb06 9505 	mla	r5, r6, r5, r9
 800a440:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a444:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a448:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a44c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a450:	6878      	ldr	r0, [r7, #4]
 800a452:	9505      	str	r5, [sp, #20]
 800a454:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a458:	f8ad 401c 	strh.w	r4, [sp, #28]
 800a45c:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a460:	f8cd 8010 	str.w	r8, [sp, #16]
 800a464:	f8ad 4020 	strh.w	r4, [sp, #32]
 800a468:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800a46c:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800a470:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800a474:	6803      	ldr	r3, [r0, #0]
 800a476:	a901      	add	r1, sp, #4
 800a478:	685b      	ldr	r3, [r3, #4]
 800a47a:	4798      	blx	r3
 800a47c:	b00b      	add	sp, #44	; 0x2c
 800a47e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800a484 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800a484:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a488:	b08a      	sub	sp, #40	; 0x28
 800a48a:	4698      	mov	r8, r3
 800a48c:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800a490:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800a494:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800a498:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800a49c:	2300      	movs	r3, #0
 800a49e:	2d0b      	cmp	r5, #11
 800a4a0:	4606      	mov	r6, r0
 800a4a2:	9304      	str	r3, [sp, #16]
 800a4a4:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800a4a8:	d138      	bne.n	800a51c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800a4aa:	2380      	movs	r3, #128	; 0x80
 800a4ac:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a4b0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a4b4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a4b8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a4bc:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a4c0:	f88d 0020 	strb.w	r0, [sp, #32]
 800a4c4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a4c8:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a4cc:	4630      	mov	r0, r6
 800a4ce:	9203      	str	r2, [sp, #12]
 800a4d0:	f7ff ff5c 	bl	800a38c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a4d4:	2c0b      	cmp	r4, #11
 800a4d6:	bf98      	it	ls
 800a4d8:	4b1b      	ldrls	r3, [pc, #108]	; (800a548 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800a4da:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800a4de:	bf98      	it	ls
 800a4e0:	5d19      	ldrbls	r1, [r3, r4]
 800a4e2:	f8ad 701e 	strh.w	r7, [sp, #30]
 800a4e6:	bf88      	it	hi
 800a4e8:	2100      	movhi	r1, #0
 800a4ea:	fb02 8307 	mla	r3, r2, r7, r8
 800a4ee:	10c9      	asrs	r1, r1, #3
 800a4f0:	fb01 0003 	mla	r0, r1, r3, r0
 800a4f4:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800a4f8:	9005      	str	r0, [sp, #20]
 800a4fa:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800a4fe:	6870      	ldr	r0, [r6, #4]
 800a500:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800a504:	2300      	movs	r3, #0
 800a506:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800a50a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a50e:	6803      	ldr	r3, [r0, #0]
 800a510:	a901      	add	r1, sp, #4
 800a512:	685b      	ldr	r3, [r3, #4]
 800a514:	4798      	blx	r3
 800a516:	b00a      	add	sp, #40	; 0x28
 800a518:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a51c:	2d02      	cmp	r5, #2
 800a51e:	d109      	bne.n	800a534 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800a520:	28ff      	cmp	r0, #255	; 0xff
 800a522:	d105      	bne.n	800a530 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800a524:	f1bc 0f00 	cmp.w	ip, #0
 800a528:	bf14      	ite	ne
 800a52a:	2340      	movne	r3, #64	; 0x40
 800a52c:	2320      	moveq	r3, #32
 800a52e:	e7bd      	b.n	800a4ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a530:	2340      	movs	r3, #64	; 0x40
 800a532:	e7bb      	b.n	800a4ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a534:	28ff      	cmp	r0, #255	; 0xff
 800a536:	d105      	bne.n	800a544 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800a538:	f1bc 0f00 	cmp.w	ip, #0
 800a53c:	bf14      	ite	ne
 800a53e:	2304      	movne	r3, #4
 800a540:	2301      	moveq	r3, #1
 800a542:	e7b3      	b.n	800a4ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a544:	2304      	movs	r3, #4
 800a546:	e7b1      	b.n	800a4ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a548:	08020468 	.word	0x08020468

0800a54c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800a54c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a550:	b08b      	sub	sp, #44	; 0x2c
 800a552:	461d      	mov	r5, r3
 800a554:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800a558:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800a55c:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800a560:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800a564:	bf14      	ite	ne
 800a566:	2308      	movne	r3, #8
 800a568:	2302      	moveq	r3, #2
 800a56a:	2400      	movs	r4, #0
 800a56c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a570:	4688      	mov	r8, r1
 800a572:	4693      	mov	fp, r2
 800a574:	9404      	str	r4, [sp, #16]
 800a576:	4607      	mov	r7, r0
 800a578:	f7ff ff08 	bl	800a38c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a57c:	2e0b      	cmp	r6, #11
 800a57e:	bf98      	it	ls
 800a580:	4b15      	ldrls	r3, [pc, #84]	; (800a5d8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800a582:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800a586:	bf98      	it	ls
 800a588:	5d9c      	ldrbls	r4, [r3, r6]
 800a58a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800a58e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a592:	fb05 b50a 	mla	r5, r5, sl, fp
 800a596:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800a59a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a59e:	10e4      	asrs	r4, r4, #3
 800a5a0:	fb04 0405 	mla	r4, r4, r5, r0
 800a5a4:	2300      	movs	r3, #0
 800a5a6:	6878      	ldr	r0, [r7, #4]
 800a5a8:	9405      	str	r4, [sp, #20]
 800a5aa:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a5ae:	f8ad a01e 	strh.w	sl, [sp, #30]
 800a5b2:	f8cd 8010 	str.w	r8, [sp, #16]
 800a5b6:	f88d 9020 	strb.w	r9, [sp, #32]
 800a5ba:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800a5be:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a5c2:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800a5c6:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800a5ca:	6803      	ldr	r3, [r0, #0]
 800a5cc:	a901      	add	r1, sp, #4
 800a5ce:	685b      	ldr	r3, [r3, #4]
 800a5d0:	4798      	blx	r3
 800a5d2:	b00b      	add	sp, #44	; 0x2c
 800a5d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a5d8:	08020468 	.word	0x08020468

0800a5dc <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a5dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a5e0:	461e      	mov	r6, r3
 800a5e2:	4b0a      	ldr	r3, [pc, #40]	; (800a60c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800a5e4:	460f      	mov	r7, r1
 800a5e6:	881d      	ldrh	r5, [r3, #0]
 800a5e8:	4690      	mov	r8, r2
 800a5ea:	f7f8 fa5b 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800a5ee:	6803      	ldr	r3, [r0, #0]
 800a5f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5f2:	4798      	blx	r3
 800a5f4:	280b      	cmp	r0, #11
 800a5f6:	bf9a      	itte	ls
 800a5f8:	4b05      	ldrls	r3, [pc, #20]	; (800a610 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a5fa:	5c1c      	ldrbls	r4, [r3, r0]
 800a5fc:	2400      	movhi	r4, #0
 800a5fe:	fb08 7005 	mla	r0, r8, r5, r7
 800a602:	10e4      	asrs	r4, r4, #3
 800a604:	fb04 6000 	mla	r0, r4, r0, r6
 800a608:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a60c:	2001263e 	.word	0x2001263e
 800a610:	08020468 	.word	0x08020468

0800a614 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800a614:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a616:	b08b      	sub	sp, #44	; 0x2c
 800a618:	461f      	mov	r7, r3
 800a61a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800a61e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a622:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a626:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a62a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a62e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a632:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a636:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a63a:	2500      	movs	r5, #0
 800a63c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800a640:	f88d 3020 	strb.w	r3, [sp, #32]
 800a644:	4604      	mov	r4, r0
 800a646:	4616      	mov	r6, r2
 800a648:	9504      	str	r5, [sp, #16]
 800a64a:	f7ff fe9f 	bl	800a38c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a64e:	463a      	mov	r2, r7
 800a650:	4631      	mov	r1, r6
 800a652:	4603      	mov	r3, r0
 800a654:	4620      	mov	r0, r4
 800a656:	f7ff ffc1 	bl	800a5dc <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a65a:	4b0e      	ldr	r3, [pc, #56]	; (800a694 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800a65c:	9005      	str	r0, [sp, #20]
 800a65e:	881b      	ldrh	r3, [r3, #0]
 800a660:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a664:	f7f8 fa1e 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800a668:	6803      	ldr	r3, [r0, #0]
 800a66a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a66c:	4798      	blx	r3
 800a66e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800a670:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800a674:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800a678:	9304      	str	r3, [sp, #16]
 800a67a:	6860      	ldr	r0, [r4, #4]
 800a67c:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800a680:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800a684:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800a688:	6803      	ldr	r3, [r0, #0]
 800a68a:	a901      	add	r1, sp, #4
 800a68c:	685b      	ldr	r3, [r3, #4]
 800a68e:	4798      	blx	r3
 800a690:	b00b      	add	sp, #44	; 0x2c
 800a692:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a694:	2001263e 	.word	0x2001263e

0800a698 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a698:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a69a:	b08d      	sub	sp, #52	; 0x34
 800a69c:	466b      	mov	r3, sp
 800a69e:	e883 0006 	stmia.w	r3, {r1, r2}
 800a6a2:	2300      	movs	r3, #0
 800a6a4:	9306      	str	r3, [sp, #24]
 800a6a6:	6803      	ldr	r3, [r0, #0]
 800a6a8:	f8bd 6000 	ldrh.w	r6, [sp]
 800a6ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a6ae:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a6b2:	2501      	movs	r5, #1
 800a6b4:	9503      	str	r5, [sp, #12]
 800a6b6:	4604      	mov	r4, r0
 800a6b8:	4798      	blx	r3
 800a6ba:	463a      	mov	r2, r7
 800a6bc:	4631      	mov	r1, r6
 800a6be:	4603      	mov	r3, r0
 800a6c0:	4620      	mov	r0, r4
 800a6c2:	f7ff ff8b 	bl	800a5dc <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a6c6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a6c8:	9307      	str	r3, [sp, #28]
 800a6ca:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a6ce:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a6d2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a6d6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a6da:	4b0f      	ldr	r3, [pc, #60]	; (800a718 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800a6dc:	9004      	str	r0, [sp, #16]
 800a6de:	881b      	ldrh	r3, [r3, #0]
 800a6e0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a6e4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800a6e8:	f7f8 f9dc 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800a6ec:	6803      	ldr	r3, [r0, #0]
 800a6ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a6f0:	4798      	blx	r3
 800a6f2:	23ff      	movs	r3, #255	; 0xff
 800a6f4:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800a6f8:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800a6fc:	6860      	ldr	r0, [r4, #4]
 800a6fe:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800a702:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800a706:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a70a:	6803      	ldr	r3, [r0, #0]
 800a70c:	a903      	add	r1, sp, #12
 800a70e:	685b      	ldr	r3, [r3, #4]
 800a710:	4798      	blx	r3
 800a712:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a714:	b00d      	add	sp, #52	; 0x34
 800a716:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a718:	2001263e 	.word	0x2001263e

0800a71c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a71c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a720:	b08c      	sub	sp, #48	; 0x30
 800a722:	461e      	mov	r6, r3
 800a724:	466d      	mov	r5, sp
 800a726:	2300      	movs	r3, #0
 800a728:	e885 0006 	stmia.w	r5, {r1, r2}
 800a72c:	9306      	str	r3, [sp, #24]
 800a72e:	6803      	ldr	r3, [r0, #0]
 800a730:	f8bd 7000 	ldrh.w	r7, [sp]
 800a734:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a736:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800a73a:	2501      	movs	r5, #1
 800a73c:	9503      	str	r5, [sp, #12]
 800a73e:	4604      	mov	r4, r0
 800a740:	4798      	blx	r3
 800a742:	4642      	mov	r2, r8
 800a744:	4639      	mov	r1, r7
 800a746:	4603      	mov	r3, r0
 800a748:	4620      	mov	r0, r4
 800a74a:	f7ff ff47 	bl	800a5dc <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a74e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a752:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a756:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a75a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a75e:	4b11      	ldr	r3, [pc, #68]	; (800a7a4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800a760:	9004      	str	r0, [sp, #16]
 800a762:	881b      	ldrh	r3, [r3, #0]
 800a764:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a768:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a76a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800a76e:	9607      	str	r6, [sp, #28]
 800a770:	f7f8 f998 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 800a774:	6803      	ldr	r3, [r0, #0]
 800a776:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a778:	4798      	blx	r3
 800a77a:	23ff      	movs	r3, #255	; 0xff
 800a77c:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800a780:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800a784:	6860      	ldr	r0, [r4, #4]
 800a786:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800a78a:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800a78e:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a792:	6803      	ldr	r3, [r0, #0]
 800a794:	a903      	add	r1, sp, #12
 800a796:	685b      	ldr	r3, [r3, #4]
 800a798:	4798      	blx	r3
 800a79a:	4630      	mov	r0, r6
 800a79c:	b00c      	add	sp, #48	; 0x30
 800a79e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a7a2:	bf00      	nop
 800a7a4:	2001263e 	.word	0x2001263e

0800a7a8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800a7a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a7aa:	b085      	sub	sp, #20
 800a7ac:	ac02      	add	r4, sp, #8
 800a7ae:	e884 0006 	stmia.w	r4, {r1, r2}
 800a7b2:	4605      	mov	r5, r0
 800a7b4:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800a7b8:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800a7bc:	f7ff fde6 	bl	800a38c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a7c0:	463a      	mov	r2, r7
 800a7c2:	4603      	mov	r3, r0
 800a7c4:	4631      	mov	r1, r6
 800a7c6:	4628      	mov	r0, r5
 800a7c8:	f7ff ff08 	bl	800a5dc <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a7cc:	4a05      	ldr	r2, [pc, #20]	; (800a7e4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800a7ce:	682b      	ldr	r3, [r5, #0]
 800a7d0:	8812      	ldrh	r2, [r2, #0]
 800a7d2:	9200      	str	r2, [sp, #0]
 800a7d4:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800a7d6:	e894 0006 	ldmia.w	r4, {r1, r2}
 800a7da:	4603      	mov	r3, r0
 800a7dc:	4628      	mov	r0, r5
 800a7de:	47b0      	blx	r6
 800a7e0:	b005      	add	sp, #20
 800a7e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a7e4:	2001263e 	.word	0x2001263e

0800a7e8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a7e8:	b570      	push	{r4, r5, r6, lr}
 800a7ea:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 800a7ee:	4604      	mov	r4, r0
 800a7f0:	b19b      	cbz	r3, 800a81a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a7f2:	2002      	movs	r0, #2
 800a7f4:	f7f6 f80c 	bl	8000810 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a7f8:	2300      	movs	r3, #0
 800a7fa:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800a7fe:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800a802:	6823      	ldr	r3, [r4, #0]
 800a804:	4620      	mov	r0, r4
 800a806:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800a80a:	f7ff fdbf 	bl	800a38c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a80e:	462b      	mov	r3, r5
 800a810:	4601      	mov	r1, r0
 800a812:	4620      	mov	r0, r4
 800a814:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a818:	4718      	bx	r3
 800a81a:	bd70      	pop	{r4, r5, r6, pc}

0800a81c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800a81c:	b538      	push	{r3, r4, r5, lr}
 800a81e:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 800a822:	428b      	cmp	r3, r1
 800a824:	4604      	mov	r4, r0
 800a826:	460d      	mov	r5, r1
 800a828:	d006      	beq.n	800a838 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800a82a:	6803      	ldr	r3, [r0, #0]
 800a82c:	b929      	cbnz	r1, 800a83a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800a82e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800a832:	4798      	blx	r3
 800a834:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 800a838:	bd38      	pop	{r3, r4, r5, pc}
 800a83a:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800a83e:	e7f8      	b.n	800a832 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800a840 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800a840:	b510      	push	{r4, lr}
 800a842:	4b0d      	ldr	r3, [pc, #52]	; (800a878 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800a844:	781b      	ldrb	r3, [r3, #0]
 800a846:	4604      	mov	r4, r0
 800a848:	b95b      	cbnz	r3, 800a862 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a84a:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800a84e:	2b02      	cmp	r3, #2
 800a850:	d007      	beq.n	800a862 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a852:	6840      	ldr	r0, [r0, #4]
 800a854:	f000 f912 	bl	800aa7c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800a858:	b118      	cbz	r0, 800a862 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a85a:	6862      	ldr	r2, [r4, #4]
 800a85c:	7a53      	ldrb	r3, [r2, #9]
 800a85e:	2b00      	cmp	r3, #0
 800a860:	d0fc      	beq.n	800a85c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800a862:	f7f6 f921 	bl	8000aa8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a866:	4620      	mov	r0, r4
 800a868:	2100      	movs	r1, #0
 800a86a:	f7ff ffd7 	bl	800a81c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a86e:	4620      	mov	r0, r4
 800a870:	f7ff fd8c 	bl	800a38c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a874:	bd10      	pop	{r4, pc}
 800a876:	bf00      	nop
 800a878:	20012642 	.word	0x20012642

0800a87c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a87c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a880:	1a13      	subs	r3, r2, r0
 800a882:	4258      	negs	r0, r3
 800a884:	4158      	adcs	r0, r3
 800a886:	4770      	bx	lr

0800a888 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a888:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a88c:	1a9b      	subs	r3, r3, r2
 800a88e:	2b00      	cmp	r3, #0
 800a890:	bfdc      	itt	le
 800a892:	6882      	ldrle	r2, [r0, #8]
 800a894:	189b      	addle	r3, r3, r2
 800a896:	2b01      	cmp	r3, #1
 800a898:	bfcc      	ite	gt
 800a89a:	2000      	movgt	r0, #0
 800a89c:	2001      	movle	r0, #1
 800a89e:	4770      	bx	lr

0800a8a0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a8a0:	6902      	ldr	r2, [r0, #16]
 800a8a2:	6843      	ldr	r3, [r0, #4]
 800a8a4:	2024      	movs	r0, #36	; 0x24
 800a8a6:	fb00 3002 	mla	r0, r0, r2, r3
 800a8aa:	4770      	bx	lr

0800a8ac <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a8ac:	6803      	ldr	r3, [r0, #0]
 800a8ae:	691b      	ldr	r3, [r3, #16]
 800a8b0:	4718      	bx	r3

0800a8b2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a8b2:	b570      	push	{r4, r5, r6, lr}
 800a8b4:	2301      	movs	r3, #1
 800a8b6:	7203      	strb	r3, [r0, #8]
 800a8b8:	4604      	mov	r4, r0
 800a8ba:	6840      	ldr	r0, [r0, #4]
 800a8bc:	6803      	ldr	r3, [r0, #0]
 800a8be:	699b      	ldr	r3, [r3, #24]
 800a8c0:	4798      	blx	r3
 800a8c2:	6803      	ldr	r3, [r0, #0]
 800a8c4:	2b40      	cmp	r3, #64	; 0x40
 800a8c6:	4605      	mov	r5, r0
 800a8c8:	d00c      	beq.n	800a8e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a8ca:	d810      	bhi.n	800a8ee <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800a8cc:	2b04      	cmp	r3, #4
 800a8ce:	d01d      	beq.n	800a90c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800a8d0:	d804      	bhi.n	800a8dc <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800a8d2:	2b01      	cmp	r3, #1
 800a8d4:	d006      	beq.n	800a8e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a8d6:	2b02      	cmp	r3, #2
 800a8d8:	d02c      	beq.n	800a934 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800a8da:	bd70      	pop	{r4, r5, r6, pc}
 800a8dc:	2b08      	cmp	r3, #8
 800a8de:	d01d      	beq.n	800a91c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800a8e0:	2b20      	cmp	r3, #32
 800a8e2:	d1fa      	bne.n	800a8da <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800a8e4:	6823      	ldr	r3, [r4, #0]
 800a8e6:	4620      	mov	r0, r4
 800a8e8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a8ea:	4798      	blx	r3
 800a8ec:	e013      	b.n	800a916 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a8ee:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a8f2:	d0f7      	beq.n	800a8e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a8f4:	d804      	bhi.n	800a900 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800a8f6:	2b80      	cmp	r3, #128	; 0x80
 800a8f8:	d0f4      	beq.n	800a8e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a8fa:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a8fe:	e7f0      	b.n	800a8e2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800a900:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a904:	d0ee      	beq.n	800a8e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a906:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a90a:	e7e5      	b.n	800a8d8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800a90c:	6823      	ldr	r3, [r4, #0]
 800a90e:	7f01      	ldrb	r1, [r0, #28]
 800a910:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a912:	4620      	mov	r0, r4
 800a914:	4798      	blx	r3
 800a916:	6823      	ldr	r3, [r4, #0]
 800a918:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a91a:	e006      	b.n	800a92a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a91c:	6823      	ldr	r3, [r4, #0]
 800a91e:	7f01      	ldrb	r1, [r0, #28]
 800a920:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a922:	4620      	mov	r0, r4
 800a924:	4798      	blx	r3
 800a926:	6823      	ldr	r3, [r4, #0]
 800a928:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a92a:	4629      	mov	r1, r5
 800a92c:	4620      	mov	r0, r4
 800a92e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a932:	4718      	bx	r3
 800a934:	6823      	ldr	r3, [r4, #0]
 800a936:	4620      	mov	r0, r4
 800a938:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a93a:	4798      	blx	r3
 800a93c:	e7f3      	b.n	800a926 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800a93e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a93e:	4770      	bx	lr

0800a940 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a940:	4770      	bx	lr

0800a942 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a942:	4770      	bx	lr

0800a944 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a944:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800a948:	1ad2      	subs	r2, r2, r3
 800a94a:	2a00      	cmp	r2, #0
 800a94c:	b510      	push	{r4, lr}
 800a94e:	bfdc      	itt	le
 800a950:	6884      	ldrle	r4, [r0, #8]
 800a952:	1912      	addle	r2, r2, r4
 800a954:	2a01      	cmp	r2, #1
 800a956:	dd16      	ble.n	800a986 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800a958:	6842      	ldr	r2, [r0, #4]
 800a95a:	2424      	movs	r4, #36	; 0x24
 800a95c:	fb04 2303 	mla	r3, r4, r3, r2
 800a960:	f101 0220 	add.w	r2, r1, #32
 800a964:	f851 4b04 	ldr.w	r4, [r1], #4
 800a968:	f843 4b04 	str.w	r4, [r3], #4
 800a96c:	4291      	cmp	r1, r2
 800a96e:	d1f9      	bne.n	800a964 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800a970:	780a      	ldrb	r2, [r1, #0]
 800a972:	701a      	strb	r2, [r3, #0]
 800a974:	68c3      	ldr	r3, [r0, #12]
 800a976:	6882      	ldr	r2, [r0, #8]
 800a978:	f3bf 8f5b 	dmb	ish
 800a97c:	3301      	adds	r3, #1
 800a97e:	429a      	cmp	r2, r3
 800a980:	bfd8      	it	le
 800a982:	1a9b      	suble	r3, r3, r2
 800a984:	60c3      	str	r3, [r0, #12]
 800a986:	bd10      	pop	{r4, pc}

0800a988 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a988:	6903      	ldr	r3, [r0, #16]
 800a98a:	6882      	ldr	r2, [r0, #8]
 800a98c:	f3bf 8f5b 	dmb	ish
 800a990:	3301      	adds	r3, #1
 800a992:	429a      	cmp	r2, r3
 800a994:	bfd8      	it	le
 800a996:	1a9b      	suble	r3, r3, r2
 800a998:	6103      	str	r3, [r0, #16]
 800a99a:	4770      	bx	lr

0800a99c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a99c:	b570      	push	{r4, r5, r6, lr}
 800a99e:	4604      	mov	r4, r0
 800a9a0:	460e      	mov	r6, r1
 800a9a2:	6860      	ldr	r0, [r4, #4]
 800a9a4:	6803      	ldr	r3, [r0, #0]
 800a9a6:	685b      	ldr	r3, [r3, #4]
 800a9a8:	4798      	blx	r3
 800a9aa:	2800      	cmp	r0, #0
 800a9ac:	d1f9      	bne.n	800a9a2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a9ae:	4d0d      	ldr	r5, [pc, #52]	; (800a9e4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a9b0:	6828      	ldr	r0, [r5, #0]
 800a9b2:	6803      	ldr	r3, [r0, #0]
 800a9b4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a9b6:	4798      	blx	r3
 800a9b8:	f7f6 f884 	bl	8000ac4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a9bc:	6828      	ldr	r0, [r5, #0]
 800a9be:	2101      	movs	r1, #1
 800a9c0:	f7ff ff2c 	bl	800a81c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a9c4:	6860      	ldr	r0, [r4, #4]
 800a9c6:	6803      	ldr	r3, [r0, #0]
 800a9c8:	4631      	mov	r1, r6
 800a9ca:	689b      	ldr	r3, [r3, #8]
 800a9cc:	4798      	blx	r3
 800a9ce:	6823      	ldr	r3, [r4, #0]
 800a9d0:	4620      	mov	r0, r4
 800a9d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a9d4:	4798      	blx	r3
 800a9d6:	6828      	ldr	r0, [r5, #0]
 800a9d8:	6803      	ldr	r3, [r0, #0]
 800a9da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a9de:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800a9e0:	4718      	bx	r3
 800a9e2:	bf00      	nop
 800a9e4:	20012644 	.word	0x20012644

0800a9e8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a9e8:	b508      	push	{r3, lr}
 800a9ea:	f7f6 f85d 	bl	8000aa8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a9ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a9f2:	f7f6 b861 	b.w	8000ab8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a9f6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a9f6:	b510      	push	{r4, lr}
 800a9f8:	2114      	movs	r1, #20
 800a9fa:	4604      	mov	r4, r0
 800a9fc:	f012 ff1d 	bl	801d83a <_ZdlPvj>
 800aa00:	4620      	mov	r0, r4
 800aa02:	bd10      	pop	{r4, pc}

0800aa04 <_ZN8touchgfx13DMA_Interface5startEv>:
 800aa04:	b510      	push	{r4, lr}
 800aa06:	4604      	mov	r4, r0
 800aa08:	6840      	ldr	r0, [r0, #4]
 800aa0a:	6803      	ldr	r3, [r0, #0]
 800aa0c:	681b      	ldr	r3, [r3, #0]
 800aa0e:	4798      	blx	r3
 800aa10:	b948      	cbnz	r0, 800aa26 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800aa12:	7a63      	ldrb	r3, [r4, #9]
 800aa14:	b13b      	cbz	r3, 800aa26 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800aa16:	7a23      	ldrb	r3, [r4, #8]
 800aa18:	b92b      	cbnz	r3, 800aa26 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800aa1a:	6823      	ldr	r3, [r4, #0]
 800aa1c:	4620      	mov	r0, r4
 800aa1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aa20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800aa24:	4718      	bx	r3
 800aa26:	bd10      	pop	{r4, pc}

0800aa28 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800aa28:	b570      	push	{r4, r5, r6, lr}
 800aa2a:	4604      	mov	r4, r0
 800aa2c:	6840      	ldr	r0, [r0, #4]
 800aa2e:	6803      	ldr	r3, [r0, #0]
 800aa30:	681b      	ldr	r3, [r3, #0]
 800aa32:	4798      	blx	r3
 800aa34:	4605      	mov	r5, r0
 800aa36:	b930      	cbnz	r0, 800aa46 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800aa38:	7a23      	ldrb	r3, [r4, #8]
 800aa3a:	b123      	cbz	r3, 800aa46 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800aa3c:	6860      	ldr	r0, [r4, #4]
 800aa3e:	6803      	ldr	r3, [r0, #0]
 800aa40:	695b      	ldr	r3, [r3, #20]
 800aa42:	4798      	blx	r3
 800aa44:	7225      	strb	r5, [r4, #8]
 800aa46:	6860      	ldr	r0, [r4, #4]
 800aa48:	6803      	ldr	r3, [r0, #0]
 800aa4a:	681b      	ldr	r3, [r3, #0]
 800aa4c:	4798      	blx	r3
 800aa4e:	b928      	cbnz	r0, 800aa5c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800aa50:	6823      	ldr	r3, [r4, #0]
 800aa52:	4620      	mov	r0, r4
 800aa54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aa56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa5a:	4718      	bx	r3
 800aa5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa60:	f7f6 b838 	b.w	8000ad4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800aa64 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800aa64:	b510      	push	{r4, lr}
 800aa66:	4c04      	ldr	r4, [pc, #16]	; (800aa78 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800aa68:	6082      	str	r2, [r0, #8]
 800aa6a:	2200      	movs	r2, #0
 800aa6c:	e9c0 4100 	strd	r4, r1, [r0]
 800aa70:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800aa74:	bd10      	pop	{r4, pc}
 800aa76:	bf00      	nop
 800aa78:	0802047c 	.word	0x0802047c

0800aa7c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800aa7c:	6840      	ldr	r0, [r0, #4]
 800aa7e:	6803      	ldr	r3, [r0, #0]
 800aa80:	681b      	ldr	r3, [r3, #0]
 800aa82:	4718      	bx	r3

0800aa84 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800aa84:	b570      	push	{r4, r5, r6, lr}
 800aa86:	790b      	ldrb	r3, [r1, #4]
 800aa88:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800aa8c:	2b00      	cmp	r3, #0
 800aa8e:	bf0c      	ite	eq
 800aa90:	2301      	moveq	r3, #1
 800aa92:	2300      	movne	r3, #0
 800aa94:	4604      	mov	r4, r0
 800aa96:	460e      	mov	r6, r1
 800aa98:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800aa9c:	d109      	bne.n	800aab2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800aa9e:	b14d      	cbz	r5, 800aab4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800aaa0:	7933      	ldrb	r3, [r6, #4]
 800aaa2:	2b01      	cmp	r3, #1
 800aaa4:	d10c      	bne.n	800aac0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800aaa6:	6823      	ldr	r3, [r4, #0]
 800aaa8:	4620      	mov	r0, r4
 800aaaa:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800aaac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aab0:	4718      	bx	r3
 800aab2:	b12d      	cbz	r5, 800aac0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800aab4:	6823      	ldr	r3, [r4, #0]
 800aab6:	4620      	mov	r0, r4
 800aab8:	695b      	ldr	r3, [r3, #20]
 800aaba:	4798      	blx	r3
 800aabc:	2d00      	cmp	r5, #0
 800aabe:	d1ef      	bne.n	800aaa0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800aac0:	bd70      	pop	{r4, r5, r6, pc}

0800aac2 <_ZN8touchgfx13AnimatedImage12setBitmapEndERKNS_6BitmapE>:
 800aac2:	880b      	ldrh	r3, [r1, #0]
 800aac4:	8643      	strh	r3, [r0, #50]	; 0x32
 800aac6:	4770      	bx	lr

0800aac8 <_ZN8touchgfx13AnimatedImageD1Ev>:
 800aac8:	4770      	bx	lr

0800aaca <_ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE>:
 800aaca:	880b      	ldrh	r3, [r1, #0]
 800aacc:	8603      	strh	r3, [r0, #48]	; 0x30
 800aace:	f000 bb5e 	b.w	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

0800aad2 <_ZN8touchgfx13AnimatedImage13stopAnimationEv>:
 800aad2:	b513      	push	{r0, r1, r4, lr}
 800aad4:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800aad8:	4604      	mov	r4, r0
 800aada:	b143      	cbz	r3, 800aaee <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x1c>
 800aadc:	f002 f98c 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
 800aae0:	4621      	mov	r1, r4
 800aae2:	3004      	adds	r0, #4
 800aae4:	f002 f9d5 	bl	800ce92 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800aae8:	2300      	movs	r3, #0
 800aaea:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 800aaee:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 800aaf2:	b163      	cbz	r3, 800ab0e <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x3c>
 800aaf4:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 800aaf6:	f8ad 3004 	strh.w	r3, [sp, #4]
 800aafa:	a901      	add	r1, sp, #4
 800aafc:	4620      	mov	r0, r4
 800aafe:	f000 fb46 	bl	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800ab02:	6823      	ldr	r3, [r4, #0]
 800ab04:	4620      	mov	r0, r4
 800ab06:	695b      	ldr	r3, [r3, #20]
 800ab08:	4798      	blx	r3
 800ab0a:	b002      	add	sp, #8
 800ab0c:	bd10      	pop	{r4, pc}
 800ab0e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ab10:	e7f1      	b.n	800aaf6 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x24>

0800ab12 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>:
 800ab12:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ab14:	8e05      	ldrh	r5, [r0, #48]	; 0x30
 800ab16:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800ab1a:	42bd      	cmp	r5, r7
 800ab1c:	4604      	mov	r4, r0
 800ab1e:	d01a      	beq.n	800ab56 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
 800ab20:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 800ab22:	42be      	cmp	r6, r7
 800ab24:	d017      	beq.n	800ab56 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
 800ab26:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 800ab2a:	f880 3037 	strb.w	r3, [r0, #55]	; 0x37
 800ab2e:	b1a1      	cbz	r1, 800ab5a <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x48>
 800ab30:	b142      	cbz	r2, 800ab44 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
 800ab32:	a902      	add	r1, sp, #8
 800ab34:	f821 6d04 	strh.w	r6, [r1, #-4]!
 800ab38:	f000 fb29 	bl	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800ab3c:	6823      	ldr	r3, [r4, #0]
 800ab3e:	4620      	mov	r0, r4
 800ab40:	695b      	ldr	r3, [r3, #20]
 800ab42:	4798      	blx	r3
 800ab44:	f002 f958 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
 800ab48:	4621      	mov	r1, r4
 800ab4a:	3004      	adds	r0, #4
 800ab4c:	f002 fa4a 	bl	800cfe4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800ab50:	2301      	movs	r3, #1
 800ab52:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 800ab56:	b003      	add	sp, #12
 800ab58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab5a:	2a00      	cmp	r2, #0
 800ab5c:	d0f2      	beq.n	800ab44 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
 800ab5e:	a902      	add	r1, sp, #8
 800ab60:	f821 5d04 	strh.w	r5, [r1, #-4]!
 800ab64:	e7e8      	b.n	800ab38 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x26>

0800ab66 <_ZN8touchgfx13AnimatedImageD0Ev>:
 800ab66:	b510      	push	{r4, lr}
 800ab68:	213c      	movs	r1, #60	; 0x3c
 800ab6a:	4604      	mov	r4, r0
 800ab6c:	f012 fe65 	bl	801d83a <_ZdlPvj>
 800ab70:	4620      	mov	r0, r4
 800ab72:	bd10      	pop	{r4, pc}

0800ab74 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv>:
 800ab74:	b510      	push	{r4, lr}
 800ab76:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800ab7a:	4604      	mov	r4, r0
 800ab7c:	b14b      	cbz	r3, 800ab92 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x1e>
 800ab7e:	f002 f93b 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
 800ab82:	4621      	mov	r1, r4
 800ab84:	3004      	adds	r0, #4
 800ab86:	f002 f984 	bl	800ce92 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800ab8a:	2300      	movs	r3, #0
 800ab8c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 800ab90:	bd10      	pop	{r4, pc}
 800ab92:	f002 f931 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
 800ab96:	4621      	mov	r1, r4
 800ab98:	3004      	adds	r0, #4
 800ab9a:	f002 fa23 	bl	800cfe4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800ab9e:	2301      	movs	r3, #1
 800aba0:	e7f4      	b.n	800ab8c <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x18>

0800aba2 <_ZN8touchgfx13AnimatedImage15handleTickEventEv>:
 800aba2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aba4:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800aba8:	4604      	mov	r4, r0
 800abaa:	2b00      	cmp	r3, #0
 800abac:	d042      	beq.n	800ac34 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800abae:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800abb2:	f890 2034 	ldrb.w	r2, [r0, #52]	; 0x34
 800abb6:	3301      	adds	r3, #1
 800abb8:	b2db      	uxtb	r3, r3
 800abba:	429a      	cmp	r2, r3
 800abbc:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
 800abc0:	d138      	bne.n	800ac34 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800abc2:	2300      	movs	r3, #0
 800abc4:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
 800abc8:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 800abca:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 800abcc:	f890 2036 	ldrb.w	r2, [r0, #54]	; 0x36
 800abd0:	4299      	cmp	r1, r3
 800abd2:	d100      	bne.n	800abd6 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x34>
 800abd4:	b122      	cbz	r2, 800abe0 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x3e>
 800abd6:	8e21      	ldrh	r1, [r4, #48]	; 0x30
 800abd8:	4299      	cmp	r1, r3
 800abda:	d12f      	bne.n	800ac3c <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9a>
 800abdc:	2a00      	cmp	r2, #0
 800abde:	d034      	beq.n	800ac4a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
 800abe0:	f894 5037 	ldrb.w	r5, [r4, #55]	; 0x37
 800abe4:	b93d      	cbnz	r5, 800abf6 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x54>
 800abe6:	f002 f907 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
 800abea:	4621      	mov	r1, r4
 800abec:	3004      	adds	r0, #4
 800abee:	f002 f950 	bl	800ce92 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800abf2:	f884 5038 	strb.w	r5, [r4, #56]	; 0x38
 800abf6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800abf8:	b140      	cbz	r0, 800ac0c <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
 800abfa:	6803      	ldr	r3, [r0, #0]
 800abfc:	68db      	ldr	r3, [r3, #12]
 800abfe:	4798      	blx	r3
 800ac00:	b120      	cbz	r0, 800ac0c <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
 800ac02:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ac04:	6803      	ldr	r3, [r0, #0]
 800ac06:	4621      	mov	r1, r4
 800ac08:	689b      	ldr	r3, [r3, #8]
 800ac0a:	4798      	blx	r3
 800ac0c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800ac10:	b183      	cbz	r3, 800ac34 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800ac12:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800ac16:	b16b      	cbz	r3, 800ac34 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800ac18:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 800ac1c:	b163      	cbz	r3, 800ac38 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x96>
 800ac1e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 800ac20:	f8ad 3004 	strh.w	r3, [sp, #4]
 800ac24:	a901      	add	r1, sp, #4
 800ac26:	4620      	mov	r0, r4
 800ac28:	f000 fab1 	bl	800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800ac2c:	6823      	ldr	r3, [r4, #0]
 800ac2e:	4620      	mov	r0, r4
 800ac30:	695b      	ldr	r3, [r3, #20]
 800ac32:	4798      	blx	r3
 800ac34:	b003      	add	sp, #12
 800ac36:	bd30      	pop	{r4, r5, pc}
 800ac38:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ac3a:	e7f1      	b.n	800ac20 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x7e>
 800ac3c:	b12a      	cbz	r2, 800ac4a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
 800ac3e:	3b01      	subs	r3, #1
 800ac40:	a902      	add	r1, sp, #8
 800ac42:	b29b      	uxth	r3, r3
 800ac44:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800ac48:	e7ed      	b.n	800ac26 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x84>
 800ac4a:	3301      	adds	r3, #1
 800ac4c:	e7f8      	b.n	800ac40 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9e>

0800ac4e <_ZNK8touchgfx5Image17invalidateContentEv>:
 800ac4e:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800ac52:	b12a      	cbz	r2, 800ac60 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800ac54:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800ac58:	b112      	cbz	r2, 800ac60 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800ac5a:	6803      	ldr	r3, [r0, #0]
 800ac5c:	695b      	ldr	r3, [r3, #20]
 800ac5e:	4718      	bx	r3
 800ac60:	4770      	bx	lr

0800ac62 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>:
 800ac62:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ac64:	ac02      	add	r4, sp, #8
 800ac66:	6803      	ldr	r3, [r0, #0]
 800ac68:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800ac6a:	f824 1d04 	strh.w	r1, [r4, #-4]!
 800ac6e:	4605      	mov	r5, r0
 800ac70:	4621      	mov	r1, r4
 800ac72:	4616      	mov	r6, r2
 800ac74:	4798      	blx	r3
 800ac76:	682b      	ldr	r3, [r5, #0]
 800ac78:	4621      	mov	r1, r4
 800ac7a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ac7c:	f8ad 6004 	strh.w	r6, [sp, #4]
 800ac80:	4628      	mov	r0, r5
 800ac82:	4798      	blx	r3
 800ac84:	b002      	add	sp, #8
 800ac86:	bd70      	pop	{r4, r5, r6, pc}

0800ac88 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>:
 800ac88:	2300      	movs	r3, #0
 800ac8a:	f880 1034 	strb.w	r1, [r0, #52]	; 0x34
 800ac8e:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
 800ac92:	4770      	bx	lr

0800ac94 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800ac94:	4b07      	ldr	r3, [pc, #28]	; (800acb4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800ac96:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800ac98:	881b      	ldrh	r3, [r3, #0]
 800ac9a:	4293      	cmp	r3, r2
 800ac9c:	bf81      	itttt	hi
 800ac9e:	4b06      	ldrhi	r3, [pc, #24]	; (800acb8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800aca0:	681b      	ldrhi	r3, [r3, #0]
 800aca2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800aca6:	7858      	ldrbhi	r0, [r3, #1]
 800aca8:	bf8c      	ite	hi
 800acaa:	f000 0003 	andhi.w	r0, r0, #3
 800acae:	2000      	movls	r0, #0
 800acb0:	4770      	bx	lr
 800acb2:	bf00      	nop
 800acb4:	20012698 	.word	0x20012698
 800acb8:	20012694 	.word	0x20012694

0800acbc <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800acbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800acc0:	4b10      	ldr	r3, [pc, #64]	; (800ad04 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800acc2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800acc4:	881b      	ldrh	r3, [r3, #0]
 800acc6:	428b      	cmp	r3, r1
 800acc8:	4604      	mov	r4, r0
 800acca:	d918      	bls.n	800acfe <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800accc:	6803      	ldr	r3, [r0, #0]
 800acce:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800acd0:	4b0d      	ldr	r3, [pc, #52]	; (800ad08 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800acd2:	6818      	ldr	r0, [r3, #0]
 800acd4:	f7f9 f894 	bl	8003e00 <_ZNK8touchgfx5Texts7getTextEt>
 800acd8:	6823      	ldr	r3, [r4, #0]
 800acda:	4606      	mov	r6, r0
 800acdc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800acde:	4620      	mov	r0, r4
 800ace0:	4798      	blx	r3
 800ace2:	6823      	ldr	r3, [r4, #0]
 800ace4:	4607      	mov	r7, r0
 800ace6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800acea:	4620      	mov	r0, r4
 800acec:	4798      	blx	r3
 800acee:	463a      	mov	r2, r7
 800acf0:	4603      	mov	r3, r0
 800acf2:	4631      	mov	r1, r6
 800acf4:	4620      	mov	r0, r4
 800acf6:	46ac      	mov	ip, r5
 800acf8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800acfc:	4760      	bx	ip
 800acfe:	2000      	movs	r0, #0
 800ad00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ad04:	20012698 	.word	0x20012698
 800ad08:	200126a0 	.word	0x200126a0

0800ad0c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800ad0c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ad10:	4b17      	ldr	r3, [pc, #92]	; (800ad70 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800ad12:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ad14:	881b      	ldrh	r3, [r3, #0]
 800ad16:	428b      	cmp	r3, r1
 800ad18:	4604      	mov	r4, r0
 800ad1a:	d926      	bls.n	800ad6a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800ad1c:	4b15      	ldr	r3, [pc, #84]	; (800ad74 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800ad1e:	681b      	ldr	r3, [r3, #0]
 800ad20:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800ad24:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800ad28:	4b13      	ldr	r3, [pc, #76]	; (800ad78 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800ad2a:	7855      	ldrb	r5, [r2, #1]
 800ad2c:	681b      	ldr	r3, [r3, #0]
 800ad2e:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800ad32:	6833      	ldr	r3, [r6, #0]
 800ad34:	69df      	ldr	r7, [r3, #28]
 800ad36:	4b11      	ldr	r3, [pc, #68]	; (800ad7c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800ad38:	6818      	ldr	r0, [r3, #0]
 800ad3a:	f7f9 f861 	bl	8003e00 <_ZNK8touchgfx5Texts7getTextEt>
 800ad3e:	6823      	ldr	r3, [r4, #0]
 800ad40:	4680      	mov	r8, r0
 800ad42:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ad44:	4620      	mov	r0, r4
 800ad46:	4798      	blx	r3
 800ad48:	6823      	ldr	r3, [r4, #0]
 800ad4a:	4681      	mov	r9, r0
 800ad4c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ad50:	4620      	mov	r0, r4
 800ad52:	4798      	blx	r3
 800ad54:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800ad58:	9000      	str	r0, [sp, #0]
 800ad5a:	464b      	mov	r3, r9
 800ad5c:	4642      	mov	r2, r8
 800ad5e:	4629      	mov	r1, r5
 800ad60:	4630      	mov	r0, r6
 800ad62:	47b8      	blx	r7
 800ad64:	b003      	add	sp, #12
 800ad66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ad6a:	2000      	movs	r0, #0
 800ad6c:	e7fa      	b.n	800ad64 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800ad6e:	bf00      	nop
 800ad70:	20012698 	.word	0x20012698
 800ad74:	20012694 	.word	0x20012694
 800ad78:	2001269c 	.word	0x2001269c
 800ad7c:	200126a0 	.word	0x200126a0

0800ad80 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800ad80:	b40e      	push	{r1, r2, r3}
 800ad82:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ad86:	4b2f      	ldr	r3, [pc, #188]	; (800ae44 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800ad88:	881a      	ldrh	r2, [r3, #0]
 800ad8a:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800ad8c:	429a      	cmp	r2, r3
 800ad8e:	b09d      	sub	sp, #116	; 0x74
 800ad90:	4604      	mov	r4, r0
 800ad92:	d954      	bls.n	800ae3e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800ad94:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800ae48 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800ad98:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800ae4c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800ad9c:	aa26      	add	r2, sp, #152	; 0x98
 800ad9e:	9202      	str	r2, [sp, #8]
 800ada0:	f8d9 2000 	ldr.w	r2, [r9]
 800ada4:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ada8:	f8d8 3000 	ldr.w	r3, [r8]
 800adac:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800adb0:	682b      	ldr	r3, [r5, #0]
 800adb2:	4628      	mov	r0, r5
 800adb4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800adb6:	4798      	blx	r3
 800adb8:	b207      	sxth	r7, r0
 800adba:	4606      	mov	r6, r0
 800adbc:	a803      	add	r0, sp, #12
 800adbe:	f003 fd90 	bl	800e8e2 <_ZN8touchgfx12TextProviderC1Ev>
 800adc2:	682b      	ldr	r3, [r5, #0]
 800adc4:	4628      	mov	r0, r5
 800adc6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800adc8:	4798      	blx	r3
 800adca:	682b      	ldr	r3, [r5, #0]
 800adcc:	4682      	mov	sl, r0
 800adce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800add0:	4628      	mov	r0, r5
 800add2:	4798      	blx	r3
 800add4:	4653      	mov	r3, sl
 800add6:	9000      	str	r0, [sp, #0]
 800add8:	9a02      	ldr	r2, [sp, #8]
 800adda:	9925      	ldr	r1, [sp, #148]	; 0x94
 800addc:	a803      	add	r0, sp, #12
 800adde:	f003 fdd3 	bl	800e988 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ade2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ade4:	f8d9 3000 	ldr.w	r3, [r9]
 800ade8:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800adec:	8925      	ldrh	r5, [r4, #8]
 800adee:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800adf2:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800adf6:	eba5 050c 	sub.w	r5, r5, ip
 800adfa:	784a      	ldrb	r2, [r1, #1]
 800adfc:	f8d8 3000 	ldr.w	r3, [r8]
 800ae00:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800ae04:	b22d      	sxth	r5, r5
 800ae06:	9500      	str	r5, [sp, #0]
 800ae08:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800ae0c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800ae10:	a803      	add	r0, sp, #12
 800ae12:	f001 fb5f 	bl	800c4d4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800ae16:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800ae1a:	18b9      	adds	r1, r7, r2
 800ae1c:	2900      	cmp	r1, #0
 800ae1e:	b203      	sxth	r3, r0
 800ae20:	dd0b      	ble.n	800ae3a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800ae22:	3b01      	subs	r3, #1
 800ae24:	fb13 f302 	smulbb	r3, r3, r2
 800ae28:	fb16 3300 	smlabb	r3, r6, r0, r3
 800ae2c:	b21f      	sxth	r7, r3
 800ae2e:	4638      	mov	r0, r7
 800ae30:	b01d      	add	sp, #116	; 0x74
 800ae32:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ae36:	b003      	add	sp, #12
 800ae38:	4770      	bx	lr
 800ae3a:	2b00      	cmp	r3, #0
 800ae3c:	dcf7      	bgt.n	800ae2e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800ae3e:	2700      	movs	r7, #0
 800ae40:	e7f5      	b.n	800ae2e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800ae42:	bf00      	nop
 800ae44:	20012698 	.word	0x20012698
 800ae48:	20012694 	.word	0x20012694
 800ae4c:	2001269c 	.word	0x2001269c

0800ae50 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800ae50:	b570      	push	{r4, r5, r6, lr}
 800ae52:	6803      	ldr	r3, [r0, #0]
 800ae54:	4604      	mov	r4, r0
 800ae56:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ae58:	4615      	mov	r5, r2
 800ae5a:	4798      	blx	r3
 800ae5c:	6823      	ldr	r3, [r4, #0]
 800ae5e:	4629      	mov	r1, r5
 800ae60:	4620      	mov	r0, r4
 800ae62:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ae64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ae68:	4718      	bx	r3
	...

0800ae6c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800ae6c:	b538      	push	{r3, r4, r5, lr}
 800ae6e:	4b0e      	ldr	r3, [pc, #56]	; (800aea8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800ae70:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800ae72:	881b      	ldrh	r3, [r3, #0]
 800ae74:	429a      	cmp	r2, r3
 800ae76:	4604      	mov	r4, r0
 800ae78:	d214      	bcs.n	800aea4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800ae7a:	6803      	ldr	r3, [r0, #0]
 800ae7c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ae7e:	4798      	blx	r3
 800ae80:	6823      	ldr	r3, [r4, #0]
 800ae82:	4605      	mov	r5, r0
 800ae84:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ae86:	4620      	mov	r0, r4
 800ae88:	4798      	blx	r3
 800ae8a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800ae8e:	b22d      	sxth	r5, r5
 800ae90:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800ae94:	4601      	mov	r1, r0
 800ae96:	bf06      	itte	eq
 800ae98:	4602      	moveq	r2, r0
 800ae9a:	4629      	moveq	r1, r5
 800ae9c:	462a      	movne	r2, r5
 800ae9e:	4620      	mov	r0, r4
 800aea0:	f7ff ffd6 	bl	800ae50 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800aea4:	bd38      	pop	{r3, r4, r5, pc}
 800aea6:	bf00      	nop
 800aea8:	20012698 	.word	0x20012698

0800aeac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800aeac:	b530      	push	{r4, r5, lr}
 800aeae:	888b      	ldrh	r3, [r1, #4]
 800aeb0:	8583      	strh	r3, [r0, #44]	; 0x2c
 800aeb2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800aeb6:	b085      	sub	sp, #20
 800aeb8:	4604      	mov	r4, r0
 800aeba:	b923      	cbnz	r3, 800aec6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800aebc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800aec0:	b90b      	cbnz	r3, 800aec6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800aec2:	f7ff ffd3 	bl	800ae6c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800aec6:	6823      	ldr	r3, [r4, #0]
 800aec8:	466d      	mov	r5, sp
 800aeca:	4621      	mov	r1, r4
 800aecc:	4628      	mov	r0, r5
 800aece:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800aed2:	4798      	blx	r3
 800aed4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800aed8:	343c      	adds	r4, #60	; 0x3c
 800aeda:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800aede:	b005      	add	sp, #20
 800aee0:	bd30      	pop	{r4, r5, pc}

0800aee2 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800aee2:	2300      	movs	r3, #0
 800aee4:	8083      	strh	r3, [r0, #4]
 800aee6:	80c3      	strh	r3, [r0, #6]
 800aee8:	8003      	strh	r3, [r0, #0]
 800aeea:	8043      	strh	r3, [r0, #2]
 800aeec:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800aef0:	2bff      	cmp	r3, #255	; 0xff
 800aef2:	bf01      	itttt	eq
 800aef4:	890b      	ldrheq	r3, [r1, #8]
 800aef6:	8083      	strheq	r3, [r0, #4]
 800aef8:	894b      	ldrheq	r3, [r1, #10]
 800aefa:	80c3      	strheq	r3, [r0, #6]
 800aefc:	4770      	bx	lr
	...

0800af00 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800af00:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800af02:	4604      	mov	r4, r0
 800af04:	6808      	ldr	r0, [r1, #0]
 800af06:	6849      	ldr	r1, [r1, #4]
 800af08:	466b      	mov	r3, sp
 800af0a:	c303      	stmia	r3!, {r0, r1}
 800af0c:	6823      	ldr	r3, [r4, #0]
 800af0e:	4669      	mov	r1, sp
 800af10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800af12:	4620      	mov	r0, r4
 800af14:	4798      	blx	r3
 800af16:	4b08      	ldr	r3, [pc, #32]	; (800af38 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800af18:	681b      	ldr	r3, [r3, #0]
 800af1a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800af1e:	b10a      	cbz	r2, 800af24 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800af20:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800af22:	b900      	cbnz	r0, 800af26 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800af24:	6898      	ldr	r0, [r3, #8]
 800af26:	6803      	ldr	r3, [r0, #0]
 800af28:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800af2a:	6a1d      	ldr	r5, [r3, #32]
 800af2c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800af30:	4669      	mov	r1, sp
 800af32:	47a8      	blx	r5
 800af34:	b003      	add	sp, #12
 800af36:	bd30      	pop	{r4, r5, pc}
 800af38:	20012644 	.word	0x20012644

0800af3c <_ZN8touchgfx3BoxD1Ev>:
 800af3c:	4770      	bx	lr

0800af3e <_ZN8touchgfx3BoxD0Ev>:
 800af3e:	b510      	push	{r4, lr}
 800af40:	212c      	movs	r1, #44	; 0x2c
 800af42:	4604      	mov	r4, r0
 800af44:	f012 fc79 	bl	801d83a <_ZdlPvj>
 800af48:	4620      	mov	r0, r4
 800af4a:	bd10      	pop	{r4, pc}

0800af4c <_ZNK8touchgfx3Box17invalidateContentEv>:
 800af4c:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800af50:	b12a      	cbz	r2, 800af5e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800af52:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800af56:	b112      	cbz	r2, 800af5e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800af58:	6803      	ldr	r3, [r0, #0]
 800af5a:	695b      	ldr	r3, [r3, #20]
 800af5c:	4718      	bx	r3
 800af5e:	4770      	bx	lr

0800af60 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800af60:	b570      	push	{r4, r5, r6, lr}
 800af62:	880b      	ldrh	r3, [r1, #0]
 800af64:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800af66:	4605      	mov	r5, r0
 800af68:	8813      	ldrh	r3, [r2, #0]
 800af6a:	f825 3f30 	strh.w	r3, [r5, #48]!
 800af6e:	4604      	mov	r4, r0
 800af70:	4628      	mov	r0, r5
 800af72:	f005 f829 	bl	800ffc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800af76:	4606      	mov	r6, r0
 800af78:	4628      	mov	r0, r5
 800af7a:	f005 f859 	bl	8010030 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800af7e:	6823      	ldr	r3, [r4, #0]
 800af80:	4605      	mov	r5, r0
 800af82:	4631      	mov	r1, r6
 800af84:	4620      	mov	r0, r4
 800af86:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800af88:	4798      	blx	r3
 800af8a:	6823      	ldr	r3, [r4, #0]
 800af8c:	4629      	mov	r1, r5
 800af8e:	4620      	mov	r0, r4
 800af90:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800af92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800af96:	4718      	bx	r3

0800af98 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800af98:	b510      	push	{r4, lr}
 800af9a:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800af9e:	2bff      	cmp	r3, #255	; 0xff
 800afa0:	4604      	mov	r4, r0
 800afa2:	d006      	beq.n	800afb2 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800afa4:	2300      	movs	r3, #0
 800afa6:	8003      	strh	r3, [r0, #0]
 800afa8:	8043      	strh	r3, [r0, #2]
 800afaa:	8083      	strh	r3, [r0, #4]
 800afac:	80c3      	strh	r3, [r0, #6]
 800afae:	4620      	mov	r0, r4
 800afb0:	bd10      	pop	{r4, pc}
 800afb2:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800afb6:	b11b      	cbz	r3, 800afc0 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800afb8:	3130      	adds	r1, #48	; 0x30
 800afba:	f005 f86d 	bl	8010098 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800afbe:	e7f6      	b.n	800afae <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800afc0:	312e      	adds	r1, #46	; 0x2e
 800afc2:	e7fa      	b.n	800afba <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800afc4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800afc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800afc8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800afcc:	b08a      	sub	sp, #40	; 0x28
 800afce:	4604      	mov	r4, r0
 800afd0:	4688      	mov	r8, r1
 800afd2:	2b00      	cmp	r3, #0
 800afd4:	d066      	beq.n	800b0a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800afd6:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800afd8:	f8ad 3014 	strh.w	r3, [sp, #20]
 800afdc:	a805      	add	r0, sp, #20
 800afde:	f004 fff3 	bl	800ffc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800afe2:	4607      	mov	r7, r0
 800afe4:	a805      	add	r0, sp, #20
 800afe6:	f005 f823 	bl	8010030 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800afea:	f9b8 6000 	ldrsh.w	r6, [r8]
 800afee:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800aff2:	4432      	add	r2, r6
 800aff4:	b292      	uxth	r2, r2
 800aff6:	2300      	movs	r3, #0
 800aff8:	fa0f fc82 	sxth.w	ip, r2
 800affc:	459c      	cmp	ip, r3
 800affe:	9306      	str	r3, [sp, #24]
 800b000:	dd52      	ble.n	800b0a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800b002:	42b7      	cmp	r7, r6
 800b004:	dd50      	ble.n	800b0a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800b006:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800b00a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800b00e:	442b      	add	r3, r5
 800b010:	b29b      	uxth	r3, r3
 800b012:	b219      	sxth	r1, r3
 800b014:	2900      	cmp	r1, #0
 800b016:	dd47      	ble.n	800b0a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800b018:	42a8      	cmp	r0, r5
 800b01a:	dd45      	ble.n	800b0a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800b01c:	4567      	cmp	r7, ip
 800b01e:	bfb8      	it	lt
 800b020:	b2ba      	uxthlt	r2, r7
 800b022:	4288      	cmp	r0, r1
 800b024:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800b028:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800b02c:	bfb8      	it	lt
 800b02e:	b283      	uxthlt	r3, r0
 800b030:	1b92      	subs	r2, r2, r6
 800b032:	1b5b      	subs	r3, r3, r5
 800b034:	f8ad 201c 	strh.w	r2, [sp, #28]
 800b038:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b03c:	f8ad 6018 	strh.w	r6, [sp, #24]
 800b040:	f8ad 501a 	strh.w	r5, [sp, #26]
 800b044:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800b048:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b04c:	429a      	cmp	r2, r3
 800b04e:	d026      	beq.n	800b09e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800b050:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b054:	2b00      	cmp	r3, #0
 800b056:	dd22      	ble.n	800b09e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800b058:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b05c:	2b00      	cmp	r3, #0
 800b05e:	dd1e      	ble.n	800b09e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800b060:	2300      	movs	r3, #0
 800b062:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800b066:	6823      	ldr	r3, [r4, #0]
 800b068:	a908      	add	r1, sp, #32
 800b06a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b06c:	4620      	mov	r0, r4
 800b06e:	4798      	blx	r3
 800b070:	4b0f      	ldr	r3, [pc, #60]	; (800b0b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800b072:	681b      	ldr	r3, [r3, #0]
 800b074:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800b078:	b10a      	cbz	r2, 800b07e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800b07a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800b07c:	b900      	cbnz	r0, 800b080 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800b07e:	6898      	ldr	r0, [r3, #8]
 800b080:	6801      	ldr	r1, [r0, #0]
 800b082:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800b086:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800b08a:	2501      	movs	r5, #1
 800b08c:	9502      	str	r5, [sp, #8]
 800b08e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800b092:	9401      	str	r4, [sp, #4]
 800b094:	ac06      	add	r4, sp, #24
 800b096:	9400      	str	r4, [sp, #0]
 800b098:	688c      	ldr	r4, [r1, #8]
 800b09a:	a905      	add	r1, sp, #20
 800b09c:	47a0      	blx	r4
 800b09e:	b00a      	add	sp, #40	; 0x28
 800b0a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b0a4:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800b0a6:	e797      	b.n	800afd8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800b0a8:	2300      	movs	r3, #0
 800b0aa:	9307      	str	r3, [sp, #28]
 800b0ac:	e7ca      	b.n	800b044 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800b0ae:	bf00      	nop
 800b0b0:	20012644 	.word	0x20012644

0800b0b4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800b0b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b0b8:	4b2f      	ldr	r3, [pc, #188]	; (800b178 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800b0ba:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800b0bc:	881b      	ldrh	r3, [r3, #0]
 800b0be:	4293      	cmp	r3, r2
 800b0c0:	b08d      	sub	sp, #52	; 0x34
 800b0c2:	4604      	mov	r4, r0
 800b0c4:	460f      	mov	r7, r1
 800b0c6:	d954      	bls.n	800b172 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800b0c8:	4b2c      	ldr	r3, [pc, #176]	; (800b17c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800b0ca:	6819      	ldr	r1, [r3, #0]
 800b0cc:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800b0d0:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800b0d4:	4a2a      	ldr	r2, [pc, #168]	; (800b180 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800b0d6:	6812      	ldr	r2, [r2, #0]
 800b0d8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800b0dc:	2900      	cmp	r1, #0
 800b0de:	d048      	beq.n	800b172 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800b0e0:	785a      	ldrb	r2, [r3, #1]
 800b0e2:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800b0e6:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800b0ea:	4b26      	ldr	r3, [pc, #152]	; (800b184 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800b0ec:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800b0f0:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800b0f4:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800b0f8:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800b0fa:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800b0fe:	9107      	str	r1, [sp, #28]
 800b100:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800b104:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800b108:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800b10c:	681a      	ldr	r2, [r3, #0]
 800b10e:	f88d 8020 	strb.w	r8, [sp, #32]
 800b112:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 800b116:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800b11a:	9609      	str	r6, [sp, #36]	; 0x24
 800b11c:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800b120:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800b124:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800b128:	b10b      	cbz	r3, 800b12e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800b12a:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800b12c:	b905      	cbnz	r5, 800b130 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800b12e:	6895      	ldr	r5, [r2, #8]
 800b130:	ae05      	add	r6, sp, #20
 800b132:	4621      	mov	r1, r4
 800b134:	4630      	mov	r0, r6
 800b136:	f002 ffe3 	bl	800e100 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b13a:	4b13      	ldr	r3, [pc, #76]	; (800b188 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800b13c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800b13e:	6818      	ldr	r0, [r3, #0]
 800b140:	f7f8 fe5e 	bl	8003e00 <_ZNK8touchgfx5Texts7getTextEt>
 800b144:	6823      	ldr	r3, [r4, #0]
 800b146:	4680      	mov	r8, r0
 800b148:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800b14a:	4620      	mov	r0, r4
 800b14c:	4798      	blx	r3
 800b14e:	6823      	ldr	r3, [r4, #0]
 800b150:	4681      	mov	r9, r0
 800b152:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800b156:	4620      	mov	r0, r4
 800b158:	4798      	blx	r3
 800b15a:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800b15e:	ab07      	add	r3, sp, #28
 800b160:	9300      	str	r3, [sp, #0]
 800b162:	f8cd 8004 	str.w	r8, [sp, #4]
 800b166:	463b      	mov	r3, r7
 800b168:	e896 0006 	ldmia.w	r6, {r1, r2}
 800b16c:	4628      	mov	r0, r5
 800b16e:	f7f8 fdf9 	bl	8003d64 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800b172:	b00d      	add	sp, #52	; 0x34
 800b174:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b178:	20012698 	.word	0x20012698
 800b17c:	20012694 	.word	0x20012694
 800b180:	2001269c 	.word	0x2001269c
 800b184:	20012644 	.word	0x20012644
 800b188:	200126a0 	.word	0x200126a0

0800b18c <_ZN8touchgfx5ImageD1Ev>:
 800b18c:	4770      	bx	lr

0800b18e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800b18e:	b570      	push	{r4, r5, r6, lr}
 800b190:	880b      	ldrh	r3, [r1, #0]
 800b192:	84c3      	strh	r3, [r0, #38]	; 0x26
 800b194:	4604      	mov	r4, r0
 800b196:	4608      	mov	r0, r1
 800b198:	460d      	mov	r5, r1
 800b19a:	f004 ff15 	bl	800ffc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b19e:	4606      	mov	r6, r0
 800b1a0:	4628      	mov	r0, r5
 800b1a2:	f004 ff45 	bl	8010030 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b1a6:	6823      	ldr	r3, [r4, #0]
 800b1a8:	4605      	mov	r5, r0
 800b1aa:	4631      	mov	r1, r6
 800b1ac:	4620      	mov	r0, r4
 800b1ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b1b0:	4798      	blx	r3
 800b1b2:	6823      	ldr	r3, [r4, #0]
 800b1b4:	4629      	mov	r1, r5
 800b1b6:	4620      	mov	r0, r4
 800b1b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b1ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b1be:	4718      	bx	r3

0800b1c0 <_ZN8touchgfx5ImageD0Ev>:
 800b1c0:	b510      	push	{r4, lr}
 800b1c2:	212c      	movs	r1, #44	; 0x2c
 800b1c4:	4604      	mov	r4, r0
 800b1c6:	f012 fb38 	bl	801d83a <_ZdlPvj>
 800b1ca:	4620      	mov	r0, r4
 800b1cc:	bd10      	pop	{r4, pc}

0800b1ce <_ZNK8touchgfx5Image12getSolidRectEv>:
 800b1ce:	b510      	push	{r4, lr}
 800b1d0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800b1d4:	2bff      	cmp	r3, #255	; 0xff
 800b1d6:	4604      	mov	r4, r0
 800b1d8:	d006      	beq.n	800b1e8 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800b1da:	2300      	movs	r3, #0
 800b1dc:	8003      	strh	r3, [r0, #0]
 800b1de:	8043      	strh	r3, [r0, #2]
 800b1e0:	8083      	strh	r3, [r0, #4]
 800b1e2:	80c3      	strh	r3, [r0, #6]
 800b1e4:	4620      	mov	r0, r4
 800b1e6:	bd10      	pop	{r4, pc}
 800b1e8:	3126      	adds	r1, #38	; 0x26
 800b1ea:	f004 ff55 	bl	8010098 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b1ee:	e7f9      	b.n	800b1e4 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800b1f0 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800b1f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b1f4:	4604      	mov	r4, r0
 800b1f6:	b088      	sub	sp, #32
 800b1f8:	f854 3b26 	ldr.w	r3, [r4], #38
 800b1fc:	2500      	movs	r5, #0
 800b1fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b200:	460f      	mov	r7, r1
 800b202:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800b206:	a904      	add	r1, sp, #16
 800b208:	4606      	mov	r6, r0
 800b20a:	4798      	blx	r3
 800b20c:	4620      	mov	r0, r4
 800b20e:	f004 fedb 	bl	800ffc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b212:	4680      	mov	r8, r0
 800b214:	4620      	mov	r0, r4
 800b216:	f004 ff0b 	bl	8010030 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b21a:	9506      	str	r5, [sp, #24]
 800b21c:	ad06      	add	r5, sp, #24
 800b21e:	f8ad 001e 	strh.w	r0, [sp, #30]
 800b222:	4639      	mov	r1, r7
 800b224:	4628      	mov	r0, r5
 800b226:	f8ad 801c 	strh.w	r8, [sp, #28]
 800b22a:	f7fe fc39 	bl	8009aa0 <_ZN8touchgfx4RectaNERKS0_>
 800b22e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b232:	2b00      	cmp	r3, #0
 800b234:	dd19      	ble.n	800b26a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b236:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b23a:	2b00      	cmp	r3, #0
 800b23c:	dd15      	ble.n	800b26a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b23e:	4b0c      	ldr	r3, [pc, #48]	; (800b270 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800b240:	681b      	ldr	r3, [r3, #0]
 800b242:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800b246:	b10a      	cbz	r2, 800b24c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800b248:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800b24a:	b900      	cbnz	r0, 800b24e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800b24c:	6898      	ldr	r0, [r3, #8]
 800b24e:	6801      	ldr	r1, [r0, #0]
 800b250:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800b254:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800b258:	2701      	movs	r7, #1
 800b25a:	9702      	str	r7, [sp, #8]
 800b25c:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800b260:	e9cd 5600 	strd	r5, r6, [sp]
 800b264:	688d      	ldr	r5, [r1, #8]
 800b266:	4621      	mov	r1, r4
 800b268:	47a8      	blx	r5
 800b26a:	b008      	add	sp, #32
 800b26c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b270:	20012644 	.word	0x20012644

0800b274 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800b274:	4770      	bx	lr

0800b276 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800b276:	b510      	push	{r4, lr}
 800b278:	2148      	movs	r1, #72	; 0x48
 800b27a:	4604      	mov	r4, r0
 800b27c:	f012 fadd 	bl	801d83a <_ZdlPvj>
 800b280:	4620      	mov	r0, r4
 800b282:	bd10      	pop	{r4, pc}

0800b284 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800b284:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b288:	b08d      	sub	sp, #52	; 0x34
 800b28a:	4604      	mov	r4, r0
 800b28c:	460f      	mov	r7, r1
 800b28e:	f7ff fe99 	bl	800afc4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800b292:	4a55      	ldr	r2, [pc, #340]	; (800b3e8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 800b294:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800b296:	8812      	ldrh	r2, [r2, #0]
 800b298:	429a      	cmp	r2, r3
 800b29a:	f240 8082 	bls.w	800b3a2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800b29e:	4d53      	ldr	r5, [pc, #332]	; (800b3ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 800b2a0:	682a      	ldr	r2, [r5, #0]
 800b2a2:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800b2a6:	4b52      	ldr	r3, [pc, #328]	; (800b3f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800b2a8:	681b      	ldr	r3, [r3, #0]
 800b2aa:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800b2ae:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 800b2b2:	2200      	movs	r2, #0
 800b2b4:	e9cd 2203 	strd	r2, r2, [sp, #12]
 800b2b8:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800b2bc:	2a03      	cmp	r2, #3
 800b2be:	d811      	bhi.n	800b2e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800b2c0:	e8df f002 	tbb	[pc, r2]
 800b2c4:	89727902 	.word	0x89727902
 800b2c8:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800b2cc:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800b2d0:	1ad2      	subs	r2, r2, r3
 800b2d2:	2002      	movs	r0, #2
 800b2d4:	f8ad 1010 	strh.w	r1, [sp, #16]
 800b2d8:	fb92 f2f0 	sdiv	r2, r2, r0
 800b2dc:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b2e0:	f8ad 200e 	strh.w	r2, [sp, #14]
 800b2e4:	f10d 080c 	add.w	r8, sp, #12
 800b2e8:	e898 0003 	ldmia.w	r8, {r0, r1}
 800b2ec:	f10d 0914 	add.w	r9, sp, #20
 800b2f0:	e889 0003 	stmia.w	r9, {r0, r1}
 800b2f4:	4639      	mov	r1, r7
 800b2f6:	4648      	mov	r0, r9
 800b2f8:	f7fe fbd2 	bl	8009aa0 <_ZN8touchgfx4RectaNERKS0_>
 800b2fc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800b300:	2b00      	cmp	r3, #0
 800b302:	dd4e      	ble.n	800b3a2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800b304:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800b308:	2b00      	cmp	r3, #0
 800b30a:	dd4a      	ble.n	800b3a2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800b30c:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800b310:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b314:	1a9b      	subs	r3, r3, r2
 800b316:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b31a:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800b31e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800b322:	1a9b      	subs	r3, r3, r2
 800b324:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b328:	6823      	ldr	r3, [r4, #0]
 800b32a:	4641      	mov	r1, r8
 800b32c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b32e:	4620      	mov	r0, r4
 800b330:	4798      	blx	r3
 800b332:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800b336:	2b00      	cmp	r3, #0
 800b338:	d053      	beq.n	800b3e2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 800b33a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b33c:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800b33e:	682b      	ldr	r3, [r5, #0]
 800b340:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800b344:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800b348:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800b34c:	785b      	ldrb	r3, [r3, #1]
 800b34e:	9209      	str	r2, [sp, #36]	; 0x24
 800b350:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800b354:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800b358:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800b35c:	2300      	movs	r3, #0
 800b35e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800b362:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800b366:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800b36a:	4b22      	ldr	r3, [pc, #136]	; (800b3f4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800b36c:	9607      	str	r6, [sp, #28]
 800b36e:	681b      	ldr	r3, [r3, #0]
 800b370:	f88d 5020 	strb.w	r5, [sp, #32]
 800b374:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800b378:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b37c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b380:	b10a      	cbz	r2, 800b386 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800b382:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800b384:	b904      	cbnz	r4, 800b388 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 800b386:	689c      	ldr	r4, [r3, #8]
 800b388:	4b1b      	ldr	r3, [pc, #108]	; (800b3f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800b38a:	6818      	ldr	r0, [r3, #0]
 800b38c:	f7f8 fd38 	bl	8003e00 <_ZNK8touchgfx5Texts7getTextEt>
 800b390:	ab07      	add	r3, sp, #28
 800b392:	9001      	str	r0, [sp, #4]
 800b394:	9300      	str	r3, [sp, #0]
 800b396:	e898 0006 	ldmia.w	r8, {r1, r2}
 800b39a:	464b      	mov	r3, r9
 800b39c:	4620      	mov	r0, r4
 800b39e:	f7f8 fce1 	bl	8003d64 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800b3a2:	b00d      	add	sp, #52	; 0x34
 800b3a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b3a8:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800b3ac:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800b3b0:	1ad2      	subs	r2, r2, r3
 800b3b2:	3201      	adds	r2, #1
 800b3b4:	e78d      	b.n	800b2d2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 800b3b6:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800b3ba:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800b3be:	1ad2      	subs	r2, r2, r3
 800b3c0:	3201      	adds	r2, #1
 800b3c2:	2002      	movs	r0, #2
 800b3c4:	f8ad 3010 	strh.w	r3, [sp, #16]
 800b3c8:	fb92 f2f0 	sdiv	r2, r2, r0
 800b3cc:	f8ad 1012 	strh.w	r1, [sp, #18]
 800b3d0:	f8ad 200c 	strh.w	r2, [sp, #12]
 800b3d4:	e786      	b.n	800b2e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800b3d6:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800b3da:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800b3de:	1ad2      	subs	r2, r2, r3
 800b3e0:	e7ef      	b.n	800b3c2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 800b3e2:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800b3e4:	e7aa      	b.n	800b33c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 800b3e6:	bf00      	nop
 800b3e8:	20012698 	.word	0x20012698
 800b3ec:	20012694 	.word	0x20012694
 800b3f0:	2001269c 	.word	0x2001269c
 800b3f4:	20012644 	.word	0x20012644
 800b3f8:	200126a0 	.word	0x200126a0

0800b3fc <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800b3fc:	b510      	push	{r4, lr}
 800b3fe:	2101      	movs	r1, #1
 800b400:	4c13      	ldr	r4, [pc, #76]	; (800b450 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800b402:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800b406:	2200      	movs	r2, #0
 800b408:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800b40c:	6004      	str	r4, [r0, #0]
 800b40e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b412:	4c10      	ldr	r4, [pc, #64]	; (800b454 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800b414:	8082      	strh	r2, [r0, #4]
 800b416:	80c2      	strh	r2, [r0, #6]
 800b418:	8102      	strh	r2, [r0, #8]
 800b41a:	8142      	strh	r2, [r0, #10]
 800b41c:	8182      	strh	r2, [r0, #12]
 800b41e:	81c2      	strh	r2, [r0, #14]
 800b420:	8202      	strh	r2, [r0, #16]
 800b422:	8242      	strh	r2, [r0, #18]
 800b424:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b428:	61c2      	str	r2, [r0, #28]
 800b42a:	8402      	strh	r2, [r0, #32]
 800b42c:	8442      	strh	r2, [r0, #34]	; 0x22
 800b42e:	6282      	str	r2, [r0, #40]	; 0x28
 800b430:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800b434:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800b436:	8601      	strh	r1, [r0, #48]	; 0x30
 800b438:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800b43c:	6344      	str	r4, [r0, #52]	; 0x34
 800b43e:	8701      	strh	r1, [r0, #56]	; 0x38
 800b440:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800b444:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800b448:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 800b44c:	bd10      	pop	{r4, pc}
 800b44e:	bf00      	nop
 800b450:	080205f0 	.word	0x080205f0
 800b454:	0801f398 	.word	0x0801f398

0800b458 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800b458:	b510      	push	{r4, lr}
 800b45a:	6803      	ldr	r3, [r0, #0]
 800b45c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b45e:	460c      	mov	r4, r1
 800b460:	4798      	blx	r3
 800b462:	1b03      	subs	r3, r0, r4
 800b464:	4258      	negs	r0, r3
 800b466:	4158      	adcs	r0, r3
 800b468:	bd10      	pop	{r4, pc}
	...

0800b46c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800b46c:	4b01      	ldr	r3, [pc, #4]	; (800b474 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800b46e:	6019      	str	r1, [r3, #0]
 800b470:	4770      	bx	lr
 800b472:	bf00      	nop
 800b474:	2001264c 	.word	0x2001264c

0800b478 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b47c:	4696      	mov	lr, r2
 800b47e:	4605      	mov	r5, r0
 800b480:	4614      	mov	r4, r2
 800b482:	460e      	mov	r6, r1
 800b484:	461f      	mov	r7, r3
 800b486:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b48a:	b097      	sub	sp, #92	; 0x5c
 800b48c:	f10d 0c1c 	add.w	ip, sp, #28
 800b490:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b494:	f8de 3000 	ldr.w	r3, [lr]
 800b498:	f8cc 3000 	str.w	r3, [ip]
 800b49c:	f104 0e14 	add.w	lr, r4, #20
 800b4a0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b4a4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800b4a8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b4ac:	f8de 3000 	ldr.w	r3, [lr]
 800b4b0:	f8cc 3000 	str.w	r3, [ip]
 800b4b4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800b4b8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b4bc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800b4c0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b4c4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800b4c8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800b4cc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800b4d0:	f8de 3000 	ldr.w	r3, [lr]
 800b4d4:	f8cc 3000 	str.w	r3, [ip]
 800b4d8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b4da:	682b      	ldr	r3, [r5, #0]
 800b4dc:	9201      	str	r2, [sp, #4]
 800b4de:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b4e2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b4e4:	9200      	str	r2, [sp, #0]
 800b4e6:	f8cd 8008 	str.w	r8, [sp, #8]
 800b4ea:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800b4ee:	aa07      	add	r2, sp, #28
 800b4f0:	463b      	mov	r3, r7
 800b4f2:	4631      	mov	r1, r6
 800b4f4:	4628      	mov	r0, r5
 800b4f6:	47d8      	blx	fp
 800b4f8:	46a6      	mov	lr, r4
 800b4fa:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b4fe:	f10d 0c1c 	add.w	ip, sp, #28
 800b502:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b506:	f8de 3000 	ldr.w	r3, [lr]
 800b50a:	f8cc 3000 	str.w	r3, [ip]
 800b50e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800b512:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b516:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800b51a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b51e:	343c      	adds	r4, #60	; 0x3c
 800b520:	f8de 3000 	ldr.w	r3, [lr]
 800b524:	f8cc 3000 	str.w	r3, [ip]
 800b528:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b52a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800b52e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b532:	6823      	ldr	r3, [r4, #0]
 800b534:	f8cc 3000 	str.w	r3, [ip]
 800b538:	682b      	ldr	r3, [r5, #0]
 800b53a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b53e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b540:	9201      	str	r2, [sp, #4]
 800b542:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b544:	9200      	str	r2, [sp, #0]
 800b546:	f8cd 8008 	str.w	r8, [sp, #8]
 800b54a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800b54c:	aa07      	add	r2, sp, #28
 800b54e:	463b      	mov	r3, r7
 800b550:	4631      	mov	r1, r6
 800b552:	4628      	mov	r0, r5
 800b554:	47a0      	blx	r4
 800b556:	b017      	add	sp, #92	; 0x5c
 800b558:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b55c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800b55c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b560:	b08d      	sub	sp, #52	; 0x34
 800b562:	4688      	mov	r8, r1
 800b564:	9916      	ldr	r1, [sp, #88]	; 0x58
 800b566:	f8d3 c000 	ldr.w	ip, [r3]
 800b56a:	680f      	ldr	r7, [r1, #0]
 800b56c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800b570:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800b574:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800b578:	edd3 6a07 	vldr	s13, [r3, #28]
 800b57c:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b57e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800b582:	f9b1 9000 	ldrsh.w	r9, [r1]
 800b586:	f9ba 1000 	ldrsh.w	r1, [sl]
 800b58a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800b58e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800b592:	eba7 070c 	sub.w	r7, r7, ip
 800b596:	42bc      	cmp	r4, r7
 800b598:	bfa8      	it	ge
 800b59a:	463c      	movge	r4, r7
 800b59c:	ee07 4a90 	vmov	s15, r4
 800b5a0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800b5a4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800b5a8:	ee25 4a04 	vmul.f32	s8, s10, s8
 800b5ac:	ee65 4a24 	vmul.f32	s9, s10, s9
 800b5b0:	ee25 5a27 	vmul.f32	s10, s10, s15
 800b5b4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800b5b8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800b5bc:	eb09 0e0c 	add.w	lr, r9, ip
 800b5c0:	4571      	cmp	r1, lr
 800b5c2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800b5c6:	ee32 1a05 	vadd.f32	s2, s4, s10
 800b5ca:	ee36 0a84 	vadd.f32	s0, s13, s8
 800b5ce:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b5d2:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b5d6:	f340 808d 	ble.w	800b6f4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800b5da:	eba1 060e 	sub.w	r6, r1, lr
 800b5de:	fb96 f5f4 	sdiv	r5, r6, r4
 800b5e2:	ee07 5a10 	vmov	s14, r5
 800b5e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b5ea:	2d00      	cmp	r5, #0
 800b5ec:	fb04 6615 	mls	r6, r4, r5, r6
 800b5f0:	eea7 0a04 	vfma.f32	s0, s14, s8
 800b5f4:	eee7 0a24 	vfma.f32	s1, s14, s9
 800b5f8:	eea7 1a05 	vfma.f32	s2, s14, s10
 800b5fc:	dd13      	ble.n	800b626 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800b5fe:	ee70 6a44 	vsub.f32	s13, s0, s8
 800b602:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800b606:	eef5 6a40 	vcmp.f32	s13, #0.0
 800b60a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b60e:	bf18      	it	ne
 800b610:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800b614:	ee31 2a45 	vsub.f32	s4, s2, s10
 800b618:	bf08      	it	eq
 800b61a:	eeb0 7a67 	vmoveq.f32	s14, s15
 800b61e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b622:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b626:	fb05 f204 	mul.w	r2, r5, r4
 800b62a:	1abf      	subs	r7, r7, r2
 800b62c:	4494      	add	ip, r2
 800b62e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800b632:	4411      	add	r1, r2
 800b634:	eb09 020c 	add.w	r2, r9, ip
 800b638:	443a      	add	r2, r7
 800b63a:	b209      	sxth	r1, r1
 800b63c:	428a      	cmp	r2, r1
 800b63e:	bfc4      	itt	gt
 800b640:	eba1 0209 	subgt.w	r2, r1, r9
 800b644:	eba2 070c 	subgt.w	r7, r2, ip
 800b648:	2f00      	cmp	r7, #0
 800b64a:	dd50      	ble.n	800b6ee <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800b64c:	fb97 f1f4 	sdiv	r1, r7, r4
 800b650:	fb04 7211 	mls	r2, r4, r1, r7
 800b654:	b90a      	cbnz	r2, 800b65a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800b656:	3901      	subs	r1, #1
 800b658:	4622      	mov	r2, r4
 800b65a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800b65e:	6840      	ldr	r0, [r0, #4]
 800b660:	900b      	str	r0, [sp, #44]	; 0x2c
 800b662:	f8d0 a000 	ldr.w	sl, [r0]
 800b666:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800b668:	9008      	str	r0, [sp, #32]
 800b66a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800b66e:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b670:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800b674:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800b678:	695b      	ldr	r3, [r3, #20]
 800b67a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800b67c:	445b      	add	r3, fp
 800b67e:	eef0 6a42 	vmov.f32	s13, s4
 800b682:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800b686:	ee21 3a23 	vmul.f32	s6, s2, s7
 800b68a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800b68e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800b692:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b696:	9307      	str	r3, [sp, #28]
 800b698:	ee17 7a90 	vmov	r7, s15
 800b69c:	ee73 7a42 	vsub.f32	s15, s6, s4
 800b6a0:	eeb0 7a61 	vmov.f32	s14, s3
 800b6a4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b6a8:	ee16 3a90 	vmov	r3, s13
 800b6ac:	fb97 f7f4 	sdiv	r7, r7, r4
 800b6b0:	ee17 ca90 	vmov	ip, s15
 800b6b4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800b6b8:	fb9c fcf4 	sdiv	ip, ip, r4
 800b6bc:	fb0c 3306 	mla	r3, ip, r6, r3
 800b6c0:	9302      	str	r3, [sp, #8]
 800b6c2:	ee17 3a10 	vmov	r3, s14
 800b6c6:	44b6      	add	lr, r6
 800b6c8:	fb04 e505 	mla	r5, r4, r5, lr
 800b6cc:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800b6d0:	fb07 3706 	mla	r7, r7, r6, r3
 800b6d4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800b6d8:	e9cd 4700 	strd	r4, r7, [sp]
 800b6dc:	2900      	cmp	r1, #0
 800b6de:	bfcc      	ite	gt
 800b6e0:	46a1      	movgt	r9, r4
 800b6e2:	4691      	movle	r9, r2
 800b6e4:	eba9 0306 	sub.w	r3, r9, r6
 800b6e8:	f8da 4008 	ldr.w	r4, [sl, #8]
 800b6ec:	47a0      	blx	r4
 800b6ee:	b00d      	add	sp, #52	; 0x34
 800b6f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b6f4:	2500      	movs	r5, #0
 800b6f6:	462e      	mov	r6, r5
 800b6f8:	e799      	b.n	800b62e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800b6fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b6fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b700:	b0db      	sub	sp, #364	; 0x16c
 800b702:	461d      	mov	r5, r3
 800b704:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800b708:	930a      	str	r3, [sp, #40]	; 0x28
 800b70a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800b70e:	930b      	str	r3, [sp, #44]	; 0x2c
 800b710:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800b714:	9310      	str	r3, [sp, #64]	; 0x40
 800b716:	6803      	ldr	r3, [r0, #0]
 800b718:	910f      	str	r1, [sp, #60]	; 0x3c
 800b71a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800b71c:	9009      	str	r0, [sp, #36]	; 0x24
 800b71e:	4614      	mov	r4, r2
 800b720:	4629      	mov	r1, r5
 800b722:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800b726:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800b72a:	47b8      	blx	r7
 800b72c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b72e:	6058      	str	r0, [r3, #4]
 800b730:	2800      	cmp	r0, #0
 800b732:	f000 83a1 	beq.w	800be78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b736:	682b      	ldr	r3, [r5, #0]
 800b738:	9314      	str	r3, [sp, #80]	; 0x50
 800b73a:	686b      	ldr	r3, [r5, #4]
 800b73c:	9315      	str	r3, [sp, #84]	; 0x54
 800b73e:	4bc4      	ldr	r3, [pc, #784]	; (800ba50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800b740:	ed94 7a02 	vldr	s14, [r4, #8]
 800b744:	7819      	ldrb	r1, [r3, #0]
 800b746:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800b74a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800b74e:	2900      	cmp	r1, #0
 800b750:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b754:	bf16      	itet	ne
 800b756:	4619      	movne	r1, r3
 800b758:	4611      	moveq	r1, r2
 800b75a:	4613      	movne	r3, r2
 800b75c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b760:	9116      	str	r1, [sp, #88]	; 0x58
 800b762:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800b766:	f240 8387 	bls.w	800be78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b76a:	ed94 7a07 	vldr	s14, [r4, #28]
 800b76e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b772:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b776:	f240 837f 	bls.w	800be78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b77a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800b77e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b782:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b786:	f240 8377 	bls.w	800be78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b78a:	6822      	ldr	r2, [r4, #0]
 800b78c:	4bb1      	ldr	r3, [pc, #708]	; (800ba54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800b78e:	429a      	cmp	r2, r3
 800b790:	f2c0 8372 	blt.w	800be78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b794:	49b0      	ldr	r1, [pc, #704]	; (800ba58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800b796:	6963      	ldr	r3, [r4, #20]
 800b798:	428a      	cmp	r2, r1
 800b79a:	f300 836d 	bgt.w	800be78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b79e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b7a2:	48ae      	ldr	r0, [pc, #696]	; (800ba5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800b7a4:	33ff      	adds	r3, #255	; 0xff
 800b7a6:	4283      	cmp	r3, r0
 800b7a8:	f200 8366 	bhi.w	800be78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b7ac:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b7ae:	4dac      	ldr	r5, [pc, #688]	; (800ba60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800b7b0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b7b4:	33ff      	adds	r3, #255	; 0xff
 800b7b6:	42ab      	cmp	r3, r5
 800b7b8:	f200 835e 	bhi.w	800be78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b7bc:	6862      	ldr	r2, [r4, #4]
 800b7be:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800b7c2:	33ff      	adds	r3, #255	; 0xff
 800b7c4:	4283      	cmp	r3, r0
 800b7c6:	f200 8357 	bhi.w	800be78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b7ca:	69a1      	ldr	r1, [r4, #24]
 800b7cc:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800b7d0:	33ff      	adds	r3, #255	; 0xff
 800b7d2:	4283      	cmp	r3, r0
 800b7d4:	f200 8350 	bhi.w	800be78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b7d8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b7da:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800b7de:	30ff      	adds	r0, #255	; 0xff
 800b7e0:	42a8      	cmp	r0, r5
 800b7e2:	f200 8349 	bhi.w	800be78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b7e6:	428a      	cmp	r2, r1
 800b7e8:	f280 8110 	bge.w	800ba0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800b7ec:	429a      	cmp	r2, r3
 800b7ee:	f300 8119 	bgt.w	800ba24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800b7f2:	4299      	cmp	r1, r3
 800b7f4:	f280 811d 	bge.w	800ba32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800b7f8:	2502      	movs	r5, #2
 800b7fa:	2701      	movs	r7, #1
 800b7fc:	46a9      	mov	r9, r5
 800b7fe:	46b8      	mov	r8, r7
 800b800:	f04f 0a00 	mov.w	sl, #0
 800b804:	4621      	mov	r1, r4
 800b806:	a849      	add	r0, sp, #292	; 0x124
 800b808:	f003 fd9a 	bl	800f340 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800b80c:	4622      	mov	r2, r4
 800b80e:	4653      	mov	r3, sl
 800b810:	a949      	add	r1, sp, #292	; 0x124
 800b812:	f8cd 9000 	str.w	r9, [sp]
 800b816:	a819      	add	r0, sp, #100	; 0x64
 800b818:	f003 fec2 	bl	800f5a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b81c:	4622      	mov	r2, r4
 800b81e:	4653      	mov	r3, sl
 800b820:	a949      	add	r1, sp, #292	; 0x124
 800b822:	f8cd 8000 	str.w	r8, [sp]
 800b826:	a829      	add	r0, sp, #164	; 0xa4
 800b828:	f003 feba 	bl	800f5a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b82c:	4643      	mov	r3, r8
 800b82e:	4622      	mov	r2, r4
 800b830:	a949      	add	r1, sp, #292	; 0x124
 800b832:	f8cd 9000 	str.w	r9, [sp]
 800b836:	a839      	add	r0, sp, #228	; 0xe4
 800b838:	f003 feb2 	bl	800f5a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b83c:	42af      	cmp	r7, r5
 800b83e:	bfb5      	itete	lt
 800b840:	2300      	movlt	r3, #0
 800b842:	2301      	movge	r3, #1
 800b844:	930e      	strlt	r3, [sp, #56]	; 0x38
 800b846:	930e      	strge	r3, [sp, #56]	; 0x38
 800b848:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b84a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800b84e:	af12      	add	r7, sp, #72	; 0x48
 800b850:	bfb9      	ittee	lt
 800b852:	ad29      	addlt	r5, sp, #164	; 0xa4
 800b854:	ac19      	addlt	r4, sp, #100	; 0x64
 800b856:	ad19      	addge	r5, sp, #100	; 0x64
 800b858:	ac29      	addge	r4, sp, #164	; 0xa4
 800b85a:	e887 0003 	stmia.w	r7, {r0, r1}
 800b85e:	b928      	cbnz	r0, 800b86c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800b860:	4b80      	ldr	r3, [pc, #512]	; (800ba64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800b862:	6818      	ldr	r0, [r3, #0]
 800b864:	6803      	ldr	r3, [r0, #0]
 800b866:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b868:	4798      	blx	r3
 800b86a:	6038      	str	r0, [r7, #0]
 800b86c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b86e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b872:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b876:	930c      	str	r3, [sp, #48]	; 0x30
 800b878:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b87a:	6963      	ldr	r3, [r4, #20]
 800b87c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800b87e:	440b      	add	r3, r1
 800b880:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b884:	4408      	add	r0, r1
 800b886:	b200      	sxth	r0, r0
 800b888:	4283      	cmp	r3, r0
 800b88a:	900d      	str	r0, [sp, #52]	; 0x34
 800b88c:	f280 80dd 	bge.w	800ba4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800b890:	428b      	cmp	r3, r1
 800b892:	da08      	bge.n	800b8a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b894:	2a00      	cmp	r2, #0
 800b896:	dd06      	ble.n	800b8a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b898:	1acb      	subs	r3, r1, r3
 800b89a:	429a      	cmp	r2, r3
 800b89c:	f2c0 80e4 	blt.w	800ba68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800b8a0:	2b00      	cmp	r3, #0
 800b8a2:	f300 80e2 	bgt.w	800ba6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800b8a6:	6967      	ldr	r7, [r4, #20]
 800b8a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b8aa:	443b      	add	r3, r7
 800b8ac:	461f      	mov	r7, r3
 800b8ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b8b0:	1bdf      	subs	r7, r3, r7
 800b8b2:	4297      	cmp	r7, r2
 800b8b4:	bfa8      	it	ge
 800b8b6:	4617      	movge	r7, r2
 800b8b8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800b8bc:	2f00      	cmp	r7, #0
 800b8be:	f340 8166 	ble.w	800bb8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800b8c2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b8c4:	6829      	ldr	r1, [r5, #0]
 800b8c6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b8ca:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b8ce:	6820      	ldr	r0, [r4, #0]
 800b8d0:	4411      	add	r1, r2
 800b8d2:	4299      	cmp	r1, r3
 800b8d4:	dd1a      	ble.n	800b90c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b8d6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b8da:	440b      	add	r3, r1
 800b8dc:	4402      	add	r2, r0
 800b8de:	b21b      	sxth	r3, r3
 800b8e0:	429a      	cmp	r2, r3
 800b8e2:	dc13      	bgt.n	800b90c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b8e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b8e6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b8e8:	681b      	ldr	r3, [r3, #0]
 800b8ea:	9206      	str	r2, [sp, #24]
 800b8ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b8ee:	9205      	str	r2, [sp, #20]
 800b8f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b8f2:	9500      	str	r5, [sp, #0]
 800b8f4:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b8f8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800b8fa:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b8fc:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b900:	a912      	add	r1, sp, #72	; 0x48
 800b902:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800b906:	aa49      	add	r2, sp, #292	; 0x124
 800b908:	4623      	mov	r3, r4
 800b90a:	47c8      	blx	r9
 800b90c:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b910:	441a      	add	r2, r3
 800b912:	6963      	ldr	r3, [r4, #20]
 800b914:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b918:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b91c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b920:	68a1      	ldr	r1, [r4, #8]
 800b922:	ed94 6a08 	vldr	s12, [r4, #32]
 800b926:	6022      	str	r2, [r4, #0]
 800b928:	3301      	adds	r3, #1
 800b92a:	6163      	str	r3, [r4, #20]
 800b92c:	69a3      	ldr	r3, [r4, #24]
 800b92e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b932:	3b01      	subs	r3, #1
 800b934:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b938:	61a3      	str	r3, [r4, #24]
 800b93a:	6923      	ldr	r3, [r4, #16]
 800b93c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b940:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b944:	edd4 6a07 	vldr	s13, [r4, #28]
 800b948:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b94c:	440b      	add	r3, r1
 800b94e:	68e1      	ldr	r1, [r4, #12]
 800b950:	6123      	str	r3, [r4, #16]
 800b952:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b956:	428b      	cmp	r3, r1
 800b958:	edc4 6a07 	vstr	s13, [r4, #28]
 800b95c:	db15      	blt.n	800b98a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800b95e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b962:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b966:	3201      	adds	r2, #1
 800b968:	edc4 6a07 	vstr	s13, [r4, #28]
 800b96c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b970:	6022      	str	r2, [r4, #0]
 800b972:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b976:	1a5b      	subs	r3, r3, r1
 800b978:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b97c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b980:	6123      	str	r3, [r4, #16]
 800b982:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b986:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b98a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b98e:	441a      	add	r2, r3
 800b990:	696b      	ldr	r3, [r5, #20]
 800b992:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b996:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b99a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b99e:	68a9      	ldr	r1, [r5, #8]
 800b9a0:	ed95 6a08 	vldr	s12, [r5, #32]
 800b9a4:	602a      	str	r2, [r5, #0]
 800b9a6:	3301      	adds	r3, #1
 800b9a8:	616b      	str	r3, [r5, #20]
 800b9aa:	69ab      	ldr	r3, [r5, #24]
 800b9ac:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b9b0:	3b01      	subs	r3, #1
 800b9b2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b9b6:	61ab      	str	r3, [r5, #24]
 800b9b8:	692b      	ldr	r3, [r5, #16]
 800b9ba:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b9be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b9c2:	edd5 6a07 	vldr	s13, [r5, #28]
 800b9c6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b9ca:	440b      	add	r3, r1
 800b9cc:	68e9      	ldr	r1, [r5, #12]
 800b9ce:	612b      	str	r3, [r5, #16]
 800b9d0:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b9d4:	428b      	cmp	r3, r1
 800b9d6:	edc5 6a07 	vstr	s13, [r5, #28]
 800b9da:	db15      	blt.n	800ba08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800b9dc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b9e0:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b9e4:	3201      	adds	r2, #1
 800b9e6:	edc5 6a07 	vstr	s13, [r5, #28]
 800b9ea:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b9ee:	602a      	str	r2, [r5, #0]
 800b9f0:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b9f4:	1a5b      	subs	r3, r3, r1
 800b9f6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b9fa:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b9fe:	612b      	str	r3, [r5, #16]
 800ba00:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ba04:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ba08:	3f01      	subs	r7, #1
 800ba0a:	e757      	b.n	800b8bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800ba0c:	4299      	cmp	r1, r3
 800ba0e:	dc13      	bgt.n	800ba38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800ba10:	429a      	cmp	r2, r3
 800ba12:	da14      	bge.n	800ba3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800ba14:	2502      	movs	r5, #2
 800ba16:	2703      	movs	r7, #3
 800ba18:	46a9      	mov	r9, r5
 800ba1a:	f04f 0800 	mov.w	r8, #0
 800ba1e:	f04f 0a01 	mov.w	sl, #1
 800ba22:	e6ef      	b.n	800b804 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ba24:	2501      	movs	r5, #1
 800ba26:	2700      	movs	r7, #0
 800ba28:	46a9      	mov	r9, r5
 800ba2a:	46b8      	mov	r8, r7
 800ba2c:	f04f 0a02 	mov.w	sl, #2
 800ba30:	e6e8      	b.n	800b804 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ba32:	2501      	movs	r5, #1
 800ba34:	2702      	movs	r7, #2
 800ba36:	e6e1      	b.n	800b7fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800ba38:	2500      	movs	r5, #0
 800ba3a:	2701      	movs	r7, #1
 800ba3c:	e7f4      	b.n	800ba28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800ba3e:	2702      	movs	r7, #2
 800ba40:	2503      	movs	r5, #3
 800ba42:	f04f 0900 	mov.w	r9, #0
 800ba46:	46b8      	mov	r8, r7
 800ba48:	e7e9      	b.n	800ba1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800ba4a:	4613      	mov	r3, r2
 800ba4c:	e728      	b.n	800b8a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800ba4e:	bf00      	nop
 800ba50:	2001263c 	.word	0x2001263c
 800ba54:	fffd8f01 	.word	0xfffd8f01
 800ba58:	00027100 	.word	0x00027100
 800ba5c:	0004e1ff 	.word	0x0004e1ff
 800ba60:	0004e1fe 	.word	0x0004e1fe
 800ba64:	20012644 	.word	0x20012644
 800ba68:	4613      	mov	r3, r2
 800ba6a:	992b      	ldr	r1, [sp, #172]	; 0xac
 800ba6c:	9111      	str	r1, [sp, #68]	; 0x44
 800ba6e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800ba72:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800ba76:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800ba78:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800ba7c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800ba80:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800ba84:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800ba88:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800ba8c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800ba90:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800ba94:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800ba98:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800ba9c:	469e      	mov	lr, r3
 800ba9e:	469c      	mov	ip, r3
 800baa0:	f04f 0900 	mov.w	r9, #0
 800baa4:	f1bc 0f00 	cmp.w	ip, #0
 800baa8:	d147      	bne.n	800bb3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800baaa:	eb03 0c07 	add.w	ip, r3, r7
 800baae:	1ad7      	subs	r7, r2, r3
 800bab0:	f1b9 0f00 	cmp.w	r9, #0
 800bab4:	d009      	beq.n	800baca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800bab6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800baba:	9029      	str	r0, [sp, #164]	; 0xa4
 800babc:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800bac0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800bac4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800bac8:	912d      	str	r1, [sp, #180]	; 0xb4
 800baca:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800bacc:	9111      	str	r1, [sp, #68]	; 0x44
 800bace:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800bad2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800bad6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800bada:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800bade:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800bae2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800bae6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800baea:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800baee:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800baf2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800baf6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800bafa:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800bafe:	f04f 0800 	mov.w	r8, #0
 800bb02:	f1be 0f00 	cmp.w	lr, #0
 800bb06:	d031      	beq.n	800bb6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800bb08:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800bb0a:	4431      	add	r1, r6
 800bb0c:	4549      	cmp	r1, r9
 800bb0e:	4450      	add	r0, sl
 800bb10:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800bb14:	ee37 7a04 	vadd.f32	s14, s14, s8
 800bb18:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800bb1c:	db08      	blt.n	800bb30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800bb1e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800bb22:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800bb26:	ee37 7a06 	vadd.f32	s14, s14, s12
 800bb2a:	3001      	adds	r0, #1
 800bb2c:	eba1 0109 	sub.w	r1, r1, r9
 800bb30:	f10e 3eff 	add.w	lr, lr, #4294967295
 800bb34:	f04f 0801 	mov.w	r8, #1
 800bb38:	e7e3      	b.n	800bb02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800bb3a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800bb3c:	4431      	add	r1, r6
 800bb3e:	4541      	cmp	r1, r8
 800bb40:	4450      	add	r0, sl
 800bb42:	ee37 7a24 	vadd.f32	s14, s14, s9
 800bb46:	ee77 7a84 	vadd.f32	s15, s15, s8
 800bb4a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800bb4e:	db08      	blt.n	800bb62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800bb50:	ee76 6a85 	vadd.f32	s13, s13, s10
 800bb54:	ee37 7a25 	vadd.f32	s14, s14, s11
 800bb58:	ee77 7a86 	vadd.f32	s15, s15, s12
 800bb5c:	3001      	adds	r0, #1
 800bb5e:	eba1 0108 	sub.w	r1, r1, r8
 800bb62:	f10c 3cff 	add.w	ip, ip, #4294967295
 800bb66:	f04f 0901 	mov.w	r9, #1
 800bb6a:	e79b      	b.n	800baa4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800bb6c:	449c      	add	ip, r3
 800bb6e:	1aff      	subs	r7, r7, r3
 800bb70:	f1b8 0f00 	cmp.w	r8, #0
 800bb74:	d009      	beq.n	800bb8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800bb76:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800bb7a:	9019      	str	r0, [sp, #100]	; 0x64
 800bb7c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800bb80:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800bb84:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800bb88:	911d      	str	r1, [sp, #116]	; 0x74
 800bb8a:	1ad2      	subs	r2, r2, r3
 800bb8c:	e68b      	b.n	800b8a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800bb8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bb90:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800bb92:	2b00      	cmp	r3, #0
 800bb94:	f000 80d1 	beq.w	800bd3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800bb98:	ad19      	add	r5, sp, #100	; 0x64
 800bb9a:	ac39      	add	r4, sp, #228	; 0xe4
 800bb9c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800bb9e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800bba2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800bba6:	930c      	str	r3, [sp, #48]	; 0x30
 800bba8:	990c      	ldr	r1, [sp, #48]	; 0x30
 800bbaa:	6963      	ldr	r3, [r4, #20]
 800bbac:	440b      	add	r3, r1
 800bbae:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800bbb2:	4408      	add	r0, r1
 800bbb4:	b200      	sxth	r0, r0
 800bbb6:	4283      	cmp	r3, r0
 800bbb8:	900d      	str	r0, [sp, #52]	; 0x34
 800bbba:	f280 80c1 	bge.w	800bd40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800bbbe:	428b      	cmp	r3, r1
 800bbc0:	da08      	bge.n	800bbd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800bbc2:	2a00      	cmp	r2, #0
 800bbc4:	dd06      	ble.n	800bbd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800bbc6:	1acb      	subs	r3, r1, r3
 800bbc8:	429a      	cmp	r2, r3
 800bbca:	f2c0 80bb 	blt.w	800bd44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800bbce:	2b00      	cmp	r3, #0
 800bbd0:	f300 80b9 	bgt.w	800bd46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800bbd4:	6967      	ldr	r7, [r4, #20]
 800bbd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800bbd8:	443b      	add	r3, r7
 800bbda:	461f      	mov	r7, r3
 800bbdc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bbde:	1bdf      	subs	r7, r3, r7
 800bbe0:	4297      	cmp	r7, r2
 800bbe2:	bfa8      	it	ge
 800bbe4:	4617      	movge	r7, r2
 800bbe6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800bbea:	2f00      	cmp	r7, #0
 800bbec:	f340 813c 	ble.w	800be68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800bbf0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800bbf2:	6829      	ldr	r1, [r5, #0]
 800bbf4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bbf8:	f9bb 3000 	ldrsh.w	r3, [fp]
 800bbfc:	6820      	ldr	r0, [r4, #0]
 800bbfe:	4411      	add	r1, r2
 800bc00:	4299      	cmp	r1, r3
 800bc02:	dd1a      	ble.n	800bc3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800bc04:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800bc08:	440b      	add	r3, r1
 800bc0a:	4402      	add	r2, r0
 800bc0c:	b21b      	sxth	r3, r3
 800bc0e:	429a      	cmp	r2, r3
 800bc10:	dc13      	bgt.n	800bc3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800bc12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bc14:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800bc16:	681b      	ldr	r3, [r3, #0]
 800bc18:	9206      	str	r2, [sp, #24]
 800bc1a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bc1c:	9205      	str	r2, [sp, #20]
 800bc1e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800bc20:	9500      	str	r5, [sp, #0]
 800bc22:	e9cd b203 	strd	fp, r2, [sp, #12]
 800bc26:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800bc28:	9809      	ldr	r0, [sp, #36]	; 0x24
 800bc2a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800bc2e:	a912      	add	r1, sp, #72	; 0x48
 800bc30:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800bc34:	aa49      	add	r2, sp, #292	; 0x124
 800bc36:	4623      	mov	r3, r4
 800bc38:	47c8      	blx	r9
 800bc3a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800bc3e:	441a      	add	r2, r3
 800bc40:	6963      	ldr	r3, [r4, #20]
 800bc42:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800bc46:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800bc4a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800bc4e:	68a1      	ldr	r1, [r4, #8]
 800bc50:	ed94 6a08 	vldr	s12, [r4, #32]
 800bc54:	6022      	str	r2, [r4, #0]
 800bc56:	3301      	adds	r3, #1
 800bc58:	6163      	str	r3, [r4, #20]
 800bc5a:	69a3      	ldr	r3, [r4, #24]
 800bc5c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bc60:	3b01      	subs	r3, #1
 800bc62:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800bc66:	61a3      	str	r3, [r4, #24]
 800bc68:	6923      	ldr	r3, [r4, #16]
 800bc6a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800bc6e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bc72:	edd4 6a07 	vldr	s13, [r4, #28]
 800bc76:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800bc7a:	440b      	add	r3, r1
 800bc7c:	68e1      	ldr	r1, [r4, #12]
 800bc7e:	6123      	str	r3, [r4, #16]
 800bc80:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bc84:	428b      	cmp	r3, r1
 800bc86:	edc4 6a07 	vstr	s13, [r4, #28]
 800bc8a:	db15      	blt.n	800bcb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800bc8c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800bc90:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bc94:	3201      	adds	r2, #1
 800bc96:	edc4 6a07 	vstr	s13, [r4, #28]
 800bc9a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800bc9e:	6022      	str	r2, [r4, #0]
 800bca0:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bca4:	1a5b      	subs	r3, r3, r1
 800bca6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800bcaa:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800bcae:	6123      	str	r3, [r4, #16]
 800bcb0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bcb4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800bcb8:	e9d5 2300 	ldrd	r2, r3, [r5]
 800bcbc:	441a      	add	r2, r3
 800bcbe:	696b      	ldr	r3, [r5, #20]
 800bcc0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800bcc4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800bcc8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800bccc:	68a9      	ldr	r1, [r5, #8]
 800bcce:	ed95 6a08 	vldr	s12, [r5, #32]
 800bcd2:	602a      	str	r2, [r5, #0]
 800bcd4:	3301      	adds	r3, #1
 800bcd6:	616b      	str	r3, [r5, #20]
 800bcd8:	69ab      	ldr	r3, [r5, #24]
 800bcda:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bcde:	3b01      	subs	r3, #1
 800bce0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800bce4:	61ab      	str	r3, [r5, #24]
 800bce6:	692b      	ldr	r3, [r5, #16]
 800bce8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800bcec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bcf0:	edd5 6a07 	vldr	s13, [r5, #28]
 800bcf4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800bcf8:	440b      	add	r3, r1
 800bcfa:	68e9      	ldr	r1, [r5, #12]
 800bcfc:	612b      	str	r3, [r5, #16]
 800bcfe:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bd02:	428b      	cmp	r3, r1
 800bd04:	edc5 6a07 	vstr	s13, [r5, #28]
 800bd08:	db15      	blt.n	800bd36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800bd0a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800bd0e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bd12:	3201      	adds	r2, #1
 800bd14:	edc5 6a07 	vstr	s13, [r5, #28]
 800bd18:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800bd1c:	602a      	str	r2, [r5, #0]
 800bd1e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bd22:	1a5b      	subs	r3, r3, r1
 800bd24:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800bd28:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800bd2c:	612b      	str	r3, [r5, #16]
 800bd2e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bd32:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800bd36:	3f01      	subs	r7, #1
 800bd38:	e757      	b.n	800bbea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800bd3a:	ad39      	add	r5, sp, #228	; 0xe4
 800bd3c:	ac19      	add	r4, sp, #100	; 0x64
 800bd3e:	e72d      	b.n	800bb9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800bd40:	4613      	mov	r3, r2
 800bd42:	e744      	b.n	800bbce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800bd44:	4613      	mov	r3, r2
 800bd46:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800bd4a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800bd4c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800bd50:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800bd54:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800bd58:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800bd5c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800bd60:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800bd64:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800bd68:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800bd6a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800bd6e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800bd72:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800bd76:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800bd7a:	960e      	str	r6, [sp, #56]	; 0x38
 800bd7c:	469e      	mov	lr, r3
 800bd7e:	461f      	mov	r7, r3
 800bd80:	f04f 0900 	mov.w	r9, #0
 800bd84:	2f00      	cmp	r7, #0
 800bd86:	d146      	bne.n	800be16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800bd88:	449c      	add	ip, r3
 800bd8a:	1ad7      	subs	r7, r2, r3
 800bd8c:	f1b9 0f00 	cmp.w	r9, #0
 800bd90:	d009      	beq.n	800bda6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800bd92:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800bd96:	9039      	str	r0, [sp, #228]	; 0xe4
 800bd98:	913d      	str	r1, [sp, #244]	; 0xf4
 800bd9a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800bd9e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800bda2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800bda6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800bda8:	910e      	str	r1, [sp, #56]	; 0x38
 800bdaa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800bdae:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800bdb2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800bdb6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800bdba:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800bdbe:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800bdc2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800bdc6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800bdca:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800bdce:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800bdd2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800bdd6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800bdda:	f04f 0800 	mov.w	r8, #0
 800bdde:	f1be 0f00 	cmp.w	lr, #0
 800bde2:	d030      	beq.n	800be46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800bde4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800bde6:	4431      	add	r1, r6
 800bde8:	4549      	cmp	r1, r9
 800bdea:	4450      	add	r0, sl
 800bdec:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800bdf0:	ee37 7a04 	vadd.f32	s14, s14, s8
 800bdf4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800bdf8:	db08      	blt.n	800be0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800bdfa:	ee77 7a85 	vadd.f32	s15, s15, s10
 800bdfe:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800be02:	ee37 7a06 	vadd.f32	s14, s14, s12
 800be06:	3001      	adds	r0, #1
 800be08:	eba1 0109 	sub.w	r1, r1, r9
 800be0c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800be10:	f04f 0801 	mov.w	r8, #1
 800be14:	e7e3      	b.n	800bdde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800be16:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800be18:	4431      	add	r1, r6
 800be1a:	4541      	cmp	r1, r8
 800be1c:	4450      	add	r0, sl
 800be1e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800be22:	ee77 7a84 	vadd.f32	s15, s15, s8
 800be26:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800be2a:	db08      	blt.n	800be3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800be2c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800be30:	ee37 7a25 	vadd.f32	s14, s14, s11
 800be34:	ee77 7a86 	vadd.f32	s15, s15, s12
 800be38:	3001      	adds	r0, #1
 800be3a:	eba1 0108 	sub.w	r1, r1, r8
 800be3e:	3f01      	subs	r7, #1
 800be40:	f04f 0901 	mov.w	r9, #1
 800be44:	e79e      	b.n	800bd84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800be46:	449c      	add	ip, r3
 800be48:	1aff      	subs	r7, r7, r3
 800be4a:	f1b8 0f00 	cmp.w	r8, #0
 800be4e:	d009      	beq.n	800be64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800be50:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800be54:	9019      	str	r0, [sp, #100]	; 0x64
 800be56:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800be5a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800be5e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800be62:	911d      	str	r1, [sp, #116]	; 0x74
 800be64:	1ad2      	subs	r2, r2, r3
 800be66:	e6b5      	b.n	800bbd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800be68:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800be6a:	681b      	ldr	r3, [r3, #0]
 800be6c:	b923      	cbnz	r3, 800be78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800be6e:	4b04      	ldr	r3, [pc, #16]	; (800be80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800be70:	6818      	ldr	r0, [r3, #0]
 800be72:	6803      	ldr	r3, [r0, #0]
 800be74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800be76:	4798      	blx	r3
 800be78:	b05b      	add	sp, #364	; 0x16c
 800be7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800be7e:	bf00      	nop
 800be80:	20012644 	.word	0x20012644

0800be84 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800be84:	b570      	push	{r4, r5, r6, lr}
 800be86:	4604      	mov	r4, r0
 800be88:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800be8c:	9805      	ldr	r0, [sp, #20]
 800be8e:	6061      	str	r1, [r4, #4]
 800be90:	2500      	movs	r5, #0
 800be92:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800be96:	8263      	strh	r3, [r4, #18]
 800be98:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800be9c:	8025      	strh	r5, [r4, #0]
 800be9e:	7221      	strb	r1, [r4, #8]
 800bea0:	7266      	strb	r6, [r4, #9]
 800bea2:	60e0      	str	r0, [r4, #12]
 800bea4:	8222      	strh	r2, [r4, #16]
 800bea6:	82a3      	strh	r3, [r4, #20]
 800bea8:	82e5      	strh	r5, [r4, #22]
 800beaa:	8325      	strh	r5, [r4, #24]
 800beac:	8365      	strh	r5, [r4, #26]
 800beae:	83a5      	strh	r5, [r4, #28]
 800beb0:	83e5      	strh	r5, [r4, #30]
 800beb2:	8425      	strh	r5, [r4, #32]
 800beb4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 800beb8:	b32e      	cbz	r6, 800bf06 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800beba:	6803      	ldr	r3, [r0, #0]
 800bebc:	695b      	ldr	r3, [r3, #20]
 800bebe:	4798      	blx	r3
 800bec0:	4606      	mov	r6, r0
 800bec2:	b300      	cbz	r0, 800bf06 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bec4:	68e0      	ldr	r0, [r4, #12]
 800bec6:	6803      	ldr	r3, [r0, #0]
 800bec8:	4631      	mov	r1, r6
 800beca:	68db      	ldr	r3, [r3, #12]
 800becc:	4798      	blx	r3
 800bece:	4605      	mov	r5, r0
 800bed0:	b1c8      	cbz	r0, 800bf06 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bed2:	7b43      	ldrb	r3, [r0, #13]
 800bed4:	7a82      	ldrb	r2, [r0, #10]
 800bed6:	005b      	lsls	r3, r3, #1
 800bed8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800bedc:	4313      	orrs	r3, r2
 800bede:	8423      	strh	r3, [r4, #32]
 800bee0:	7a63      	ldrb	r3, [r4, #9]
 800bee2:	2b06      	cmp	r3, #6
 800bee4:	d10f      	bne.n	800bf06 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bee6:	68e0      	ldr	r0, [r4, #12]
 800bee8:	6803      	ldr	r3, [r0, #0]
 800beea:	462a      	mov	r2, r5
 800beec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800beee:	4631      	mov	r1, r6
 800bef0:	4798      	blx	r3
 800bef2:	7b6b      	ldrb	r3, [r5, #13]
 800bef4:	005b      	lsls	r3, r3, #1
 800bef6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800befa:	7aab      	ldrb	r3, [r5, #10]
 800befc:	4313      	orrs	r3, r2
 800befe:	4418      	add	r0, r3
 800bf00:	8c23      	ldrh	r3, [r4, #32]
 800bf02:	4418      	add	r0, r3
 800bf04:	8420      	strh	r0, [r4, #32]
 800bf06:	4620      	mov	r0, r4
 800bf08:	bd70      	pop	{r4, r5, r6, pc}

0800bf0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800bf0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bf0e:	2400      	movs	r4, #0
 800bf10:	b085      	sub	sp, #20
 800bf12:	4681      	mov	r9, r0
 800bf14:	4688      	mov	r8, r1
 800bf16:	4692      	mov	sl, r2
 800bf18:	469b      	mov	fp, r3
 800bf1a:	4627      	mov	r7, r4
 800bf1c:	4625      	mov	r5, r4
 800bf1e:	4626      	mov	r6, r4
 800bf20:	4554      	cmp	r4, sl
 800bf22:	da2a      	bge.n	800bf7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bf24:	2300      	movs	r3, #0
 800bf26:	9303      	str	r3, [sp, #12]
 800bf28:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bf2c:	429d      	cmp	r5, r3
 800bf2e:	d004      	beq.n	800bf3a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800bf30:	f242 030b 	movw	r3, #8203	; 0x200b
 800bf34:	429d      	cmp	r5, r3
 800bf36:	bf18      	it	ne
 800bf38:	462f      	movne	r7, r5
 800bf3a:	ab03      	add	r3, sp, #12
 800bf3c:	4642      	mov	r2, r8
 800bf3e:	4659      	mov	r1, fp
 800bf40:	4648      	mov	r0, r9
 800bf42:	f003 f813 	bl	800ef6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bf46:	4605      	mov	r5, r0
 800bf48:	b1b8      	cbz	r0, 800bf7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bf4a:	280a      	cmp	r0, #10
 800bf4c:	d015      	beq.n	800bf7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bf4e:	9a03      	ldr	r2, [sp, #12]
 800bf50:	b18a      	cbz	r2, 800bf76 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800bf52:	7b50      	ldrb	r0, [r2, #13]
 800bf54:	7a93      	ldrb	r3, [r2, #10]
 800bf56:	8895      	ldrh	r5, [r2, #4]
 800bf58:	0040      	lsls	r0, r0, #1
 800bf5a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800bf5e:	4303      	orrs	r3, r0
 800bf60:	9301      	str	r3, [sp, #4]
 800bf62:	f8d8 3000 	ldr.w	r3, [r8]
 800bf66:	4639      	mov	r1, r7
 800bf68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bf6a:	4640      	mov	r0, r8
 800bf6c:	4798      	blx	r3
 800bf6e:	9b01      	ldr	r3, [sp, #4]
 800bf70:	4418      	add	r0, r3
 800bf72:	4406      	add	r6, r0
 800bf74:	b2b6      	uxth	r6, r6
 800bf76:	3401      	adds	r4, #1
 800bf78:	e7d2      	b.n	800bf20 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800bf7a:	4630      	mov	r0, r6
 800bf7c:	b005      	add	sp, #20
 800bf7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800bf82 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800bf82:	2a02      	cmp	r2, #2
 800bf84:	b530      	push	{r4, r5, lr}
 800bf86:	d011      	beq.n	800bfac <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800bf88:	2a03      	cmp	r2, #3
 800bf8a:	d01c      	beq.n	800bfc6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800bf8c:	2a01      	cmp	r2, #1
 800bf8e:	d10c      	bne.n	800bfaa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800bf90:	888b      	ldrh	r3, [r1, #4]
 800bf92:	8801      	ldrh	r1, [r0, #0]
 800bf94:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800bf98:	8844      	ldrh	r4, [r0, #2]
 800bf9a:	8004      	strh	r4, [r0, #0]
 800bf9c:	1a5b      	subs	r3, r3, r1
 800bf9e:	1a9b      	subs	r3, r3, r2
 800bfa0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800bfa4:	8043      	strh	r3, [r0, #2]
 800bfa6:	8081      	strh	r1, [r0, #4]
 800bfa8:	80c2      	strh	r2, [r0, #6]
 800bfaa:	bd30      	pop	{r4, r5, pc}
 800bfac:	88cb      	ldrh	r3, [r1, #6]
 800bfae:	8842      	ldrh	r2, [r0, #2]
 800bfb0:	1a9b      	subs	r3, r3, r2
 800bfb2:	88c2      	ldrh	r2, [r0, #6]
 800bfb4:	1a9b      	subs	r3, r3, r2
 800bfb6:	888a      	ldrh	r2, [r1, #4]
 800bfb8:	8801      	ldrh	r1, [r0, #0]
 800bfba:	8043      	strh	r3, [r0, #2]
 800bfbc:	1a52      	subs	r2, r2, r1
 800bfbe:	8881      	ldrh	r1, [r0, #4]
 800bfc0:	1a52      	subs	r2, r2, r1
 800bfc2:	8002      	strh	r2, [r0, #0]
 800bfc4:	e7f1      	b.n	800bfaa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800bfc6:	88cb      	ldrh	r3, [r1, #6]
 800bfc8:	8841      	ldrh	r1, [r0, #2]
 800bfca:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800bfce:	f9b0 5000 	ldrsh.w	r5, [r0]
 800bfd2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800bfd6:	8045      	strh	r5, [r0, #2]
 800bfd8:	1a5b      	subs	r3, r3, r1
 800bfda:	1a9b      	subs	r3, r3, r2
 800bfdc:	8003      	strh	r3, [r0, #0]
 800bfde:	8082      	strh	r2, [r0, #4]
 800bfe0:	80c4      	strh	r4, [r0, #6]
 800bfe2:	e7e2      	b.n	800bfaa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800bfe4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800bfe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bfe8:	b09f      	sub	sp, #124	; 0x7c
 800bfea:	9116      	str	r1, [sp, #88]	; 0x58
 800bfec:	9317      	str	r3, [sp, #92]	; 0x5c
 800bfee:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800bff0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800bff2:	8809      	ldrh	r1, [r1, #0]
 800bff4:	889b      	ldrh	r3, [r3, #4]
 800bff6:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800bffa:	9212      	str	r2, [sp, #72]	; 0x48
 800bffc:	440b      	add	r3, r1
 800bffe:	b21b      	sxth	r3, r3
 800c000:	9310      	str	r3, [sp, #64]	; 0x40
 800c002:	f8d8 3000 	ldr.w	r3, [r8]
 800c006:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800c00a:	7b19      	ldrb	r1, [r3, #12]
 800c00c:	7adb      	ldrb	r3, [r3, #11]
 800c00e:	9011      	str	r0, [sp, #68]	; 0x44
 800c010:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800c014:	9114      	str	r1, [sp, #80]	; 0x50
 800c016:	9315      	str	r3, [sp, #84]	; 0x54
 800c018:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 800c01c:	2a00      	cmp	r2, #0
 800c01e:	d06a      	beq.n	800c0f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800c020:	f898 3010 	ldrb.w	r3, [r8, #16]
 800c024:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800c026:	2b06      	cmp	r3, #6
 800c028:	bf14      	ite	ne
 800c02a:	2301      	movne	r3, #1
 800c02c:	2302      	moveq	r3, #2
 800c02e:	4413      	add	r3, r2
 800c030:	f04f 0900 	mov.w	r9, #0
 800c034:	930f      	str	r3, [sp, #60]	; 0x3c
 800c036:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800c03a:	464c      	mov	r4, r9
 800c03c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800c040:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800c044:	4293      	cmp	r3, r2
 800c046:	f280 808f 	bge.w	800c168 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800c04a:	2300      	movs	r3, #0
 800c04c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 800c050:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800c054:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c058:	429c      	cmp	r4, r3
 800c05a:	d006      	beq.n	800c06a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800c05c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c05e:	f242 020b 	movw	r2, #8203	; 0x200b
 800c062:	4294      	cmp	r4, r2
 800c064:	bf18      	it	ne
 800c066:	4623      	movne	r3, r4
 800c068:	930d      	str	r3, [sp, #52]	; 0x34
 800c06a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c06c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800c06e:	f8d8 2000 	ldr.w	r2, [r8]
 800c072:	428b      	cmp	r3, r1
 800c074:	db41      	blt.n	800c0fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800c076:	6813      	ldr	r3, [r2, #0]
 800c078:	4610      	mov	r0, r2
 800c07a:	695b      	ldr	r3, [r3, #20]
 800c07c:	4798      	blx	r3
 800c07e:	4604      	mov	r4, r0
 800c080:	f8d8 0000 	ldr.w	r0, [r8]
 800c084:	6803      	ldr	r3, [r0, #0]
 800c086:	aa1d      	add	r2, sp, #116	; 0x74
 800c088:	689d      	ldr	r5, [r3, #8]
 800c08a:	4621      	mov	r1, r4
 800c08c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800c090:	47a8      	blx	r5
 800c092:	901c      	str	r0, [sp, #112]	; 0x70
 800c094:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c098:	429c      	cmp	r4, r3
 800c09a:	f000 80eb 	beq.w	800c274 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c09e:	f242 030b 	movw	r3, #8203	; 0x200b
 800c0a2:	429c      	cmp	r4, r3
 800c0a4:	f000 80e6 	beq.w	800c274 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c0a8:	2c00      	cmp	r4, #0
 800c0aa:	f000 80f8 	beq.w	800c29e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800c0ae:	2c0a      	cmp	r4, #10
 800c0b0:	d060      	beq.n	800c174 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800c0b2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800c0b4:	b36a      	cbz	r2, 800c112 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800c0b6:	8894      	ldrh	r4, [r2, #4]
 800c0b8:	f1bb 0f00 	cmp.w	fp, #0
 800c0bc:	d03b      	beq.n	800c136 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800c0be:	f892 900d 	ldrb.w	r9, [r2, #13]
 800c0c2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800c0c6:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800c0ca:	f892 900a 	ldrb.w	r9, [r2, #10]
 800c0ce:	f1bb 0f01 	cmp.w	fp, #1
 800c0d2:	ea49 0903 	orr.w	r9, r9, r3
 800c0d6:	d134      	bne.n	800c142 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 800c0d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c0da:	eba6 0609 	sub.w	r6, r6, r9
 800c0de:	2b00      	cmp	r3, #0
 800c0e0:	d14f      	bne.n	800c182 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800c0e2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800c0e4:	eb09 0306 	add.w	r3, r9, r6
 800c0e8:	4413      	add	r3, r2
 800c0ea:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800c0ec:	f9b2 2000 	ldrsh.w	r2, [r2]
 800c0f0:	4293      	cmp	r3, r2
 800c0f2:	da51      	bge.n	800c198 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800c0f4:	e038      	b.n	800c168 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800c0f6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800c0f8:	e79a      	b.n	800c030 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800c0fa:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800c0fe:	9301      	str	r3, [sp, #4]
 800c100:	ab1d      	add	r3, sp, #116	; 0x74
 800c102:	9300      	str	r3, [sp, #0]
 800c104:	4659      	mov	r1, fp
 800c106:	ab1c      	add	r3, sp, #112	; 0x70
 800c108:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800c10a:	f002 ff78 	bl	800effe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800c10e:	4604      	mov	r4, r0
 800c110:	e7c0      	b.n	800c094 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800c112:	f8d8 0000 	ldr.w	r0, [r8]
 800c116:	6803      	ldr	r3, [r0, #0]
 800c118:	691b      	ldr	r3, [r3, #16]
 800c11a:	4798      	blx	r3
 800c11c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c120:	4298      	cmp	r0, r3
 800c122:	f000 80a7 	beq.w	800c274 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c126:	f242 030b 	movw	r3, #8203	; 0x200b
 800c12a:	4298      	cmp	r0, r3
 800c12c:	f000 80a2 	beq.w	800c274 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c130:	f1bb 0f00 	cmp.w	fp, #0
 800c134:	d100      	bne.n	800c138 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800c136:	444e      	add	r6, r9
 800c138:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800c13a:	2a00      	cmp	r2, #0
 800c13c:	d1bf      	bne.n	800c0be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800c13e:	4691      	mov	r9, r2
 800c140:	e098      	b.n	800c274 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c142:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c144:	2b00      	cmp	r3, #0
 800c146:	f000 80ac 	beq.w	800c2a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 800c14a:	f1bb 0f00 	cmp.w	fp, #0
 800c14e:	d118      	bne.n	800c182 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800c150:	f8d8 0000 	ldr.w	r0, [r8]
 800c154:	990d      	ldr	r1, [sp, #52]	; 0x34
 800c156:	6803      	ldr	r3, [r0, #0]
 800c158:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c15a:	4798      	blx	r3
 800c15c:	4406      	add	r6, r0
 800c15e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800c160:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800c162:	1af3      	subs	r3, r6, r3
 800c164:	4293      	cmp	r3, r2
 800c166:	dd17      	ble.n	800c198 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800c168:	2c00      	cmp	r4, #0
 800c16a:	f000 8098 	beq.w	800c29e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800c16e:	2c0a      	cmp	r4, #10
 800c170:	f040 8086 	bne.w	800c280 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 800c174:	240a      	movs	r4, #10
 800c176:	fab4 f084 	clz	r0, r4
 800c17a:	0940      	lsrs	r0, r0, #5
 800c17c:	b01f      	add	sp, #124	; 0x7c
 800c17e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c182:	f8d8 0000 	ldr.w	r0, [r8]
 800c186:	990d      	ldr	r1, [sp, #52]	; 0x34
 800c188:	6803      	ldr	r3, [r0, #0]
 800c18a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c18c:	4798      	blx	r3
 800c18e:	f1bb 0f01 	cmp.w	fp, #1
 800c192:	eba6 0600 	sub.w	r6, r6, r0
 800c196:	d0a4      	beq.n	800c0e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800c198:	981c      	ldr	r0, [sp, #112]	; 0x70
 800c19a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c19c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800c1a0:	f9b3 7000 	ldrsh.w	r7, [r3]
 800c1a4:	7b43      	ldrb	r3, [r0, #13]
 800c1a6:	015b      	lsls	r3, r3, #5
 800c1a8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c1ac:	7983      	ldrb	r3, [r0, #6]
 800c1ae:	4431      	add	r1, r6
 800c1b0:	4313      	orrs	r3, r2
 800c1b2:	440b      	add	r3, r1
 800c1b4:	42bb      	cmp	r3, r7
 800c1b6:	db5d      	blt.n	800c274 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c1b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c1ba:	4299      	cmp	r1, r3
 800c1bc:	da5a      	bge.n	800c274 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c1be:	f8d8 0000 	ldr.w	r0, [r8]
 800c1c2:	6803      	ldr	r3, [r0, #0]
 800c1c4:	42b7      	cmp	r7, r6
 800c1c6:	bfc8      	it	gt
 800c1c8:	1bbf      	subgt	r7, r7, r6
 800c1ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c1cc:	bfcc      	ite	gt
 800c1ce:	b2bf      	uxthgt	r7, r7
 800c1d0:	2700      	movle	r7, #0
 800c1d2:	4798      	blx	r3
 800c1d4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800c1d6:	7b5a      	ldrb	r2, [r3, #13]
 800c1d8:	00d1      	lsls	r1, r2, #3
 800c1da:	f401 7580 	and.w	r5, r1, #256	; 0x100
 800c1de:	7a19      	ldrb	r1, [r3, #8]
 800c1e0:	4329      	orrs	r1, r5
 800c1e2:	0655      	lsls	r5, r2, #25
 800c1e4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 800c1e6:	bf44      	itt	mi
 800c1e8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800c1ec:	b209      	sxthmi	r1, r1
 800c1ee:	1945      	adds	r5, r0, r5
 800c1f0:	1a6d      	subs	r5, r5, r1
 800c1f2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800c1f4:	b2ad      	uxth	r5, r5
 800c1f6:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800c1fa:	fa0f fa85 	sxth.w	sl, r5
 800c1fe:	4551      	cmp	r1, sl
 800c200:	dd3c      	ble.n	800c27c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800c202:	0112      	lsls	r2, r2, #4
 800c204:	79d8      	ldrb	r0, [r3, #7]
 800c206:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800c20a:	4302      	orrs	r2, r0
 800c20c:	4492      	add	sl, r2
 800c20e:	4551      	cmp	r1, sl
 800c210:	dc30      	bgt.n	800c274 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c212:	1b4d      	subs	r5, r1, r5
 800c214:	b22d      	sxth	r5, r5
 800c216:	468a      	mov	sl, r1
 800c218:	9319      	str	r3, [sp, #100]	; 0x64
 800c21a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c21c:	f8d8 0000 	ldr.w	r0, [r8]
 800c220:	681a      	ldr	r2, [r3, #0]
 800c222:	6801      	ldr	r1, [r0, #0]
 800c224:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800c226:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800c228:	9313      	str	r3, [sp, #76]	; 0x4c
 800c22a:	9218      	str	r2, [sp, #96]	; 0x60
 800c22c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800c22e:	4788      	blx	r1
 800c230:	f898 1006 	ldrb.w	r1, [r8, #6]
 800c234:	910b      	str	r1, [sp, #44]	; 0x2c
 800c236:	f898 100e 	ldrb.w	r1, [r8, #14]
 800c23a:	910a      	str	r1, [sp, #40]	; 0x28
 800c23c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800c240:	9109      	str	r1, [sp, #36]	; 0x24
 800c242:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800c246:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c248:	9305      	str	r3, [sp, #20]
 800c24a:	b2ad      	uxth	r5, r5
 800c24c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800c250:	e9cd 7502 	strd	r7, r5, [sp, #8]
 800c254:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c256:	9304      	str	r3, [sp, #16]
 800c258:	4437      	add	r7, r6
 800c25a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800c25c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800c25e:	9206      	str	r2, [sp, #24]
 800c260:	b23f      	sxth	r7, r7
 800c262:	f8cd a004 	str.w	sl, [sp, #4]
 800c266:	9700      	str	r7, [sp, #0]
 800c268:	681a      	ldr	r2, [r3, #0]
 800c26a:	9916      	ldr	r1, [sp, #88]	; 0x58
 800c26c:	685b      	ldr	r3, [r3, #4]
 800c26e:	9811      	ldr	r0, [sp, #68]	; 0x44
 800c270:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800c272:	47a8      	blx	r5
 800c274:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c276:	3301      	adds	r3, #1
 800c278:	930e      	str	r3, [sp, #56]	; 0x38
 800c27a:	e6e1      	b.n	800c040 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800c27c:	2500      	movs	r5, #0
 800c27e:	e7cb      	b.n	800c218 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 800c280:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800c282:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800c284:	3501      	adds	r5, #1
 800c286:	429d      	cmp	r5, r3
 800c288:	f6bf af75 	bge.w	800c176 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800c28c:	4659      	mov	r1, fp
 800c28e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800c290:	f7f7 fd24 	bl	8003cdc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c294:	4604      	mov	r4, r0
 800c296:	b110      	cbz	r0, 800c29e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800c298:	280a      	cmp	r0, #10
 800c29a:	d1f2      	bne.n	800c282 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 800c29c:	e76a      	b.n	800c174 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800c29e:	2400      	movs	r4, #0
 800c2a0:	e769      	b.n	800c176 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800c2a2:	f1bb 0f00 	cmp.w	fp, #0
 800c2a6:	f43f af5a 	beq.w	800c15e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 800c2aa:	e775      	b.n	800c198 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0800c2ac <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800c2ac:	b530      	push	{r4, r5, lr}
 800c2ae:	8ac4      	ldrh	r4, [r0, #22]
 800c2b0:	8b45      	ldrh	r5, [r0, #26]
 800c2b2:	8343      	strh	r3, [r0, #26]
 800c2b4:	442c      	add	r4, r5
 800c2b6:	1ae4      	subs	r4, r4, r3
 800c2b8:	82c4      	strh	r4, [r0, #22]
 800c2ba:	8b83      	ldrh	r3, [r0, #28]
 800c2bc:	8b04      	ldrh	r4, [r0, #24]
 800c2be:	4422      	add	r2, r4
 800c2c0:	440c      	add	r4, r1
 800c2c2:	1a59      	subs	r1, r3, r1
 800c2c4:	83c2      	strh	r2, [r0, #30]
 800c2c6:	8304      	strh	r4, [r0, #24]
 800c2c8:	8381      	strh	r1, [r0, #28]
 800c2ca:	bd30      	pop	{r4, r5, pc}

0800c2cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800c2cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2d0:	4604      	mov	r4, r0
 800c2d2:	8a47      	ldrh	r7, [r0, #18]
 800c2d4:	68c0      	ldr	r0, [r0, #12]
 800c2d6:	6803      	ldr	r3, [r0, #0]
 800c2d8:	b085      	sub	sp, #20
 800c2da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c2dc:	4798      	blx	r3
 800c2de:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800c2e2:	7a63      	ldrb	r3, [r4, #9]
 800c2e4:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800c2e8:	42b7      	cmp	r7, r6
 800c2ea:	f103 33ff 	add.w	r3, r3, #4294967295
 800c2ee:	bfac      	ite	ge
 800c2f0:	f04f 0900 	movge.w	r9, #0
 800c2f4:	f04f 0901 	movlt.w	r9, #1
 800c2f8:	2b05      	cmp	r3, #5
 800c2fa:	d804      	bhi.n	800c306 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 800c2fc:	e8df f003 	tbb	[pc, r3]
 800c300:	470e0854 	.word	0x470e0854
 800c304:	4c4c      	.short	0x4c4c
 800c306:	2500      	movs	r5, #0
 800c308:	46a9      	mov	r9, r5
 800c30a:	462e      	mov	r6, r5
 800c30c:	462f      	mov	r7, r5
 800c30e:	e00d      	b.n	800c32c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800c310:	42b7      	cmp	r7, r6
 800c312:	bfb4      	ite	lt
 800c314:	2600      	movlt	r6, #0
 800c316:	2601      	movge	r6, #1
 800c318:	2500      	movs	r5, #0
 800c31a:	e7f7      	b.n	800c30c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800c31c:	42b7      	cmp	r7, r6
 800c31e:	464d      	mov	r5, r9
 800c320:	f04f 0900 	mov.w	r9, #0
 800c324:	bfb4      	ite	lt
 800c326:	2600      	movlt	r6, #0
 800c328:	2601      	movge	r6, #1
 800c32a:	464f      	mov	r7, r9
 800c32c:	f04f 0800 	mov.w	r8, #0
 800c330:	f8a4 8016 	strh.w	r8, [r4, #22]
 800c334:	f8a4 8018 	strh.w	r8, [r4, #24]
 800c338:	f8cd 8004 	str.w	r8, [sp, #4]
 800c33c:	2300      	movs	r3, #0
 800c33e:	9303      	str	r3, [sp, #12]
 800c340:	8823      	ldrh	r3, [r4, #0]
 800c342:	2b20      	cmp	r3, #32
 800c344:	d034      	beq.n	800c3b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 800c346:	f242 010b 	movw	r1, #8203	; 0x200b
 800c34a:	1a5a      	subs	r2, r3, r1
 800c34c:	f1d2 0a00 	rsbs	sl, r2, #0
 800c350:	eb4a 0a02 	adc.w	sl, sl, r2
 800c354:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800c358:	4293      	cmp	r3, r2
 800c35a:	d009      	beq.n	800c370 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800c35c:	428b      	cmp	r3, r1
 800c35e:	9a01      	ldr	r2, [sp, #4]
 800c360:	bf18      	it	ne
 800c362:	461a      	movne	r2, r3
 800c364:	9201      	str	r2, [sp, #4]
 800c366:	bf0c      	ite	eq
 800c368:	f04f 0a01 	moveq.w	sl, #1
 800c36c:	f04f 0a00 	movne.w	sl, #0
 800c370:	ab03      	add	r3, sp, #12
 800c372:	68e2      	ldr	r2, [r4, #12]
 800c374:	7a21      	ldrb	r1, [r4, #8]
 800c376:	6860      	ldr	r0, [r4, #4]
 800c378:	f002 fdf8 	bl	800ef6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c37c:	8020      	strh	r0, [r4, #0]
 800c37e:	b9d8      	cbnz	r0, 800c3b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 800c380:	8ba2      	ldrh	r2, [r4, #28]
 800c382:	2300      	movs	r3, #0
 800c384:	4611      	mov	r1, r2
 800c386:	4620      	mov	r0, r4
 800c388:	f7ff ff90 	bl	800c2ac <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c38c:	e06e      	b.n	800c46c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800c38e:	2500      	movs	r5, #0
 800c390:	46a9      	mov	r9, r5
 800c392:	462e      	mov	r6, r5
 800c394:	2701      	movs	r7, #1
 800c396:	e7c9      	b.n	800c32c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800c398:	42b7      	cmp	r7, r6
 800c39a:	f04f 0500 	mov.w	r5, #0
 800c39e:	bfb4      	ite	lt
 800c3a0:	2700      	movlt	r7, #0
 800c3a2:	2701      	movge	r7, #1
 800c3a4:	462e      	mov	r6, r5
 800c3a6:	e7c1      	b.n	800c32c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800c3a8:	2500      	movs	r5, #0
 800c3aa:	46a9      	mov	r9, r5
 800c3ac:	2601      	movs	r6, #1
 800c3ae:	e7ad      	b.n	800c30c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800c3b0:	9301      	str	r3, [sp, #4]
 800c3b2:	f04f 0a01 	mov.w	sl, #1
 800c3b6:	e7db      	b.n	800c370 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800c3b8:	8b63      	ldrh	r3, [r4, #26]
 800c3ba:	280a      	cmp	r0, #10
 800c3bc:	f103 0301 	add.w	r3, r3, #1
 800c3c0:	8363      	strh	r3, [r4, #26]
 800c3c2:	d0dd      	beq.n	800c380 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 800c3c4:	9a03      	ldr	r2, [sp, #12]
 800c3c6:	bb62      	cbnz	r2, 800c422 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 800c3c8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c3cc:	4298      	cmp	r0, r3
 800c3ce:	d003      	beq.n	800c3d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800c3d0:	f242 030b 	movw	r3, #8203	; 0x200b
 800c3d4:	4298      	cmp	r0, r3
 800c3d6:	d1b1      	bne.n	800c33c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c3d8:	8823      	ldrh	r3, [r4, #0]
 800c3da:	8ba1      	ldrh	r1, [r4, #28]
 800c3dc:	2b20      	cmp	r3, #32
 800c3de:	d003      	beq.n	800c3e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 800c3e0:	f242 000b 	movw	r0, #8203	; 0x200b
 800c3e4:	4283      	cmp	r3, r0
 800c3e6:	d131      	bne.n	800c44c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 800c3e8:	f1ba 0f00 	cmp.w	sl, #0
 800c3ec:	bf0a      	itet	eq
 800c3ee:	4688      	moveq	r8, r1
 800c3f0:	4650      	movne	r0, sl
 800c3f2:	2001      	moveq	r0, #1
 800c3f4:	440a      	add	r2, r1
 800c3f6:	8b23      	ldrh	r3, [r4, #24]
 800c3f8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800c3fc:	b292      	uxth	r2, r2
 800c3fe:	83a2      	strh	r2, [r4, #28]
 800c400:	4413      	add	r3, r2
 800c402:	f1b9 0f00 	cmp.w	r9, #0
 800c406:	d102      	bne.n	800c40e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 800c408:	2d00      	cmp	r5, #0
 800c40a:	d042      	beq.n	800c492 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 800c40c:	b300      	cbz	r0, 800c450 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 800c40e:	8c21      	ldrh	r1, [r4, #32]
 800c410:	4419      	add	r1, r3
 800c412:	458c      	cmp	ip, r1
 800c414:	da37      	bge.n	800c486 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800c416:	8ae1      	ldrh	r1, [r4, #22]
 800c418:	2900      	cmp	r1, #0
 800c41a:	d034      	beq.n	800c486 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800c41c:	4563      	cmp	r3, ip
 800c41e:	dd8d      	ble.n	800c33c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c420:	e01d      	b.n	800c45e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 800c422:	8893      	ldrh	r3, [r2, #4]
 800c424:	8023      	strh	r3, [r4, #0]
 800c426:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800c42a:	9901      	ldr	r1, [sp, #4]
 800c42c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800c430:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 800c434:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800c438:	ea4b 0b00 	orr.w	fp, fp, r0
 800c43c:	68e0      	ldr	r0, [r4, #12]
 800c43e:	6803      	ldr	r3, [r0, #0]
 800c440:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c442:	4798      	blx	r3
 800c444:	eb0b 0200 	add.w	r2, fp, r0
 800c448:	b292      	uxth	r2, r2
 800c44a:	e7c5      	b.n	800c3d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800c44c:	2000      	movs	r0, #0
 800c44e:	e7d1      	b.n	800c3f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 800c450:	4563      	cmp	r3, ip
 800c452:	f77f af73 	ble.w	800c33c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c456:	8ae3      	ldrh	r3, [r4, #22]
 800c458:	2b00      	cmp	r3, #0
 800c45a:	f43f af6f 	beq.w	800c33c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c45e:	2301      	movs	r3, #1
 800c460:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 800c464:	8c22      	ldrh	r2, [r4, #32]
 800c466:	8be3      	ldrh	r3, [r4, #30]
 800c468:	4413      	add	r3, r2
 800c46a:	83e3      	strh	r3, [r4, #30]
 800c46c:	68e0      	ldr	r0, [r4, #12]
 800c46e:	6803      	ldr	r3, [r0, #0]
 800c470:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c472:	4798      	blx	r3
 800c474:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800c478:	4418      	add	r0, r3
 800c47a:	8a63      	ldrh	r3, [r4, #18]
 800c47c:	1a18      	subs	r0, r3, r0
 800c47e:	8260      	strh	r0, [r4, #18]
 800c480:	b005      	add	sp, #20
 800c482:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c486:	2300      	movs	r3, #0
 800c488:	4611      	mov	r1, r2
 800c48a:	4620      	mov	r0, r4
 800c48c:	f7ff ff0e 	bl	800c2ac <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c490:	e754      	b.n	800c33c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c492:	4563      	cmp	r3, ip
 800c494:	dd14      	ble.n	800c4c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 800c496:	b117      	cbz	r7, 800c49e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 800c498:	2301      	movs	r3, #1
 800c49a:	460a      	mov	r2, r1
 800c49c:	e772      	b.n	800c384 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800c49e:	2e00      	cmp	r6, #0
 800c4a0:	f43f af4c 	beq.w	800c33c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c4a4:	2800      	cmp	r0, #0
 800c4a6:	f47f af49 	bne.w	800c33c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c4aa:	f1ba 0f00 	cmp.w	sl, #0
 800c4ae:	d002      	beq.n	800c4b6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 800c4b0:	2301      	movs	r3, #1
 800c4b2:	4642      	mov	r2, r8
 800c4b4:	e767      	b.n	800c386 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 800c4b6:	8ae3      	ldrh	r3, [r4, #22]
 800c4b8:	2b00      	cmp	r3, #0
 800c4ba:	f43f af3f 	beq.w	800c33c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c4be:	e7d5      	b.n	800c46c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800c4c0:	2800      	cmp	r0, #0
 800c4c2:	f47f af3b 	bne.w	800c33c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c4c6:	f1ba 0f00 	cmp.w	sl, #0
 800c4ca:	f43f af37 	beq.w	800c33c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c4ce:	2301      	movs	r3, #1
 800c4d0:	4642      	mov	r2, r8
 800c4d2:	e7da      	b.n	800c48a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0800c4d4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800c4d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c4d6:	4605      	mov	r5, r0
 800c4d8:	b08f      	sub	sp, #60	; 0x3c
 800c4da:	4617      	mov	r7, r2
 800c4dc:	461c      	mov	r4, r3
 800c4de:	460e      	mov	r6, r1
 800c4e0:	b1d1      	cbz	r1, 800c518 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800c4e2:	681b      	ldr	r3, [r3, #0]
 800c4e4:	4620      	mov	r0, r4
 800c4e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c4e8:	4798      	blx	r3
 800c4ea:	4240      	negs	r0, r0
 800c4ec:	b200      	sxth	r0, r0
 800c4ee:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800c4f2:	9603      	str	r6, [sp, #12]
 800c4f4:	9700      	str	r7, [sp, #0]
 800c4f6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c4fa:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800c4fe:	4629      	mov	r1, r5
 800c500:	a805      	add	r0, sp, #20
 800c502:	f7ff fcbf 	bl	800be84 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800c506:	2401      	movs	r4, #1
 800c508:	a805      	add	r0, sp, #20
 800c50a:	f7ff fedf 	bl	800c2cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800c50e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800c512:	b163      	cbz	r3, 800c52e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800c514:	3401      	adds	r4, #1
 800c516:	e7f7      	b.n	800c508 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800c518:	f002 fdf6 	bl	800f108 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c51c:	2401      	movs	r4, #1
 800c51e:	280a      	cmp	r0, #10
 800c520:	4628      	mov	r0, r5
 800c522:	bf08      	it	eq
 800c524:	3401      	addeq	r4, #1
 800c526:	f002 fdef 	bl	800f108 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c52a:	2800      	cmp	r0, #0
 800c52c:	d1f7      	bne.n	800c51e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800c52e:	b2a0      	uxth	r0, r4
 800c530:	b00f      	add	sp, #60	; 0x3c
 800c532:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c534 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800c534:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c538:	b0e3      	sub	sp, #396	; 0x18c
 800c53a:	461c      	mov	r4, r3
 800c53c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 800c53e:	4683      	mov	fp, r0
 800c540:	4688      	mov	r8, r1
 800c542:	2b00      	cmp	r3, #0
 800c544:	f000 8112 	beq.w	800c76c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c548:	6823      	ldr	r3, [r4, #0]
 800c54a:	2b00      	cmp	r3, #0
 800c54c:	f000 810e 	beq.w	800c76c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c550:	7ba3      	ldrb	r3, [r4, #14]
 800c552:	2b00      	cmp	r3, #0
 800c554:	f000 810a 	beq.w	800c76c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c558:	6810      	ldr	r0, [r2, #0]
 800c55a:	6851      	ldr	r1, [r2, #4]
 800c55c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800c560:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800c564:	ad0a      	add	r5, sp, #40	; 0x28
 800c566:	462b      	mov	r3, r5
 800c568:	c303      	stmia	r3!, {r0, r1}
 800c56a:	2100      	movs	r1, #0
 800c56c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800c570:	910c      	str	r1, [sp, #48]	; 0x30
 800c572:	79a2      	ldrb	r2, [r4, #6]
 800c574:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c578:	a90c      	add	r1, sp, #48	; 0x30
 800c57a:	4628      	mov	r0, r5
 800c57c:	f7ff fd01 	bl	800bf82 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c580:	a90c      	add	r1, sp, #48	; 0x30
 800c582:	4608      	mov	r0, r1
 800c584:	79a2      	ldrb	r2, [r4, #6]
 800c586:	f7ff fcfc 	bl	800bf82 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c58a:	a817      	add	r0, sp, #92	; 0x5c
 800c58c:	f002 f9a9 	bl	800e8e2 <_ZN8touchgfx12TextProviderC1Ev>
 800c590:	6820      	ldr	r0, [r4, #0]
 800c592:	6803      	ldr	r3, [r0, #0]
 800c594:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c596:	4798      	blx	r3
 800c598:	4606      	mov	r6, r0
 800c59a:	6820      	ldr	r0, [r4, #0]
 800c59c:	6803      	ldr	r3, [r0, #0]
 800c59e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c5a0:	4798      	blx	r3
 800c5a2:	4633      	mov	r3, r6
 800c5a4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 800c5a6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 800c5a8:	9000      	str	r0, [sp, #0]
 800c5aa:	a817      	add	r0, sp, #92	; 0x5c
 800c5ac:	f002 f9ec 	bl	800e988 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c5b0:	6820      	ldr	r0, [r4, #0]
 800c5b2:	f894 a004 	ldrb.w	sl, [r4, #4]
 800c5b6:	6803      	ldr	r3, [r0, #0]
 800c5b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c5ba:	4798      	blx	r3
 800c5bc:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800c5c0:	6823      	ldr	r3, [r4, #0]
 800c5c2:	4607      	mov	r7, r0
 800c5c4:	4406      	add	r6, r0
 800c5c6:	a830      	add	r0, sp, #192	; 0xc0
 800c5c8:	f893 9009 	ldrb.w	r9, [r3, #9]
 800c5cc:	f002 f989 	bl	800e8e2 <_ZN8touchgfx12TextProviderC1Ev>
 800c5d0:	7c23      	ldrb	r3, [r4, #16]
 800c5d2:	b17b      	cbz	r3, 800c5f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800c5d4:	6820      	ldr	r0, [r4, #0]
 800c5d6:	6803      	ldr	r3, [r0, #0]
 800c5d8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c5da:	4798      	blx	r3
 800c5dc:	9009      	str	r0, [sp, #36]	; 0x24
 800c5de:	6820      	ldr	r0, [r4, #0]
 800c5e0:	6802      	ldr	r2, [r0, #0]
 800c5e2:	6d12      	ldr	r2, [r2, #80]	; 0x50
 800c5e4:	4790      	blx	r2
 800c5e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c5e8:	9000      	str	r0, [sp, #0]
 800c5ea:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 800c5ec:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 800c5ee:	a830      	add	r0, sp, #192	; 0xc0
 800c5f0:	f002 f9ca 	bl	800e988 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c5f4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 800c5f8:	7be2      	ldrb	r2, [r4, #15]
 800c5fa:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800c5fe:	1a8a      	subs	r2, r1, r2
 800c600:	7c21      	ldrb	r1, [r4, #16]
 800c602:	9103      	str	r1, [sp, #12]
 800c604:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800c608:	9102      	str	r1, [sp, #8]
 800c60a:	6821      	ldr	r1, [r4, #0]
 800c60c:	9101      	str	r1, [sp, #4]
 800c60e:	7961      	ldrb	r1, [r4, #5]
 800c610:	9100      	str	r1, [sp, #0]
 800c612:	b292      	uxth	r2, r2
 800c614:	a930      	add	r1, sp, #192	; 0xc0
 800c616:	a80e      	add	r0, sp, #56	; 0x38
 800c618:	f7ff fc34 	bl	800be84 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800c61c:	2e00      	cmp	r6, #0
 800c61e:	dc5b      	bgt.n	800c6d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800c620:	af17      	add	r7, sp, #92	; 0x5c
 800c622:	f04f 0900 	mov.w	r9, #0
 800c626:	7c23      	ldrb	r3, [r4, #16]
 800c628:	2b00      	cmp	r3, #0
 800c62a:	f000 80b1 	beq.w	800c790 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800c62e:	a80e      	add	r0, sp, #56	; 0x38
 800c630:	f7ff fe4c 	bl	800c2cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800c634:	f1ba 0f00 	cmp.w	sl, #0
 800c638:	f000 80a5 	beq.w	800c786 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800c63c:	7c23      	ldrb	r3, [r4, #16]
 800c63e:	9309      	str	r3, [sp, #36]	; 0x24
 800c640:	2264      	movs	r2, #100	; 0x64
 800c642:	4639      	mov	r1, r7
 800c644:	a849      	add	r0, sp, #292	; 0x124
 800c646:	f011 f9a5 	bl	801d994 <memcpy>
 800c64a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c64c:	2b00      	cmp	r3, #0
 800c64e:	f000 80a7 	beq.w	800c7a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800c652:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 800c656:	7922      	ldrb	r2, [r4, #4]
 800c658:	2a01      	cmp	r2, #1
 800c65a:	f040 808a 	bne.w	800c772 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800c65e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 800c662:	1ac0      	subs	r0, r0, r3
 800c664:	2302      	movs	r3, #2
 800c666:	fb90 f0f3 	sdiv	r0, r0, r3
 800c66a:	b200      	sxth	r0, r0
 800c66c:	7c23      	ldrb	r3, [r4, #16]
 800c66e:	2b00      	cmp	r3, #0
 800c670:	f000 808b 	beq.w	800c78a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800c674:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 800c678:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 800c67c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800c680:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800c684:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 800c688:	4410      	add	r0, r2
 800c68a:	b200      	sxth	r0, r0
 800c68c:	9000      	str	r0, [sp, #0]
 800c68e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800c692:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800c696:	4642      	mov	r2, r8
 800c698:	2100      	movs	r1, #0
 800c69a:	4658      	mov	r0, fp
 800c69c:	f7ff fca2 	bl	800bfe4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800c6a0:	2800      	cmp	r0, #0
 800c6a2:	d163      	bne.n	800c76c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c6a4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 800c6a8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 800c6ac:	b2b2      	uxth	r2, r6
 800c6ae:	4413      	add	r3, r2
 800c6b0:	1a8a      	subs	r2, r1, r2
 800c6b2:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 800c6b6:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 800c6ba:	b21b      	sxth	r3, r3
 800c6bc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800c6c0:	2a00      	cmp	r2, #0
 800c6c2:	d153      	bne.n	800c76c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c6c4:	6822      	ldr	r2, [r4, #0]
 800c6c6:	8869      	ldrh	r1, [r5, #2]
 800c6c8:	7a12      	ldrb	r2, [r2, #8]
 800c6ca:	1a9b      	subs	r3, r3, r2
 800c6cc:	88ea      	ldrh	r2, [r5, #6]
 800c6ce:	440a      	add	r2, r1
 800c6d0:	b212      	sxth	r2, r2
 800c6d2:	4293      	cmp	r3, r2
 800c6d4:	dda7      	ble.n	800c626 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800c6d6:	e049      	b.n	800c76c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c6d8:	7c23      	ldrb	r3, [r4, #16]
 800c6da:	444f      	add	r7, r9
 800c6dc:	b1c3      	cbz	r3, 800c710 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800c6de:	f64f 79ff 	movw	r9, #65535	; 0xffff
 800c6e2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800c6e6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c6ea:	443b      	add	r3, r7
 800c6ec:	4293      	cmp	r3, r2
 800c6ee:	da97      	bge.n	800c620 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800c6f0:	a80e      	add	r0, sp, #56	; 0x38
 800c6f2:	f7ff fdeb 	bl	800c2cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800c6f6:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 800c6fa:	3b01      	subs	r3, #1
 800c6fc:	b29b      	uxth	r3, r3
 800c6fe:	454b      	cmp	r3, r9
 800c700:	9309      	str	r3, [sp, #36]	; 0x24
 800c702:	d021      	beq.n	800c748 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800c704:	7961      	ldrb	r1, [r4, #5]
 800c706:	a817      	add	r0, sp, #92	; 0x5c
 800c708:	f7f7 fae8 	bl	8003cdc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c70c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c70e:	e7f4      	b.n	800c6fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800c710:	fa1f f986 	uxth.w	r9, r6
 800c714:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800c718:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c71c:	443b      	add	r3, r7
 800c71e:	4293      	cmp	r3, r2
 800c720:	f6bf af7e 	bge.w	800c620 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800c724:	a817      	add	r0, sp, #92	; 0x5c
 800c726:	f002 fcef 	bl	800f108 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c72a:	b1f8      	cbz	r0, 800c76c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c72c:	280a      	cmp	r0, #10
 800c72e:	d1f1      	bne.n	800c714 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800c730:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 800c734:	444b      	add	r3, r9
 800c736:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800c73a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800c73e:	eba3 0309 	sub.w	r3, r3, r9
 800c742:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c746:	e7e5      	b.n	800c714 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800c748:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 800c74c:	b2b3      	uxth	r3, r6
 800c74e:	441a      	add	r2, r3
 800c750:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800c754:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 800c758:	1ad3      	subs	r3, r2, r3
 800c75a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c75e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800c762:	b11b      	cbz	r3, 800c76c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c764:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 800c768:	2b00      	cmp	r3, #0
 800c76a:	d0ba      	beq.n	800c6e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800c76c:	b063      	add	sp, #396	; 0x18c
 800c76e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c772:	2a02      	cmp	r2, #2
 800c774:	d105      	bne.n	800c782 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800c776:	7be2      	ldrb	r2, [r4, #15]
 800c778:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 800c77c:	1a80      	subs	r0, r0, r2
 800c77e:	1ac0      	subs	r0, r0, r3
 800c780:	e773      	b.n	800c66a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800c782:	2000      	movs	r0, #0
 800c784:	e772      	b.n	800c66c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800c786:	7be0      	ldrb	r0, [r4, #15]
 800c788:	e770      	b.n	800c66c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800c78a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c78e:	e773      	b.n	800c678 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800c790:	f1ba 0f00 	cmp.w	sl, #0
 800c794:	d0f7      	beq.n	800c786 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800c796:	2264      	movs	r2, #100	; 0x64
 800c798:	4639      	mov	r1, r7
 800c79a:	a849      	add	r0, sp, #292	; 0x124
 800c79c:	f011 f8fa 	bl	801d994 <memcpy>
 800c7a0:	2300      	movs	r3, #0
 800c7a2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c7a6:	6821      	ldr	r1, [r4, #0]
 800c7a8:	a849      	add	r0, sp, #292	; 0x124
 800c7aa:	f7ff fbae 	bl	800bf0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800c7ae:	b203      	sxth	r3, r0
 800c7b0:	e751      	b.n	800c656 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800c7b2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800c7b2:	2b03      	cmp	r3, #3
 800c7b4:	d818      	bhi.n	800c7e8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800c7b6:	e8df f003 	tbb	[pc, r3]
 800c7ba:	0602      	.short	0x0602
 800c7bc:	130d      	.short	0x130d
 800c7be:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c7c2:	1850      	adds	r0, r2, r1
 800c7c4:	4770      	bx	lr
 800c7c6:	8803      	ldrh	r3, [r0, #0]
 800c7c8:	8880      	ldrh	r0, [r0, #4]
 800c7ca:	4418      	add	r0, r3
 800c7cc:	b200      	sxth	r0, r0
 800c7ce:	1a80      	subs	r0, r0, r2
 800c7d0:	3801      	subs	r0, #1
 800c7d2:	4770      	bx	lr
 800c7d4:	8803      	ldrh	r3, [r0, #0]
 800c7d6:	8880      	ldrh	r0, [r0, #4]
 800c7d8:	4418      	add	r0, r3
 800c7da:	b200      	sxth	r0, r0
 800c7dc:	1a40      	subs	r0, r0, r1
 800c7de:	e7f7      	b.n	800c7d0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800c7e0:	f9b0 0000 	ldrsh.w	r0, [r0]
 800c7e4:	4410      	add	r0, r2
 800c7e6:	4770      	bx	lr
 800c7e8:	2000      	movs	r0, #0
 800c7ea:	4770      	bx	lr

0800c7ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800c7ec:	2b03      	cmp	r3, #3
 800c7ee:	d817      	bhi.n	800c820 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800c7f0:	e8df f003 	tbb	[pc, r3]
 800c7f4:	10090602 	.word	0x10090602
 800c7f8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800c7fc:	1850      	adds	r0, r2, r1
 800c7fe:	4770      	bx	lr
 800c800:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c804:	e7fa      	b.n	800c7fc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800c806:	8843      	ldrh	r3, [r0, #2]
 800c808:	88c0      	ldrh	r0, [r0, #6]
 800c80a:	4418      	add	r0, r3
 800c80c:	b200      	sxth	r0, r0
 800c80e:	1a80      	subs	r0, r0, r2
 800c810:	3801      	subs	r0, #1
 800c812:	4770      	bx	lr
 800c814:	8843      	ldrh	r3, [r0, #2]
 800c816:	88c0      	ldrh	r0, [r0, #6]
 800c818:	4418      	add	r0, r3
 800c81a:	b200      	sxth	r0, r0
 800c81c:	1a40      	subs	r0, r0, r1
 800c81e:	e7f7      	b.n	800c810 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800c820:	2000      	movs	r0, #0
 800c822:	4770      	bx	lr

0800c824 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800c824:	4b01      	ldr	r3, [pc, #4]	; (800c82c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800c826:	2200      	movs	r2, #0
 800c828:	601a      	str	r2, [r3, #0]
 800c82a:	4770      	bx	lr
 800c82c:	2001264c 	.word	0x2001264c

0800c830 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800c830:	4603      	mov	r3, r0
 800c832:	b1c8      	cbz	r0, 800c868 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800c834:	0c02      	lsrs	r2, r0, #16
 800c836:	0412      	lsls	r2, r2, #16
 800c838:	b9a2      	cbnz	r2, 800c864 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800c83a:	0403      	lsls	r3, r0, #16
 800c83c:	2010      	movs	r0, #16
 800c83e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800c842:	bf04      	itt	eq
 800c844:	021b      	lsleq	r3, r3, #8
 800c846:	3008      	addeq	r0, #8
 800c848:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800c84c:	bf04      	itt	eq
 800c84e:	011b      	lsleq	r3, r3, #4
 800c850:	3004      	addeq	r0, #4
 800c852:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800c856:	bf04      	itt	eq
 800c858:	009b      	lsleq	r3, r3, #2
 800c85a:	3002      	addeq	r0, #2
 800c85c:	2b00      	cmp	r3, #0
 800c85e:	db04      	blt.n	800c86a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800c860:	3001      	adds	r0, #1
 800c862:	4770      	bx	lr
 800c864:	2000      	movs	r0, #0
 800c866:	e7ea      	b.n	800c83e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800c868:	2020      	movs	r0, #32
 800c86a:	4770      	bx	lr

0800c86c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800c86c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c870:	b087      	sub	sp, #28
 800c872:	460d      	mov	r5, r1
 800c874:	4616      	mov	r6, r2
 800c876:	4698      	mov	r8, r3
 800c878:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800c87c:	4601      	mov	r1, r0
 800c87e:	b120      	cbz	r0, 800c88a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800c880:	b11a      	cbz	r2, 800c88a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800c882:	2d1f      	cmp	r5, #31
 800c884:	d801      	bhi.n	800c88a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800c886:	2b1f      	cmp	r3, #31
 800c888:	d904      	bls.n	800c894 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800c88a:	2000      	movs	r0, #0
 800c88c:	6038      	str	r0, [r7, #0]
 800c88e:	b007      	add	sp, #28
 800c890:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c894:	b97d      	cbnz	r5, 800c8b6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800c896:	b143      	cbz	r3, 800c8aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800c898:	4602      	mov	r2, r0
 800c89a:	e9cd 4700 	strd	r4, r7, [sp]
 800c89e:	462b      	mov	r3, r5
 800c8a0:	4641      	mov	r1, r8
 800c8a2:	4630      	mov	r0, r6
 800c8a4:	f7ff ffe2 	bl	800c86c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c8a8:	e7f1      	b.n	800c88e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800c8aa:	f04f 33ff 	mov.w	r3, #4294967295
 800c8ae:	603b      	str	r3, [r7, #0]
 800c8b0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800c8b4:	e7eb      	b.n	800c88e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800c8b6:	fa32 fa05 	lsrs.w	sl, r2, r5
 800c8ba:	d106      	bne.n	800c8ca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800c8bc:	4346      	muls	r6, r0
 800c8be:	fbb6 f0f4 	udiv	r0, r6, r4
 800c8c2:	fb04 6610 	mls	r6, r4, r0, r6
 800c8c6:	603e      	str	r6, [r7, #0]
 800c8c8:	e7e1      	b.n	800c88e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800c8ca:	2201      	movs	r2, #1
 800c8cc:	40aa      	lsls	r2, r5
 800c8ce:	3a01      	subs	r2, #1
 800c8d0:	4016      	ands	r6, r2
 800c8d2:	fa00 fb05 	lsl.w	fp, r0, r5
 800c8d6:	4630      	mov	r0, r6
 800c8d8:	fbbb f9f4 	udiv	r9, fp, r4
 800c8dc:	fb0a f309 	mul.w	r3, sl, r9
 800c8e0:	9303      	str	r3, [sp, #12]
 800c8e2:	f7ff ffa5 	bl	800c830 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c8e6:	462b      	mov	r3, r5
 800c8e8:	460a      	mov	r2, r1
 800c8ea:	e9cd 4700 	strd	r4, r7, [sp]
 800c8ee:	4601      	mov	r1, r0
 800c8f0:	4630      	mov	r0, r6
 800c8f2:	f7ff ffbb 	bl	800c86c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c8f6:	fb04 b919 	mls	r9, r4, r9, fp
 800c8fa:	4606      	mov	r6, r0
 800c8fc:	4648      	mov	r0, r9
 800c8fe:	eb05 0108 	add.w	r1, r5, r8
 800c902:	f7ff ff95 	bl	800c830 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c906:	ab05      	add	r3, sp, #20
 800c908:	e9cd 4300 	strd	r4, r3, [sp]
 800c90c:	464a      	mov	r2, r9
 800c90e:	4603      	mov	r3, r0
 800c910:	4650      	mov	r0, sl
 800c912:	f7ff ffab 	bl	800c86c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c916:	6839      	ldr	r1, [r7, #0]
 800c918:	9a05      	ldr	r2, [sp, #20]
 800c91a:	9b03      	ldr	r3, [sp, #12]
 800c91c:	4411      	add	r1, r2
 800c91e:	fbb1 f2f4 	udiv	r2, r1, r4
 800c922:	18d3      	adds	r3, r2, r3
 800c924:	441e      	add	r6, r3
 800c926:	fb04 1412 	mls	r4, r4, r2, r1
 800c92a:	4430      	add	r0, r6
 800c92c:	603c      	str	r4, [r7, #0]
 800c92e:	e7ae      	b.n	800c88e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800c930 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800c930:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c934:	b085      	sub	sp, #20
 800c936:	f1b0 0900 	subs.w	r9, r0, #0
 800c93a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800c93c:	461d      	mov	r5, r3
 800c93e:	bfbf      	itttt	lt
 800c940:	6823      	ldrlt	r3, [r4, #0]
 800c942:	425b      	neglt	r3, r3
 800c944:	f1c9 0900 	rsblt	r9, r9, #0
 800c948:	6023      	strlt	r3, [r4, #0]
 800c94a:	bfb4      	ite	lt
 800c94c:	f04f 36ff 	movlt.w	r6, #4294967295
 800c950:	2601      	movge	r6, #1
 800c952:	2a00      	cmp	r2, #0
 800c954:	4617      	mov	r7, r2
 800c956:	da04      	bge.n	800c962 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800c958:	6823      	ldr	r3, [r4, #0]
 800c95a:	425b      	negs	r3, r3
 800c95c:	4257      	negs	r7, r2
 800c95e:	4276      	negs	r6, r6
 800c960:	6023      	str	r3, [r4, #0]
 800c962:	2d00      	cmp	r5, #0
 800c964:	4638      	mov	r0, r7
 800c966:	bfba      	itte	lt
 800c968:	426d      	neglt	r5, r5
 800c96a:	f04f 38ff 	movlt.w	r8, #4294967295
 800c96e:	f04f 0801 	movge.w	r8, #1
 800c972:	f7ff ff5d 	bl	800c830 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c976:	ab03      	add	r3, sp, #12
 800c978:	e9cd 5300 	strd	r5, r3, [sp]
 800c97c:	463a      	mov	r2, r7
 800c97e:	4603      	mov	r3, r0
 800c980:	4648      	mov	r0, r9
 800c982:	f7ff ff73 	bl	800c86c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c986:	6823      	ldr	r3, [r4, #0]
 800c988:	9a03      	ldr	r2, [sp, #12]
 800c98a:	4546      	cmp	r6, r8
 800c98c:	441a      	add	r2, r3
 800c98e:	fb92 f3f5 	sdiv	r3, r2, r5
 800c992:	4418      	add	r0, r3
 800c994:	bf18      	it	ne
 800c996:	4240      	negne	r0, r0
 800c998:	fb05 2313 	mls	r3, r5, r3, r2
 800c99c:	1c72      	adds	r2, r6, #1
 800c99e:	6023      	str	r3, [r4, #0]
 800c9a0:	d105      	bne.n	800c9ae <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800c9a2:	2b00      	cmp	r3, #0
 800c9a4:	f1c3 0200 	rsb	r2, r3, #0
 800c9a8:	db0b      	blt.n	800c9c2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800c9aa:	6022      	str	r2, [r4, #0]
 800c9ac:	e006      	b.n	800c9bc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c9ae:	2e01      	cmp	r6, #1
 800c9b0:	d104      	bne.n	800c9bc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c9b2:	2b00      	cmp	r3, #0
 800c9b4:	da02      	bge.n	800c9bc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c9b6:	442b      	add	r3, r5
 800c9b8:	3801      	subs	r0, #1
 800c9ba:	6023      	str	r3, [r4, #0]
 800c9bc:	b005      	add	sp, #20
 800c9be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c9c2:	3801      	subs	r0, #1
 800c9c4:	1b52      	subs	r2, r2, r5
 800c9c6:	e7f0      	b.n	800c9aa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800c9c8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800c9c8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c9cc:	4c1c      	ldr	r4, [pc, #112]	; (800ca40 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800c9ce:	6807      	ldr	r7, [r0, #0]
 800c9d0:	69a3      	ldr	r3, [r4, #24]
 800c9d2:	4605      	mov	r5, r0
 800c9d4:	b92b      	cbnz	r3, 800c9e2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800c9d6:	6840      	ldr	r0, [r0, #4]
 800c9d8:	e9c5 7000 	strd	r7, r0, [r5]
 800c9dc:	b004      	add	sp, #16
 800c9de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c9e2:	68a2      	ldr	r2, [r4, #8]
 800c9e4:	6820      	ldr	r0, [r4, #0]
 800c9e6:	ae04      	add	r6, sp, #16
 800c9e8:	f04f 0802 	mov.w	r8, #2
 800c9ec:	fb93 f1f8 	sdiv	r1, r3, r8
 800c9f0:	440a      	add	r2, r1
 800c9f2:	f846 2d04 	str.w	r2, [r6, #-4]!
 800c9f6:	69e1      	ldr	r1, [r4, #28]
 800c9f8:	9600      	str	r6, [sp, #0]
 800c9fa:	463a      	mov	r2, r7
 800c9fc:	f7ff ff98 	bl	800c930 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ca00:	69a3      	ldr	r3, [r4, #24]
 800ca02:	686a      	ldr	r2, [r5, #4]
 800ca04:	6a21      	ldr	r1, [r4, #32]
 800ca06:	9600      	str	r6, [sp, #0]
 800ca08:	4607      	mov	r7, r0
 800ca0a:	6860      	ldr	r0, [r4, #4]
 800ca0c:	f7ff ff90 	bl	800c930 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ca10:	6962      	ldr	r2, [r4, #20]
 800ca12:	69a3      	ldr	r3, [r4, #24]
 800ca14:	fb93 f8f8 	sdiv	r8, r3, r8
 800ca18:	4442      	add	r2, r8
 800ca1a:	9203      	str	r2, [sp, #12]
 800ca1c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ca1e:	682a      	ldr	r2, [r5, #0]
 800ca20:	9600      	str	r6, [sp, #0]
 800ca22:	4407      	add	r7, r0
 800ca24:	68e0      	ldr	r0, [r4, #12]
 800ca26:	f7ff ff83 	bl	800c930 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ca2a:	9600      	str	r6, [sp, #0]
 800ca2c:	4680      	mov	r8, r0
 800ca2e:	69a3      	ldr	r3, [r4, #24]
 800ca30:	686a      	ldr	r2, [r5, #4]
 800ca32:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800ca34:	6920      	ldr	r0, [r4, #16]
 800ca36:	f7ff ff7b 	bl	800c930 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ca3a:	4440      	add	r0, r8
 800ca3c:	e7cc      	b.n	800c9d8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800ca3e:	bf00      	nop
 800ca40:	20012650 	.word	0x20012650

0800ca44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800ca44:	4b07      	ldr	r3, [pc, #28]	; (800ca64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800ca46:	781b      	ldrb	r3, [r3, #0]
 800ca48:	2b01      	cmp	r3, #1
 800ca4a:	d109      	bne.n	800ca60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800ca4c:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ca50:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ca54:	8003      	strh	r3, [r0, #0]
 800ca56:	4b04      	ldr	r3, [pc, #16]	; (800ca68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800ca58:	881b      	ldrh	r3, [r3, #0]
 800ca5a:	3b01      	subs	r3, #1
 800ca5c:	1a9b      	subs	r3, r3, r2
 800ca5e:	800b      	strh	r3, [r1, #0]
 800ca60:	4770      	bx	lr
 800ca62:	bf00      	nop
 800ca64:	2001263c 	.word	0x2001263c
 800ca68:	20012638 	.word	0x20012638

0800ca6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800ca6c:	b510      	push	{r4, lr}
 800ca6e:	4b07      	ldr	r3, [pc, #28]	; (800ca8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800ca70:	781b      	ldrb	r3, [r3, #0]
 800ca72:	2b01      	cmp	r3, #1
 800ca74:	d108      	bne.n	800ca88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800ca76:	4b06      	ldr	r3, [pc, #24]	; (800ca90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800ca78:	880c      	ldrh	r4, [r1, #0]
 800ca7a:	881b      	ldrh	r3, [r3, #0]
 800ca7c:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ca80:	3b01      	subs	r3, #1
 800ca82:	1b1b      	subs	r3, r3, r4
 800ca84:	8003      	strh	r3, [r0, #0]
 800ca86:	800a      	strh	r2, [r1, #0]
 800ca88:	bd10      	pop	{r4, pc}
 800ca8a:	bf00      	nop
 800ca8c:	2001263c 	.word	0x2001263c
 800ca90:	20012638 	.word	0x20012638

0800ca94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800ca94:	b510      	push	{r4, lr}
 800ca96:	4b0a      	ldr	r3, [pc, #40]	; (800cac0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800ca98:	781b      	ldrb	r3, [r3, #0]
 800ca9a:	2b01      	cmp	r3, #1
 800ca9c:	d10e      	bne.n	800cabc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800ca9e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800caa2:	8843      	ldrh	r3, [r0, #2]
 800caa4:	f9b0 4000 	ldrsh.w	r4, [r0]
 800caa8:	8044      	strh	r4, [r0, #2]
 800caaa:	18ca      	adds	r2, r1, r3
 800caac:	4b05      	ldr	r3, [pc, #20]	; (800cac4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800caae:	881b      	ldrh	r3, [r3, #0]
 800cab0:	1a9b      	subs	r3, r3, r2
 800cab2:	8003      	strh	r3, [r0, #0]
 800cab4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cab8:	80c3      	strh	r3, [r0, #6]
 800caba:	8081      	strh	r1, [r0, #4]
 800cabc:	bd10      	pop	{r4, pc}
 800cabe:	bf00      	nop
 800cac0:	2001263c 	.word	0x2001263c
 800cac4:	20012638 	.word	0x20012638

0800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800cac8:	4b08      	ldr	r3, [pc, #32]	; (800caec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800caca:	781b      	ldrb	r3, [r3, #0]
 800cacc:	2b01      	cmp	r3, #1
 800cace:	d10c      	bne.n	800caea <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800cad0:	8803      	ldrh	r3, [r0, #0]
 800cad2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800cad6:	8842      	ldrh	r2, [r0, #2]
 800cad8:	8002      	strh	r2, [r0, #0]
 800cada:	185a      	adds	r2, r3, r1
 800cadc:	4b04      	ldr	r3, [pc, #16]	; (800caf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800cade:	881b      	ldrh	r3, [r3, #0]
 800cae0:	1a9b      	subs	r3, r3, r2
 800cae2:	8043      	strh	r3, [r0, #2]
 800cae4:	88c3      	ldrh	r3, [r0, #6]
 800cae6:	8083      	strh	r3, [r0, #4]
 800cae8:	80c1      	strh	r1, [r0, #6]
 800caea:	4770      	bx	lr
 800caec:	2001263c 	.word	0x2001263c
 800caf0:	20012638 	.word	0x20012638

0800caf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800caf4:	b510      	push	{r4, lr}
 800caf6:	4b07      	ldr	r3, [pc, #28]	; (800cb14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800caf8:	781b      	ldrb	r3, [r3, #0]
 800cafa:	2b01      	cmp	r3, #1
 800cafc:	d108      	bne.n	800cb10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800cafe:	f9b1 3000 	ldrsh.w	r3, [r1]
 800cb02:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cb06:	8003      	strh	r3, [r0, #0]
 800cb08:	8893      	ldrh	r3, [r2, #4]
 800cb0a:	3b01      	subs	r3, #1
 800cb0c:	1b1b      	subs	r3, r3, r4
 800cb0e:	800b      	strh	r3, [r1, #0]
 800cb10:	bd10      	pop	{r4, pc}
 800cb12:	bf00      	nop
 800cb14:	2001263c 	.word	0x2001263c

0800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800cb18:	b510      	push	{r4, lr}
 800cb1a:	4b0a      	ldr	r3, [pc, #40]	; (800cb44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800cb1c:	781b      	ldrb	r3, [r3, #0]
 800cb1e:	2b01      	cmp	r3, #1
 800cb20:	460a      	mov	r2, r1
 800cb22:	d10d      	bne.n	800cb40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800cb24:	8881      	ldrh	r1, [r0, #4]
 800cb26:	8803      	ldrh	r3, [r0, #0]
 800cb28:	440b      	add	r3, r1
 800cb2a:	4601      	mov	r1, r0
 800cb2c:	3b01      	subs	r3, #1
 800cb2e:	f821 3b02 	strh.w	r3, [r1], #2
 800cb32:	f7ff ffdf 	bl	800caf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800cb36:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cb3a:	88c2      	ldrh	r2, [r0, #6]
 800cb3c:	8082      	strh	r2, [r0, #4]
 800cb3e:	80c3      	strh	r3, [r0, #6]
 800cb40:	bd10      	pop	{r4, pc}
 800cb42:	bf00      	nop
 800cb44:	2001263c 	.word	0x2001263c

0800cb48 <_ZN8touchgfx11Application13requestRedrawEv>:
 800cb48:	4b06      	ldr	r3, [pc, #24]	; (800cb64 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800cb4a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cb4e:	4b06      	ldr	r3, [pc, #24]	; (800cb68 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800cb50:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 800cb54:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cb58:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 800cb5c:	2100      	movs	r1, #0
 800cb5e:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 800cb62:	4770      	bx	lr
 800cb64:	20012638 	.word	0x20012638
 800cb68:	2001263a 	.word	0x2001263a

0800cb6c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800cb6c:	4b03      	ldr	r3, [pc, #12]	; (800cb7c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800cb6e:	6818      	ldr	r0, [r3, #0]
 800cb70:	b110      	cbz	r0, 800cb78 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800cb72:	6803      	ldr	r3, [r0, #0]
 800cb74:	699b      	ldr	r3, [r3, #24]
 800cb76:	4718      	bx	r3
 800cb78:	4770      	bx	lr
 800cb7a:	bf00      	nop
 800cb7c:	20012680 	.word	0x20012680

0800cb80 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800cb80:	4770      	bx	lr
	...

0800cb84 <_ZN8touchgfx11Application4drawEv>:
 800cb84:	b507      	push	{r0, r1, r2, lr}
 800cb86:	4b09      	ldr	r3, [pc, #36]	; (800cbac <_ZN8touchgfx11Application4drawEv+0x28>)
 800cb88:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cb8c:	4b08      	ldr	r3, [pc, #32]	; (800cbb0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800cb8e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cb92:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cb96:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cb9a:	6803      	ldr	r3, [r0, #0]
 800cb9c:	2100      	movs	r1, #0
 800cb9e:	9100      	str	r1, [sp, #0]
 800cba0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cba2:	4669      	mov	r1, sp
 800cba4:	4798      	blx	r3
 800cba6:	b003      	add	sp, #12
 800cba8:	f85d fb04 	ldr.w	pc, [sp], #4
 800cbac:	20012638 	.word	0x20012638
 800cbb0:	2001263a 	.word	0x2001263a

0800cbb4 <_ZN8touchgfx11Application10invalidateEv>:
 800cbb4:	4b09      	ldr	r3, [pc, #36]	; (800cbdc <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800cbb6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cbba:	4b09      	ldr	r3, [pc, #36]	; (800cbe0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800cbbc:	b082      	sub	sp, #8
 800cbbe:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cbc2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cbc6:	2100      	movs	r1, #0
 800cbc8:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cbcc:	9100      	str	r1, [sp, #0]
 800cbce:	6803      	ldr	r3, [r0, #0]
 800cbd0:	aa02      	add	r2, sp, #8
 800cbd2:	e912 0006 	ldmdb	r2, {r1, r2}
 800cbd6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cbd8:	b002      	add	sp, #8
 800cbda:	4718      	bx	r3
 800cbdc:	20012638 	.word	0x20012638
 800cbe0:	2001263a 	.word	0x2001263a

0800cbe4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800cbe4:	4b03      	ldr	r3, [pc, #12]	; (800cbf4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800cbe6:	6818      	ldr	r0, [r3, #0]
 800cbe8:	b110      	cbz	r0, 800cbf0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800cbea:	6803      	ldr	r3, [r0, #0]
 800cbec:	69db      	ldr	r3, [r3, #28]
 800cbee:	4718      	bx	r3
 800cbf0:	4770      	bx	lr
 800cbf2:	bf00      	nop
 800cbf4:	20012680 	.word	0x20012680

0800cbf8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800cbf8:	4b03      	ldr	r3, [pc, #12]	; (800cc08 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800cbfa:	6818      	ldr	r0, [r3, #0]
 800cbfc:	b110      	cbz	r0, 800cc04 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800cbfe:	6803      	ldr	r3, [r0, #0]
 800cc00:	6a1b      	ldr	r3, [r3, #32]
 800cc02:	4718      	bx	r3
 800cc04:	4770      	bx	lr
 800cc06:	bf00      	nop
 800cc08:	20012680 	.word	0x20012680

0800cc0c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800cc0c:	2300      	movs	r3, #0
 800cc0e:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 800cc12:	4770      	bx	lr

0800cc14 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800cc14:	4b03      	ldr	r3, [pc, #12]	; (800cc24 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800cc16:	6818      	ldr	r0, [r3, #0]
 800cc18:	b110      	cbz	r0, 800cc20 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800cc1a:	6803      	ldr	r3, [r0, #0]
 800cc1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cc1e:	4718      	bx	r3
 800cc20:	4770      	bx	lr
 800cc22:	bf00      	nop
 800cc24:	20012680 	.word	0x20012680

0800cc28 <_ZN8touchgfx11ApplicationD1Ev>:
 800cc28:	4770      	bx	lr

0800cc2a <_ZN8touchgfx11ApplicationD0Ev>:
 800cc2a:	b510      	push	{r4, lr}
 800cc2c:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800cc30:	4604      	mov	r4, r0
 800cc32:	f010 fe02 	bl	801d83a <_ZdlPvj>
 800cc36:	4620      	mov	r0, r4
 800cc38:	bd10      	pop	{r4, pc}

0800cc3a <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800cc3a:	b510      	push	{r4, lr}
 800cc3c:	f9b1 4000 	ldrsh.w	r4, [r1]
 800cc40:	888a      	ldrh	r2, [r1, #4]
 800cc42:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cc46:	4422      	add	r2, r4
 800cc48:	b212      	sxth	r2, r2
 800cc4a:	4293      	cmp	r3, r2
 800cc4c:	da15      	bge.n	800cc7a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cc4e:	8882      	ldrh	r2, [r0, #4]
 800cc50:	4413      	add	r3, r2
 800cc52:	b21b      	sxth	r3, r3
 800cc54:	429c      	cmp	r4, r3
 800cc56:	da10      	bge.n	800cc7a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cc58:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800cc5c:	88c9      	ldrh	r1, [r1, #6]
 800cc5e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800cc62:	4419      	add	r1, r3
 800cc64:	b209      	sxth	r1, r1
 800cc66:	428a      	cmp	r2, r1
 800cc68:	da07      	bge.n	800cc7a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cc6a:	88c0      	ldrh	r0, [r0, #6]
 800cc6c:	4410      	add	r0, r2
 800cc6e:	b200      	sxth	r0, r0
 800cc70:	4283      	cmp	r3, r0
 800cc72:	bfac      	ite	ge
 800cc74:	2000      	movge	r0, #0
 800cc76:	2001      	movlt	r0, #1
 800cc78:	bd10      	pop	{r4, pc}
 800cc7a:	2000      	movs	r0, #0
 800cc7c:	e7fc      	b.n	800cc78 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800cc7e <_ZN8touchgfx4Rect10restrictToEss>:
 800cc7e:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cc82:	2b00      	cmp	r3, #0
 800cc84:	b510      	push	{r4, lr}
 800cc86:	da04      	bge.n	800cc92 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800cc88:	8884      	ldrh	r4, [r0, #4]
 800cc8a:	4423      	add	r3, r4
 800cc8c:	8083      	strh	r3, [r0, #4]
 800cc8e:	2300      	movs	r3, #0
 800cc90:	8003      	strh	r3, [r0, #0]
 800cc92:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cc96:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cc9a:	1b09      	subs	r1, r1, r4
 800cc9c:	428b      	cmp	r3, r1
 800cc9e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800cca2:	bfc8      	it	gt
 800cca4:	8081      	strhgt	r1, [r0, #4]
 800cca6:	2b00      	cmp	r3, #0
 800cca8:	da04      	bge.n	800ccb4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800ccaa:	88c1      	ldrh	r1, [r0, #6]
 800ccac:	440b      	add	r3, r1
 800ccae:	80c3      	strh	r3, [r0, #6]
 800ccb0:	2300      	movs	r3, #0
 800ccb2:	8043      	strh	r3, [r0, #2]
 800ccb4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800ccb8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800ccbc:	1a52      	subs	r2, r2, r1
 800ccbe:	4293      	cmp	r3, r2
 800ccc0:	bfc8      	it	gt
 800ccc2:	80c2      	strhgt	r2, [r0, #6]
 800ccc4:	bd10      	pop	{r4, pc}
	...

0800ccc8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800ccc8:	b510      	push	{r4, lr}
 800ccca:	4b10      	ldr	r3, [pc, #64]	; (800cd0c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800cccc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ccd0:	4b0f      	ldr	r3, [pc, #60]	; (800cd10 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800ccd2:	460c      	mov	r4, r1
 800ccd4:	4620      	mov	r0, r4
 800ccd6:	f9b3 1000 	ldrsh.w	r1, [r3]
 800ccda:	f7ff ffd0 	bl	800cc7e <_ZN8touchgfx4Rect10restrictToEss>
 800ccde:	4b0d      	ldr	r3, [pc, #52]	; (800cd14 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800cce0:	6818      	ldr	r0, [r3, #0]
 800cce2:	b190      	cbz	r0, 800cd0a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800cce4:	6803      	ldr	r3, [r0, #0]
 800cce6:	4621      	mov	r1, r4
 800cce8:	689b      	ldr	r3, [r3, #8]
 800ccea:	4798      	blx	r3
 800ccec:	4b0a      	ldr	r3, [pc, #40]	; (800cd18 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800ccee:	6818      	ldr	r0, [r3, #0]
 800ccf0:	b118      	cbz	r0, 800ccfa <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800ccf2:	6803      	ldr	r3, [r0, #0]
 800ccf4:	4621      	mov	r1, r4
 800ccf6:	689b      	ldr	r3, [r3, #8]
 800ccf8:	4798      	blx	r3
 800ccfa:	4b08      	ldr	r3, [pc, #32]	; (800cd1c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800ccfc:	6818      	ldr	r0, [r3, #0]
 800ccfe:	6803      	ldr	r3, [r0, #0]
 800cd00:	4621      	mov	r1, r4
 800cd02:	69db      	ldr	r3, [r3, #28]
 800cd04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cd08:	4718      	bx	r3
 800cd0a:	bd10      	pop	{r4, pc}
 800cd0c:	2001263a 	.word	0x2001263a
 800cd10:	20012638 	.word	0x20012638
 800cd14:	20012680 	.word	0x20012680
 800cd18:	2001267c 	.word	0x2001267c
 800cd1c:	20012644 	.word	0x20012644

0800cd20 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800cd20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cd22:	4606      	mov	r6, r0
 800cd24:	4608      	mov	r0, r1
 800cd26:	460f      	mov	r7, r1
 800cd28:	f7fc fefd 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cd2c:	b9e8      	cbnz	r0, 800cd6a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cd2e:	f9b7 5000 	ldrsh.w	r5, [r7]
 800cd32:	f9b6 4000 	ldrsh.w	r4, [r6]
 800cd36:	42a5      	cmp	r5, r4
 800cd38:	db17      	blt.n	800cd6a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cd3a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800cd3e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800cd42:	429a      	cmp	r2, r3
 800cd44:	db11      	blt.n	800cd6a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cd46:	88b9      	ldrh	r1, [r7, #4]
 800cd48:	440d      	add	r5, r1
 800cd4a:	88b1      	ldrh	r1, [r6, #4]
 800cd4c:	440c      	add	r4, r1
 800cd4e:	b22d      	sxth	r5, r5
 800cd50:	b224      	sxth	r4, r4
 800cd52:	42a5      	cmp	r5, r4
 800cd54:	dc09      	bgt.n	800cd6a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cd56:	88f8      	ldrh	r0, [r7, #6]
 800cd58:	4410      	add	r0, r2
 800cd5a:	88f2      	ldrh	r2, [r6, #6]
 800cd5c:	4413      	add	r3, r2
 800cd5e:	b200      	sxth	r0, r0
 800cd60:	b21b      	sxth	r3, r3
 800cd62:	4298      	cmp	r0, r3
 800cd64:	bfcc      	ite	gt
 800cd66:	2000      	movgt	r0, #0
 800cd68:	2001      	movle	r0, #1
 800cd6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cd6c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800cd6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cd6e:	4604      	mov	r4, r0
 800cd70:	4608      	mov	r0, r1
 800cd72:	460d      	mov	r5, r1
 800cd74:	f7fc fed7 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cd78:	b978      	cbnz	r0, 800cd9a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800cd7a:	4620      	mov	r0, r4
 800cd7c:	f7fc fed3 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cd80:	f9b5 6000 	ldrsh.w	r6, [r5]
 800cd84:	b150      	cbz	r0, 800cd9c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800cd86:	8026      	strh	r6, [r4, #0]
 800cd88:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800cd8c:	8063      	strh	r3, [r4, #2]
 800cd8e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800cd92:	80a3      	strh	r3, [r4, #4]
 800cd94:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cd98:	80e3      	strh	r3, [r4, #6]
 800cd9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cd9c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cda0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800cda4:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800cda8:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800cdac:	88ed      	ldrh	r5, [r5, #6]
 800cdae:	42b1      	cmp	r1, r6
 800cdb0:	460f      	mov	r7, r1
 800cdb2:	bfa8      	it	ge
 800cdb4:	4637      	movge	r7, r6
 800cdb6:	4293      	cmp	r3, r2
 800cdb8:	4618      	mov	r0, r3
 800cdba:	4466      	add	r6, ip
 800cdbc:	bfa8      	it	ge
 800cdbe:	4610      	movge	r0, r2
 800cdc0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800cdc4:	8027      	strh	r7, [r4, #0]
 800cdc6:	442a      	add	r2, r5
 800cdc8:	88e5      	ldrh	r5, [r4, #6]
 800cdca:	8060      	strh	r0, [r4, #2]
 800cdcc:	4461      	add	r1, ip
 800cdce:	442b      	add	r3, r5
 800cdd0:	b236      	sxth	r6, r6
 800cdd2:	b209      	sxth	r1, r1
 800cdd4:	b212      	sxth	r2, r2
 800cdd6:	b21b      	sxth	r3, r3
 800cdd8:	428e      	cmp	r6, r1
 800cdda:	bfac      	ite	ge
 800cddc:	ebc7 0106 	rsbge	r1, r7, r6
 800cde0:	ebc7 0101 	rsblt	r1, r7, r1
 800cde4:	429a      	cmp	r2, r3
 800cde6:	bfac      	ite	ge
 800cde8:	ebc0 0202 	rsbge	r2, r0, r2
 800cdec:	ebc0 0203 	rsblt	r2, r0, r3
 800cdf0:	80a1      	strh	r1, [r4, #4]
 800cdf2:	80e2      	strh	r2, [r4, #6]
 800cdf4:	e7d1      	b.n	800cd9a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800cdf8 <_ZN8touchgfx11Application11getInstanceEv>:
 800cdf8:	4b01      	ldr	r3, [pc, #4]	; (800ce00 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800cdfa:	6818      	ldr	r0, [r3, #0]
 800cdfc:	4770      	bx	lr
 800cdfe:	bf00      	nop
 800ce00:	20012690 	.word	0x20012690

0800ce04 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 800ce04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ce06:	4b10      	ldr	r3, [pc, #64]	; (800ce48 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 800ce08:	781b      	ldrb	r3, [r3, #0]
 800ce0a:	4605      	mov	r5, r0
 800ce0c:	b1d3      	cbz	r3, 800ce44 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 800ce0e:	4b0f      	ldr	r3, [pc, #60]	; (800ce4c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 800ce10:	4f0f      	ldr	r7, [pc, #60]	; (800ce50 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 800ce12:	881c      	ldrh	r4, [r3, #0]
 800ce14:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 800ce18:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 800ce1c:	42a3      	cmp	r3, r4
 800ce1e:	d90e      	bls.n	800ce3e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 800ce20:	683b      	ldr	r3, [r7, #0]
 800ce22:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800ce26:	b10a      	cbz	r2, 800ce2c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 800ce28:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ce2a:	b900      	cbnz	r0, 800ce2e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 800ce2c:	6898      	ldr	r0, [r3, #8]
 800ce2e:	6803      	ldr	r3, [r0, #0]
 800ce30:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 800ce34:	69db      	ldr	r3, [r3, #28]
 800ce36:	3401      	adds	r4, #1
 800ce38:	4798      	blx	r3
 800ce3a:	b2a4      	uxth	r4, r4
 800ce3c:	e7ec      	b.n	800ce18 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 800ce3e:	2300      	movs	r3, #0
 800ce40:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 800ce44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ce46:	bf00      	nop
 800ce48:	20012642 	.word	0x20012642
 800ce4c:	20000084 	.word	0x20000084
 800ce50:	20012644 	.word	0x20012644

0800ce54 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800ce54:	b510      	push	{r4, lr}
 800ce56:	2300      	movs	r3, #0
 800ce58:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 800ce5c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 800ce60:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 800ce64:	4604      	mov	r4, r0
 800ce66:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800ce6a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 800ce6e:	429a      	cmp	r2, r3
 800ce70:	d90e      	bls.n	800ce90 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800ce72:	18e2      	adds	r2, r4, r3
 800ce74:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 800ce78:	b122      	cbz	r2, 800ce84 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800ce7a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800ce7e:	6803      	ldr	r3, [r0, #0]
 800ce80:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800ce82:	4798      	blx	r3
 800ce84:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800ce88:	3301      	adds	r3, #1
 800ce8a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 800ce8e:	e7ea      	b.n	800ce66 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800ce90:	bd10      	pop	{r4, pc}

0800ce92 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 800ce92:	b530      	push	{r4, r5, lr}
 800ce94:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 800ce98:	2200      	movs	r2, #0
 800ce9a:	b293      	uxth	r3, r2
 800ce9c:	429d      	cmp	r5, r3
 800ce9e:	d90e      	bls.n	800cebe <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 800cea0:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 800cea4:	428b      	cmp	r3, r1
 800cea6:	d10b      	bne.n	800cec0 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 800cea8:	1884      	adds	r4, r0, r2
 800ceaa:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 800ceae:	b13b      	cbz	r3, 800cec0 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 800ceb0:	3b01      	subs	r3, #1
 800ceb2:	b2db      	uxtb	r3, r3
 800ceb4:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 800ceb8:	b90b      	cbnz	r3, 800cebe <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 800ceba:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 800cebe:	bd30      	pop	{r4, r5, pc}
 800cec0:	3201      	adds	r2, #1
 800cec2:	e7ea      	b.n	800ce9a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0800cec4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800cec4:	2300      	movs	r3, #0
 800cec6:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 800ceca:	f100 0284 	add.w	r2, r0, #132	; 0x84
 800cece:	30a4      	adds	r0, #164	; 0xa4
 800ced0:	f802 3b01 	strb.w	r3, [r2], #1
 800ced4:	4282      	cmp	r2, r0
 800ced6:	d1fb      	bne.n	800ced0 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800ced8:	4770      	bx	lr
	...

0800cedc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800cedc:	b570      	push	{r4, r5, r6, lr}
 800cede:	4c0b      	ldr	r4, [pc, #44]	; (800cf0c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800cee0:	4605      	mov	r5, r0
 800cee2:	6820      	ldr	r0, [r4, #0]
 800cee4:	460e      	mov	r6, r1
 800cee6:	b110      	cbz	r0, 800ceee <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800cee8:	6803      	ldr	r3, [r0, #0]
 800ceea:	695b      	ldr	r3, [r3, #20]
 800ceec:	4798      	blx	r3
 800ceee:	1d28      	adds	r0, r5, #4
 800cef0:	f7ff ffe8 	bl	800cec4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800cef4:	6026      	str	r6, [r4, #0]
 800cef6:	6833      	ldr	r3, [r6, #0]
 800cef8:	4630      	mov	r0, r6
 800cefa:	68db      	ldr	r3, [r3, #12]
 800cefc:	4798      	blx	r3
 800cefe:	682b      	ldr	r3, [r5, #0]
 800cf00:	4628      	mov	r0, r5
 800cf02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cf04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cf08:	4718      	bx	r3
 800cf0a:	bf00      	nop
 800cf0c:	20012680 	.word	0x20012680

0800cf10 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800cf10:	2300      	movs	r3, #0
 800cf12:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 800cf16:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 800cf1a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf1c:	461a      	mov	r2, r3
 800cf1e:	461c      	mov	r4, r3
 800cf20:	461d      	mov	r5, r3
 800cf22:	459c      	cmp	ip, r3
 800cf24:	dd1a      	ble.n	800cf5c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800cf26:	18c6      	adds	r6, r0, r3
 800cf28:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 800cf2c:	b16e      	cbz	r6, 800cf4a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800cf2e:	429a      	cmp	r2, r3
 800cf30:	d008      	beq.n	800cf44 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800cf32:	fa1f fe82 	uxth.w	lr, r2
 800cf36:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800cf3a:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800cf3e:	1887      	adds	r7, r0, r2
 800cf40:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 800cf44:	3201      	adds	r2, #1
 800cf46:	3301      	adds	r3, #1
 800cf48:	e7eb      	b.n	800cf22 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800cf4a:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 800cf4e:	4299      	cmp	r1, r3
 800cf50:	bfa8      	it	ge
 800cf52:	3501      	addge	r5, #1
 800cf54:	429e      	cmp	r6, r3
 800cf56:	bfc8      	it	gt
 800cf58:	3401      	addgt	r4, #1
 800cf5a:	e7f4      	b.n	800cf46 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800cf5c:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 800cf60:	1b49      	subs	r1, r1, r5
 800cf62:	1b1b      	subs	r3, r3, r4
 800cf64:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 800cf68:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 800cf6c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 800cf70:	4293      	cmp	r3, r2
 800cf72:	dd03      	ble.n	800cf7c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800cf74:	3b01      	subs	r3, #1
 800cf76:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 800cf7a:	e7f7      	b.n	800cf6c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800cf7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800cf80 <_ZN8touchgfx11Application15handleTickEventEv>:
 800cf80:	b570      	push	{r4, r5, r6, lr}
 800cf82:	4d16      	ldr	r5, [pc, #88]	; (800cfdc <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800cf84:	4604      	mov	r4, r0
 800cf86:	6828      	ldr	r0, [r5, #0]
 800cf88:	b140      	cbz	r0, 800cf9c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800cf8a:	7a03      	ldrb	r3, [r0, #8]
 800cf8c:	b933      	cbnz	r3, 800cf9c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800cf8e:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 800cf92:	6803      	ldr	r3, [r0, #0]
 800cf94:	689b      	ldr	r3, [r3, #8]
 800cf96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cf9a:	4718      	bx	r3
 800cf9c:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 800cfa0:	4e0f      	ldr	r6, [pc, #60]	; (800cfe0 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800cfa2:	b973      	cbnz	r3, 800cfc2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cfa4:	b168      	cbz	r0, 800cfc2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cfa6:	7a03      	ldrb	r3, [r0, #8]
 800cfa8:	b15b      	cbz	r3, 800cfc2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cfaa:	6830      	ldr	r0, [r6, #0]
 800cfac:	b110      	cbz	r0, 800cfb4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800cfae:	6803      	ldr	r3, [r0, #0]
 800cfb0:	691b      	ldr	r3, [r3, #16]
 800cfb2:	4798      	blx	r3
 800cfb4:	6828      	ldr	r0, [r5, #0]
 800cfb6:	6803      	ldr	r3, [r0, #0]
 800cfb8:	68db      	ldr	r3, [r3, #12]
 800cfba:	4798      	blx	r3
 800cfbc:	2301      	movs	r3, #1
 800cfbe:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 800cfc2:	3404      	adds	r4, #4
 800cfc4:	4620      	mov	r0, r4
 800cfc6:	f7ff ff45 	bl	800ce54 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800cfca:	4620      	mov	r0, r4
 800cfcc:	f7ff ffa0 	bl	800cf10 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800cfd0:	6830      	ldr	r0, [r6, #0]
 800cfd2:	b110      	cbz	r0, 800cfda <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800cfd4:	6803      	ldr	r3, [r0, #0]
 800cfd6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cfd8:	e7dd      	b.n	800cf96 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800cfda:	bd70      	pop	{r4, r5, r6, pc}
 800cfdc:	20012684 	.word	0x20012684
 800cfe0:	20012680 	.word	0x20012680

0800cfe4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 800cfe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cfe6:	2300      	movs	r3, #0
 800cfe8:	4604      	mov	r4, r0
 800cfea:	460d      	mov	r5, r1
 800cfec:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 800cff0:	4618      	mov	r0, r3
 800cff2:	b29a      	uxth	r2, r3
 800cff4:	4291      	cmp	r1, r2
 800cff6:	d911      	bls.n	800d01c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 800cff8:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 800cffc:	18e6      	adds	r6, r4, r3
 800cffe:	42af      	cmp	r7, r5
 800d000:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 800d004:	d105      	bne.n	800d012 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 800d006:	2aff      	cmp	r2, #255	; 0xff
 800d008:	d002      	beq.n	800d010 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 800d00a:	3201      	adds	r2, #1
 800d00c:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 800d010:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d012:	2a00      	cmp	r2, #0
 800d014:	bf08      	it	eq
 800d016:	2001      	moveq	r0, #1
 800d018:	3301      	adds	r3, #1
 800d01a:	e7ea      	b.n	800cff2 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 800d01c:	b120      	cbz	r0, 800d028 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 800d01e:	2920      	cmp	r1, #32
 800d020:	d102      	bne.n	800d028 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 800d022:	4620      	mov	r0, r4
 800d024:	f7ff ff74 	bl	800cf10 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800d028:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 800d02c:	2b1f      	cmp	r3, #31
 800d02e:	d8ef      	bhi.n	800d010 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 800d030:	18e2      	adds	r2, r4, r3
 800d032:	2101      	movs	r1, #1
 800d034:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 800d038:	185a      	adds	r2, r3, r1
 800d03a:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 800d03e:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 800d042:	e7e5      	b.n	800d010 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0800d044 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800d044:	4603      	mov	r3, r0
 800d046:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800d04a:	2200      	movs	r2, #0
 800d04c:	801a      	strh	r2, [r3, #0]
 800d04e:	805a      	strh	r2, [r3, #2]
 800d050:	809a      	strh	r2, [r3, #4]
 800d052:	80da      	strh	r2, [r3, #6]
 800d054:	3308      	adds	r3, #8
 800d056:	428b      	cmp	r3, r1
 800d058:	d1f8      	bne.n	800d04c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800d05a:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800d05e:	4770      	bx	lr

0800d060 <_ZN8touchgfx11ApplicationC1Ev>:
 800d060:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d062:	4606      	mov	r6, r0
 800d064:	4b1c      	ldr	r3, [pc, #112]	; (800d0d8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800d066:	f846 3b04 	str.w	r3, [r6], #4
 800d06a:	4604      	mov	r4, r0
 800d06c:	2500      	movs	r5, #0
 800d06e:	22a8      	movs	r2, #168	; 0xa8
 800d070:	2100      	movs	r1, #0
 800d072:	4630      	mov	r0, r6
 800d074:	f010 fc9c 	bl	801d9b0 <memset>
 800d078:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 800d07c:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800d080:	f7ff ffe0 	bl	800d044 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d084:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 800d088:	f7ff ffdc 	bl	800d044 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d08c:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800d090:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800d094:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 800d098:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 800d09c:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 800d0a0:	490e      	ldr	r1, [pc, #56]	; (800d0dc <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800d0a2:	480f      	ldr	r0, [pc, #60]	; (800d0e0 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800d0a4:	4f0f      	ldr	r7, [pc, #60]	; (800d0e4 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800d0a6:	f010 fabf 	bl	801d628 <CRC_Lock>
 800d0aa:	4b0f      	ldr	r3, [pc, #60]	; (800d0e8 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800d0ac:	b158      	cbz	r0, 800d0c6 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800d0ae:	801d      	strh	r5, [r3, #0]
 800d0b0:	4a0e      	ldr	r2, [pc, #56]	; (800d0ec <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800d0b2:	2300      	movs	r3, #0
 800d0b4:	6013      	str	r3, [r2, #0]
 800d0b6:	4a0e      	ldr	r2, [pc, #56]	; (800d0f0 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800d0b8:	603b      	str	r3, [r7, #0]
 800d0ba:	4630      	mov	r0, r6
 800d0bc:	6013      	str	r3, [r2, #0]
 800d0be:	f7ff ff01 	bl	800cec4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800d0c2:	4620      	mov	r0, r4
 800d0c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d0c6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800d0ca:	2002      	movs	r0, #2
 800d0cc:	801a      	strh	r2, [r3, #0]
 800d0ce:	6038      	str	r0, [r7, #0]
 800d0d0:	f001 fa5a 	bl	800e588 <_ZN8touchgfx6Screen4drawEv>
 800d0d4:	e7ec      	b.n	800d0b0 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800d0d6:	bf00      	nop
 800d0d8:	08020664 	.word	0x08020664
 800d0dc:	b5e8b5cd 	.word	0xb5e8b5cd
 800d0e0:	f407a5c2 	.word	0xf407a5c2
 800d0e4:	20012680 	.word	0x20012680
 800d0e8:	20000084 	.word	0x20000084
 800d0ec:	20012690 	.word	0x20012690
 800d0f0:	20012684 	.word	0x20012684

0800d0f4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800d0f4:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800d0f8:	3b01      	subs	r3, #1
 800d0fa:	b29b      	uxth	r3, r3
 800d0fc:	428b      	cmp	r3, r1
 800d0fe:	b510      	push	{r4, lr}
 800d100:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800d104:	d908      	bls.n	800d118 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800d106:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800d10a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800d10e:	681a      	ldr	r2, [r3, #0]
 800d110:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800d114:	685a      	ldr	r2, [r3, #4]
 800d116:	6062      	str	r2, [r4, #4]
 800d118:	bd10      	pop	{r4, pc}
	...

0800d11c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800d11c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d120:	4b8f      	ldr	r3, [pc, #572]	; (800d360 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800d122:	b08f      	sub	sp, #60	; 0x3c
 800d124:	ac0a      	add	r4, sp, #40	; 0x28
 800d126:	e884 0006 	stmia.w	r4, {r1, r2}
 800d12a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d12e:	4b8d      	ldr	r3, [pc, #564]	; (800d364 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800d130:	4683      	mov	fp, r0
 800d132:	f9b3 1000 	ldrsh.w	r1, [r3]
 800d136:	4620      	mov	r0, r4
 800d138:	f7ff fda1 	bl	800cc7e <_ZN8touchgfx4Rect10restrictToEss>
 800d13c:	4620      	mov	r0, r4
 800d13e:	f7fc fcf2 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d142:	2800      	cmp	r0, #0
 800d144:	d16a      	bne.n	800d21c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d146:	9403      	str	r4, [sp, #12]
 800d148:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 800d14c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 800d150:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800d154:	35a4      	adds	r5, #164	; 0xa4
 800d156:	9301      	str	r3, [sp, #4]
 800d158:	b15c      	cbz	r4, 800d172 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d15a:	4629      	mov	r1, r5
 800d15c:	9803      	ldr	r0, [sp, #12]
 800d15e:	f7ff fddf 	bl	800cd20 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d162:	3c01      	subs	r4, #1
 800d164:	b118      	cbz	r0, 800d16e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800d166:	b2a1      	uxth	r1, r4
 800d168:	9801      	ldr	r0, [sp, #4]
 800d16a:	f7ff ffc3 	bl	800d0f4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d16e:	3d08      	subs	r5, #8
 800d170:	e7f2      	b.n	800d158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800d172:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 800d176:	f8cd a010 	str.w	sl, [sp, #16]
 800d17a:	f10a 33ff 	add.w	r3, sl, #4294967295
 800d17e:	9302      	str	r3, [sp, #8]
 800d180:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800d184:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 800d188:	9306      	str	r3, [sp, #24]
 800d18a:	445c      	add	r4, fp
 800d18c:	2500      	movs	r5, #0
 800d18e:	4626      	mov	r6, r4
 800d190:	f8cd a014 	str.w	sl, [sp, #20]
 800d194:	462f      	mov	r7, r5
 800d196:	9b05      	ldr	r3, [sp, #20]
 800d198:	2b00      	cmp	r3, #0
 800d19a:	d073      	beq.n	800d284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800d19c:	9903      	ldr	r1, [sp, #12]
 800d19e:	4630      	mov	r0, r6
 800d1a0:	f7ff fd4b 	bl	800cc3a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d1a4:	b350      	cbz	r0, 800d1fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d1a6:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 800d1aa:	f9b6 c000 	ldrsh.w	ip, [r6]
 800d1ae:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 800d1b2:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800d1b6:	45e6      	cmp	lr, ip
 800d1b8:	db33      	blt.n	800d222 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800d1ba:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 800d1be:	88b3      	ldrh	r3, [r6, #4]
 800d1c0:	4472      	add	r2, lr
 800d1c2:	4463      	add	r3, ip
 800d1c4:	b212      	sxth	r2, r2
 800d1c6:	b21b      	sxth	r3, r3
 800d1c8:	429a      	cmp	r2, r3
 800d1ca:	dc2a      	bgt.n	800d222 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800d1cc:	88f3      	ldrh	r3, [r6, #6]
 800d1ce:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 800d1d2:	fa1f f289 	uxth.w	r2, r9
 800d1d6:	4413      	add	r3, r2
 800d1d8:	b29b      	uxth	r3, r3
 800d1da:	45c8      	cmp	r8, r9
 800d1dc:	fa1f fc88 	uxth.w	ip, r8
 800d1e0:	fa0f fe83 	sxth.w	lr, r3
 800d1e4:	db0f      	blt.n	800d206 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800d1e6:	eba3 030c 	sub.w	r3, r3, ip
 800d1ea:	1ac9      	subs	r1, r1, r3
 800d1ec:	b209      	sxth	r1, r1
 800d1ee:	2900      	cmp	r1, #0
 800d1f0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800d1f4:	dd12      	ble.n	800d21c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d1f6:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 800d1fa:	4605      	mov	r5, r0
 800d1fc:	9b05      	ldr	r3, [sp, #20]
 800d1fe:	3b01      	subs	r3, #1
 800d200:	9305      	str	r3, [sp, #20]
 800d202:	3e08      	subs	r6, #8
 800d204:	e7c7      	b.n	800d196 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800d206:	4461      	add	r1, ip
 800d208:	b209      	sxth	r1, r1
 800d20a:	4571      	cmp	r1, lr
 800d20c:	dc38      	bgt.n	800d280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d20e:	eba2 020c 	sub.w	r2, r2, ip
 800d212:	b212      	sxth	r2, r2
 800d214:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800d218:	2a00      	cmp	r2, #0
 800d21a:	dcee      	bgt.n	800d1fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d21c:	b00f      	add	sp, #60	; 0x3c
 800d21e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d222:	45c8      	cmp	r8, r9
 800d224:	db2c      	blt.n	800d280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d226:	88f3      	ldrh	r3, [r6, #6]
 800d228:	4499      	add	r9, r3
 800d22a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800d22e:	4498      	add	r8, r3
 800d230:	fa0f f989 	sxth.w	r9, r9
 800d234:	fa0f f888 	sxth.w	r8, r8
 800d238:	45c1      	cmp	r9, r8
 800d23a:	db21      	blt.n	800d280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d23c:	88b3      	ldrh	r3, [r6, #4]
 800d23e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800d242:	fa1f f28c 	uxth.w	r2, ip
 800d246:	4413      	add	r3, r2
 800d248:	b29b      	uxth	r3, r3
 800d24a:	45e6      	cmp	lr, ip
 800d24c:	fa1f f88e 	uxth.w	r8, lr
 800d250:	fa0f f983 	sxth.w	r9, r3
 800d254:	db0a      	blt.n	800d26c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800d256:	eba3 0308 	sub.w	r3, r3, r8
 800d25a:	1ac9      	subs	r1, r1, r3
 800d25c:	b209      	sxth	r1, r1
 800d25e:	2900      	cmp	r1, #0
 800d260:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 800d264:	ddda      	ble.n	800d21c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d266:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 800d26a:	e7c6      	b.n	800d1fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d26c:	4441      	add	r1, r8
 800d26e:	b209      	sxth	r1, r1
 800d270:	4549      	cmp	r1, r9
 800d272:	dc05      	bgt.n	800d280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d274:	eba2 0208 	sub.w	r2, r2, r8
 800d278:	b212      	sxth	r2, r2
 800d27a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800d27e:	e7cb      	b.n	800d218 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800d280:	4607      	mov	r7, r0
 800d282:	e7bb      	b.n	800d1fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d284:	2d00      	cmp	r5, #0
 800d286:	d181      	bne.n	800d18c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800d288:	2f00      	cmp	r7, #0
 800d28a:	f000 81dd 	beq.w	800d648 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800d28e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 800d292:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 800d296:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 800d29a:	b2b3      	uxth	r3, r6
 800d29c:	9305      	str	r3, [sp, #20]
 800d29e:	9a05      	ldr	r2, [sp, #20]
 800d2a0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800d2a4:	4413      	add	r3, r2
 800d2a6:	b2ba      	uxth	r2, r7
 800d2a8:	4492      	add	sl, r2
 800d2aa:	b29b      	uxth	r3, r3
 800d2ac:	fa1f fa8a 	uxth.w	sl, sl
 800d2b0:	fa0f f883 	sxth.w	r8, r3
 800d2b4:	fa0f f98a 	sxth.w	r9, sl
 800d2b8:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800d2bc:	9b04      	ldr	r3, [sp, #16]
 800d2be:	2b00      	cmp	r3, #0
 800d2c0:	d052      	beq.n	800d368 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800d2c2:	9903      	ldr	r1, [sp, #12]
 800d2c4:	4620      	mov	r0, r4
 800d2c6:	f7ff fcb8 	bl	800cc3a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d2ca:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800d2ce:	b1c0      	cbz	r0, 800d302 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d2d0:	f9b4 e000 	ldrsh.w	lr, [r4]
 800d2d4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800d2d8:	4576      	cmp	r6, lr
 800d2da:	dc22      	bgt.n	800d322 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d2dc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d2e0:	44f4      	add	ip, lr
 800d2e2:	fa0f fc8c 	sxth.w	ip, ip
 800d2e6:	45e0      	cmp	r8, ip
 800d2e8:	db1b      	blt.n	800d322 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d2ea:	428f      	cmp	r7, r1
 800d2ec:	fa1f fc81 	uxth.w	ip, r1
 800d2f0:	88e1      	ldrh	r1, [r4, #6]
 800d2f2:	dc0d      	bgt.n	800d310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800d2f4:	ebaa 0c0c 	sub.w	ip, sl, ip
 800d2f8:	eba1 010c 	sub.w	r1, r1, ip
 800d2fc:	f8a4 9002 	strh.w	r9, [r4, #2]
 800d300:	80e1      	strh	r1, [r4, #6]
 800d302:	4628      	mov	r0, r5
 800d304:	9904      	ldr	r1, [sp, #16]
 800d306:	3901      	subs	r1, #1
 800d308:	9104      	str	r1, [sp, #16]
 800d30a:	3c08      	subs	r4, #8
 800d30c:	4605      	mov	r5, r0
 800d30e:	e7d3      	b.n	800d2b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800d310:	4461      	add	r1, ip
 800d312:	b209      	sxth	r1, r1
 800d314:	4549      	cmp	r1, r9
 800d316:	dcf5      	bgt.n	800d304 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d318:	eba2 0c0c 	sub.w	ip, r2, ip
 800d31c:	f8a4 c006 	strh.w	ip, [r4, #6]
 800d320:	e7ef      	b.n	800d302 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d322:	428f      	cmp	r7, r1
 800d324:	dcee      	bgt.n	800d304 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d326:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800d32a:	4461      	add	r1, ip
 800d32c:	b209      	sxth	r1, r1
 800d32e:	4589      	cmp	r9, r1
 800d330:	dbe8      	blt.n	800d304 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d332:	4576      	cmp	r6, lr
 800d334:	fa1f fc8e 	uxth.w	ip, lr
 800d338:	88a1      	ldrh	r1, [r4, #4]
 800d33a:	dc07      	bgt.n	800d34c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800d33c:	eba3 0c0c 	sub.w	ip, r3, ip
 800d340:	eba1 010c 	sub.w	r1, r1, ip
 800d344:	f8a4 8000 	strh.w	r8, [r4]
 800d348:	80a1      	strh	r1, [r4, #4]
 800d34a:	e7da      	b.n	800d302 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d34c:	4461      	add	r1, ip
 800d34e:	b209      	sxth	r1, r1
 800d350:	4588      	cmp	r8, r1
 800d352:	dbd7      	blt.n	800d304 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d354:	9905      	ldr	r1, [sp, #20]
 800d356:	eba1 0c0c 	sub.w	ip, r1, ip
 800d35a:	f8a4 c004 	strh.w	ip, [r4, #4]
 800d35e:	e7d0      	b.n	800d302 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d360:	2001263a 	.word	0x2001263a
 800d364:	20012638 	.word	0x20012638
 800d368:	2d00      	cmp	r5, #0
 800d36a:	f000 816d 	beq.w	800d648 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800d36e:	9b06      	ldr	r3, [sp, #24]
 800d370:	445b      	add	r3, fp
 800d372:	461c      	mov	r4, r3
 800d374:	9b02      	ldr	r3, [sp, #8]
 800d376:	3301      	adds	r3, #1
 800d378:	f000 8166 	beq.w	800d648 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800d37c:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 800d380:	4629      	mov	r1, r5
 800d382:	9803      	ldr	r0, [sp, #12]
 800d384:	f7ff fccc 	bl	800cd20 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d388:	b120      	cbz	r0, 800d394 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800d38a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800d38e:	9801      	ldr	r0, [sp, #4]
 800d390:	f7ff feb0 	bl	800d0f4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d394:	9903      	ldr	r1, [sp, #12]
 800d396:	4628      	mov	r0, r5
 800d398:	f7ff fc4f 	bl	800cc3a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d39c:	2800      	cmp	r0, #0
 800d39e:	f000 809c 	beq.w	800d4da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d3a2:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 800d3a6:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 800d3aa:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 800d3ae:	9309      	str	r3, [sp, #36]	; 0x24
 800d3b0:	fa1f f189 	uxth.w	r1, r9
 800d3b4:	eb01 0c03 	add.w	ip, r1, r3
 800d3b8:	fa1f fa8c 	uxth.w	sl, ip
 800d3bc:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 800d3c0:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 800d3c4:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 800d3c8:	b283      	uxth	r3, r0
 800d3ca:	eb03 050c 	add.w	r5, r3, ip
 800d3ce:	b2ad      	uxth	r5, r5
 800d3d0:	9505      	str	r5, [sp, #20]
 800d3d2:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800d3d6:	9504      	str	r5, [sp, #16]
 800d3d8:	4548      	cmp	r0, r9
 800d3da:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 800d3de:	f340 8099 	ble.w	800d514 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800d3e2:	1a5b      	subs	r3, r3, r1
 800d3e4:	b29b      	uxth	r3, r3
 800d3e6:	4596      	cmp	lr, r2
 800d3e8:	fa0f f08a 	sxth.w	r0, sl
 800d3ec:	b21e      	sxth	r6, r3
 800d3ee:	dd2e      	ble.n	800d44e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800d3f0:	9f02      	ldr	r7, [sp, #8]
 800d3f2:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 800d3f6:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800d3fa:	9f04      	ldr	r7, [sp, #16]
 800d3fc:	1a3f      	subs	r7, r7, r0
 800d3fe:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 800d402:	fa1f fe8e 	uxth.w	lr, lr
 800d406:	b292      	uxth	r2, r2
 800d408:	ebae 0102 	sub.w	r1, lr, r2
 800d40c:	44a6      	add	lr, r4
 800d40e:	4402      	add	r2, r0
 800d410:	b289      	uxth	r1, r1
 800d412:	fa0f fe8e 	sxth.w	lr, lr
 800d416:	b212      	sxth	r2, r2
 800d418:	b20d      	sxth	r5, r1
 800d41a:	ebae 0202 	sub.w	r2, lr, r2
 800d41e:	436f      	muls	r7, r5
 800d420:	4372      	muls	r2, r6
 800d422:	4297      	cmp	r7, r2
 800d424:	db09      	blt.n	800d43a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800d426:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 800d42a:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 800d42e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800d432:	449c      	add	ip, r3
 800d434:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 800d438:	e686      	b.n	800d148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d43a:	4421      	add	r1, r4
 800d43c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 800d440:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 800d444:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800d448:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800d44c:	e67c      	b.n	800d148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d44e:	9f04      	ldr	r7, [sp, #16]
 800d450:	42b8      	cmp	r0, r7
 800d452:	da27      	bge.n	800d4a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800d454:	9902      	ldr	r1, [sp, #8]
 800d456:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 800d45a:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800d45e:	eb05 010e 	add.w	r1, r5, lr
 800d462:	fa1f f881 	uxth.w	r8, r1
 800d466:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 800d46a:	4411      	add	r1, r2
 800d46c:	eba1 0108 	sub.w	r1, r1, r8
 800d470:	b289      	uxth	r1, r1
 800d472:	fa0f f988 	sxth.w	r9, r8
 800d476:	eba2 020e 	sub.w	r2, r2, lr
 800d47a:	fa0f f881 	sxth.w	r8, r1
 800d47e:	1a3f      	subs	r7, r7, r0
 800d480:	4372      	muls	r2, r6
 800d482:	fb08 f707 	mul.w	r7, r8, r7
 800d486:	42ba      	cmp	r2, r7
 800d488:	dc06      	bgt.n	800d498 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800d48a:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 800d48e:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 800d492:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 800d496:	e7ca      	b.n	800d42e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800d498:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 800d49c:	4429      	add	r1, r5
 800d49e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800d4a2:	e651      	b.n	800d148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d4a4:	9805      	ldr	r0, [sp, #20]
 800d4a6:	ebaa 0000 	sub.w	r0, sl, r0
 800d4aa:	b280      	uxth	r0, r0
 800d4ac:	2d06      	cmp	r5, #6
 800d4ae:	fa0f fe80 	sxth.w	lr, r0
 800d4b2:	d817      	bhi.n	800d4e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800d4b4:	9b04      	ldr	r3, [sp, #16]
 800d4b6:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 800d4ba:	1c6b      	adds	r3, r5, #1
 800d4bc:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 800d4c0:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 800d4c4:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 800d4c8:	9b01      	ldr	r3, [sp, #4]
 800d4ca:	9801      	ldr	r0, [sp, #4]
 800d4cc:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d4d0:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800d4d4:	805a      	strh	r2, [r3, #2]
 800d4d6:	809e      	strh	r6, [r3, #4]
 800d4d8:	80d9      	strh	r1, [r3, #6]
 800d4da:	9b02      	ldr	r3, [sp, #8]
 800d4dc:	3b01      	subs	r3, #1
 800d4de:	9302      	str	r3, [sp, #8]
 800d4e0:	3c08      	subs	r4, #8
 800d4e2:	e747      	b.n	800d374 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800d4e4:	9a02      	ldr	r2, [sp, #8]
 800d4e6:	45b6      	cmp	lr, r6
 800d4e8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d4ec:	db0d      	blt.n	800d50a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800d4ee:	449c      	add	ip, r3
 800d4f0:	fa1f fc8c 	uxth.w	ip, ip
 800d4f4:	445a      	add	r2, fp
 800d4f6:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 800d4fa:	448c      	add	ip, r1
 800d4fc:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 800d500:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 800d504:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 800d508:	e61e      	b.n	800d148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d50a:	445a      	add	r2, fp
 800d50c:	4484      	add	ip, r0
 800d50e:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 800d512:	e78f      	b.n	800d434 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d514:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 800d518:	fa1f f18e 	uxth.w	r1, lr
 800d51c:	eb01 0806 	add.w	r8, r1, r6
 800d520:	b293      	uxth	r3, r2
 800d522:	fa1f f888 	uxth.w	r8, r8
 800d526:	9306      	str	r3, [sp, #24]
 800d528:	fa0f f388 	sxth.w	r3, r8
 800d52c:	9307      	str	r3, [sp, #28]
 800d52e:	9f06      	ldr	r7, [sp, #24]
 800d530:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 800d534:	443b      	add	r3, r7
 800d536:	b29b      	uxth	r3, r3
 800d538:	4596      	cmp	lr, r2
 800d53a:	9308      	str	r3, [sp, #32]
 800d53c:	da24      	bge.n	800d588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800d53e:	9905      	ldr	r1, [sp, #20]
 800d540:	eba3 0308 	sub.w	r3, r3, r8
 800d544:	ebaa 0401 	sub.w	r4, sl, r1
 800d548:	b2a4      	uxth	r4, r4
 800d54a:	b29b      	uxth	r3, r3
 800d54c:	b225      	sxth	r5, r4
 800d54e:	b219      	sxth	r1, r3
 800d550:	eba2 020e 	sub.w	r2, r2, lr
 800d554:	eba9 0000 	sub.w	r0, r9, r0
 800d558:	436a      	muls	r2, r5
 800d55a:	4348      	muls	r0, r1
 800d55c:	4282      	cmp	r2, r0
 800d55e:	9a02      	ldr	r2, [sp, #8]
 800d560:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d564:	445a      	add	r2, fp
 800d566:	dc06      	bgt.n	800d576 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800d568:	9b07      	ldr	r3, [sp, #28]
 800d56a:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 800d56e:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 800d572:	44a4      	add	ip, r4
 800d574:	e75e      	b.n	800d434 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d576:	9904      	ldr	r1, [sp, #16]
 800d578:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 800d57c:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 800d580:	4433      	add	r3, r6
 800d582:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800d586:	e5df      	b.n	800d148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d588:	9f06      	ldr	r7, [sp, #24]
 800d58a:	9b04      	ldr	r3, [sp, #16]
 800d58c:	1bc9      	subs	r1, r1, r7
 800d58e:	fa0f f78a 	sxth.w	r7, sl
 800d592:	b289      	uxth	r1, r1
 800d594:	429f      	cmp	r7, r3
 800d596:	fa0f fe81 	sxth.w	lr, r1
 800d59a:	dd23      	ble.n	800d5e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 800d59c:	9a05      	ldr	r2, [sp, #20]
 800d59e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d5a2:	9d07      	ldr	r5, [sp, #28]
 800d5a4:	ebaa 0202 	sub.w	r2, sl, r2
 800d5a8:	b292      	uxth	r2, r2
 800d5aa:	eba5 0a03 	sub.w	sl, r5, r3
 800d5ae:	b214      	sxth	r4, r2
 800d5b0:	eba9 0000 	sub.w	r0, r9, r0
 800d5b4:	9b02      	ldr	r3, [sp, #8]
 800d5b6:	fb0e f000 	mul.w	r0, lr, r0
 800d5ba:	fb04 fa0a 	mul.w	sl, r4, sl
 800d5be:	00db      	lsls	r3, r3, #3
 800d5c0:	4550      	cmp	r0, sl
 800d5c2:	445b      	add	r3, fp
 800d5c4:	db03      	blt.n	800d5ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 800d5c6:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 800d5ca:	4494      	add	ip, r2
 800d5cc:	e732      	b.n	800d434 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d5ce:	9a04      	ldr	r2, [sp, #16]
 800d5d0:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 800d5d4:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 800d5d8:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 800d5dc:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800d5e0:	4431      	add	r1, r6
 800d5e2:	e75c      	b.n	800d49e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800d5e4:	9b08      	ldr	r3, [sp, #32]
 800d5e6:	eba3 0308 	sub.w	r3, r3, r8
 800d5ea:	b29b      	uxth	r3, r3
 800d5ec:	2d06      	cmp	r5, #6
 800d5ee:	b218      	sxth	r0, r3
 800d5f0:	d813      	bhi.n	800d61a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 800d5f2:	9b07      	ldr	r3, [sp, #28]
 800d5f4:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 800d5f8:	1c6b      	adds	r3, r5, #1
 800d5fa:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 800d5fe:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 800d602:	9b01      	ldr	r3, [sp, #4]
 800d604:	9901      	ldr	r1, [sp, #4]
 800d606:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d60a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800d60e:	805a      	strh	r2, [r3, #2]
 800d610:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800d612:	809a      	strh	r2, [r3, #4]
 800d614:	f8a3 e006 	strh.w	lr, [r3, #6]
 800d618:	e75f      	b.n	800d4da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d61a:	9c02      	ldr	r4, [sp, #8]
 800d61c:	4570      	cmp	r0, lr
 800d61e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d622:	db0d      	blt.n	800d640 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 800d624:	4431      	add	r1, r6
 800d626:	9b06      	ldr	r3, [sp, #24]
 800d628:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800d62c:	b289      	uxth	r1, r1
 800d62e:	445c      	add	r4, fp
 800d630:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800d634:	4419      	add	r1, r3
 800d636:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 800d63a:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 800d63e:	e583      	b.n	800d148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d640:	445c      	add	r4, fp
 800d642:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 800d646:	e79b      	b.n	800d580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800d648:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 800d64c:	1e65      	subs	r5, r4, #1
 800d64e:	b2ad      	uxth	r5, r5
 800d650:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800d654:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800d658:	42b5      	cmp	r5, r6
 800d65a:	d044      	beq.n	800d6e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800d65c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 800d660:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 800d664:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 800d668:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 800d66c:	4282      	cmp	r2, r0
 800d66e:	d11f      	bne.n	800d6b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800d670:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 800d674:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 800d678:	459c      	cmp	ip, r3
 800d67a:	d119      	bne.n	800d6b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800d67c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 800d680:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 800d684:	19d8      	adds	r0, r3, r7
 800d686:	b200      	sxth	r0, r0
 800d688:	4288      	cmp	r0, r1
 800d68a:	d109      	bne.n	800d6a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 800d68c:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 800d690:	4413      	add	r3, r2
 800d692:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800d696:	4629      	mov	r1, r5
 800d698:	9801      	ldr	r0, [sp, #4]
 800d69a:	f7ff fd2b 	bl	800d0f4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d69e:	e003      	b.n	800d6a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800d6a0:	4411      	add	r1, r2
 800d6a2:	b209      	sxth	r1, r1
 800d6a4:	42b9      	cmp	r1, r7
 800d6a6:	d0f3      	beq.n	800d690 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 800d6a8:	3d01      	subs	r5, #1
 800d6aa:	b2ad      	uxth	r5, r5
 800d6ac:	3c08      	subs	r4, #8
 800d6ae:	e7d3      	b.n	800d658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800d6b0:	42b9      	cmp	r1, r7
 800d6b2:	d1f9      	bne.n	800d6a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800d6b4:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 800d6b8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 800d6bc:	4299      	cmp	r1, r3
 800d6be:	d1f3      	bne.n	800d6a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800d6c0:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 800d6c4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 800d6c8:	181f      	adds	r7, r3, r0
 800d6ca:	b23f      	sxth	r7, r7
 800d6cc:	42ba      	cmp	r2, r7
 800d6ce:	d105      	bne.n	800d6dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 800d6d0:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 800d6d4:	440b      	add	r3, r1
 800d6d6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800d6da:	e7dc      	b.n	800d696 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 800d6dc:	440a      	add	r2, r1
 800d6de:	b212      	sxth	r2, r2
 800d6e0:	4290      	cmp	r0, r2
 800d6e2:	d1e1      	bne.n	800d6a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800d6e4:	e7f6      	b.n	800d6d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 800d6e6:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 800d6ea:	2e07      	cmp	r6, #7
 800d6ec:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800d6f0:	d812      	bhi.n	800d718 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 800d6f2:	1c75      	adds	r5, r6, #1
 800d6f4:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 800d6f8:	9d01      	ldr	r5, [sp, #4]
 800d6fa:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 800d6fe:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 800d702:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 800d706:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 800d70a:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800d70e:	442c      	add	r4, r5
 800d710:	8061      	strh	r1, [r4, #2]
 800d712:	80a2      	strh	r2, [r4, #4]
 800d714:	80e3      	strh	r3, [r4, #6]
 800d716:	e581      	b.n	800d21c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d718:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 800d71c:	3e01      	subs	r6, #1
 800d71e:	445c      	add	r4, fp
 800d720:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800d724:	f04f 37ff 	mov.w	r7, #4294967295
 800d728:	2500      	movs	r5, #0
 800d72a:	9305      	str	r3, [sp, #20]
 800d72c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 800d730:	9302      	str	r3, [sp, #8]
 800d732:	1e72      	subs	r2, r6, #1
 800d734:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 800d738:	9304      	str	r3, [sp, #16]
 800d73a:	4691      	mov	r9, r2
 800d73c:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 800d740:	f1b9 3fff 	cmp.w	r9, #4294967295
 800d744:	bf14      	ite	ne
 800d746:	9905      	ldrne	r1, [sp, #20]
 800d748:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800d74c:	6818      	ldr	r0, [r3, #0]
 800d74e:	9207      	str	r2, [sp, #28]
 800d750:	bf18      	it	ne
 800d752:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800d756:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800d75a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800d75e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800d762:	9306      	str	r3, [sp, #24]
 800d764:	fb18 f801 	smulbb	r8, r8, r1
 800d768:	6859      	ldr	r1, [r3, #4]
 800d76a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d76e:	4671      	mov	r1, lr
 800d770:	a80c      	add	r0, sp, #48	; 0x30
 800d772:	f7ff fafb 	bl	800cd6c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d776:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 800d77a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 800d77e:	9b04      	ldr	r3, [sp, #16]
 800d780:	9a02      	ldr	r2, [sp, #8]
 800d782:	fb10 f001 	smulbb	r0, r0, r1
 800d786:	fb02 8803 	mla	r8, r2, r3, r8
 800d78a:	eba0 0108 	sub.w	r1, r0, r8
 800d78e:	f04f 0c08 	mov.w	ip, #8
 800d792:	fb90 f0fc 	sdiv	r0, r0, ip
 800d796:	4288      	cmp	r0, r1
 800d798:	dc20      	bgt.n	800d7dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800d79a:	4551      	cmp	r1, sl
 800d79c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800d7a0:	da03      	bge.n	800d7aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 800d7a2:	b1d9      	cbz	r1, 800d7dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800d7a4:	468a      	mov	sl, r1
 800d7a6:	464f      	mov	r7, r9
 800d7a8:	4635      	mov	r5, r6
 800d7aa:	f109 39ff 	add.w	r9, r9, #4294967295
 800d7ae:	f119 0f02 	cmn.w	r9, #2
 800d7b2:	d1c5      	bne.n	800d740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 800d7b4:	4616      	mov	r6, r2
 800d7b6:	3201      	adds	r2, #1
 800d7b8:	f1a4 0408 	sub.w	r4, r4, #8
 800d7bc:	d1b6      	bne.n	800d72c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 800d7be:	9b01      	ldr	r3, [sp, #4]
 800d7c0:	b2ac      	uxth	r4, r5
 800d7c2:	00ed      	lsls	r5, r5, #3
 800d7c4:	1958      	adds	r0, r3, r5
 800d7c6:	1c7b      	adds	r3, r7, #1
 800d7c8:	d10b      	bne.n	800d7e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 800d7ca:	4601      	mov	r1, r0
 800d7cc:	9803      	ldr	r0, [sp, #12]
 800d7ce:	f7ff facd 	bl	800cd6c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d7d2:	4621      	mov	r1, r4
 800d7d4:	9801      	ldr	r0, [sp, #4]
 800d7d6:	f7ff fc8d 	bl	800d0f4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d7da:	e4b5      	b.n	800d148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d7dc:	464f      	mov	r7, r9
 800d7de:	4635      	mov	r5, r6
 800d7e0:	e7ed      	b.n	800d7be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 800d7e2:	9b01      	ldr	r3, [sp, #4]
 800d7e4:	00ff      	lsls	r7, r7, #3
 800d7e6:	19d9      	adds	r1, r3, r7
 800d7e8:	f7ff fac0 	bl	800cd6c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d7ec:	9b03      	ldr	r3, [sp, #12]
 800d7ee:	cb03      	ldmia	r3!, {r0, r1}
 800d7f0:	445f      	add	r7, fp
 800d7f2:	445d      	add	r5, fp
 800d7f4:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 800d7f8:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 800d7fc:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800d800:	9b03      	ldr	r3, [sp, #12]
 800d802:	6869      	ldr	r1, [r5, #4]
 800d804:	c303      	stmia	r3!, {r0, r1}
 800d806:	e7e4      	b.n	800d7d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

0800d808 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800d808:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d80c:	f500 7698 	add.w	r6, r0, #304	; 0x130
 800d810:	b09b      	sub	sp, #108	; 0x6c
 800d812:	4604      	mov	r4, r0
 800d814:	4630      	mov	r0, r6
 800d816:	f7fc f986 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d81a:	4605      	mov	r5, r0
 800d81c:	b948      	cbnz	r0, 800d832 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800d81e:	6823      	ldr	r3, [r4, #0]
 800d820:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d824:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d826:	4620      	mov	r0, r4
 800d828:	4798      	blx	r3
 800d82a:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800d82e:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800d832:	4bc6      	ldr	r3, [pc, #792]	; (800db4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800d834:	681b      	ldr	r3, [r3, #0]
 800d836:	2b00      	cmp	r3, #0
 800d838:	d03f      	beq.n	800d8ba <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800d83a:	4dc5      	ldr	r5, [pc, #788]	; (800db50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800d83c:	4628      	mov	r0, r5
 800d83e:	f7fc f972 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d842:	4606      	mov	r6, r0
 800d844:	2800      	cmp	r0, #0
 800d846:	d138      	bne.n	800d8ba <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800d848:	4628      	mov	r0, r5
 800d84a:	f7ff f923 	bl	800ca94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d84e:	6823      	ldr	r3, [r4, #0]
 800d850:	6829      	ldr	r1, [r5, #0]
 800d852:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d854:	686a      	ldr	r2, [r5, #4]
 800d856:	4620      	mov	r0, r4
 800d858:	4798      	blx	r3
 800d85a:	802e      	strh	r6, [r5, #0]
 800d85c:	806e      	strh	r6, [r5, #2]
 800d85e:	80ae      	strh	r6, [r5, #4]
 800d860:	80ee      	strh	r6, [r5, #6]
 800d862:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 800d866:	4dbb      	ldr	r5, [pc, #748]	; (800db54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800d868:	4640      	mov	r0, r8
 800d86a:	f7ff fbeb 	bl	800d044 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d86e:	882e      	ldrh	r6, [r5, #0]
 800d870:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 800d874:	4633      	mov	r3, r6
 800d876:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800d87a:	42bb      	cmp	r3, r7
 800d87c:	d224      	bcs.n	800d8c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800d87e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 800d882:	2907      	cmp	r1, #7
 800d884:	d816      	bhi.n	800d8b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 800d886:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800d88a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800d88e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800d892:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800d896:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800d89a:	1c4a      	adds	r2, r1, #1
 800d89c:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 800d8a0:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 800d8a4:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 800d8a8:	f8a2 a002 	strh.w	sl, [r2, #2]
 800d8ac:	f8a2 e004 	strh.w	lr, [r2, #4]
 800d8b0:	f8a2 c006 	strh.w	ip, [r2, #6]
 800d8b4:	3301      	adds	r3, #1
 800d8b6:	b29b      	uxth	r3, r3
 800d8b8:	e7df      	b.n	800d87a <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 800d8ba:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 800d8be:	2b00      	cmp	r3, #0
 800d8c0:	d1cf      	bne.n	800d862 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 800d8c2:	b01b      	add	sp, #108	; 0x6c
 800d8c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d8c8:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 800d8cc:	42b3      	cmp	r3, r6
 800d8ce:	d90c      	bls.n	800d8ea <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 800d8d0:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d8d4:	6822      	ldr	r2, [r4, #0]
 800d8d6:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 800d8da:	6c17      	ldr	r7, [r2, #64]	; 0x40
 800d8dc:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 800d8e0:	4620      	mov	r0, r4
 800d8e2:	3601      	adds	r6, #1
 800d8e4:	47b8      	blx	r7
 800d8e6:	b2b6      	uxth	r6, r6
 800d8e8:	e7ee      	b.n	800d8c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800d8ea:	4a9b      	ldr	r2, [pc, #620]	; (800db58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800d8ec:	6813      	ldr	r3, [r2, #0]
 800d8ee:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800d8f2:	2b01      	cmp	r3, #1
 800d8f4:	4691      	mov	r9, r2
 800d8f6:	f040 80e2 	bne.w	800dabe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 800d8fa:	8829      	ldrh	r1, [r5, #0]
 800d8fc:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 800d900:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800d904:	33ae      	adds	r3, #174	; 0xae
 800d906:	2600      	movs	r6, #0
 800d908:	428f      	cmp	r7, r1
 800d90a:	f103 0308 	add.w	r3, r3, #8
 800d90e:	dd0a      	ble.n	800d926 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 800d910:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 800d914:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 800d918:	4402      	add	r2, r0
 800d91a:	b212      	sxth	r2, r2
 800d91c:	4296      	cmp	r6, r2
 800d91e:	bfb8      	it	lt
 800d920:	4616      	movlt	r6, r2
 800d922:	3101      	adds	r1, #1
 800d924:	e7f0      	b.n	800d908 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 800d926:	4b8d      	ldr	r3, [pc, #564]	; (800db5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800d928:	f8df 922c 	ldr.w	r9, [pc, #556]	; 800db58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 800d92c:	881b      	ldrh	r3, [r3, #0]
 800d92e:	2b0f      	cmp	r3, #15
 800d930:	bf88      	it	hi
 800d932:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 800d936:	f04f 0300 	mov.w	r3, #0
 800d93a:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800d93e:	bf98      	it	ls
 800d940:	f04f 0b01 	movls.w	fp, #1
 800d944:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 800d948:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800d94c:	4b82      	ldr	r3, [pc, #520]	; (800db58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800d94e:	4438      	add	r0, r7
 800d950:	b207      	sxth	r7, r0
 800d952:	6818      	ldr	r0, [r3, #0]
 800d954:	42b7      	cmp	r7, r6
 800d956:	6803      	ldr	r3, [r0, #0]
 800d958:	f280 8083 	bge.w	800da62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800d95c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800d960:	4798      	blx	r3
 800d962:	eb07 030b 	add.w	r3, r7, fp
 800d966:	4298      	cmp	r0, r3
 800d968:	da07      	bge.n	800d97a <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800d96a:	42b0      	cmp	r0, r6
 800d96c:	da05      	bge.n	800d97a <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800d96e:	4287      	cmp	r7, r0
 800d970:	dd6c      	ble.n	800da4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800d972:	2f00      	cmp	r7, #0
 800d974:	dd6a      	ble.n	800da4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800d976:	4630      	mov	r0, r6
 800d978:	e004      	b.n	800d984 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 800d97a:	4287      	cmp	r7, r0
 800d97c:	dcfb      	bgt.n	800d976 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800d97e:	42b0      	cmp	r0, r6
 800d980:	bfa8      	it	ge
 800d982:	4630      	movge	r0, r6
 800d984:	4b76      	ldr	r3, [pc, #472]	; (800db60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800d986:	f8ad 7016 	strh.w	r7, [sp, #22]
 800d98a:	1bc0      	subs	r0, r0, r7
 800d98c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d990:	882f      	ldrh	r7, [r5, #0]
 800d992:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d996:	2200      	movs	r2, #0
 800d998:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d99c:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d9a0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 800d9a4:	42bb      	cmp	r3, r7
 800d9a6:	d9cd      	bls.n	800d944 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800d9a8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800d9ac:	ab07      	add	r3, sp, #28
 800d9ae:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800d9b2:	6851      	ldr	r1, [r2, #4]
 800d9b4:	c303      	stmia	r3!, {r0, r1}
 800d9b6:	a905      	add	r1, sp, #20
 800d9b8:	a807      	add	r0, sp, #28
 800d9ba:	f7ff f93e 	bl	800cc3a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d9be:	2800      	cmp	r0, #0
 800d9c0:	d04c      	beq.n	800da5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 800d9c2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800d9c6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800d9ca:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800d9ce:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800d9d2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d9d6:	9302      	str	r3, [sp, #8]
 800d9d8:	4686      	mov	lr, r0
 800d9da:	4290      	cmp	r0, r2
 800d9dc:	4450      	add	r0, sl
 800d9de:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800d9e2:	bfb8      	it	lt
 800d9e4:	4696      	movlt	lr, r2
 800d9e6:	4452      	add	r2, sl
 800d9e8:	4299      	cmp	r1, r3
 800d9ea:	b280      	uxth	r0, r0
 800d9ec:	b292      	uxth	r2, r2
 800d9ee:	468c      	mov	ip, r1
 800d9f0:	fa0f fa82 	sxth.w	sl, r2
 800d9f4:	bfb8      	it	lt
 800d9f6:	469c      	movlt	ip, r3
 800d9f8:	b203      	sxth	r3, r0
 800d9fa:	4553      	cmp	r3, sl
 800d9fc:	bfb8      	it	lt
 800d9fe:	4602      	movlt	r2, r0
 800da00:	eba2 020e 	sub.w	r2, r2, lr
 800da04:	f8ad 2020 	strh.w	r2, [sp, #32]
 800da08:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 800da0c:	9b02      	ldr	r3, [sp, #8]
 800da0e:	f8ad e01c 	strh.w	lr, [sp, #28]
 800da12:	4411      	add	r1, r2
 800da14:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800da18:	f8ad c01e 	strh.w	ip, [sp, #30]
 800da1c:	4413      	add	r3, r2
 800da1e:	b289      	uxth	r1, r1
 800da20:	b29b      	uxth	r3, r3
 800da22:	b208      	sxth	r0, r1
 800da24:	b21a      	sxth	r2, r3
 800da26:	4290      	cmp	r0, r2
 800da28:	bfb8      	it	lt
 800da2a:	460b      	movlt	r3, r1
 800da2c:	eba3 030c 	sub.w	r3, r3, ip
 800da30:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800da34:	a807      	add	r0, sp, #28
 800da36:	f7fc f876 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 800da3a:	b920      	cbnz	r0, 800da46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800da3c:	6823      	ldr	r3, [r4, #0]
 800da3e:	a907      	add	r1, sp, #28
 800da40:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800da42:	4620      	mov	r0, r4
 800da44:	4798      	blx	r3
 800da46:	3701      	adds	r7, #1
 800da48:	b2bf      	uxth	r7, r7
 800da4a:	e7a9      	b.n	800d9a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 800da4c:	f8d9 0000 	ldr.w	r0, [r9]
 800da50:	6803      	ldr	r3, [r0, #0]
 800da52:	2101      	movs	r1, #1
 800da54:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800da58:	4798      	blx	r3
 800da5a:	e773      	b.n	800d944 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800da5c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800da60:	e7e8      	b.n	800da34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 800da62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800da64:	4798      	blx	r3
 800da66:	4b3f      	ldr	r3, [pc, #252]	; (800db64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800da68:	781b      	ldrb	r3, [r3, #0]
 800da6a:	2b00      	cmp	r3, #0
 800da6c:	f43f af29 	beq.w	800d8c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800da70:	2300      	movs	r3, #0
 800da72:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 800da76:	882b      	ldrh	r3, [r5, #0]
 800da78:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 800da7c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 800da80:	42ab      	cmp	r3, r5
 800da82:	f4bf af1e 	bcs.w	800d8c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800da86:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 800da8a:	2907      	cmp	r1, #7
 800da8c:	d814      	bhi.n	800dab8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 800da8e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 800da92:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 800da96:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 800da9a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 800da9e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 800daa2:	1c4a      	adds	r2, r1, #1
 800daa4:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 800daa8:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800daac:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 800dab0:	f8a2 c002 	strh.w	ip, [r2, #2]
 800dab4:	8097      	strh	r7, [r2, #4]
 800dab6:	80d6      	strh	r6, [r2, #6]
 800dab8:	3301      	adds	r3, #1
 800daba:	b29b      	uxth	r3, r3
 800dabc:	e7e0      	b.n	800da80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 800dabe:	2b02      	cmp	r3, #2
 800dac0:	f040 8133 	bne.w	800dd2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 800dac4:	4b28      	ldr	r3, [pc, #160]	; (800db68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800dac6:	781b      	ldrb	r3, [r3, #0]
 800dac8:	2b01      	cmp	r3, #1
 800daca:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 800dace:	f000 8098 	beq.w	800dc02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dad2:	882a      	ldrh	r2, [r5, #0]
 800dad4:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 800dad8:	3201      	adds	r2, #1
 800dada:	b292      	uxth	r2, r2
 800dadc:	2900      	cmp	r1, #0
 800dade:	d0c2      	beq.n	800da66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800dae0:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 800dae4:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 800dae8:	441e      	add	r6, r3
 800daea:	b236      	sxth	r6, r6
 800daec:	4694      	mov	ip, r2
 800daee:	f04f 0900 	mov.w	r9, #0
 800daf2:	fa1f f38c 	uxth.w	r3, ip
 800daf6:	4299      	cmp	r1, r3
 800daf8:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800dafc:	f240 80bf 	bls.w	800dc7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 800db00:	4427      	add	r7, r4
 800db02:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800db06:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 800db0a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 800db0e:	4283      	cmp	r3, r0
 800db10:	f340 80a1 	ble.w	800dc56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 800db14:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 800db18:	4406      	add	r6, r0
 800db1a:	b236      	sxth	r6, r6
 800db1c:	429e      	cmp	r6, r3
 800db1e:	bfa8      	it	ge
 800db20:	461e      	movge	r6, r3
 800db22:	46e1      	mov	r9, ip
 800db24:	f10c 0c01 	add.w	ip, ip, #1
 800db28:	e7e3      	b.n	800daf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 800db2a:	d10a      	bne.n	800db42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800db2c:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 800db30:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 800db34:	4562      	cmp	r2, ip
 800db36:	bfb8      	it	lt
 800db38:	4662      	movlt	r2, ip
 800db3a:	4288      	cmp	r0, r1
 800db3c:	bfb8      	it	lt
 800db3e:	461f      	movlt	r7, r3
 800db40:	e087      	b.n	800dc52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800db42:	428a      	cmp	r2, r1
 800db44:	bfb8      	it	lt
 800db46:	460a      	movlt	r2, r1
 800db48:	e083      	b.n	800dc52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800db4a:	bf00      	nop
 800db4c:	2001267c 	.word	0x2001267c
 800db50:	20012688 	.word	0x20012688
 800db54:	20000084 	.word	0x20000084
 800db58:	20012644 	.word	0x20012644
 800db5c:	2001263a 	.word	0x2001263a
 800db60:	20012638 	.word	0x20012638
 800db64:	20012642 	.word	0x20012642
 800db68:	2001263c 	.word	0x2001263c
 800db6c:	19a1      	adds	r1, r4, r6
 800db6e:	ab07      	add	r3, sp, #28
 800db70:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800db74:	6849      	ldr	r1, [r1, #4]
 800db76:	c303      	stmia	r3!, {r0, r1}
 800db78:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800db7c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800db80:	2b13      	cmp	r3, #19
 800db82:	bfd8      	it	le
 800db84:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800db88:	f8ad 201c 	strh.w	r2, [sp, #28]
 800db8c:	440b      	add	r3, r1
 800db8e:	1a9b      	subs	r3, r3, r2
 800db90:	a807      	add	r0, sp, #28
 800db92:	f8ad 3020 	strh.w	r3, [sp, #32]
 800db96:	f7fe ff97 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800db9a:	a807      	add	r0, sp, #28
 800db9c:	f7fb ffc3 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dba0:	bb78      	cbnz	r0, 800dc02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dba2:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800dba6:	f8d9 0000 	ldr.w	r0, [r9]
 800dbaa:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800dbae:	f8d0 e000 	ldr.w	lr, [r0]
 800dbb2:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800dbb6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800dbba:	f1bc 0f14 	cmp.w	ip, #20
 800dbbe:	bfa8      	it	ge
 800dbc0:	f04f 0c14 	movge.w	ip, #20
 800dbc4:	fa1f fc8c 	uxth.w	ip, ip
 800dbc8:	f8cd c000 	str.w	ip, [sp]
 800dbcc:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 800dbd0:	47d8      	blx	fp
 800dbd2:	4683      	mov	fp, r0
 800dbd4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800dbd8:	a807      	add	r0, sp, #28
 800dbda:	f7fe ff5b 	bl	800ca94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800dbde:	6823      	ldr	r3, [r4, #0]
 800dbe0:	4426      	add	r6, r4
 800dbe2:	4620      	mov	r0, r4
 800dbe4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dbe6:	a907      	add	r1, sp, #28
 800dbe8:	4798      	blx	r3
 800dbea:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 800dbee:	eba0 000b 	sub.w	r0, r0, fp
 800dbf2:	b200      	sxth	r0, r0
 800dbf4:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 800dbf8:	b918      	cbnz	r0, 800dc02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dbfa:	b2b9      	uxth	r1, r7
 800dbfc:	4650      	mov	r0, sl
 800dbfe:	f7ff fa79 	bl	800d0f4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800dc02:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 800dc06:	f1bb 0f00 	cmp.w	fp, #0
 800dc0a:	f43f af2c 	beq.w	800da66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800dc0e:	882b      	ldrh	r3, [r5, #0]
 800dc10:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 800dc14:	3301      	adds	r3, #1
 800dc16:	b29b      	uxth	r3, r3
 800dc18:	2700      	movs	r7, #0
 800dc1a:	b299      	uxth	r1, r3
 800dc1c:	458b      	cmp	fp, r1
 800dc1e:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 800dc22:	d9a3      	bls.n	800db6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800dc24:	4426      	add	r6, r4
 800dc26:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800dc2a:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 800dc2e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 800dc32:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 800dc36:	4408      	add	r0, r1
 800dc38:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 800dc3c:	4461      	add	r1, ip
 800dc3e:	b200      	sxth	r0, r0
 800dc40:	b209      	sxth	r1, r1
 800dc42:	4288      	cmp	r0, r1
 800dc44:	f6bf af71 	bge.w	800db2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 800dc48:	4584      	cmp	ip, r0
 800dc4a:	4662      	mov	r2, ip
 800dc4c:	461f      	mov	r7, r3
 800dc4e:	bfb8      	it	lt
 800dc50:	4602      	movlt	r2, r0
 800dc52:	3301      	adds	r3, #1
 800dc54:	e7e1      	b.n	800dc1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 800dc56:	d10e      	bne.n	800dc76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 800dc58:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 800dc5c:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 800dc60:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 800dc64:	4473      	add	r3, lr
 800dc66:	b21b      	sxth	r3, r3
 800dc68:	429e      	cmp	r6, r3
 800dc6a:	bfa8      	it	ge
 800dc6c:	461e      	movge	r6, r3
 800dc6e:	4287      	cmp	r7, r0
 800dc70:	bfb8      	it	lt
 800dc72:	46e1      	movlt	r9, ip
 800dc74:	e756      	b.n	800db24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800dc76:	4286      	cmp	r6, r0
 800dc78:	bfa8      	it	ge
 800dc7a:	4606      	movge	r6, r0
 800dc7c:	e752      	b.n	800db24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800dc7e:	eb0a 0007 	add.w	r0, sl, r7
 800dc82:	4427      	add	r7, r4
 800dc84:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800dc88:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 800dc8c:	f1bb 0f13 	cmp.w	fp, #19
 800dc90:	bfde      	ittt	le
 800dc92:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 800dc96:	445e      	addle	r6, fp
 800dc98:	b236      	sxthle	r6, r6
 800dc9a:	f7fb ff44 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dc9e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800dca2:	2800      	cmp	r0, #0
 800dca4:	f47f af1a 	bne.w	800dadc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 800dca8:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 800dcac:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800dcb0:	482a      	ldr	r0, [pc, #168]	; (800dd5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 800dcb2:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 800dcb6:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 800dcba:	6800      	ldr	r0, [r0, #0]
 800dcbc:	f8ad 101c 	strh.w	r1, [sp, #28]
 800dcc0:	1ab6      	subs	r6, r6, r2
 800dcc2:	2e14      	cmp	r6, #20
 800dcc4:	f8ad 201e 	strh.w	r2, [sp, #30]
 800dcc8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800dccc:	bfa8      	it	ge
 800dcce:	2614      	movge	r6, #20
 800dcd0:	f8d0 c000 	ldr.w	ip, [r0]
 800dcd4:	b2b6      	uxth	r6, r6
 800dcd6:	fa1f fb8b 	uxth.w	fp, fp
 800dcda:	455e      	cmp	r6, fp
 800dcdc:	bf94      	ite	ls
 800dcde:	9600      	strls	r6, [sp, #0]
 800dce0:	f8cd b000 	strhi.w	fp, [sp]
 800dce4:	b292      	uxth	r2, r2
 800dce6:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 800dcea:	b29b      	uxth	r3, r3
 800dcec:	b289      	uxth	r1, r1
 800dcee:	47b0      	blx	r6
 800dcf0:	6823      	ldr	r3, [r4, #0]
 800dcf2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800dcf6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dcf8:	a907      	add	r1, sp, #28
 800dcfa:	4620      	mov	r0, r4
 800dcfc:	4798      	blx	r3
 800dcfe:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800dd02:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 800dd06:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 800dd0a:	1a5b      	subs	r3, r3, r1
 800dd0c:	440a      	add	r2, r1
 800dd0e:	b21b      	sxth	r3, r3
 800dd10:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 800dd14:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 800dd18:	2b00      	cmp	r3, #0
 800dd1a:	f47f aeda 	bne.w	800dad2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800dd1e:	fa1f f189 	uxth.w	r1, r9
 800dd22:	4650      	mov	r0, sl
 800dd24:	f7ff f9e6 	bl	800d0f4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800dd28:	e6d3      	b.n	800dad2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800dd2a:	882e      	ldrh	r6, [r5, #0]
 800dd2c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 800dd30:	42b3      	cmp	r3, r6
 800dd32:	f67f ae98 	bls.w	800da66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800dd36:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 800dd3a:	ab07      	add	r3, sp, #28
 800dd3c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800dd40:	6851      	ldr	r1, [r2, #4]
 800dd42:	c303      	stmia	r3!, {r0, r1}
 800dd44:	a807      	add	r0, sp, #28
 800dd46:	f7fb feee 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dd4a:	b920      	cbnz	r0, 800dd56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 800dd4c:	6823      	ldr	r3, [r4, #0]
 800dd4e:	a907      	add	r1, sp, #28
 800dd50:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dd52:	4620      	mov	r0, r4
 800dd54:	4798      	blx	r3
 800dd56:	3601      	adds	r6, #1
 800dd58:	b2b6      	uxth	r6, r6
 800dd5a:	e7e7      	b.n	800dd2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 800dd5c:	20012644 	.word	0x20012644

0800dd60 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800dd60:	4b03      	ldr	r3, [pc, #12]	; (800dd70 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800dd62:	2200      	movs	r2, #0
 800dd64:	801a      	strh	r2, [r3, #0]
 800dd66:	805a      	strh	r2, [r3, #2]
 800dd68:	809a      	strh	r2, [r3, #4]
 800dd6a:	80da      	strh	r2, [r3, #6]
 800dd6c:	4770      	bx	lr
 800dd6e:	bf00      	nop
 800dd70:	20012688 	.word	0x20012688

0800dd74 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800dd74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd78:	4606      	mov	r6, r0
 800dd7a:	b09d      	sub	sp, #116	; 0x74
 800dd7c:	a803      	add	r0, sp, #12
 800dd7e:	4614      	mov	r4, r2
 800dd80:	468a      	mov	sl, r1
 800dd82:	461d      	mov	r5, r3
 800dd84:	f000 fdad 	bl	800e8e2 <_ZN8touchgfx12TextProviderC1Ev>
 800dd88:	6833      	ldr	r3, [r6, #0]
 800dd8a:	4630      	mov	r0, r6
 800dd8c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800dd8e:	4798      	blx	r3
 800dd90:	6833      	ldr	r3, [r6, #0]
 800dd92:	4607      	mov	r7, r0
 800dd94:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800dd96:	4630      	mov	r0, r6
 800dd98:	4798      	blx	r3
 800dd9a:	462a      	mov	r2, r5
 800dd9c:	9000      	str	r0, [sp, #0]
 800dd9e:	4621      	mov	r1, r4
 800dda0:	463b      	mov	r3, r7
 800dda2:	a803      	add	r0, sp, #12
 800dda4:	f000 fdf0 	bl	800e988 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dda8:	2500      	movs	r5, #0
 800ddaa:	462c      	mov	r4, r5
 800ddac:	46a9      	mov	r9, r5
 800ddae:	46a8      	mov	r8, r5
 800ddb0:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800ddb4:	2300      	movs	r3, #0
 800ddb6:	9302      	str	r3, [sp, #8]
 800ddb8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ddbc:	429c      	cmp	r4, r3
 800ddbe:	d002      	beq.n	800ddc6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800ddc0:	455c      	cmp	r4, fp
 800ddc2:	bf18      	it	ne
 800ddc4:	4625      	movne	r5, r4
 800ddc6:	ab02      	add	r3, sp, #8
 800ddc8:	4632      	mov	r2, r6
 800ddca:	4651      	mov	r1, sl
 800ddcc:	a803      	add	r0, sp, #12
 800ddce:	f001 f8cd 	bl	800ef6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ddd2:	4604      	mov	r4, r0
 800ddd4:	b108      	cbz	r0, 800ddda <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800ddd6:	280a      	cmp	r0, #10
 800ddd8:	d10a      	bne.n	800ddf0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800ddda:	45c1      	cmp	r9, r8
 800dddc:	bf38      	it	cc
 800ddde:	46c1      	movcc	r9, r8
 800dde0:	f04f 0800 	mov.w	r8, #0
 800dde4:	2c00      	cmp	r4, #0
 800dde6:	d1e5      	bne.n	800ddb4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800dde8:	4648      	mov	r0, r9
 800ddea:	b01d      	add	sp, #116	; 0x74
 800ddec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ddf0:	9a02      	ldr	r2, [sp, #8]
 800ddf2:	2a00      	cmp	r2, #0
 800ddf4:	d0de      	beq.n	800ddb4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800ddf6:	7b57      	ldrb	r7, [r2, #13]
 800ddf8:	6833      	ldr	r3, [r6, #0]
 800ddfa:	8894      	ldrh	r4, [r2, #4]
 800ddfc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ddfe:	007f      	lsls	r7, r7, #1
 800de00:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800de04:	7a97      	ldrb	r7, [r2, #10]
 800de06:	4629      	mov	r1, r5
 800de08:	4307      	orrs	r7, r0
 800de0a:	4630      	mov	r0, r6
 800de0c:	4798      	blx	r3
 800de0e:	4438      	add	r0, r7
 800de10:	4480      	add	r8, r0
 800de12:	fa1f f888 	uxth.w	r8, r8
 800de16:	e7e5      	b.n	800dde4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800de18 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800de18:	b508      	push	{r3, lr}
 800de1a:	6803      	ldr	r3, [r0, #0]
 800de1c:	68db      	ldr	r3, [r3, #12]
 800de1e:	4798      	blx	r3
 800de20:	b128      	cbz	r0, 800de2e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800de22:	7b43      	ldrb	r3, [r0, #13]
 800de24:	7a80      	ldrb	r0, [r0, #10]
 800de26:	005b      	lsls	r3, r3, #1
 800de28:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800de2c:	4318      	orrs	r0, r3
 800de2e:	bd08      	pop	{r3, pc}

0800de30 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800de30:	b40e      	push	{r1, r2, r3}
 800de32:	b5f0      	push	{r4, r5, r6, r7, lr}
 800de34:	b09e      	sub	sp, #120	; 0x78
 800de36:	ab23      	add	r3, sp, #140	; 0x8c
 800de38:	4605      	mov	r5, r0
 800de3a:	f853 4b04 	ldr.w	r4, [r3], #4
 800de3e:	9303      	str	r3, [sp, #12]
 800de40:	a805      	add	r0, sp, #20
 800de42:	f000 fd4e 	bl	800e8e2 <_ZN8touchgfx12TextProviderC1Ev>
 800de46:	682b      	ldr	r3, [r5, #0]
 800de48:	4628      	mov	r0, r5
 800de4a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800de4c:	4798      	blx	r3
 800de4e:	682b      	ldr	r3, [r5, #0]
 800de50:	4606      	mov	r6, r0
 800de52:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800de54:	4628      	mov	r0, r5
 800de56:	4798      	blx	r3
 800de58:	4633      	mov	r3, r6
 800de5a:	ae1e      	add	r6, sp, #120	; 0x78
 800de5c:	4621      	mov	r1, r4
 800de5e:	9000      	str	r0, [sp, #0]
 800de60:	9a03      	ldr	r2, [sp, #12]
 800de62:	2400      	movs	r4, #0
 800de64:	a805      	add	r0, sp, #20
 800de66:	f000 fd8f 	bl	800e988 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800de6a:	f846 4d68 	str.w	r4, [r6, #-104]!
 800de6e:	462a      	mov	r2, r5
 800de70:	4633      	mov	r3, r6
 800de72:	4621      	mov	r1, r4
 800de74:	a805      	add	r0, sp, #20
 800de76:	f001 f879 	bl	800ef6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800de7a:	b1f0      	cbz	r0, 800deba <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800de7c:	280a      	cmp	r0, #10
 800de7e:	d018      	beq.n	800deb2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800de80:	9f04      	ldr	r7, [sp, #16]
 800de82:	b1b7      	cbz	r7, 800deb2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800de84:	7b78      	ldrb	r0, [r7, #13]
 800de86:	7a3b      	ldrb	r3, [r7, #8]
 800de88:	88ea      	ldrh	r2, [r5, #6]
 800de8a:	00c1      	lsls	r1, r0, #3
 800de8c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800de90:	4319      	orrs	r1, r3
 800de92:	0643      	lsls	r3, r0, #25
 800de94:	bf44      	itt	mi
 800de96:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800de9a:	b219      	sxthmi	r1, r3
 800de9c:	0100      	lsls	r0, r0, #4
 800de9e:	79fb      	ldrb	r3, [r7, #7]
 800dea0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800dea4:	4303      	orrs	r3, r0
 800dea6:	4413      	add	r3, r2
 800dea8:	1a5b      	subs	r3, r3, r1
 800deaa:	b21b      	sxth	r3, r3
 800deac:	429c      	cmp	r4, r3
 800deae:	bfb8      	it	lt
 800deb0:	461c      	movlt	r4, r3
 800deb2:	4633      	mov	r3, r6
 800deb4:	462a      	mov	r2, r5
 800deb6:	2100      	movs	r1, #0
 800deb8:	e7dc      	b.n	800de74 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800deba:	b2a0      	uxth	r0, r4
 800debc:	b01e      	add	sp, #120	; 0x78
 800debe:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800dec2:	b003      	add	sp, #12
 800dec4:	4770      	bx	lr

0800dec6 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800dec6:	7a43      	ldrb	r3, [r0, #9]
 800dec8:	8880      	ldrh	r0, [r0, #4]
 800deca:	4418      	add	r0, r3
 800decc:	b280      	uxth	r0, r0
 800dece:	4770      	bx	lr

0800ded0 <_ZNK8touchgfx4Font13getFontHeightEv>:
 800ded0:	6803      	ldr	r3, [r0, #0]
 800ded2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ded4:	4718      	bx	r3

0800ded6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800ded6:	b40e      	push	{r1, r2, r3}
 800ded8:	b570      	push	{r4, r5, r6, lr}
 800deda:	b09d      	sub	sp, #116	; 0x74
 800dedc:	ab21      	add	r3, sp, #132	; 0x84
 800dede:	4604      	mov	r4, r0
 800dee0:	f853 5b04 	ldr.w	r5, [r3], #4
 800dee4:	9302      	str	r3, [sp, #8]
 800dee6:	a803      	add	r0, sp, #12
 800dee8:	f000 fcfb 	bl	800e8e2 <_ZN8touchgfx12TextProviderC1Ev>
 800deec:	6823      	ldr	r3, [r4, #0]
 800deee:	4620      	mov	r0, r4
 800def0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800def2:	4798      	blx	r3
 800def4:	6823      	ldr	r3, [r4, #0]
 800def6:	4606      	mov	r6, r0
 800def8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800defa:	4620      	mov	r0, r4
 800defc:	4798      	blx	r3
 800defe:	4633      	mov	r3, r6
 800df00:	9000      	str	r0, [sp, #0]
 800df02:	9a02      	ldr	r2, [sp, #8]
 800df04:	4629      	mov	r1, r5
 800df06:	a803      	add	r0, sp, #12
 800df08:	f000 fd3e 	bl	800e988 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800df0c:	a803      	add	r0, sp, #12
 800df0e:	f001 f8fb 	bl	800f108 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800df12:	2401      	movs	r4, #1
 800df14:	b2a3      	uxth	r3, r4
 800df16:	b140      	cbz	r0, 800df2a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800df18:	280a      	cmp	r0, #10
 800df1a:	bf08      	it	eq
 800df1c:	3301      	addeq	r3, #1
 800df1e:	a803      	add	r0, sp, #12
 800df20:	bf08      	it	eq
 800df22:	b21c      	sxtheq	r4, r3
 800df24:	f001 f8f0 	bl	800f108 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800df28:	e7f4      	b.n	800df14 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800df2a:	4618      	mov	r0, r3
 800df2c:	b01d      	add	sp, #116	; 0x74
 800df2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800df32:	b003      	add	sp, #12
 800df34:	4770      	bx	lr

0800df36 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800df36:	b40e      	push	{r1, r2, r3}
 800df38:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df3a:	b09e      	sub	sp, #120	; 0x78
 800df3c:	ab23      	add	r3, sp, #140	; 0x8c
 800df3e:	4604      	mov	r4, r0
 800df40:	f853 5b04 	ldr.w	r5, [r3], #4
 800df44:	9303      	str	r3, [sp, #12]
 800df46:	a805      	add	r0, sp, #20
 800df48:	f000 fccb 	bl	800e8e2 <_ZN8touchgfx12TextProviderC1Ev>
 800df4c:	6823      	ldr	r3, [r4, #0]
 800df4e:	4620      	mov	r0, r4
 800df50:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800df52:	4798      	blx	r3
 800df54:	6823      	ldr	r3, [r4, #0]
 800df56:	4606      	mov	r6, r0
 800df58:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800df5a:	4620      	mov	r0, r4
 800df5c:	4798      	blx	r3
 800df5e:	4633      	mov	r3, r6
 800df60:	4629      	mov	r1, r5
 800df62:	9000      	str	r0, [sp, #0]
 800df64:	9a03      	ldr	r2, [sp, #12]
 800df66:	a805      	add	r0, sp, #20
 800df68:	ad1e      	add	r5, sp, #120	; 0x78
 800df6a:	f000 fd0d 	bl	800e988 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800df6e:	2100      	movs	r1, #0
 800df70:	f845 1d68 	str.w	r1, [r5, #-104]!
 800df74:	4622      	mov	r2, r4
 800df76:	462b      	mov	r3, r5
 800df78:	a805      	add	r0, sp, #20
 800df7a:	f000 fff7 	bl	800ef6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800df7e:	f647 76ff 	movw	r6, #32767	; 0x7fff
 800df82:	b1d8      	cbz	r0, 800dfbc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800df84:	280a      	cmp	r0, #10
 800df86:	d012      	beq.n	800dfae <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800df88:	9804      	ldr	r0, [sp, #16]
 800df8a:	b180      	cbz	r0, 800dfae <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800df8c:	7b47      	ldrb	r7, [r0, #13]
 800df8e:	88e2      	ldrh	r2, [r4, #6]
 800df90:	00fb      	lsls	r3, r7, #3
 800df92:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800df96:	7a03      	ldrb	r3, [r0, #8]
 800df98:	430b      	orrs	r3, r1
 800df9a:	0679      	lsls	r1, r7, #25
 800df9c:	bf44      	itt	mi
 800df9e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800dfa2:	b21b      	sxthmi	r3, r3
 800dfa4:	1ad3      	subs	r3, r2, r3
 800dfa6:	b21b      	sxth	r3, r3
 800dfa8:	429e      	cmp	r6, r3
 800dfaa:	bfa8      	it	ge
 800dfac:	461e      	movge	r6, r3
 800dfae:	462b      	mov	r3, r5
 800dfb0:	4622      	mov	r2, r4
 800dfb2:	2100      	movs	r1, #0
 800dfb4:	a805      	add	r0, sp, #20
 800dfb6:	f000 ffd9 	bl	800ef6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dfba:	e7e2      	b.n	800df82 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800dfbc:	4630      	mov	r0, r6
 800dfbe:	b01e      	add	sp, #120	; 0x78
 800dfc0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800dfc4:	b003      	add	sp, #12
 800dfc6:	4770      	bx	lr

0800dfc8 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800dfc8:	b513      	push	{r0, r1, r4, lr}
 800dfca:	6803      	ldr	r3, [r0, #0]
 800dfcc:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800dfd0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800dfd4:	f8ad 1004 	strh.w	r1, [sp, #4]
 800dfd8:	2400      	movs	r4, #0
 800dfda:	9400      	str	r4, [sp, #0]
 800dfdc:	f8ad 2006 	strh.w	r2, [sp, #6]
 800dfe0:	691b      	ldr	r3, [r3, #16]
 800dfe2:	4669      	mov	r1, sp
 800dfe4:	4798      	blx	r3
 800dfe6:	b002      	add	sp, #8
 800dfe8:	bd10      	pop	{r4, pc}

0800dfea <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800dfea:	b538      	push	{r3, r4, r5, lr}
 800dfec:	680b      	ldr	r3, [r1, #0]
 800dfee:	460c      	mov	r4, r1
 800dff0:	68db      	ldr	r3, [r3, #12]
 800dff2:	4605      	mov	r5, r0
 800dff4:	4798      	blx	r3
 800dff6:	6823      	ldr	r3, [r4, #0]
 800dff8:	4620      	mov	r0, r4
 800dffa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dffc:	4629      	mov	r1, r5
 800dffe:	4798      	blx	r3
 800e000:	4628      	mov	r0, r5
 800e002:	bd38      	pop	{r3, r4, r5, pc}

0800e004 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800e004:	b410      	push	{r4}
 800e006:	880a      	ldrh	r2, [r1, #0]
 800e008:	8884      	ldrh	r4, [r0, #4]
 800e00a:	4422      	add	r2, r4
 800e00c:	800a      	strh	r2, [r1, #0]
 800e00e:	88c4      	ldrh	r4, [r0, #6]
 800e010:	884a      	ldrh	r2, [r1, #2]
 800e012:	4422      	add	r2, r4
 800e014:	804a      	strh	r2, [r1, #2]
 800e016:	6940      	ldr	r0, [r0, #20]
 800e018:	b120      	cbz	r0, 800e024 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800e01a:	6803      	ldr	r3, [r0, #0]
 800e01c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e020:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e022:	4718      	bx	r3
 800e024:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e028:	4770      	bx	lr

0800e02a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800e02a:	b570      	push	{r4, r5, r6, lr}
 800e02c:	8882      	ldrh	r2, [r0, #4]
 800e02e:	880b      	ldrh	r3, [r1, #0]
 800e030:	4413      	add	r3, r2
 800e032:	800b      	strh	r3, [r1, #0]
 800e034:	88c2      	ldrh	r2, [r0, #6]
 800e036:	884b      	ldrh	r3, [r1, #2]
 800e038:	460c      	mov	r4, r1
 800e03a:	4413      	add	r3, r2
 800e03c:	804b      	strh	r3, [r1, #2]
 800e03e:	4605      	mov	r5, r0
 800e040:	1d01      	adds	r1, r0, #4
 800e042:	4620      	mov	r0, r4
 800e044:	f7fb fd2c 	bl	8009aa0 <_ZN8touchgfx4RectaNERKS0_>
 800e048:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e04c:	2b00      	cmp	r3, #0
 800e04e:	dd0b      	ble.n	800e068 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e050:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e054:	2b00      	cmp	r3, #0
 800e056:	dd07      	ble.n	800e068 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e058:	6968      	ldr	r0, [r5, #20]
 800e05a:	b128      	cbz	r0, 800e068 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e05c:	6803      	ldr	r3, [r0, #0]
 800e05e:	4621      	mov	r1, r4
 800e060:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e062:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e066:	4718      	bx	r3
 800e068:	bd70      	pop	{r4, r5, r6, pc}
	...

0800e06c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800e06c:	b570      	push	{r4, r5, r6, lr}
 800e06e:	8882      	ldrh	r2, [r0, #4]
 800e070:	880b      	ldrh	r3, [r1, #0]
 800e072:	4413      	add	r3, r2
 800e074:	800b      	strh	r3, [r1, #0]
 800e076:	88c2      	ldrh	r2, [r0, #6]
 800e078:	884b      	ldrh	r3, [r1, #2]
 800e07a:	460c      	mov	r4, r1
 800e07c:	4413      	add	r3, r2
 800e07e:	804b      	strh	r3, [r1, #2]
 800e080:	4605      	mov	r5, r0
 800e082:	1d01      	adds	r1, r0, #4
 800e084:	4620      	mov	r0, r4
 800e086:	f7fb fd0b 	bl	8009aa0 <_ZN8touchgfx4RectaNERKS0_>
 800e08a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e08e:	2b00      	cmp	r3, #0
 800e090:	dd19      	ble.n	800e0c6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e092:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e096:	2b00      	cmp	r3, #0
 800e098:	dd15      	ble.n	800e0c6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e09a:	6968      	ldr	r0, [r5, #20]
 800e09c:	b128      	cbz	r0, 800e0aa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800e09e:	6803      	ldr	r3, [r0, #0]
 800e0a0:	4621      	mov	r1, r4
 800e0a2:	691b      	ldr	r3, [r3, #16]
 800e0a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e0a8:	4718      	bx	r3
 800e0aa:	4b07      	ldr	r3, [pc, #28]	; (800e0c8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800e0ac:	681b      	ldr	r3, [r3, #0]
 800e0ae:	3304      	adds	r3, #4
 800e0b0:	429d      	cmp	r5, r3
 800e0b2:	d108      	bne.n	800e0c6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e0b4:	f7fe fea0 	bl	800cdf8 <_ZN8touchgfx11Application11getInstanceEv>
 800e0b8:	6803      	ldr	r3, [r0, #0]
 800e0ba:	6821      	ldr	r1, [r4, #0]
 800e0bc:	6862      	ldr	r2, [r4, #4]
 800e0be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e0c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e0c4:	4718      	bx	r3
 800e0c6:	bd70      	pop	{r4, r5, r6, pc}
 800e0c8:	20012680 	.word	0x20012680

0800e0cc <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800e0cc:	b570      	push	{r4, r5, r6, lr}
 800e0ce:	4604      	mov	r4, r0
 800e0d0:	4616      	mov	r6, r2
 800e0d2:	460d      	mov	r5, r1
 800e0d4:	b901      	cbnz	r1, 800e0d8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800e0d6:	b192      	cbz	r2, 800e0fe <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800e0d8:	6823      	ldr	r3, [r4, #0]
 800e0da:	4620      	mov	r0, r4
 800e0dc:	699b      	ldr	r3, [r3, #24]
 800e0de:	4798      	blx	r3
 800e0e0:	88e2      	ldrh	r2, [r4, #6]
 800e0e2:	88a1      	ldrh	r1, [r4, #4]
 800e0e4:	4432      	add	r2, r6
 800e0e6:	4429      	add	r1, r5
 800e0e8:	4620      	mov	r0, r4
 800e0ea:	b212      	sxth	r2, r2
 800e0ec:	b209      	sxth	r1, r1
 800e0ee:	f7f4 fe2a 	bl	8002d46 <_ZN8touchgfx8Drawable5setXYEss>
 800e0f2:	6823      	ldr	r3, [r4, #0]
 800e0f4:	4620      	mov	r0, r4
 800e0f6:	699b      	ldr	r3, [r3, #24]
 800e0f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e0fc:	4718      	bx	r3
 800e0fe:	bd70      	pop	{r4, r5, r6, pc}

0800e100 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800e100:	b510      	push	{r4, lr}
 800e102:	4604      	mov	r4, r0
 800e104:	4608      	mov	r0, r1
 800e106:	2300      	movs	r3, #0
 800e108:	8023      	strh	r3, [r4, #0]
 800e10a:	8063      	strh	r3, [r4, #2]
 800e10c:	6803      	ldr	r3, [r0, #0]
 800e10e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e112:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800e116:	80a1      	strh	r1, [r4, #4]
 800e118:	80e2      	strh	r2, [r4, #6]
 800e11a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e11c:	4621      	mov	r1, r4
 800e11e:	4798      	blx	r3
 800e120:	4620      	mov	r0, r4
 800e122:	bd10      	pop	{r4, pc}

0800e124 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 800e124:	b530      	push	{r4, r5, lr}
 800e126:	8083      	strh	r3, [r0, #4]
 800e128:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800e12c:	80c3      	strh	r3, [r0, #6]
 800e12e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800e132:	7203      	strb	r3, [r0, #8]
 800e134:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e138:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800e13c:	7243      	strb	r3, [r0, #9]
 800e13e:	7a83      	ldrb	r3, [r0, #10]
 800e140:	6141      	str	r1, [r0, #20]
 800e142:	f365 0306 	bfi	r3, r5, #0, #7
 800e146:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800e14a:	8302      	strh	r2, [r0, #24]
 800e14c:	f365 13c7 	bfi	r3, r5, #7, #1
 800e150:	7283      	strb	r3, [r0, #10]
 800e152:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800e156:	72c3      	strb	r3, [r0, #11]
 800e158:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 800e15c:	7303      	strb	r3, [r0, #12]
 800e15e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800e162:	81c3      	strh	r3, [r0, #14]
 800e164:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800e168:	8203      	strh	r3, [r0, #16]
 800e16a:	4b01      	ldr	r3, [pc, #4]	; (800e170 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 800e16c:	6003      	str	r3, [r0, #0]
 800e16e:	bd30      	pop	{r4, r5, pc}
 800e170:	080206b8 	.word	0x080206b8

0800e174 <_ZNK8touchgfx9ConstFont4findEt>:
 800e174:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e176:	6944      	ldr	r4, [r0, #20]
 800e178:	b3bc      	cbz	r4, 800e1ea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e17a:	88a3      	ldrh	r3, [r4, #4]
 800e17c:	8b02      	ldrh	r2, [r0, #24]
 800e17e:	1acb      	subs	r3, r1, r3
 800e180:	f102 32ff 	add.w	r2, r2, #4294967295
 800e184:	d431      	bmi.n	800e1ea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e186:	4293      	cmp	r3, r2
 800e188:	dd0c      	ble.n	800e1a4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800e18a:	230e      	movs	r3, #14
 800e18c:	fb03 4302 	mla	r3, r3, r2, r4
 800e190:	889b      	ldrh	r3, [r3, #4]
 800e192:	1a5b      	subs	r3, r3, r1
 800e194:	1ad3      	subs	r3, r2, r3
 800e196:	429a      	cmp	r2, r3
 800e198:	db27      	blt.n	800e1ea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e19a:	2b00      	cmp	r3, #0
 800e19c:	bfbc      	itt	lt
 800e19e:	2302      	movlt	r3, #2
 800e1a0:	fb92 f3f3 	sdivlt	r3, r2, r3
 800e1a4:	2500      	movs	r5, #0
 800e1a6:	260e      	movs	r6, #14
 800e1a8:	4295      	cmp	r5, r2
 800e1aa:	dc1e      	bgt.n	800e1ea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e1ac:	fb06 4003 	mla	r0, r6, r3, r4
 800e1b0:	8887      	ldrh	r7, [r0, #4]
 800e1b2:	42b9      	cmp	r1, r7
 800e1b4:	d01a      	beq.n	800e1ec <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800e1b6:	d20d      	bcs.n	800e1d4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800e1b8:	1e5a      	subs	r2, r3, #1
 800e1ba:	4295      	cmp	r5, r2
 800e1bc:	dc15      	bgt.n	800e1ea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e1be:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800e1c2:	1a5b      	subs	r3, r3, r1
 800e1c4:	1ad3      	subs	r3, r2, r3
 800e1c6:	429a      	cmp	r2, r3
 800e1c8:	db0f      	blt.n	800e1ea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e1ca:	429d      	cmp	r5, r3
 800e1cc:	ddec      	ble.n	800e1a8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e1ce:	1953      	adds	r3, r2, r5
 800e1d0:	105b      	asrs	r3, r3, #1
 800e1d2:	e7e9      	b.n	800e1a8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e1d4:	1c5d      	adds	r5, r3, #1
 800e1d6:	42aa      	cmp	r2, r5
 800e1d8:	db07      	blt.n	800e1ea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e1da:	8a43      	ldrh	r3, [r0, #18]
 800e1dc:	1acb      	subs	r3, r1, r3
 800e1de:	442b      	add	r3, r5
 800e1e0:	429d      	cmp	r5, r3
 800e1e2:	dc02      	bgt.n	800e1ea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e1e4:	429a      	cmp	r2, r3
 800e1e6:	dadf      	bge.n	800e1a8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e1e8:	e7f1      	b.n	800e1ce <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800e1ea:	2000      	movs	r0, #0
 800e1ec:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e1ee <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800e1ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e1f0:	4604      	mov	r4, r0
 800e1f2:	4617      	mov	r7, r2
 800e1f4:	461e      	mov	r6, r3
 800e1f6:	b911      	cbnz	r1, 800e1fe <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800e1f8:	2500      	movs	r5, #0
 800e1fa:	4628      	mov	r0, r5
 800e1fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e1fe:	290a      	cmp	r1, #10
 800e200:	d0fa      	beq.n	800e1f8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e202:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800e206:	4291      	cmp	r1, r2
 800e208:	d0f6      	beq.n	800e1f8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e20a:	f242 020b 	movw	r2, #8203	; 0x200b
 800e20e:	4291      	cmp	r1, r2
 800e210:	d0f2      	beq.n	800e1f8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e212:	f7ff ffaf 	bl	800e174 <_ZNK8touchgfx9ConstFont4findEt>
 800e216:	4605      	mov	r5, r0
 800e218:	b950      	cbnz	r0, 800e230 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800e21a:	6823      	ldr	r3, [r4, #0]
 800e21c:	4620      	mov	r0, r4
 800e21e:	691b      	ldr	r3, [r3, #16]
 800e220:	4798      	blx	r3
 800e222:	4601      	mov	r1, r0
 800e224:	4620      	mov	r0, r4
 800e226:	f7ff ffa5 	bl	800e174 <_ZNK8touchgfx9ConstFont4findEt>
 800e22a:	4605      	mov	r5, r0
 800e22c:	2800      	cmp	r0, #0
 800e22e:	d0e3      	beq.n	800e1f8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e230:	6823      	ldr	r3, [r4, #0]
 800e232:	4629      	mov	r1, r5
 800e234:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800e236:	4620      	mov	r0, r4
 800e238:	4798      	blx	r3
 800e23a:	6038      	str	r0, [r7, #0]
 800e23c:	6823      	ldr	r3, [r4, #0]
 800e23e:	4620      	mov	r0, r4
 800e240:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e242:	4798      	blx	r3
 800e244:	7030      	strb	r0, [r6, #0]
 800e246:	e7d8      	b.n	800e1fa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800e248 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800e248:	2000      	movs	r0, #0
 800e24a:	4770      	bx	lr

0800e24c <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800e24c:	2001      	movs	r0, #1
 800e24e:	4770      	bx	lr

0800e250 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800e250:	2002      	movs	r0, #2
 800e252:	4770      	bx	lr

0800e254 <_ZN8touchgfx6ScreenD1Ev>:
 800e254:	4770      	bx	lr

0800e256 <_ZN8touchgfx12GestureEventD1Ev>:
 800e256:	4770      	bx	lr

0800e258 <_ZN8touchgfx9DragEventD1Ev>:
 800e258:	4770      	bx	lr

0800e25a <_ZN8touchgfx10ClickEventD1Ev>:
 800e25a:	4770      	bx	lr

0800e25c <_ZN8touchgfx10ClickEventD0Ev>:
 800e25c:	b510      	push	{r4, lr}
 800e25e:	210c      	movs	r1, #12
 800e260:	4604      	mov	r4, r0
 800e262:	f00f faea 	bl	801d83a <_ZdlPvj>
 800e266:	4620      	mov	r0, r4
 800e268:	bd10      	pop	{r4, pc}

0800e26a <_ZN8touchgfx9DragEventD0Ev>:
 800e26a:	b510      	push	{r4, lr}
 800e26c:	2110      	movs	r1, #16
 800e26e:	4604      	mov	r4, r0
 800e270:	f00f fae3 	bl	801d83a <_ZdlPvj>
 800e274:	4620      	mov	r0, r4
 800e276:	bd10      	pop	{r4, pc}

0800e278 <_ZN8touchgfx12GestureEventD0Ev>:
 800e278:	b510      	push	{r4, lr}
 800e27a:	210c      	movs	r1, #12
 800e27c:	4604      	mov	r4, r0
 800e27e:	f00f fadc 	bl	801d83a <_ZdlPvj>
 800e282:	4620      	mov	r0, r4
 800e284:	bd10      	pop	{r4, pc}

0800e286 <_ZN8touchgfx6ScreenD0Ev>:
 800e286:	b510      	push	{r4, lr}
 800e288:	213c      	movs	r1, #60	; 0x3c
 800e28a:	4604      	mov	r4, r0
 800e28c:	f00f fad5 	bl	801d83a <_ZdlPvj>
 800e290:	4620      	mov	r0, r4
 800e292:	bd10      	pop	{r4, pc}

0800e294 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800e294:	b530      	push	{r4, r5, lr}
 800e296:	460d      	mov	r5, r1
 800e298:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800e29a:	b087      	sub	sp, #28
 800e29c:	4604      	mov	r4, r0
 800e29e:	b301      	cbz	r1, 800e2e2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800e2a0:	a801      	add	r0, sp, #4
 800e2a2:	f7ff ff2d 	bl	800e100 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e2a6:	892a      	ldrh	r2, [r5, #8]
 800e2a8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e2ac:	7928      	ldrb	r0, [r5, #4]
 800e2ae:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e2b2:	f88d 0010 	strb.w	r0, [sp, #16]
 800e2b6:	1ad2      	subs	r2, r2, r3
 800e2b8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e2ba:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e2bc:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e2c0:	441a      	add	r2, r3
 800e2c2:	896b      	ldrh	r3, [r5, #10]
 800e2c4:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800e2c8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e2cc:	1b5b      	subs	r3, r3, r5
 800e2ce:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800e2d0:	442b      	add	r3, r5
 800e2d2:	4d05      	ldr	r5, [pc, #20]	; (800e2e8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800e2d4:	9503      	str	r5, [sp, #12]
 800e2d6:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e2da:	6803      	ldr	r3, [r0, #0]
 800e2dc:	a903      	add	r1, sp, #12
 800e2de:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e2e0:	4798      	blx	r3
 800e2e2:	b007      	add	sp, #28
 800e2e4:	bd30      	pop	{r4, r5, pc}
 800e2e6:	bf00      	nop
 800e2e8:	08020740 	.word	0x08020740

0800e2ec <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800e2ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e2f0:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800e2f2:	b08a      	sub	sp, #40	; 0x28
 800e2f4:	4604      	mov	r4, r0
 800e2f6:	460d      	mov	r5, r1
 800e2f8:	b113      	cbz	r3, 800e300 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800e2fa:	790b      	ldrb	r3, [r1, #4]
 800e2fc:	2b00      	cmp	r3, #0
 800e2fe:	d044      	beq.n	800e38a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e300:	f104 0804 	add.w	r8, r4, #4
 800e304:	4641      	mov	r1, r8
 800e306:	a803      	add	r0, sp, #12
 800e308:	f7ff fefa 	bl	800e100 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e30c:	792b      	ldrb	r3, [r5, #4]
 800e30e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800e312:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800e316:	b983      	cbnz	r3, 800e33a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800e318:	892a      	ldrh	r2, [r5, #8]
 800e31a:	88e9      	ldrh	r1, [r5, #6]
 800e31c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 800e320:	1b92      	subs	r2, r2, r6
 800e322:	1bc9      	subs	r1, r1, r7
 800e324:	9301      	str	r3, [sp, #4]
 800e326:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800e32a:	9300      	str	r3, [sp, #0]
 800e32c:	b212      	sxth	r2, r2
 800e32e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800e332:	b209      	sxth	r1, r1
 800e334:	4640      	mov	r0, r8
 800e336:	f7fb facf 	bl	80098d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800e33a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e33c:	b329      	cbz	r1, 800e38a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e33e:	a805      	add	r0, sp, #20
 800e340:	f7ff fede 	bl	800e100 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e344:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e348:	792b      	ldrb	r3, [r5, #4]
 800e34a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e34c:	f88d 3020 	strb.w	r3, [sp, #32]
 800e350:	1abf      	subs	r7, r7, r2
 800e352:	88ea      	ldrh	r2, [r5, #6]
 800e354:	4417      	add	r7, r2
 800e356:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800e358:	4417      	add	r7, r2
 800e35a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800e35e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800e362:	1ab6      	subs	r6, r6, r2
 800e364:	892a      	ldrh	r2, [r5, #8]
 800e366:	4416      	add	r6, r2
 800e368:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e36a:	4416      	add	r6, r2
 800e36c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800e370:	4a07      	ldr	r2, [pc, #28]	; (800e390 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800e372:	9207      	str	r2, [sp, #28]
 800e374:	2600      	movs	r6, #0
 800e376:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 800e37a:	6803      	ldr	r3, [r0, #0]
 800e37c:	a907      	add	r1, sp, #28
 800e37e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e380:	4798      	blx	r3
 800e382:	792b      	ldrb	r3, [r5, #4]
 800e384:	b10b      	cbz	r3, 800e38a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e386:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800e38a:	b00a      	add	sp, #40	; 0x28
 800e38c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e390:	08020718 	.word	0x08020718

0800e394 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800e394:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e398:	460c      	mov	r4, r1
 800e39a:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800e39c:	b088      	sub	sp, #32
 800e39e:	4605      	mov	r5, r0
 800e3a0:	2900      	cmp	r1, #0
 800e3a2:	d06d      	beq.n	800e480 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800e3a4:	4668      	mov	r0, sp
 800e3a6:	f7ff feab 	bl	800e100 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e3aa:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 800e3ac:	88e3      	ldrh	r3, [r4, #6]
 800e3ae:	f9bd 8000 	ldrsh.w	r8, [sp]
 800e3b2:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800e3b6:	440b      	add	r3, r1
 800e3b8:	b21b      	sxth	r3, r3
 800e3ba:	4543      	cmp	r3, r8
 800e3bc:	db31      	blt.n	800e422 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e3be:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800e3c2:	44c4      	add	ip, r8
 800e3c4:	fa0f fc8c 	sxth.w	ip, ip
 800e3c8:	4563      	cmp	r3, ip
 800e3ca:	da2a      	bge.n	800e422 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e3cc:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 800e3ce:	8926      	ldrh	r6, [r4, #8]
 800e3d0:	4416      	add	r6, r2
 800e3d2:	b236      	sxth	r6, r6
 800e3d4:	42be      	cmp	r6, r7
 800e3d6:	db24      	blt.n	800e422 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e3d8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800e3dc:	4438      	add	r0, r7
 800e3de:	b200      	sxth	r0, r0
 800e3e0:	4286      	cmp	r6, r0
 800e3e2:	da1e      	bge.n	800e422 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e3e4:	8963      	ldrh	r3, [r4, #10]
 800e3e6:	4419      	add	r1, r3
 800e3e8:	b209      	sxth	r1, r1
 800e3ea:	4541      	cmp	r1, r8
 800e3ec:	db08      	blt.n	800e400 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e3ee:	4561      	cmp	r1, ip
 800e3f0:	da06      	bge.n	800e400 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e3f2:	89a3      	ldrh	r3, [r4, #12]
 800e3f4:	441a      	add	r2, r3
 800e3f6:	b212      	sxth	r2, r2
 800e3f8:	42ba      	cmp	r2, r7
 800e3fa:	db01      	blt.n	800e400 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e3fc:	4282      	cmp	r2, r0
 800e3fe:	db10      	blt.n	800e422 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e400:	4b21      	ldr	r3, [pc, #132]	; (800e488 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800e402:	9304      	str	r3, [sp, #16]
 800e404:	2302      	movs	r3, #2
 800e406:	f88d 3014 	strb.w	r3, [sp, #20]
 800e40a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e40c:	2300      	movs	r3, #0
 800e40e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e412:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e416:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e41a:	6803      	ldr	r3, [r0, #0]
 800e41c:	a904      	add	r1, sp, #16
 800e41e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e420:	4798      	blx	r3
 800e422:	1d29      	adds	r1, r5, #4
 800e424:	a802      	add	r0, sp, #8
 800e426:	f7ff fe6b 	bl	800e100 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e42a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e42e:	88e0      	ldrh	r0, [r4, #6]
 800e430:	7921      	ldrb	r1, [r4, #4]
 800e432:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800e436:	8922      	ldrh	r2, [r4, #8]
 800e438:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800e43a:	f88d 1014 	strb.w	r1, [sp, #20]
 800e43e:	eba3 0808 	sub.w	r8, r3, r8
 800e442:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e446:	1bdf      	subs	r7, r3, r7
 800e448:	b2bb      	uxth	r3, r7
 800e44a:	fa1f f888 	uxth.w	r8, r8
 800e44e:	8967      	ldrh	r7, [r4, #10]
 800e450:	89a4      	ldrh	r4, [r4, #12]
 800e452:	4440      	add	r0, r8
 800e454:	4460      	add	r0, ip
 800e456:	441a      	add	r2, r3
 800e458:	44b8      	add	r8, r7
 800e45a:	4423      	add	r3, r4
 800e45c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800e460:	4433      	add	r3, r6
 800e462:	4432      	add	r2, r6
 800e464:	44e0      	add	r8, ip
 800e466:	4c09      	ldr	r4, [pc, #36]	; (800e48c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800e468:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e46a:	9404      	str	r4, [sp, #16]
 800e46c:	f8ad 2018 	strh.w	r2, [sp, #24]
 800e470:	f8ad 801a 	strh.w	r8, [sp, #26]
 800e474:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e478:	6803      	ldr	r3, [r0, #0]
 800e47a:	a904      	add	r1, sp, #16
 800e47c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e47e:	4798      	blx	r3
 800e480:	b008      	add	sp, #32
 800e482:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e486:	bf00      	nop
 800e488:	08020718 	.word	0x08020718
 800e48c:	0802072c 	.word	0x0802072c

0800e490 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800e490:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e492:	4604      	mov	r4, r0
 800e494:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800e498:	3201      	adds	r2, #1
 800e49a:	d112      	bne.n	800e4c2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800e49c:	6803      	ldr	r3, [r0, #0]
 800e49e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e4a2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e4a6:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e4aa:	2500      	movs	r5, #0
 800e4ac:	9500      	str	r5, [sp, #0]
 800e4ae:	466d      	mov	r5, sp
 800e4b0:	4629      	mov	r1, r5
 800e4b2:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e4b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e4b8:	4798      	blx	r3
 800e4ba:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e4be:	e884 0003 	stmia.w	r4, {r0, r1}
 800e4c2:	4620      	mov	r0, r4
 800e4c4:	b003      	add	sp, #12
 800e4c6:	bd30      	pop	{r4, r5, pc}

0800e4c8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800e4c8:	b513      	push	{r0, r1, r4, lr}
 800e4ca:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800e4ce:	3301      	adds	r3, #1
 800e4d0:	4604      	mov	r4, r0
 800e4d2:	d109      	bne.n	800e4e8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800e4d4:	4601      	mov	r1, r0
 800e4d6:	4668      	mov	r0, sp
 800e4d8:	f7ff fe12 	bl	800e100 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e4dc:	f8bd 3000 	ldrh.w	r3, [sp]
 800e4e0:	8423      	strh	r3, [r4, #32]
 800e4e2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e4e6:	8463      	strh	r3, [r4, #34]	; 0x22
 800e4e8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800e4ec:	b002      	add	sp, #8
 800e4ee:	bd10      	pop	{r4, pc}

0800e4f0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800e4f0:	b513      	push	{r0, r1, r4, lr}
 800e4f2:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800e4f6:	3301      	adds	r3, #1
 800e4f8:	4604      	mov	r4, r0
 800e4fa:	d109      	bne.n	800e510 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800e4fc:	4601      	mov	r1, r0
 800e4fe:	4668      	mov	r0, sp
 800e500:	f7ff fdfe 	bl	800e100 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e504:	f8bd 3000 	ldrh.w	r3, [sp]
 800e508:	8423      	strh	r3, [r4, #32]
 800e50a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e50e:	8463      	strh	r3, [r4, #34]	; 0x22
 800e510:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800e514:	b002      	add	sp, #8
 800e516:	bd10      	pop	{r4, pc}

0800e518 <_ZN8touchgfx6ScreenC1Ev>:
 800e518:	b570      	push	{r4, r5, r6, lr}
 800e51a:	4605      	mov	r5, r0
 800e51c:	4b16      	ldr	r3, [pc, #88]	; (800e578 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800e51e:	f845 3b04 	str.w	r3, [r5], #4
 800e522:	2300      	movs	r3, #0
 800e524:	8103      	strh	r3, [r0, #8]
 800e526:	8143      	strh	r3, [r0, #10]
 800e528:	8183      	strh	r3, [r0, #12]
 800e52a:	81c3      	strh	r3, [r0, #14]
 800e52c:	8203      	strh	r3, [r0, #16]
 800e52e:	8243      	strh	r3, [r0, #18]
 800e530:	8283      	strh	r3, [r0, #20]
 800e532:	82c3      	strh	r3, [r0, #22]
 800e534:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800e538:	6203      	str	r3, [r0, #32]
 800e53a:	8483      	strh	r3, [r0, #36]	; 0x24
 800e53c:	84c3      	strh	r3, [r0, #38]	; 0x26
 800e53e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800e542:	4a0e      	ldr	r2, [pc, #56]	; (800e57c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800e544:	6343      	str	r3, [r0, #52]	; 0x34
 800e546:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800e54a:	4b0d      	ldr	r3, [pc, #52]	; (800e580 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800e54c:	6042      	str	r2, [r0, #4]
 800e54e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e552:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800e554:	4a0b      	ldr	r2, [pc, #44]	; (800e584 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800e556:	4604      	mov	r4, r0
 800e558:	2101      	movs	r1, #1
 800e55a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800e55e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800e562:	f9b2 1000 	ldrsh.w	r1, [r2]
 800e566:	4628      	mov	r0, r5
 800e568:	4798      	blx	r3
 800e56a:	6863      	ldr	r3, [r4, #4]
 800e56c:	4628      	mov	r0, r5
 800e56e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e570:	4631      	mov	r1, r6
 800e572:	4798      	blx	r3
 800e574:	4620      	mov	r0, r4
 800e576:	bd70      	pop	{r4, r5, r6, pc}
 800e578:	08020754 	.word	0x08020754
 800e57c:	080203e0 	.word	0x080203e0
 800e580:	2001263a 	.word	0x2001263a
 800e584:	20012638 	.word	0x20012638

0800e588 <_ZN8touchgfx6Screen4drawEv>:
 800e588:	b507      	push	{r0, r1, r2, lr}
 800e58a:	4b09      	ldr	r3, [pc, #36]	; (800e5b0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800e58c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e590:	4b08      	ldr	r3, [pc, #32]	; (800e5b4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800e592:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e596:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e59a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e59e:	6803      	ldr	r3, [r0, #0]
 800e5a0:	2100      	movs	r1, #0
 800e5a2:	9100      	str	r1, [sp, #0]
 800e5a4:	689b      	ldr	r3, [r3, #8]
 800e5a6:	4669      	mov	r1, sp
 800e5a8:	4798      	blx	r3
 800e5aa:	b003      	add	sp, #12
 800e5ac:	f85d fb04 	ldr.w	pc, [sp], #4
 800e5b0:	20012638 	.word	0x20012638
 800e5b4:	2001263a 	.word	0x2001263a

0800e5b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800e5b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e5bc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800e5c0:	2b00      	cmp	r3, #0
 800e5c2:	b089      	sub	sp, #36	; 0x24
 800e5c4:	4680      	mov	r8, r0
 800e5c6:	460c      	mov	r4, r1
 800e5c8:	4615      	mov	r5, r2
 800e5ca:	dd0e      	ble.n	800e5ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e5cc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800e5d0:	2b00      	cmp	r3, #0
 800e5d2:	dd0a      	ble.n	800e5ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e5d4:	4628      	mov	r0, r5
 800e5d6:	f7ff ff5b 	bl	800e490 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e5da:	4621      	mov	r1, r4
 800e5dc:	f7fe fb2d 	bl	800cc3a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e5e0:	69eb      	ldr	r3, [r5, #28]
 800e5e2:	b928      	cbnz	r0, 800e5f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800e5e4:	461d      	mov	r5, r3
 800e5e6:	2b00      	cmp	r3, #0
 800e5e8:	d1f4      	bne.n	800e5d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800e5ea:	b009      	add	sp, #36	; 0x24
 800e5ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e5f0:	ae04      	add	r6, sp, #16
 800e5f2:	2b00      	cmp	r3, #0
 800e5f4:	f000 80b5 	beq.w	800e762 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e5f8:	682b      	ldr	r3, [r5, #0]
 800e5fa:	4629      	mov	r1, r5
 800e5fc:	68db      	ldr	r3, [r3, #12]
 800e5fe:	a802      	add	r0, sp, #8
 800e600:	4798      	blx	r3
 800e602:	4628      	mov	r0, r5
 800e604:	f7ff ff60 	bl	800e4c8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e608:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800e60c:	4407      	add	r7, r0
 800e60e:	4628      	mov	r0, r5
 800e610:	f7ff ff6e 	bl	800e4f0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e614:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e618:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e61c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e620:	4418      	add	r0, r3
 800e622:	4621      	mov	r1, r4
 800e624:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800e628:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e62c:	b23f      	sxth	r7, r7
 800e62e:	4630      	mov	r0, r6
 800e630:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e634:	f8ad 7010 	strh.w	r7, [sp, #16]
 800e638:	f7fb fa32 	bl	8009aa0 <_ZN8touchgfx4RectaNERKS0_>
 800e63c:	4628      	mov	r0, r5
 800e63e:	f7ff ff27 	bl	800e490 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e642:	4602      	mov	r2, r0
 800e644:	e896 0003 	ldmia.w	r6, {r0, r1}
 800e648:	ab06      	add	r3, sp, #24
 800e64a:	e883 0003 	stmia.w	r3, {r0, r1}
 800e64e:	4611      	mov	r1, r2
 800e650:	4618      	mov	r0, r3
 800e652:	f7fb fa25 	bl	8009aa0 <_ZN8touchgfx4RectaNERKS0_>
 800e656:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e65a:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e65e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800e662:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800e666:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800e66a:	4299      	cmp	r1, r3
 800e66c:	d10b      	bne.n	800e686 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e66e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e672:	4552      	cmp	r2, sl
 800e674:	d107      	bne.n	800e686 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e676:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800e67a:	455a      	cmp	r2, fp
 800e67c:	d103      	bne.n	800e686 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e67e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e682:	454a      	cmp	r2, r9
 800e684:	d06d      	beq.n	800e762 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e686:	f1bb 0f00 	cmp.w	fp, #0
 800e68a:	dd65      	ble.n	800e758 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e68c:	f1b9 0f00 	cmp.w	r9, #0
 800e690:	dd62      	ble.n	800e758 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e692:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e696:	fa1f f08a 	uxth.w	r0, sl
 800e69a:	4552      	cmp	r2, sl
 800e69c:	9000      	str	r0, [sp, #0]
 800e69e:	da12      	bge.n	800e6c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800e6a0:	9301      	str	r3, [sp, #4]
 800e6a2:	9b00      	ldr	r3, [sp, #0]
 800e6a4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e6a8:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e6ac:	1a9a      	subs	r2, r3, r2
 800e6ae:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e6b2:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e6b6:	f8ad 2016 	strh.w	r2, [sp, #22]
 800e6ba:	69ea      	ldr	r2, [r5, #28]
 800e6bc:	4631      	mov	r1, r6
 800e6be:	4640      	mov	r0, r8
 800e6c0:	f7ff ff7a 	bl	800e5b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e6c4:	9b01      	ldr	r3, [sp, #4]
 800e6c6:	f9b4 2000 	ldrsh.w	r2, [r4]
 800e6ca:	429a      	cmp	r2, r3
 800e6cc:	b29f      	uxth	r7, r3
 800e6ce:	da0d      	bge.n	800e6ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800e6d0:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e6d4:	1aba      	subs	r2, r7, r2
 800e6d6:	f8ad a012 	strh.w	sl, [sp, #18]
 800e6da:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e6de:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e6e2:	69ea      	ldr	r2, [r5, #28]
 800e6e4:	4631      	mov	r1, r6
 800e6e6:	4640      	mov	r0, r8
 800e6e8:	f7ff ff66 	bl	800e5b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e6ec:	8822      	ldrh	r2, [r4, #0]
 800e6ee:	88a3      	ldrh	r3, [r4, #4]
 800e6f0:	445f      	add	r7, fp
 800e6f2:	4413      	add	r3, r2
 800e6f4:	b29b      	uxth	r3, r3
 800e6f6:	b2bf      	uxth	r7, r7
 800e6f8:	b23a      	sxth	r2, r7
 800e6fa:	b219      	sxth	r1, r3
 800e6fc:	4291      	cmp	r1, r2
 800e6fe:	dd0d      	ble.n	800e71c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800e700:	1bdb      	subs	r3, r3, r7
 800e702:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e706:	f8ad a012 	strh.w	sl, [sp, #18]
 800e70a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e70e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e712:	69ea      	ldr	r2, [r5, #28]
 800e714:	4631      	mov	r1, r6
 800e716:	4640      	mov	r0, r8
 800e718:	f7ff ff4e 	bl	800e5b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e71c:	88e2      	ldrh	r2, [r4, #6]
 800e71e:	8863      	ldrh	r3, [r4, #2]
 800e720:	4413      	add	r3, r2
 800e722:	9a00      	ldr	r2, [sp, #0]
 800e724:	444a      	add	r2, r9
 800e726:	b29b      	uxth	r3, r3
 800e728:	fa1f f982 	uxth.w	r9, r2
 800e72c:	fa0f f289 	sxth.w	r2, r9
 800e730:	b219      	sxth	r1, r3
 800e732:	428a      	cmp	r2, r1
 800e734:	da15      	bge.n	800e762 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e736:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e73a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e73e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e742:	eba3 0309 	sub.w	r3, r3, r9
 800e746:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e74a:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e74e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e752:	69ea      	ldr	r2, [r5, #28]
 800e754:	4631      	mov	r1, r6
 800e756:	e001      	b.n	800e75c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800e758:	69ea      	ldr	r2, [r5, #28]
 800e75a:	4621      	mov	r1, r4
 800e75c:	4640      	mov	r0, r8
 800e75e:	f7ff ff2b 	bl	800e5b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e762:	4628      	mov	r0, r5
 800e764:	f7ff fe94 	bl	800e490 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e768:	6861      	ldr	r1, [r4, #4]
 800e76a:	4602      	mov	r2, r0
 800e76c:	6820      	ldr	r0, [r4, #0]
 800e76e:	4633      	mov	r3, r6
 800e770:	c303      	stmia	r3!, {r0, r1}
 800e772:	4611      	mov	r1, r2
 800e774:	4630      	mov	r0, r6
 800e776:	f7fb f993 	bl	8009aa0 <_ZN8touchgfx4RectaNERKS0_>
 800e77a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e77e:	2b00      	cmp	r3, #0
 800e780:	f77f af33 	ble.w	800e5ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e784:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e788:	2b00      	cmp	r3, #0
 800e78a:	f77f af2e 	ble.w	800e5ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e78e:	4628      	mov	r0, r5
 800e790:	f7ff fe9a 	bl	800e4c8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e794:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e798:	1a18      	subs	r0, r3, r0
 800e79a:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e79e:	4628      	mov	r0, r5
 800e7a0:	f7ff fea6 	bl	800e4f0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e7a4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e7a8:	1a18      	subs	r0, r3, r0
 800e7aa:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e7ae:	682b      	ldr	r3, [r5, #0]
 800e7b0:	4631      	mov	r1, r6
 800e7b2:	689b      	ldr	r3, [r3, #8]
 800e7b4:	4628      	mov	r0, r5
 800e7b6:	4798      	blx	r3
 800e7b8:	e717      	b.n	800e5ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800e7ba <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e7ba:	b570      	push	{r4, r5, r6, lr}
 800e7bc:	460c      	mov	r4, r1
 800e7be:	b086      	sub	sp, #24
 800e7c0:	1d06      	adds	r6, r0, #4
 800e7c2:	2300      	movs	r3, #0
 800e7c4:	4631      	mov	r1, r6
 800e7c6:	4605      	mov	r5, r0
 800e7c8:	a802      	add	r0, sp, #8
 800e7ca:	9301      	str	r3, [sp, #4]
 800e7cc:	f7ff fc98 	bl	800e100 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e7d0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e7d4:	8822      	ldrh	r2, [r4, #0]
 800e7d6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800e7da:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e7de:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e7e2:	1ad2      	subs	r2, r2, r3
 800e7e4:	8863      	ldrh	r3, [r4, #2]
 800e7e6:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e7ea:	1a5b      	subs	r3, r3, r1
 800e7ec:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800e7f0:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e7f4:	aa01      	add	r2, sp, #4
 800e7f6:	a904      	add	r1, sp, #16
 800e7f8:	4630      	mov	r0, r6
 800e7fa:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e7fe:	f7fb fa27 	bl	8009c50 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e802:	9a01      	ldr	r2, [sp, #4]
 800e804:	b11a      	cbz	r2, 800e80e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800e806:	4621      	mov	r1, r4
 800e808:	4628      	mov	r0, r5
 800e80a:	f7ff fed5 	bl	800e5b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e80e:	b006      	add	sp, #24
 800e810:	bd70      	pop	{r4, r5, r6, pc}

0800e812 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e812:	b530      	push	{r4, r5, lr}
 800e814:	4602      	mov	r2, r0
 800e816:	4604      	mov	r4, r0
 800e818:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e81c:	b085      	sub	sp, #20
 800e81e:	460d      	mov	r5, r1
 800e820:	6851      	ldr	r1, [r2, #4]
 800e822:	466b      	mov	r3, sp
 800e824:	c303      	stmia	r3!, {r0, r1}
 800e826:	4629      	mov	r1, r5
 800e828:	4668      	mov	r0, sp
 800e82a:	f7fb f939 	bl	8009aa0 <_ZN8touchgfx4RectaNERKS0_>
 800e82e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e832:	b12b      	cbz	r3, 800e840 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800e834:	4669      	mov	r1, sp
 800e836:	4620      	mov	r0, r4
 800e838:	f7ff ffbf 	bl	800e7ba <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e83c:	b005      	add	sp, #20
 800e83e:	bd30      	pop	{r4, r5, pc}
 800e840:	3404      	adds	r4, #4
 800e842:	4621      	mov	r1, r4
 800e844:	a802      	add	r0, sp, #8
 800e846:	f7ff fc5b 	bl	800e100 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e84a:	f8bd 3000 	ldrh.w	r3, [sp]
 800e84e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800e852:	1a9b      	subs	r3, r3, r2
 800e854:	f8ad 3000 	strh.w	r3, [sp]
 800e858:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800e85c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e860:	4669      	mov	r1, sp
 800e862:	1a9b      	subs	r3, r3, r2
 800e864:	4620      	mov	r0, r4
 800e866:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e86a:	f7fb f9b8 	bl	8009bde <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e86e:	e7e5      	b.n	800e83c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800e870 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e870:	680a      	ldr	r2, [r1, #0]
 800e872:	460b      	mov	r3, r1
 800e874:	6992      	ldr	r2, [r2, #24]
 800e876:	1d01      	adds	r1, r0, #4
 800e878:	4618      	mov	r0, r3
 800e87a:	4710      	bx	r2

0800e87c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 800e87c:	4298      	cmp	r0, r3
 800e87e:	d200      	bcs.n	800e882 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 800e880:	b913      	cbnz	r3, 800e888 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 800e882:	440a      	add	r2, r1
 800e884:	b210      	sxth	r0, r2
 800e886:	4770      	bx	lr
 800e888:	ee07 0a90 	vmov	s15, r0
 800e88c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e890:	ee07 3a90 	vmov	s15, r3
 800e894:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e898:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e89c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e8a0:	ee37 7a66 	vsub.f32	s14, s14, s13
 800e8a4:	ee07 2a90 	vmov	s15, r2
 800e8a8:	ee67 5a07 	vmul.f32	s11, s14, s14
 800e8ac:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800e8b0:	eee5 6a87 	vfma.f32	s13, s11, s14
 800e8b4:	ee07 1a90 	vmov	s15, r1
 800e8b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e8bc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800e8c0:	eee6 7a26 	vfma.f32	s15, s12, s13
 800e8c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800e8c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e8cc:	bfcc      	ite	gt
 800e8ce:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800e8d2:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800e8d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e8da:	ee17 3a90 	vmov	r3, s15
 800e8de:	b218      	sxth	r0, r3
 800e8e0:	4770      	bx	lr

0800e8e2 <_ZN8touchgfx12TextProviderC1Ev>:
 800e8e2:	b538      	push	{r3, r4, r5, lr}
 800e8e4:	2500      	movs	r5, #0
 800e8e6:	2302      	movs	r3, #2
 800e8e8:	4604      	mov	r4, r0
 800e8ea:	e9c0 5500 	strd	r5, r5, [r0]
 800e8ee:	7403      	strb	r3, [r0, #16]
 800e8f0:	6145      	str	r5, [r0, #20]
 800e8f2:	7605      	strb	r5, [r0, #24]
 800e8f4:	83c5      	strh	r5, [r0, #30]
 800e8f6:	8405      	strh	r5, [r0, #32]
 800e8f8:	86c5      	strh	r5, [r0, #54]	; 0x36
 800e8fa:	8705      	strh	r5, [r0, #56]	; 0x38
 800e8fc:	87c5      	strh	r5, [r0, #62]	; 0x3e
 800e8fe:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 800e902:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 800e906:	220e      	movs	r2, #14
 800e908:	4629      	mov	r1, r5
 800e90a:	304c      	adds	r0, #76	; 0x4c
 800e90c:	f00f f850 	bl	801d9b0 <memset>
 800e910:	2301      	movs	r3, #1
 800e912:	4620      	mov	r0, r4
 800e914:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 800e918:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e91c:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 800e920:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 800e924:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800e928:	f7f5 fa1a 	bl	8003d60 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800e92c:	4620      	mov	r0, r4
 800e92e:	bd38      	pop	{r3, r4, r5, pc}

0800e930 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e930:	b530      	push	{r4, r5, lr}
 800e932:	2500      	movs	r5, #0
 800e934:	2401      	movs	r4, #1
 800e936:	6843      	ldr	r3, [r0, #4]
 800e938:	b913      	cbnz	r3, 800e940 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e93a:	6803      	ldr	r3, [r0, #0]
 800e93c:	b313      	cbz	r3, 800e984 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e93e:	6043      	str	r3, [r0, #4]
 800e940:	7e03      	ldrb	r3, [r0, #24]
 800e942:	b143      	cbz	r3, 800e956 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e944:	6943      	ldr	r3, [r0, #20]
 800e946:	b12b      	cbz	r3, 800e954 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e948:	881a      	ldrh	r2, [r3, #0]
 800e94a:	b11a      	cbz	r2, 800e954 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e94c:	1c9a      	adds	r2, r3, #2
 800e94e:	6142      	str	r2, [r0, #20]
 800e950:	8818      	ldrh	r0, [r3, #0]
 800e952:	bd30      	pop	{r4, r5, pc}
 800e954:	7605      	strb	r5, [r0, #24]
 800e956:	6843      	ldr	r3, [r0, #4]
 800e958:	8819      	ldrh	r1, [r3, #0]
 800e95a:	b199      	cbz	r1, 800e984 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e95c:	1c9a      	adds	r2, r3, #2
 800e95e:	2902      	cmp	r1, #2
 800e960:	6042      	str	r2, [r0, #4]
 800e962:	d1f5      	bne.n	800e950 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e964:	7c03      	ldrb	r3, [r0, #16]
 800e966:	2b01      	cmp	r3, #1
 800e968:	d8e5      	bhi.n	800e936 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e96a:	1c5a      	adds	r2, r3, #1
 800e96c:	3302      	adds	r3, #2
 800e96e:	7402      	strb	r2, [r0, #16]
 800e970:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800e974:	6143      	str	r3, [r0, #20]
 800e976:	2b00      	cmp	r3, #0
 800e978:	d0dd      	beq.n	800e936 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e97a:	881b      	ldrh	r3, [r3, #0]
 800e97c:	2b00      	cmp	r3, #0
 800e97e:	d0da      	beq.n	800e936 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e980:	7604      	strb	r4, [r0, #24]
 800e982:	e7d8      	b.n	800e936 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e984:	2000      	movs	r0, #0
 800e986:	e7e4      	b.n	800e952 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e988 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800e988:	b430      	push	{r4, r5}
 800e98a:	6001      	str	r1, [r0, #0]
 800e98c:	2100      	movs	r1, #0
 800e98e:	6041      	str	r1, [r0, #4]
 800e990:	6815      	ldr	r5, [r2, #0]
 800e992:	6085      	str	r5, [r0, #8]
 800e994:	6852      	ldr	r2, [r2, #4]
 800e996:	6443      	str	r3, [r0, #68]	; 0x44
 800e998:	9b02      	ldr	r3, [sp, #8]
 800e99a:	60c2      	str	r2, [r0, #12]
 800e99c:	7401      	strb	r1, [r0, #16]
 800e99e:	6141      	str	r1, [r0, #20]
 800e9a0:	7601      	strb	r1, [r0, #24]
 800e9a2:	8701      	strh	r1, [r0, #56]	; 0x38
 800e9a4:	8401      	strh	r1, [r0, #32]
 800e9a6:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800e9aa:	6483      	str	r3, [r0, #72]	; 0x48
 800e9ac:	bc30      	pop	{r4, r5}
 800e9ae:	f7f5 b9d7 	b.w	8003d60 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800e9b2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e9b2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e9b4:	4605      	mov	r5, r0
 800e9b6:	4608      	mov	r0, r1
 800e9b8:	b1e9      	cbz	r1, 800e9f6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e9ba:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 800e9be:	460b      	mov	r3, r1
 800e9c0:	f101 0708 	add.w	r7, r1, #8
 800e9c4:	4622      	mov	r2, r4
 800e9c6:	6818      	ldr	r0, [r3, #0]
 800e9c8:	6859      	ldr	r1, [r3, #4]
 800e9ca:	4626      	mov	r6, r4
 800e9cc:	c603      	stmia	r6!, {r0, r1}
 800e9ce:	3308      	adds	r3, #8
 800e9d0:	42bb      	cmp	r3, r7
 800e9d2:	4634      	mov	r4, r6
 800e9d4:	d1f7      	bne.n	800e9c6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e9d6:	6818      	ldr	r0, [r3, #0]
 800e9d8:	6030      	str	r0, [r6, #0]
 800e9da:	889b      	ldrh	r3, [r3, #4]
 800e9dc:	80b3      	strh	r3, [r6, #4]
 800e9de:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 800e9e2:	015b      	lsls	r3, r3, #5
 800e9e4:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e9e8:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 800e9ec:	430b      	orrs	r3, r1
 800e9ee:	425b      	negs	r3, r3
 800e9f0:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800e9f4:	4610      	mov	r0, r2
 800e9f6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e9f8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e9f8:	b538      	push	{r3, r4, r5, lr}
 800e9fa:	460c      	mov	r4, r1
 800e9fc:	6811      	ldr	r1, [r2, #0]
 800e9fe:	4610      	mov	r0, r2
 800ea00:	68cd      	ldr	r5, [r1, #12]
 800ea02:	4619      	mov	r1, r3
 800ea04:	47a8      	blx	r5
 800ea06:	2800      	cmp	r0, #0
 800ea08:	bf08      	it	eq
 800ea0a:	4620      	moveq	r0, r4
 800ea0c:	bd38      	pop	{r3, r4, r5, pc}
	...

0800ea10 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800ea10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ea12:	4604      	mov	r4, r0
 800ea14:	4615      	mov	r5, r2
 800ea16:	4608      	mov	r0, r1
 800ea18:	b93a      	cbnz	r2, 800ea2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800ea1a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800ea1e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 800ea22:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800ea26:	4628      	mov	r0, r5
 800ea28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ea2a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800ea2e:	8893      	ldrh	r3, [r2, #4]
 800ea30:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800ea34:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800ea38:	79ee      	ldrb	r6, [r5, #7]
 800ea3a:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 800ea3e:	4316      	orrs	r6, r2
 800ea40:	19da      	adds	r2, r3, r7
 800ea42:	b291      	uxth	r1, r2
 800ea44:	291d      	cmp	r1, #29
 800ea46:	b2b7      	uxth	r7, r6
 800ea48:	d87a      	bhi.n	800eb40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 800ea4a:	2201      	movs	r2, #1
 800ea4c:	408a      	lsls	r2, r1
 800ea4e:	4975      	ldr	r1, [pc, #468]	; (800ec24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 800ea50:	420a      	tst	r2, r1
 800ea52:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800ea56:	d12d      	bne.n	800eab4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800ea58:	f412 7f60 	tst.w	r2, #896	; 0x380
 800ea5c:	d070      	beq.n	800eb40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 800ea5e:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 800ea62:	462b      	mov	r3, r5
 800ea64:	f105 0e08 	add.w	lr, r5, #8
 800ea68:	4615      	mov	r5, r2
 800ea6a:	6818      	ldr	r0, [r3, #0]
 800ea6c:	6859      	ldr	r1, [r3, #4]
 800ea6e:	4694      	mov	ip, r2
 800ea70:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800ea74:	3308      	adds	r3, #8
 800ea76:	4573      	cmp	r3, lr
 800ea78:	4662      	mov	r2, ip
 800ea7a:	d1f6      	bne.n	800ea6a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 800ea7c:	6818      	ldr	r0, [r3, #0]
 800ea7e:	f8cc 0000 	str.w	r0, [ip]
 800ea82:	889b      	ldrh	r3, [r3, #4]
 800ea84:	f8ac 3004 	strh.w	r3, [ip, #4]
 800ea88:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800ea8c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 800ea90:	b2b3      	uxth	r3, r6
 800ea92:	1aca      	subs	r2, r1, r3
 800ea94:	b292      	uxth	r2, r2
 800ea96:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 800ea9a:	10d2      	asrs	r2, r2, #3
 800ea9c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800eaa0:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800eaa4:	4302      	orrs	r2, r0
 800eaa6:	1bcf      	subs	r7, r1, r7
 800eaa8:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800eaac:	1afb      	subs	r3, r7, r3
 800eaae:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800eab2:	e7b8      	b.n	800ea26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800eab4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800eab6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800eaba:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800eabc:	f640 6333 	movw	r3, #3635	; 0xe33
 800eac0:	4299      	cmp	r1, r3
 800eac2:	d110      	bne.n	800eae6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 800eac4:	6803      	ldr	r3, [r0, #0]
 800eac6:	68db      	ldr	r3, [r3, #12]
 800eac8:	4798      	blx	r3
 800eaca:	7b41      	ldrb	r1, [r0, #13]
 800eacc:	00cb      	lsls	r3, r1, #3
 800eace:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ead2:	7a03      	ldrb	r3, [r0, #8]
 800ead4:	0648      	lsls	r0, r1, #25
 800ead6:	ea43 0302 	orr.w	r3, r3, r2
 800eada:	bf44      	itt	mi
 800eadc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800eae0:	b21b      	sxthmi	r3, r3
 800eae2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800eae6:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 800eaea:	443b      	add	r3, r7
 800eaec:	4433      	add	r3, r6
 800eaee:	b29b      	uxth	r3, r3
 800eaf0:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 800eaf4:	462a      	mov	r2, r5
 800eaf6:	f105 0c08 	add.w	ip, r5, #8
 800eafa:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800eafe:	4635      	mov	r5, r6
 800eb00:	6810      	ldr	r0, [r2, #0]
 800eb02:	6851      	ldr	r1, [r2, #4]
 800eb04:	4637      	mov	r7, r6
 800eb06:	c703      	stmia	r7!, {r0, r1}
 800eb08:	3208      	adds	r2, #8
 800eb0a:	4562      	cmp	r2, ip
 800eb0c:	463e      	mov	r6, r7
 800eb0e:	d1f7      	bne.n	800eb00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 800eb10:	6810      	ldr	r0, [r2, #0]
 800eb12:	6038      	str	r0, [r7, #0]
 800eb14:	8892      	ldrh	r2, [r2, #4]
 800eb16:	80ba      	strh	r2, [r7, #4]
 800eb18:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800eb1c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800eb20:	10db      	asrs	r3, r3, #3
 800eb22:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800eb26:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800eb2a:	4313      	orrs	r3, r2
 800eb2c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800eb30:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 800eb34:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800eb38:	1a9b      	subs	r3, r3, r2
 800eb3a:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800eb3e:	e772      	b.n	800ea26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800eb40:	f023 0204 	bic.w	r2, r3, #4
 800eb44:	f640 611b 	movw	r1, #3611	; 0xe1b
 800eb48:	428a      	cmp	r2, r1
 800eb4a:	d003      	beq.n	800eb54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 800eb4c:	f640 621d 	movw	r2, #3613	; 0xe1d
 800eb50:	4293      	cmp	r3, r2
 800eb52:	d120      	bne.n	800eb96 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 800eb54:	3b01      	subs	r3, #1
 800eb56:	4602      	mov	r2, r0
 800eb58:	b29b      	uxth	r3, r3
 800eb5a:	4629      	mov	r1, r5
 800eb5c:	4620      	mov	r0, r4
 800eb5e:	f7ff ff4b 	bl	800e9f8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800eb62:	7b41      	ldrb	r1, [r0, #13]
 800eb64:	00cb      	lsls	r3, r1, #3
 800eb66:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800eb6a:	7a03      	ldrb	r3, [r0, #8]
 800eb6c:	0649      	lsls	r1, r1, #25
 800eb6e:	ea43 0302 	orr.w	r3, r3, r2
 800eb72:	bf44      	itt	mi
 800eb74:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800eb78:	b21b      	sxthmi	r3, r3
 800eb7a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800eb7e:	7b6b      	ldrb	r3, [r5, #13]
 800eb80:	7aaa      	ldrb	r2, [r5, #10]
 800eb82:	005b      	lsls	r3, r3, #1
 800eb84:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800eb88:	4313      	orrs	r3, r2
 800eb8a:	115a      	asrs	r2, r3, #5
 800eb8c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800eb90:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800eb94:	e036      	b.n	800ec04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 800eb96:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800eb9a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800eb9e:	7a2a      	ldrb	r2, [r5, #8]
 800eba0:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800eba4:	ea42 0201 	orr.w	r2, r2, r1
 800eba8:	bf1c      	itt	ne
 800ebaa:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800ebae:	b212      	sxthne	r2, r2
 800ebb0:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800ebb4:	f640 6109 	movw	r1, #3593	; 0xe09
 800ebb8:	f023 0210 	bic.w	r2, r3, #16
 800ebbc:	428a      	cmp	r2, r1
 800ebbe:	d003      	beq.n	800ebc8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 800ebc0:	f640 6213 	movw	r2, #3603	; 0xe13
 800ebc4:	4293      	cmp	r3, r2
 800ebc6:	d12a      	bne.n	800ec1e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 800ebc8:	7b6e      	ldrb	r6, [r5, #13]
 800ebca:	0076      	lsls	r6, r6, #1
 800ebcc:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800ebd0:	7aae      	ldrb	r6, [r5, #10]
 800ebd2:	4316      	orrs	r6, r2
 800ebd4:	f640 6213 	movw	r2, #3603	; 0xe13
 800ebd8:	4293      	cmp	r3, r2
 800ebda:	bf18      	it	ne
 800ebdc:	f103 33ff 	addne.w	r3, r3, #4294967295
 800ebe0:	4602      	mov	r2, r0
 800ebe2:	bf14      	ite	ne
 800ebe4:	b29b      	uxthne	r3, r3
 800ebe6:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800ebea:	4629      	mov	r1, r5
 800ebec:	4620      	mov	r0, r4
 800ebee:	f7ff ff03 	bl	800e9f8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800ebf2:	7b43      	ldrb	r3, [r0, #13]
 800ebf4:	7a82      	ldrb	r2, [r0, #10]
 800ebf6:	005b      	lsls	r3, r3, #1
 800ebf8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ebfc:	4313      	orrs	r3, r2
 800ebfe:	1af6      	subs	r6, r6, r3
 800ec00:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 800ec04:	7b69      	ldrb	r1, [r5, #13]
 800ec06:	00cb      	lsls	r3, r1, #3
 800ec08:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ec0c:	7a2b      	ldrb	r3, [r5, #8]
 800ec0e:	4313      	orrs	r3, r2
 800ec10:	064a      	lsls	r2, r1, #25
 800ec12:	bf44      	itt	mi
 800ec14:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ec18:	b21b      	sxthmi	r3, r3
 800ec1a:	1bdb      	subs	r3, r3, r7
 800ec1c:	e747      	b.n	800eaae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 800ec1e:	2300      	movs	r3, #0
 800ec20:	e7b6      	b.n	800eb90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 800ec22:	bf00      	nop
 800ec24:	3fc00079 	.word	0x3fc00079

0800ec28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800ec28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ec2c:	4604      	mov	r4, r0
 800ec2e:	b942      	cbnz	r2, 800ec42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800ec30:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800ec34:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 800ec38:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 800ec3c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800ec40:	e047      	b.n	800ecd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800ec42:	7b51      	ldrb	r1, [r2, #13]
 800ec44:	8893      	ldrh	r3, [r2, #4]
 800ec46:	010d      	lsls	r5, r1, #4
 800ec48:	f405 7080 	and.w	r0, r5, #256	; 0x100
 800ec4c:	79d5      	ldrb	r5, [r2, #7]
 800ec4e:	4305      	orrs	r5, r0
 800ec50:	2d04      	cmp	r5, #4
 800ec52:	bfcc      	ite	gt
 800ec54:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 800ec58:	f04f 0e01 	movle.w	lr, #1
 800ec5c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800ec60:	f200 80ab 	bhi.w	800edba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 800ec64:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800ec68:	4283      	cmp	r3, r0
 800ec6a:	d216      	bcs.n	800ec9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ec6c:	f240 605b 	movw	r0, #1627	; 0x65b
 800ec70:	4283      	cmp	r3, r0
 800ec72:	d859      	bhi.n	800ed28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 800ec74:	f240 6057 	movw	r0, #1623	; 0x657
 800ec78:	4283      	cmp	r3, r0
 800ec7a:	d20e      	bcs.n	800ec9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ec7c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800ec80:	d24a      	bcs.n	800ed18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 800ec82:	f240 604e 	movw	r0, #1614	; 0x64e
 800ec86:	4283      	cmp	r3, r0
 800ec88:	d207      	bcs.n	800ec9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ec8a:	f240 601a 	movw	r0, #1562	; 0x61a
 800ec8e:	4283      	cmp	r3, r0
 800ec90:	d02a      	beq.n	800ece8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ec92:	d821      	bhi.n	800ecd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 800ec94:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800ec98:	d35b      	bcc.n	800ed52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800ec9a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 800ec9e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800eca2:	f040 80d0 	bne.w	800ee46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800eca6:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 800ecaa:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ecae:	f040 80ca 	bne.w	800ee46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800ecb2:	00cb      	lsls	r3, r1, #3
 800ecb4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800ecb8:	7a13      	ldrb	r3, [r2, #8]
 800ecba:	0649      	lsls	r1, r1, #25
 800ecbc:	ea43 0300 	orr.w	r3, r3, r0
 800ecc0:	bf44      	itt	mi
 800ecc2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ecc6:	b21b      	sxthmi	r3, r3
 800ecc8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800eccc:	1b5d      	subs	r5, r3, r5
 800ecce:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800ecd2:	4610      	mov	r0, r2
 800ecd4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ecd8:	f240 604b 	movw	r0, #1611	; 0x64b
 800ecdc:	4283      	cmp	r3, r0
 800ecde:	d338      	bcc.n	800ed52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800ece0:	f240 604c 	movw	r0, #1612	; 0x64c
 800ece4:	4283      	cmp	r3, r0
 800ece6:	d9d8      	bls.n	800ec9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ece8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 800ecec:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 800ecf0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ecf4:	f040 80f2 	bne.w	800eedc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800ecf8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ecfc:	f040 80ee 	bne.w	800eedc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800ed00:	00cb      	lsls	r3, r1, #3
 800ed02:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800ed06:	7a13      	ldrb	r3, [r2, #8]
 800ed08:	064e      	lsls	r6, r1, #25
 800ed0a:	ea43 0300 	orr.w	r3, r3, r0
 800ed0e:	bf44      	itt	mi
 800ed10:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ed14:	b21b      	sxthmi	r3, r3
 800ed16:	e7d9      	b.n	800eccc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 800ed18:	f240 6054 	movw	r0, #1620	; 0x654
 800ed1c:	4283      	cmp	r3, r0
 800ed1e:	d8e3      	bhi.n	800ece8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ed20:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800ed24:	d9e0      	bls.n	800ece8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ed26:	e7b8      	b.n	800ec9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ed28:	f240 6074 	movw	r0, #1652	; 0x674
 800ed2c:	4283      	cmp	r3, r0
 800ed2e:	d0b4      	beq.n	800ec9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ed30:	d82d      	bhi.n	800ed8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 800ed32:	f240 605e 	movw	r0, #1630	; 0x65e
 800ed36:	4283      	cmp	r3, r0
 800ed38:	d804      	bhi.n	800ed44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 800ed3a:	f240 605d 	movw	r0, #1629	; 0x65d
 800ed3e:	4283      	cmp	r3, r0
 800ed40:	d3d2      	bcc.n	800ece8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ed42:	e7aa      	b.n	800ec9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ed44:	f240 605f 	movw	r0, #1631	; 0x65f
 800ed48:	4283      	cmp	r3, r0
 800ed4a:	d0cd      	beq.n	800ece8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ed4c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800ed50:	d0a3      	beq.n	800ec9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ed52:	00cb      	lsls	r3, r1, #3
 800ed54:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800ed58:	7a13      	ldrb	r3, [r2, #8]
 800ed5a:	0649      	lsls	r1, r1, #25
 800ed5c:	ea43 0300 	orr.w	r3, r3, r0
 800ed60:	bf44      	itt	mi
 800ed62:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ed66:	b21b      	sxthmi	r3, r3
 800ed68:	1b5d      	subs	r5, r3, r5
 800ed6a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800ed6e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800ed72:	7b53      	ldrb	r3, [r2, #13]
 800ed74:	015b      	lsls	r3, r3, #5
 800ed76:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800ed7a:	7993      	ldrb	r3, [r2, #6]
 800ed7c:	430b      	orrs	r3, r1
 800ed7e:	005b      	lsls	r3, r3, #1
 800ed80:	2105      	movs	r1, #5
 800ed82:	fb93 f3f1 	sdiv	r3, r3, r1
 800ed86:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800ed8a:	440b      	add	r3, r1
 800ed8c:	e756      	b.n	800ec3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800ed8e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800ed92:	4283      	cmp	r3, r0
 800ed94:	d809      	bhi.n	800edaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 800ed96:	f240 60df 	movw	r0, #1759	; 0x6df
 800ed9a:	4283      	cmp	r3, r0
 800ed9c:	f4bf af7d 	bcs.w	800ec9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800eda0:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800eda4:	2b05      	cmp	r3, #5
 800eda6:	d8d4      	bhi.n	800ed52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800eda8:	e777      	b.n	800ec9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800edaa:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800edae:	4283      	cmp	r3, r0
 800edb0:	d09a      	beq.n	800ece8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800edb2:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800edb6:	4283      	cmp	r3, r0
 800edb8:	e7ca      	b.n	800ed50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800edba:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800edbe:	d22b      	bcs.n	800ee18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 800edc0:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800edc4:	4283      	cmp	r3, r0
 800edc6:	d28f      	bcs.n	800ece8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800edc8:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800edcc:	4283      	cmp	r3, r0
 800edce:	d816      	bhi.n	800edfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800edd0:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800edd4:	4283      	cmp	r3, r0
 800edd6:	f4bf af60 	bcs.w	800ec9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800edda:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800edde:	4283      	cmp	r3, r0
 800ede0:	d80a      	bhi.n	800edf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800ede2:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800ede6:	4283      	cmp	r3, r0
 800ede8:	f4bf af57 	bcs.w	800ec9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800edec:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800edf0:	4283      	cmp	r3, r0
 800edf2:	f43f af79 	beq.w	800ece8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800edf6:	e7ac      	b.n	800ed52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800edf8:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800edfc:	e7f8      	b.n	800edf0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 800edfe:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800ee02:	4283      	cmp	r3, r0
 800ee04:	d802      	bhi.n	800ee0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 800ee06:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800ee0a:	e798      	b.n	800ed3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 800ee0c:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800ee10:	4283      	cmp	r3, r0
 800ee12:	f47f af42 	bne.w	800ec9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ee16:	e767      	b.n	800ece8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ee18:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800ee1c:	4283      	cmp	r3, r0
 800ee1e:	f43f af63 	beq.w	800ece8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ee22:	d802      	bhi.n	800ee2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 800ee24:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800ee28:	e7f2      	b.n	800ee10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 800ee2a:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800ee2e:	4283      	cmp	r3, r0
 800ee30:	d805      	bhi.n	800ee3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 800ee32:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800ee36:	4283      	cmp	r3, r0
 800ee38:	f4ff af2f 	bcc.w	800ec9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ee3c:	e754      	b.n	800ece8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ee3e:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800ee42:	4283      	cmp	r3, r0
 800ee44:	e7af      	b.n	800eda6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 800ee46:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800ee4a:	4617      	mov	r7, r2
 800ee4c:	f102 0808 	add.w	r8, r2, #8
 800ee50:	4666      	mov	r6, ip
 800ee52:	6838      	ldr	r0, [r7, #0]
 800ee54:	6879      	ldr	r1, [r7, #4]
 800ee56:	46e6      	mov	lr, ip
 800ee58:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800ee5c:	3708      	adds	r7, #8
 800ee5e:	4547      	cmp	r7, r8
 800ee60:	46f4      	mov	ip, lr
 800ee62:	d1f6      	bne.n	800ee52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 800ee64:	6838      	ldr	r0, [r7, #0]
 800ee66:	f8ce 0000 	str.w	r0, [lr]
 800ee6a:	88b9      	ldrh	r1, [r7, #4]
 800ee6c:	f8ae 1004 	strh.w	r1, [lr, #4]
 800ee70:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800ee74:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ee78:	d009      	beq.n	800ee8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 800ee7a:	7b51      	ldrb	r1, [r2, #13]
 800ee7c:	7992      	ldrb	r2, [r2, #6]
 800ee7e:	0149      	lsls	r1, r1, #5
 800ee80:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ee84:	4311      	orrs	r1, r2
 800ee86:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800ee8a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800ee8e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ee92:	b2ad      	uxth	r5, r5
 800ee94:	d00d      	beq.n	800eeb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 800ee96:	442b      	add	r3, r5
 800ee98:	b29b      	uxth	r3, r3
 800ee9a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800ee9e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800eea2:	10db      	asrs	r3, r3, #3
 800eea4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800eea8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800eeac:	4313      	orrs	r3, r2
 800eeae:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800eeb2:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800eeb6:	00cb      	lsls	r3, r1, #3
 800eeb8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800eebc:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800eec0:	064f      	lsls	r7, r1, #25
 800eec2:	ea43 0302 	orr.w	r3, r3, r2
 800eec6:	bf44      	itt	mi
 800eec8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800eecc:	b21b      	sxthmi	r3, r3
 800eece:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800eed2:	1b5b      	subs	r3, r3, r5
 800eed4:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800eed8:	4632      	mov	r2, r6
 800eeda:	e6fa      	b.n	800ecd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800eedc:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800eee0:	4617      	mov	r7, r2
 800eee2:	f102 0908 	add.w	r9, r2, #8
 800eee6:	4666      	mov	r6, ip
 800eee8:	6838      	ldr	r0, [r7, #0]
 800eeea:	6879      	ldr	r1, [r7, #4]
 800eeec:	46e0      	mov	r8, ip
 800eeee:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800eef2:	3708      	adds	r7, #8
 800eef4:	454f      	cmp	r7, r9
 800eef6:	46c4      	mov	ip, r8
 800eef8:	d1f6      	bne.n	800eee8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 800eefa:	6838      	ldr	r0, [r7, #0]
 800eefc:	f8c8 0000 	str.w	r0, [r8]
 800ef00:	88b9      	ldrh	r1, [r7, #4]
 800ef02:	f8a8 1004 	strh.w	r1, [r8, #4]
 800ef06:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800ef0a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ef0e:	d009      	beq.n	800ef24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 800ef10:	7b51      	ldrb	r1, [r2, #13]
 800ef12:	7992      	ldrb	r2, [r2, #6]
 800ef14:	0149      	lsls	r1, r1, #5
 800ef16:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ef1a:	4311      	orrs	r1, r2
 800ef1c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800ef20:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800ef24:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ef28:	d00e      	beq.n	800ef48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 800ef2a:	eba3 030e 	sub.w	r3, r3, lr
 800ef2e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800ef32:	b29b      	uxth	r3, r3
 800ef34:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800ef38:	10db      	asrs	r3, r3, #3
 800ef3a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800ef3e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800ef42:	4313      	orrs	r3, r2
 800ef44:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800ef48:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800ef4c:	00cb      	lsls	r3, r1, #3
 800ef4e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ef52:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800ef56:	0648      	lsls	r0, r1, #25
 800ef58:	ea43 0302 	orr.w	r3, r3, r2
 800ef5c:	bf44      	itt	mi
 800ef5e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ef62:	b21b      	sxthmi	r3, r3
 800ef64:	1b5d      	subs	r5, r3, r5
 800ef66:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800ef6a:	e7b5      	b.n	800eed8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0800ef6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800ef6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ef70:	461e      	mov	r6, r3
 800ef72:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800ef74:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800ef78:	4604      	mov	r4, r0
 800ef7a:	4617      	mov	r7, r2
 800ef7c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800ef80:	f7f4 feac 	bl	8003cdc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ef84:	4605      	mov	r5, r0
 800ef86:	b918      	cbnz	r0, 800ef90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 800ef88:	6030      	str	r0, [r6, #0]
 800ef8a:	4628      	mov	r0, r5
 800ef8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ef90:	683b      	ldr	r3, [r7, #0]
 800ef92:	4601      	mov	r1, r0
 800ef94:	68db      	ldr	r3, [r3, #12]
 800ef96:	4638      	mov	r0, r7
 800ef98:	4798      	blx	r3
 800ef9a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800ef9e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800efa2:	4602      	mov	r2, r0
 800efa4:	6030      	str	r0, [r6, #0]
 800efa6:	d213      	bcs.n	800efd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 800efa8:	4643      	mov	r3, r8
 800efaa:	4639      	mov	r1, r7
 800efac:	4620      	mov	r0, r4
 800efae:	f7ff fe3b 	bl	800ec28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800efb2:	6030      	str	r0, [r6, #0]
 800efb4:	6833      	ldr	r3, [r6, #0]
 800efb6:	b143      	cbz	r3, 800efca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 800efb8:	7b5a      	ldrb	r2, [r3, #13]
 800efba:	7a9b      	ldrb	r3, [r3, #10]
 800efbc:	0052      	lsls	r2, r2, #1
 800efbe:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800efc2:	4313      	orrs	r3, r2
 800efc4:	bf0c      	ite	eq
 800efc6:	2301      	moveq	r3, #1
 800efc8:	2300      	movne	r3, #0
 800efca:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800efce:	e7dc      	b.n	800ef8a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 800efd0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800efd4:	b29b      	uxth	r3, r3
 800efd6:	2b7f      	cmp	r3, #127	; 0x7f
 800efd8:	d804      	bhi.n	800efe4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 800efda:	4639      	mov	r1, r7
 800efdc:	4620      	mov	r0, r4
 800efde:	f7ff fd17 	bl	800ea10 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800efe2:	e7e6      	b.n	800efb2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800efe4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800efe8:	2b00      	cmp	r3, #0
 800efea:	d0e3      	beq.n	800efb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800efec:	f640 1302 	movw	r3, #2306	; 0x902
 800eff0:	429d      	cmp	r5, r3
 800eff2:	d1df      	bne.n	800efb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800eff4:	4601      	mov	r1, r0
 800eff6:	4620      	mov	r0, r4
 800eff8:	f7ff fcdb 	bl	800e9b2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800effc:	e7d9      	b.n	800efb2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0800effe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800effe:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f002:	461e      	mov	r6, r3
 800f004:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800f006:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800f00a:	4604      	mov	r4, r0
 800f00c:	4617      	mov	r7, r2
 800f00e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800f012:	f7f4 fe63 	bl	8003cdc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f016:	4605      	mov	r5, r0
 800f018:	b918      	cbnz	r0, 800f022 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 800f01a:	6030      	str	r0, [r6, #0]
 800f01c:	4628      	mov	r0, r5
 800f01e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f022:	683b      	ldr	r3, [r7, #0]
 800f024:	4601      	mov	r1, r0
 800f026:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800f02a:	4638      	mov	r0, r7
 800f02c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800f030:	47c8      	blx	r9
 800f032:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800f036:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800f03a:	4602      	mov	r2, r0
 800f03c:	6030      	str	r0, [r6, #0]
 800f03e:	d213      	bcs.n	800f068 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 800f040:	4643      	mov	r3, r8
 800f042:	4639      	mov	r1, r7
 800f044:	4620      	mov	r0, r4
 800f046:	f7ff fdef 	bl	800ec28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800f04a:	6030      	str	r0, [r6, #0]
 800f04c:	6833      	ldr	r3, [r6, #0]
 800f04e:	b143      	cbz	r3, 800f062 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 800f050:	7b5a      	ldrb	r2, [r3, #13]
 800f052:	7a9b      	ldrb	r3, [r3, #10]
 800f054:	0052      	lsls	r2, r2, #1
 800f056:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800f05a:	4313      	orrs	r3, r2
 800f05c:	bf0c      	ite	eq
 800f05e:	2301      	moveq	r3, #1
 800f060:	2300      	movne	r3, #0
 800f062:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800f066:	e7d9      	b.n	800f01c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 800f068:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800f06c:	b29b      	uxth	r3, r3
 800f06e:	2b7f      	cmp	r3, #127	; 0x7f
 800f070:	d804      	bhi.n	800f07c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 800f072:	4639      	mov	r1, r7
 800f074:	4620      	mov	r0, r4
 800f076:	f7ff fccb 	bl	800ea10 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800f07a:	e7e6      	b.n	800f04a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 800f07c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800f080:	2b00      	cmp	r3, #0
 800f082:	d0e3      	beq.n	800f04c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800f084:	f640 1302 	movw	r3, #2306	; 0x902
 800f088:	429d      	cmp	r5, r3
 800f08a:	d1df      	bne.n	800f04c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800f08c:	4601      	mov	r1, r0
 800f08e:	4620      	mov	r0, r4
 800f090:	f7ff fc8f 	bl	800e9b2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800f094:	e7d9      	b.n	800f04a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0800f096 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800f096:	b510      	push	{r4, lr}
 800f098:	4604      	mov	r4, r0
 800f09a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800f09e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800f0a0:	b1f1      	cbz	r1, 800f0e0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800f0a2:	2b0a      	cmp	r3, #10
 800f0a4:	d02f      	beq.n	800f106 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800f0a6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800f0a8:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800f0ac:	3901      	subs	r1, #1
 800f0ae:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 800f0b0:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 800f0b4:	1c51      	adds	r1, r2, #1
 800f0b6:	b289      	uxth	r1, r1
 800f0b8:	2901      	cmp	r1, #1
 800f0ba:	bf84      	itt	hi
 800f0bc:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800f0c0:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 800f0c2:	f103 0201 	add.w	r2, r3, #1
 800f0c6:	8722      	strh	r2, [r4, #56]	; 0x38
 800f0c8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800f0ca:	bf98      	it	ls
 800f0cc:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 800f0ce:	4413      	add	r3, r2
 800f0d0:	b29b      	uxth	r3, r3
 800f0d2:	2b09      	cmp	r3, #9
 800f0d4:	bf88      	it	hi
 800f0d6:	3b0a      	subhi	r3, #10
 800f0d8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f0dc:	8458      	strh	r0, [r3, #34]	; 0x22
 800f0de:	e7dc      	b.n	800f09a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800f0e0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800f0e2:	2b0a      	cmp	r3, #10
 800f0e4:	d00f      	beq.n	800f106 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800f0e6:	4620      	mov	r0, r4
 800f0e8:	f7ff fc22 	bl	800e930 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800f0ec:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800f0ee:	1c5a      	adds	r2, r3, #1
 800f0f0:	8722      	strh	r2, [r4, #56]	; 0x38
 800f0f2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800f0f4:	4413      	add	r3, r2
 800f0f6:	b29b      	uxth	r3, r3
 800f0f8:	2b09      	cmp	r3, #9
 800f0fa:	bf88      	it	hi
 800f0fc:	3b0a      	subhi	r3, #10
 800f0fe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f102:	8458      	strh	r0, [r3, #34]	; 0x22
 800f104:	e7ec      	b.n	800f0e0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800f106:	bd10      	pop	{r4, pc}

0800f108 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800f108:	b538      	push	{r3, r4, r5, lr}
 800f10a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800f10c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 800f110:	4604      	mov	r4, r0
 800f112:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 800f114:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 800f116:	3a01      	subs	r2, #1
 800f118:	8702      	strh	r2, [r0, #56]	; 0x38
 800f11a:	1c5a      	adds	r2, r3, #1
 800f11c:	b292      	uxth	r2, r2
 800f11e:	2a09      	cmp	r2, #9
 800f120:	bf86      	itte	hi
 800f122:	3b09      	subhi	r3, #9
 800f124:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 800f126:	86c2      	strhls	r2, [r0, #54]	; 0x36
 800f128:	f7ff ffb5 	bl	800f096 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800f12c:	8c23      	ldrh	r3, [r4, #32]
 800f12e:	2b01      	cmp	r3, #1
 800f130:	bf9c      	itt	ls
 800f132:	3301      	addls	r3, #1
 800f134:	8423      	strhls	r3, [r4, #32]
 800f136:	8be3      	ldrh	r3, [r4, #30]
 800f138:	b90b      	cbnz	r3, 800f13e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 800f13a:	2302      	movs	r3, #2
 800f13c:	83e3      	strh	r3, [r4, #30]
 800f13e:	8be3      	ldrh	r3, [r4, #30]
 800f140:	3b01      	subs	r3, #1
 800f142:	b29b      	uxth	r3, r3
 800f144:	83e3      	strh	r3, [r4, #30]
 800f146:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f14a:	4628      	mov	r0, r5
 800f14c:	8365      	strh	r5, [r4, #26]
 800f14e:	bd38      	pop	{r3, r4, r5, pc}

0800f150 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800f150:	428a      	cmp	r2, r1
 800f152:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f156:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 800f158:	d931      	bls.n	800f1be <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 800f15a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 800f15c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 800f160:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 800f164:	19ee      	adds	r6, r5, r7
 800f166:	1a54      	subs	r4, r2, r1
 800f168:	3e01      	subs	r6, #1
 800f16a:	fa1f fe84 	uxth.w	lr, r4
 800f16e:	b2b4      	uxth	r4, r6
 800f170:	eba4 090e 	sub.w	r9, r4, lr
 800f174:	fa1f f989 	uxth.w	r9, r9
 800f178:	2c09      	cmp	r4, #9
 800f17a:	4626      	mov	r6, r4
 800f17c:	bf88      	it	hi
 800f17e:	f1a4 060a 	subhi.w	r6, r4, #10
 800f182:	f1bc 0f00 	cmp.w	ip, #0
 800f186:	bf08      	it	eq
 800f188:	f04f 0c02 	moveq.w	ip, #2
 800f18c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 800f190:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f194:	fa1f fc8c 	uxth.w	ip, ip
 800f198:	3c01      	subs	r4, #1
 800f19a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 800f19e:	b2a4      	uxth	r4, r4
 800f1a0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 800f1a4:	454c      	cmp	r4, r9
 800f1a6:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 800f1aa:	d1e5      	bne.n	800f178 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 800f1ac:	eba5 050e 	sub.w	r5, r5, lr
 800f1b0:	eb0e 0408 	add.w	r4, lr, r8
 800f1b4:	8705      	strh	r5, [r0, #56]	; 0x38
 800f1b6:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 800f1ba:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 800f1be:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 800f1c0:	1a64      	subs	r4, r4, r1
 800f1c2:	4439      	add	r1, r7
 800f1c4:	b289      	uxth	r1, r1
 800f1c6:	2909      	cmp	r1, #9
 800f1c8:	bf88      	it	hi
 800f1ca:	390a      	subhi	r1, #10
 800f1cc:	8704      	strh	r4, [r0, #56]	; 0x38
 800f1ce:	86c1      	strh	r1, [r0, #54]	; 0x36
 800f1d0:	250a      	movs	r5, #10
 800f1d2:	b18a      	cbz	r2, 800f1f8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 800f1d4:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800f1d6:	3a01      	subs	r2, #1
 800f1d8:	b292      	uxth	r2, r2
 800f1da:	3101      	adds	r1, #1
 800f1dc:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800f1e0:	8701      	strh	r1, [r0, #56]	; 0x38
 800f1e2:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800f1e4:	b901      	cbnz	r1, 800f1e8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 800f1e6:	86c5      	strh	r5, [r0, #54]	; 0x36
 800f1e8:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800f1ea:	3901      	subs	r1, #1
 800f1ec:	b289      	uxth	r1, r1
 800f1ee:	86c1      	strh	r1, [r0, #54]	; 0x36
 800f1f0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800f1f4:	844c      	strh	r4, [r1, #34]	; 0x22
 800f1f6:	e7ec      	b.n	800f1d2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 800f1f8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f1fc:	f7ff bf4b 	b.w	800f096 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800f200 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800f200:	b570      	push	{r4, r5, r6, lr}
 800f202:	2500      	movs	r5, #0
 800f204:	4295      	cmp	r5, r2
 800f206:	d011      	beq.n	800f22c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 800f208:	8bc4      	ldrh	r4, [r0, #30]
 800f20a:	f831 6b02 	ldrh.w	r6, [r1], #2
 800f20e:	4414      	add	r4, r2
 800f210:	3c01      	subs	r4, #1
 800f212:	1b64      	subs	r4, r4, r5
 800f214:	b2a4      	uxth	r4, r4
 800f216:	2c01      	cmp	r4, #1
 800f218:	bf88      	it	hi
 800f21a:	3c02      	subhi	r4, #2
 800f21c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800f220:	8b64      	ldrh	r4, [r4, #26]
 800f222:	42b4      	cmp	r4, r6
 800f224:	d117      	bne.n	800f256 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 800f226:	3501      	adds	r5, #1
 800f228:	b2ad      	uxth	r5, r5
 800f22a:	e7eb      	b.n	800f204 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 800f22c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800f230:	2400      	movs	r4, #0
 800f232:	4413      	add	r3, r2
 800f234:	b2a2      	uxth	r2, r4
 800f236:	429a      	cmp	r2, r3
 800f238:	da0f      	bge.n	800f25a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 800f23a:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 800f23c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800f240:	4432      	add	r2, r6
 800f242:	b292      	uxth	r2, r2
 800f244:	2a09      	cmp	r2, #9
 800f246:	bf88      	it	hi
 800f248:	3a0a      	subhi	r2, #10
 800f24a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800f24e:	3401      	adds	r4, #1
 800f250:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 800f252:	42aa      	cmp	r2, r5
 800f254:	d0ee      	beq.n	800f234 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 800f256:	2000      	movs	r0, #0
 800f258:	bd70      	pop	{r4, r5, r6, pc}
 800f25a:	2001      	movs	r0, #1
 800f25c:	e7fc      	b.n	800f258 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0800f25e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800f25e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f262:	4605      	mov	r5, r0
 800f264:	4616      	mov	r6, r2
 800f266:	1c8c      	adds	r4, r1, #2
 800f268:	8809      	ldrh	r1, [r1, #0]
 800f26a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800f26e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800f272:	42b3      	cmp	r3, r6
 800f274:	d124      	bne.n	800f2c0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800f276:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800f27a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800f27e:	f001 070f 	and.w	r7, r1, #15
 800f282:	f8cd 8000 	str.w	r8, [sp]
 800f286:	464b      	mov	r3, r9
 800f288:	4652      	mov	r2, sl
 800f28a:	4621      	mov	r1, r4
 800f28c:	4628      	mov	r0, r5
 800f28e:	f7ff ffb7 	bl	800f200 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800f292:	4683      	mov	fp, r0
 800f294:	b168      	cbz	r0, 800f2b2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800f296:	eb0a 0109 	add.w	r1, sl, r9
 800f29a:	4441      	add	r1, r8
 800f29c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800f2a0:	463a      	mov	r2, r7
 800f2a2:	4649      	mov	r1, r9
 800f2a4:	4628      	mov	r0, r5
 800f2a6:	f7ff ff53 	bl	800f150 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800f2aa:	4658      	mov	r0, fp
 800f2ac:	b003      	add	sp, #12
 800f2ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f2b2:	eb07 010a 	add.w	r1, r7, sl
 800f2b6:	4449      	add	r1, r9
 800f2b8:	4441      	add	r1, r8
 800f2ba:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800f2be:	e7d2      	b.n	800f266 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800f2c0:	f04f 0b00 	mov.w	fp, #0
 800f2c4:	e7f1      	b.n	800f2aa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800f2c6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800f2c6:	b570      	push	{r4, r5, r6, lr}
 800f2c8:	8810      	ldrh	r0, [r2, #0]
 800f2ca:	4298      	cmp	r0, r3
 800f2cc:	d817      	bhi.n	800f2fe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f2ce:	1e48      	subs	r0, r1, #1
 800f2d0:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800f2d4:	4298      	cmp	r0, r3
 800f2d6:	d312      	bcc.n	800f2fe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f2d8:	2400      	movs	r4, #0
 800f2da:	428c      	cmp	r4, r1
 800f2dc:	d20f      	bcs.n	800f2fe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f2de:	1860      	adds	r0, r4, r1
 800f2e0:	1040      	asrs	r0, r0, #1
 800f2e2:	0085      	lsls	r5, r0, #2
 800f2e4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800f2e8:	42b3      	cmp	r3, r6
 800f2ea:	d902      	bls.n	800f2f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800f2ec:	3001      	adds	r0, #1
 800f2ee:	b284      	uxth	r4, r0
 800f2f0:	e7f3      	b.n	800f2da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f2f2:	d201      	bcs.n	800f2f8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800f2f4:	b281      	uxth	r1, r0
 800f2f6:	e7f0      	b.n	800f2da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f2f8:	442a      	add	r2, r5
 800f2fa:	8850      	ldrh	r0, [r2, #2]
 800f2fc:	bd70      	pop	{r4, r5, r6, pc}
 800f2fe:	2000      	movs	r0, #0
 800f300:	e7fc      	b.n	800f2fc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800f302 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800f302:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f306:	6c45      	ldr	r5, [r0, #68]	; 0x44
 800f308:	886f      	ldrh	r7, [r5, #2]
 800f30a:	4604      	mov	r4, r0
 800f30c:	087f      	lsrs	r7, r7, #1
 800f30e:	260b      	movs	r6, #11
 800f310:	3e01      	subs	r6, #1
 800f312:	d013      	beq.n	800f33c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800f314:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800f316:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f31a:	462a      	mov	r2, r5
 800f31c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800f320:	4639      	mov	r1, r7
 800f322:	4643      	mov	r3, r8
 800f324:	4620      	mov	r0, r4
 800f326:	f7ff ffce 	bl	800f2c6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800f32a:	b138      	cbz	r0, 800f33c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800f32c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800f330:	4642      	mov	r2, r8
 800f332:	4620      	mov	r0, r4
 800f334:	f7ff ff93 	bl	800f25e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800f338:	2800      	cmp	r0, #0
 800f33a:	d1e9      	bne.n	800f310 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800f33c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f340 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800f340:	b570      	push	{r4, r5, r6, lr}
 800f342:	694a      	ldr	r2, [r1, #20]
 800f344:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800f346:	684b      	ldr	r3, [r1, #4]
 800f348:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800f34a:	1b54      	subs	r4, r2, r5
 800f34c:	f000 8106 	beq.w	800f55c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800f350:	1b9b      	subs	r3, r3, r6
 800f352:	d003      	beq.n	800f35c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f354:	4363      	muls	r3, r4
 800f356:	2210      	movs	r2, #16
 800f358:	fb93 f3f2 	sdiv	r3, r3, r2
 800f35c:	680c      	ldr	r4, [r1, #0]
 800f35e:	698a      	ldr	r2, [r1, #24]
 800f360:	1b65      	subs	r5, r4, r5
 800f362:	f000 80fd 	beq.w	800f560 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800f366:	1b92      	subs	r2, r2, r6
 800f368:	d003      	beq.n	800f372 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f36a:	436a      	muls	r2, r5
 800f36c:	2410      	movs	r4, #16
 800f36e:	fb92 f2f4 	sdiv	r2, r2, r4
 800f372:	1a9b      	subs	r3, r3, r2
 800f374:	ee07 3a90 	vmov	s15, r3
 800f378:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800f59c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800f37c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f380:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f384:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f388:	460a      	mov	r2, r1
 800f38a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800f38e:	4603      	mov	r3, r0
 800f390:	f100 040c 	add.w	r4, r0, #12
 800f394:	eeb1 6a43 	vneg.f32	s12, s6
 800f398:	edd2 7a02 	vldr	s15, [r2, #8]
 800f39c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800f3a0:	3214      	adds	r2, #20
 800f3a2:	ece3 6a01 	vstmia	r3!, {s13}
 800f3a6:	ed52 7a02 	vldr	s15, [r2, #-8]
 800f3aa:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f3ae:	429c      	cmp	r4, r3
 800f3b0:	edc3 7a02 	vstr	s15, [r3, #8]
 800f3b4:	ed52 7a01 	vldr	s15, [r2, #-4]
 800f3b8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f3bc:	edc3 7a05 	vstr	s15, [r3, #20]
 800f3c0:	d1ea      	bne.n	800f398 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800f3c2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f3c4:	698b      	ldr	r3, [r1, #24]
 800f3c6:	edd0 4a02 	vldr	s9, [r0, #8]
 800f3ca:	edd0 3a00 	vldr	s7, [r0]
 800f3ce:	edd0 6a01 	vldr	s13, [r0, #4]
 800f3d2:	ed90 5a05 	vldr	s10, [r0, #20]
 800f3d6:	ed90 2a03 	vldr	s4, [r0, #12]
 800f3da:	edd0 5a04 	vldr	s11, [r0, #16]
 800f3de:	ed90 1a07 	vldr	s2, [r0, #28]
 800f3e2:	edd0 2a06 	vldr	s5, [r0, #24]
 800f3e6:	1a9b      	subs	r3, r3, r2
 800f3e8:	ee07 3a90 	vmov	s15, r3
 800f3ec:	684b      	ldr	r3, [r1, #4]
 800f3ee:	1a9b      	subs	r3, r3, r2
 800f3f0:	ee07 3a10 	vmov	s14, r3
 800f3f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f3f8:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800f3fc:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f400:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800f404:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f408:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800f40c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f410:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800f414:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f418:	ee32 5a45 	vsub.f32	s10, s4, s10
 800f41c:	ee67 7a83 	vmul.f32	s15, s15, s6
 800f420:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800f424:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f426:	694a      	ldr	r2, [r1, #20]
 800f428:	1b13      	subs	r3, r2, r4
 800f42a:	ee07 3a10 	vmov	s14, r3
 800f42e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f432:	680b      	ldr	r3, [r1, #0]
 800f434:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f438:	1b1b      	subs	r3, r3, r4
 800f43a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800f43e:	ee07 3a10 	vmov	s14, r3
 800f442:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f446:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f44a:	eee6 4a87 	vfma.f32	s9, s13, s14
 800f44e:	ee64 4a86 	vmul.f32	s9, s9, s12
 800f452:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800f456:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f458:	698b      	ldr	r3, [r1, #24]
 800f45a:	1a9b      	subs	r3, r3, r2
 800f45c:	ee06 3a90 	vmov	s13, r3
 800f460:	684b      	ldr	r3, [r1, #4]
 800f462:	1a9b      	subs	r3, r3, r2
 800f464:	ee07 3a10 	vmov	s14, r3
 800f468:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f46c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f470:	ee66 6a84 	vmul.f32	s13, s13, s8
 800f474:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f478:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800f47c:	eee5 6a87 	vfma.f32	s13, s11, s14
 800f480:	ee66 6a83 	vmul.f32	s13, s13, s6
 800f484:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800f488:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f48a:	694a      	ldr	r2, [r1, #20]
 800f48c:	1b13      	subs	r3, r2, r4
 800f48e:	ee07 3a10 	vmov	s14, r3
 800f492:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f496:	680b      	ldr	r3, [r1, #0]
 800f498:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f49c:	1b1b      	subs	r3, r3, r4
 800f49e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800f4a2:	ee07 3a10 	vmov	s14, r3
 800f4a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f4aa:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f4ae:	eea5 5a87 	vfma.f32	s10, s11, s14
 800f4b2:	edd0 5a08 	vldr	s11, [r0, #32]
 800f4b6:	ee25 5a06 	vmul.f32	s10, s10, s12
 800f4ba:	ee31 1a65 	vsub.f32	s2, s2, s11
 800f4be:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800f4c2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f4c4:	698b      	ldr	r3, [r1, #24]
 800f4c6:	1a9b      	subs	r3, r3, r2
 800f4c8:	ee07 3a10 	vmov	s14, r3
 800f4cc:	684b      	ldr	r3, [r1, #4]
 800f4ce:	1a9b      	subs	r3, r3, r2
 800f4d0:	ee01 3a90 	vmov	s3, r3
 800f4d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f4d8:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800f4dc:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f4e0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800f4e4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800f4e8:	ee61 1a84 	vmul.f32	s3, s3, s8
 800f4ec:	eea1 7a21 	vfma.f32	s14, s2, s3
 800f4f0:	ee27 7a03 	vmul.f32	s14, s14, s6
 800f4f4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800f4f8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f4fa:	694a      	ldr	r2, [r1, #20]
 800f4fc:	1b13      	subs	r3, r2, r4
 800f4fe:	ee03 3a10 	vmov	s6, r3
 800f502:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800f506:	680b      	ldr	r3, [r1, #0]
 800f508:	ee23 3a04 	vmul.f32	s6, s6, s8
 800f50c:	1b1b      	subs	r3, r3, r4
 800f50e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800f512:	ee03 3a10 	vmov	s6, r3
 800f516:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800f51a:	ee23 4a04 	vmul.f32	s8, s6, s8
 800f51e:	eee1 5a04 	vfma.f32	s11, s2, s8
 800f522:	ee25 6a86 	vmul.f32	s12, s11, s12
 800f526:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800f52a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800f52e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800f532:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800f536:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f53a:	dd13      	ble.n	800f564 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800f53c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800f540:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800f544:	63c3      	str	r3, [r0, #60]	; 0x3c
 800f546:	eee3 7a87 	vfma.f32	s15, s7, s14
 800f54a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800f54e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f552:	dd15      	ble.n	800f580 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800f554:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800f558:	6403      	str	r3, [r0, #64]	; 0x40
 800f55a:	bd70      	pop	{r4, r5, r6, pc}
 800f55c:	4623      	mov	r3, r4
 800f55e:	e6fd      	b.n	800f35c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f560:	462a      	mov	r2, r5
 800f562:	e706      	b.n	800f372 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f564:	d502      	bpl.n	800f56c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800f566:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800f56a:	e7e9      	b.n	800f540 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800f56c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800f570:	eea3 2a85 	vfma.f32	s4, s7, s10
 800f574:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800f578:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f57c:	dade      	bge.n	800f53c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800f57e:	e7f2      	b.n	800f566 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800f580:	d502      	bpl.n	800f588 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800f582:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800f586:	e7e7      	b.n	800f558 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800f588:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800f58c:	eee3 4a86 	vfma.f32	s9, s7, s12
 800f590:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800f594:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f598:	dadc      	bge.n	800f554 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800f59a:	e7f2      	b.n	800f582 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800f59c:	3d800000 	.word	0x3d800000

0800f5a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800f5a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f5a4:	2714      	movs	r7, #20
 800f5a6:	435f      	muls	r7, r3
 800f5a8:	eb02 0c07 	add.w	ip, r2, r7
 800f5ac:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800f5b0:	f115 0e0f 	adds.w	lr, r5, #15
 800f5b4:	f100 80a2 	bmi.w	800f6fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800f5b8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 800f5bc:	9c08      	ldr	r4, [sp, #32]
 800f5be:	f8c0 e014 	str.w	lr, [r0, #20]
 800f5c2:	2614      	movs	r6, #20
 800f5c4:	4366      	muls	r6, r4
 800f5c6:	eb02 0806 	add.w	r8, r2, r6
 800f5ca:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800f5ce:	f115 040f 	adds.w	r4, r5, #15
 800f5d2:	f100 809f 	bmi.w	800f714 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 800f5d6:	1124      	asrs	r4, r4, #4
 800f5d8:	eba4 040e 	sub.w	r4, r4, lr
 800f5dc:	6184      	str	r4, [r0, #24]
 800f5de:	2c00      	cmp	r4, #0
 800f5e0:	f000 808a 	beq.w	800f6f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 800f5e4:	f8dc 9004 	ldr.w	r9, [ip, #4]
 800f5e8:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800f5ec:	5995      	ldr	r5, [r2, r6]
 800f5ee:	eba4 0809 	sub.w	r8, r4, r9
 800f5f2:	59d4      	ldr	r4, [r2, r7]
 800f5f4:	eba5 0a04 	sub.w	sl, r5, r4
 800f5f8:	ea4f 150a 	mov.w	r5, sl, lsl #4
 800f5fc:	fb0e fe05 	mul.w	lr, lr, r5
 800f600:	fb0a ee19 	mls	lr, sl, r9, lr
 800f604:	fb08 e404 	mla	r4, r8, r4, lr
 800f608:	ea4f 1608 	mov.w	r6, r8, lsl #4
 800f60c:	3c01      	subs	r4, #1
 800f60e:	19a4      	adds	r4, r4, r6
 800f610:	f100 808c 	bmi.w	800f72c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 800f614:	fb94 fef6 	sdiv	lr, r4, r6
 800f618:	f8c0 e000 	str.w	lr, [r0]
 800f61c:	fb06 441e 	mls	r4, r6, lr, r4
 800f620:	6104      	str	r4, [r0, #16]
 800f622:	2d00      	cmp	r5, #0
 800f624:	f2c0 8095 	blt.w	800f752 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 800f628:	fb95 f4f6 	sdiv	r4, r5, r6
 800f62c:	6044      	str	r4, [r0, #4]
 800f62e:	fb06 5514 	mls	r5, r6, r4, r5
 800f632:	6085      	str	r5, [r0, #8]
 800f634:	60c6      	str	r6, [r0, #12]
 800f636:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800f63a:	6945      	ldr	r5, [r0, #20]
 800f63c:	59d2      	ldr	r2, [r2, r7]
 800f63e:	eddf 6a4d 	vldr	s13, [pc, #308]	; 800f774 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 800f642:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 800f646:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 800f64a:	ee07 4a10 	vmov	s14, r4
 800f64e:	6804      	ldr	r4, [r0, #0]
 800f650:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 800f654:	ee07 2a90 	vmov	s15, r2
 800f658:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f65c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f660:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800f664:	ee27 7a26 	vmul.f32	s14, s14, s13
 800f668:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f66c:	edd3 6a00 	vldr	s13, [r3]
 800f670:	eee6 6a07 	vfma.f32	s13, s12, s14
 800f674:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 800f678:	eee6 6a27 	vfma.f32	s13, s12, s15
 800f67c:	edc0 6a07 	vstr	s13, [r0, #28]
 800f680:	edd0 6a01 	vldr	s13, [r0, #4]
 800f684:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 800f688:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 800f68c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f690:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f694:	ed80 6a08 	vstr	s12, [r0, #32]
 800f698:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800f69a:	6242      	str	r2, [r0, #36]	; 0x24
 800f69c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 800f6a0:	ed93 6a03 	vldr	s12, [r3, #12]
 800f6a4:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f6a8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 800f6ac:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800f6b0:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 800f6b4:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 800f6b8:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 800f6bc:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f6c0:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 800f6c4:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f6c6:	6302      	str	r2, [r0, #48]	; 0x30
 800f6c8:	ed93 6a06 	vldr	s12, [r3, #24]
 800f6cc:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 800f6d0:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f6d4:	eeb0 7a46 	vmov.f32	s14, s12
 800f6d8:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 800f6dc:	eea6 7a27 	vfma.f32	s14, s12, s15
 800f6e0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800f6e4:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 800f6e8:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 800f6ec:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f6f0:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 800f6f4:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 800f6f6:	63c3      	str	r3, [r0, #60]	; 0x3c
 800f6f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f6fc:	f1c5 0501 	rsb	r5, r5, #1
 800f700:	f015 050f 	ands.w	r5, r5, #15
 800f704:	bf18      	it	ne
 800f706:	2501      	movne	r5, #1
 800f708:	2410      	movs	r4, #16
 800f70a:	fb9e fef4 	sdiv	lr, lr, r4
 800f70e:	ebae 0e05 	sub.w	lr, lr, r5
 800f712:	e753      	b.n	800f5bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 800f714:	f1c5 0501 	rsb	r5, r5, #1
 800f718:	f015 050f 	ands.w	r5, r5, #15
 800f71c:	bf18      	it	ne
 800f71e:	2501      	movne	r5, #1
 800f720:	f04f 0910 	mov.w	r9, #16
 800f724:	fb94 f4f9 	sdiv	r4, r4, r9
 800f728:	1b64      	subs	r4, r4, r5
 800f72a:	e755      	b.n	800f5d8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 800f72c:	4264      	negs	r4, r4
 800f72e:	fb94 fef6 	sdiv	lr, r4, r6
 800f732:	f1ce 0800 	rsb	r8, lr, #0
 800f736:	fb06 441e 	mls	r4, r6, lr, r4
 800f73a:	f8c0 8000 	str.w	r8, [r0]
 800f73e:	6104      	str	r4, [r0, #16]
 800f740:	2c00      	cmp	r4, #0
 800f742:	f43f af6e 	beq.w	800f622 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 800f746:	ea6f 0e0e 	mvn.w	lr, lr
 800f74a:	f8c0 e000 	str.w	lr, [r0]
 800f74e:	1b34      	subs	r4, r6, r4
 800f750:	e766      	b.n	800f620 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 800f752:	426d      	negs	r5, r5
 800f754:	fb95 f4f6 	sdiv	r4, r5, r6
 800f758:	f1c4 0e00 	rsb	lr, r4, #0
 800f75c:	fb06 5514 	mls	r5, r6, r4, r5
 800f760:	f8c0 e004 	str.w	lr, [r0, #4]
 800f764:	6085      	str	r5, [r0, #8]
 800f766:	2d00      	cmp	r5, #0
 800f768:	f43f af64 	beq.w	800f634 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 800f76c:	43e4      	mvns	r4, r4
 800f76e:	6044      	str	r4, [r0, #4]
 800f770:	1b75      	subs	r5, r6, r5
 800f772:	e75e      	b.n	800f632 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 800f774:	3d800000 	.word	0x3d800000

0800f778 <_ZN8touchgfx7Unicode6strlenEPKt>:
 800f778:	4602      	mov	r2, r0
 800f77a:	b148      	cbz	r0, 800f790 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 800f77c:	2300      	movs	r3, #0
 800f77e:	b298      	uxth	r0, r3
 800f780:	3301      	adds	r3, #1
 800f782:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800f786:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 800f78a:	2900      	cmp	r1, #0
 800f78c:	d1f7      	bne.n	800f77e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 800f78e:	4770      	bx	lr
 800f790:	4770      	bx	lr

0800f792 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 800f792:	b530      	push	{r4, r5, lr}
 800f794:	4604      	mov	r4, r0
 800f796:	b159      	cbz	r1, 800f7b0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 800f798:	b148      	cbz	r0, 800f7ae <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f79a:	2300      	movs	r3, #0
 800f79c:	b298      	uxth	r0, r3
 800f79e:	4282      	cmp	r2, r0
 800f7a0:	d905      	bls.n	800f7ae <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f7a2:	5ccd      	ldrb	r5, [r1, r3]
 800f7a4:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 800f7a8:	3301      	adds	r3, #1
 800f7aa:	2d00      	cmp	r5, #0
 800f7ac:	d1f6      	bne.n	800f79c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 800f7ae:	bd30      	pop	{r4, r5, pc}
 800f7b0:	4608      	mov	r0, r1
 800f7b2:	e7fc      	b.n	800f7ae <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0800f7b4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 800f7b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f7b6:	b08b      	sub	sp, #44	; 0x2c
 800f7b8:	468c      	mov	ip, r1
 800f7ba:	2100      	movs	r1, #0
 800f7bc:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f7c0:	4604      	mov	r4, r0
 800f7c2:	261f      	movs	r6, #31
 800f7c4:	af01      	add	r7, sp, #4
 800f7c6:	fb94 fef3 	sdiv	lr, r4, r3
 800f7ca:	fb03 441e 	mls	r4, r3, lr, r4
 800f7ce:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 800f7d2:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 800f7d6:	b2ec      	uxtb	r4, r5
 800f7d8:	2d09      	cmp	r5, #9
 800f7da:	bfd4      	ite	le
 800f7dc:	3430      	addle	r4, #48	; 0x30
 800f7de:	3457      	addgt	r4, #87	; 0x57
 800f7e0:	b2e4      	uxtb	r4, r4
 800f7e2:	55bc      	strb	r4, [r7, r6]
 800f7e4:	4674      	mov	r4, lr
 800f7e6:	1e71      	subs	r1, r6, #1
 800f7e8:	b974      	cbnz	r4, 800f808 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 800f7ea:	2800      	cmp	r0, #0
 800f7ec:	da05      	bge.n	800f7fa <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 800f7ee:	ab0a      	add	r3, sp, #40	; 0x28
 800f7f0:	4419      	add	r1, r3
 800f7f2:	232d      	movs	r3, #45	; 0x2d
 800f7f4:	f801 3c24 	strb.w	r3, [r1, #-36]
 800f7f8:	1eb1      	subs	r1, r6, #2
 800f7fa:	3101      	adds	r1, #1
 800f7fc:	4439      	add	r1, r7
 800f7fe:	4660      	mov	r0, ip
 800f800:	f7ff ffc7 	bl	800f792 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f804:	b00b      	add	sp, #44	; 0x2c
 800f806:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f808:	460e      	mov	r6, r1
 800f80a:	e7dc      	b.n	800f7c6 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0800f80c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 800f80c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f80e:	b08b      	sub	sp, #44	; 0x2c
 800f810:	468c      	mov	ip, r1
 800f812:	2100      	movs	r1, #0
 800f814:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f818:	ae01      	add	r6, sp, #4
 800f81a:	211f      	movs	r1, #31
 800f81c:	fbb0 f7f3 	udiv	r7, r0, r3
 800f820:	fb03 0517 	mls	r5, r3, r7, r0
 800f824:	b2ec      	uxtb	r4, r5
 800f826:	2d09      	cmp	r5, #9
 800f828:	bfd4      	ite	le
 800f82a:	3430      	addle	r4, #48	; 0x30
 800f82c:	3457      	addgt	r4, #87	; 0x57
 800f82e:	b2e4      	uxtb	r4, r4
 800f830:	558c      	strb	r4, [r1, r6]
 800f832:	4638      	mov	r0, r7
 800f834:	1e4c      	subs	r4, r1, #1
 800f836:	b92f      	cbnz	r7, 800f844 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 800f838:	4431      	add	r1, r6
 800f83a:	4660      	mov	r0, ip
 800f83c:	f7ff ffa9 	bl	800f792 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f840:	b00b      	add	sp, #44	; 0x2c
 800f842:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f844:	4621      	mov	r1, r4
 800f846:	e7e9      	b.n	800f81c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0800f848 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 800f848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f84c:	4691      	mov	r9, r2
 800f84e:	b085      	sub	sp, #20
 800f850:	6802      	ldr	r2, [r0, #0]
 800f852:	9201      	str	r2, [sp, #4]
 800f854:	4688      	mov	r8, r1
 800f856:	4683      	mov	fp, r0
 800f858:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 800f85c:	9103      	str	r1, [sp, #12]
 800f85e:	4610      	mov	r0, r2
 800f860:	461c      	mov	r4, r3
 800f862:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800f866:	9302      	str	r3, [sp, #8]
 800f868:	f7ff ff86 	bl	800f778 <_ZN8touchgfx7Unicode6strlenEPKt>
 800f86c:	f1b8 0f00 	cmp.w	r8, #0
 800f870:	bf0c      	ite	eq
 800f872:	4684      	moveq	ip, r0
 800f874:	f100 0c01 	addne.w	ip, r0, #1
 800f878:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 800f87c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 800f880:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f882:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f884:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 800f888:	9903      	ldr	r1, [sp, #12]
 800f88a:	fa1f fc8c 	uxth.w	ip, ip
 800f88e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800f892:	d041      	beq.n	800f918 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f894:	d834      	bhi.n	800f900 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 800f896:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 800f89a:	d059      	beq.n	800f950 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 800f89c:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 800f8a0:	d03a      	beq.n	800f918 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f8a2:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 800f8a6:	d034      	beq.n	800f912 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f8a8:	2400      	movs	r4, #0
 800f8aa:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800f8ae:	3a01      	subs	r2, #1
 800f8b0:	b169      	cbz	r1, 800f8ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f8b2:	9911      	ldr	r1, [sp, #68]	; 0x44
 800f8b4:	458c      	cmp	ip, r1
 800f8b6:	da09      	bge.n	800f8cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f8b8:	eba1 010c 	sub.w	r1, r1, ip
 800f8bc:	b289      	uxth	r1, r1
 800f8be:	b933      	cbnz	r3, 800f8ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f8c0:	2e00      	cmp	r6, #0
 800f8c2:	d051      	beq.n	800f968 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f8c4:	2800      	cmp	r0, #0
 800f8c6:	d04f      	beq.n	800f968 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f8c8:	440c      	add	r4, r1
 800f8ca:	b2a4      	uxth	r4, r4
 800f8cc:	2100      	movs	r1, #0
 800f8ce:	682b      	ldr	r3, [r5, #0]
 800f8d0:	4293      	cmp	r3, r2
 800f8d2:	da07      	bge.n	800f8e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f8d4:	f1b8 0f00 	cmp.w	r8, #0
 800f8d8:	d004      	beq.n	800f8e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f8da:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 800f8de:	682b      	ldr	r3, [r5, #0]
 800f8e0:	3301      	adds	r3, #1
 800f8e2:	602b      	str	r3, [r5, #0]
 800f8e4:	2730      	movs	r7, #48	; 0x30
 800f8e6:	2c00      	cmp	r4, #0
 800f8e8:	d04e      	beq.n	800f988 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f8ea:	682e      	ldr	r6, [r5, #0]
 800f8ec:	3c01      	subs	r4, #1
 800f8ee:	42b2      	cmp	r2, r6
 800f8f0:	b2a4      	uxth	r4, r4
 800f8f2:	dd49      	ble.n	800f988 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f8f4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f8f8:	682b      	ldr	r3, [r5, #0]
 800f8fa:	3301      	adds	r3, #1
 800f8fc:	602b      	str	r3, [r5, #0]
 800f8fe:	e7f2      	b.n	800f8e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 800f900:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 800f904:	d01d      	beq.n	800f942 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 800f906:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 800f90a:	d002      	beq.n	800f912 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f90c:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 800f910:	e7c9      	b.n	800f8a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 800f912:	4684      	mov	ip, r0
 800f914:	f04f 0800 	mov.w	r8, #0
 800f918:	2c00      	cmp	r4, #0
 800f91a:	d0c6      	beq.n	800f8aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f91c:	b947      	cbnz	r7, 800f930 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f91e:	2801      	cmp	r0, #1
 800f920:	d106      	bne.n	800f930 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f922:	8814      	ldrh	r4, [r2, #0]
 800f924:	2c30      	cmp	r4, #48	; 0x30
 800f926:	bf02      	ittt	eq
 800f928:	3202      	addeq	r2, #2
 800f92a:	f8cb 2000 	streq.w	r2, [fp]
 800f92e:	4638      	moveq	r0, r7
 800f930:	45bc      	cmp	ip, r7
 800f932:	da14      	bge.n	800f95e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 800f934:	b2bf      	uxth	r7, r7
 800f936:	eba7 040c 	sub.w	r4, r7, ip
 800f93a:	b2a4      	uxth	r4, r4
 800f93c:	46bc      	mov	ip, r7
 800f93e:	2600      	movs	r6, #0
 800f940:	e7b3      	b.n	800f8aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f942:	4684      	mov	ip, r0
 800f944:	b16c      	cbz	r4, 800f962 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 800f946:	42b8      	cmp	r0, r7
 800f948:	dd00      	ble.n	800f94c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 800f94a:	b2b8      	uxth	r0, r7
 800f94c:	2400      	movs	r4, #0
 800f94e:	e003      	b.n	800f958 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 800f950:	f04f 0c01 	mov.w	ip, #1
 800f954:	2400      	movs	r4, #0
 800f956:	4660      	mov	r0, ip
 800f958:	4626      	mov	r6, r4
 800f95a:	46a0      	mov	r8, r4
 800f95c:	e7a5      	b.n	800f8aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f95e:	2400      	movs	r4, #0
 800f960:	e7ed      	b.n	800f93e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 800f962:	4626      	mov	r6, r4
 800f964:	46a0      	mov	r8, r4
 800f966:	e7a0      	b.n	800f8aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f968:	2900      	cmp	r1, #0
 800f96a:	d0b0      	beq.n	800f8ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f96c:	2720      	movs	r7, #32
 800f96e:	682e      	ldr	r6, [r5, #0]
 800f970:	2900      	cmp	r1, #0
 800f972:	d0ac      	beq.n	800f8ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f974:	3901      	subs	r1, #1
 800f976:	4296      	cmp	r6, r2
 800f978:	b289      	uxth	r1, r1
 800f97a:	daa7      	bge.n	800f8cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f97c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f980:	682b      	ldr	r3, [r5, #0]
 800f982:	3301      	adds	r3, #1
 800f984:	602b      	str	r3, [r5, #0]
 800f986:	e7f2      	b.n	800f96e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 800f988:	b188      	cbz	r0, 800f9ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f98a:	682b      	ldr	r3, [r5, #0]
 800f98c:	3801      	subs	r0, #1
 800f98e:	429a      	cmp	r2, r3
 800f990:	b280      	uxth	r0, r0
 800f992:	dd0c      	ble.n	800f9ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f994:	f8db 3000 	ldr.w	r3, [fp]
 800f998:	1c9c      	adds	r4, r3, #2
 800f99a:	f8cb 4000 	str.w	r4, [fp]
 800f99e:	881c      	ldrh	r4, [r3, #0]
 800f9a0:	682b      	ldr	r3, [r5, #0]
 800f9a2:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 800f9a6:	682b      	ldr	r3, [r5, #0]
 800f9a8:	3301      	adds	r3, #1
 800f9aa:	602b      	str	r3, [r5, #0]
 800f9ac:	e7ec      	b.n	800f988 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f9ae:	2620      	movs	r6, #32
 800f9b0:	b151      	cbz	r1, 800f9c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f9b2:	6828      	ldr	r0, [r5, #0]
 800f9b4:	3901      	subs	r1, #1
 800f9b6:	4282      	cmp	r2, r0
 800f9b8:	b289      	uxth	r1, r1
 800f9ba:	dd05      	ble.n	800f9c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f9bc:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 800f9c0:	682b      	ldr	r3, [r5, #0]
 800f9c2:	3301      	adds	r3, #1
 800f9c4:	602b      	str	r3, [r5, #0]
 800f9c6:	e7f3      	b.n	800f9b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 800f9c8:	b005      	add	sp, #20
 800f9ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f9ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 800f9ce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f9d2:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 800f9d6:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 800f9da:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 800f9de:	2400      	movs	r4, #0
 800f9e0:	8014      	strh	r4, [r2, #0]
 800f9e2:	701c      	strb	r4, [r3, #0]
 800f9e4:	f888 4000 	strb.w	r4, [r8]
 800f9e8:	f88c 4000 	strb.w	r4, [ip]
 800f9ec:	f88e 4000 	strb.w	r4, [lr]
 800f9f0:	703c      	strb	r4, [r7, #0]
 800f9f2:	6804      	ldr	r4, [r0, #0]
 800f9f4:	b1a4      	cbz	r4, 800fa20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 800f9f6:	8824      	ldrh	r4, [r4, #0]
 800f9f8:	f04f 0901 	mov.w	r9, #1
 800f9fc:	b314      	cbz	r4, 800fa44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f9fe:	2c2b      	cmp	r4, #43	; 0x2b
 800fa00:	d001      	beq.n	800fa06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 800fa02:	2c20      	cmp	r4, #32
 800fa04:	d110      	bne.n	800fa28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 800fa06:	8014      	strh	r4, [r2, #0]
 800fa08:	6804      	ldr	r4, [r0, #0]
 800fa0a:	b10c      	cbz	r4, 800fa10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 800fa0c:	3402      	adds	r4, #2
 800fa0e:	6004      	str	r4, [r0, #0]
 800fa10:	680c      	ldr	r4, [r1, #0]
 800fa12:	b10c      	cbz	r4, 800fa18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 800fa14:	3401      	adds	r4, #1
 800fa16:	600c      	str	r4, [r1, #0]
 800fa18:	6804      	ldr	r4, [r0, #0]
 800fa1a:	b17c      	cbz	r4, 800fa3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 800fa1c:	8824      	ldrh	r4, [r4, #0]
 800fa1e:	e7ed      	b.n	800f9fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800fa20:	680c      	ldr	r4, [r1, #0]
 800fa22:	b17c      	cbz	r4, 800fa44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800fa24:	7824      	ldrb	r4, [r4, #0]
 800fa26:	e7e7      	b.n	800f9f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 800fa28:	2c2d      	cmp	r4, #45	; 0x2d
 800fa2a:	d102      	bne.n	800fa32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 800fa2c:	f883 9000 	strb.w	r9, [r3]
 800fa30:	e7ea      	b.n	800fa08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800fa32:	2c23      	cmp	r4, #35	; 0x23
 800fa34:	d107      	bne.n	800fa46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 800fa36:	f888 9000 	strb.w	r9, [r8]
 800fa3a:	e7e5      	b.n	800fa08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800fa3c:	680c      	ldr	r4, [r1, #0]
 800fa3e:	b10c      	cbz	r4, 800fa44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800fa40:	7824      	ldrb	r4, [r4, #0]
 800fa42:	e7db      	b.n	800f9fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800fa44:	2400      	movs	r4, #0
 800fa46:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800fa4a:	2b09      	cmp	r3, #9
 800fa4c:	d901      	bls.n	800fa52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 800fa4e:	2c2a      	cmp	r4, #42	; 0x2a
 800fa50:	d122      	bne.n	800fa98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800fa52:	2301      	movs	r3, #1
 800fa54:	2c30      	cmp	r4, #48	; 0x30
 800fa56:	f88e 3000 	strb.w	r3, [lr]
 800fa5a:	d10d      	bne.n	800fa78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800fa5c:	f88c 3000 	strb.w	r3, [ip]
 800fa60:	6803      	ldr	r3, [r0, #0]
 800fa62:	b10b      	cbz	r3, 800fa68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 800fa64:	3302      	adds	r3, #2
 800fa66:	6003      	str	r3, [r0, #0]
 800fa68:	680b      	ldr	r3, [r1, #0]
 800fa6a:	b10b      	cbz	r3, 800fa70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 800fa6c:	3301      	adds	r3, #1
 800fa6e:	600b      	str	r3, [r1, #0]
 800fa70:	6803      	ldr	r3, [r0, #0]
 800fa72:	2b00      	cmp	r3, #0
 800fa74:	d02f      	beq.n	800fad6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 800fa76:	881c      	ldrh	r4, [r3, #0]
 800fa78:	2c2a      	cmp	r4, #42	; 0x2a
 800fa7a:	d135      	bne.n	800fae8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800fa7c:	f04f 33ff 	mov.w	r3, #4294967295
 800fa80:	6033      	str	r3, [r6, #0]
 800fa82:	6803      	ldr	r3, [r0, #0]
 800fa84:	b10b      	cbz	r3, 800fa8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 800fa86:	3302      	adds	r3, #2
 800fa88:	6003      	str	r3, [r0, #0]
 800fa8a:	680b      	ldr	r3, [r1, #0]
 800fa8c:	b10b      	cbz	r3, 800fa92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 800fa8e:	3301      	adds	r3, #1
 800fa90:	600b      	str	r3, [r1, #0]
 800fa92:	6803      	ldr	r3, [r0, #0]
 800fa94:	b31b      	cbz	r3, 800fade <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 800fa96:	881c      	ldrh	r4, [r3, #0]
 800fa98:	2c2e      	cmp	r4, #46	; 0x2e
 800fa9a:	d11a      	bne.n	800fad2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800fa9c:	2301      	movs	r3, #1
 800fa9e:	703b      	strb	r3, [r7, #0]
 800faa0:	6803      	ldr	r3, [r0, #0]
 800faa2:	b10b      	cbz	r3, 800faa8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 800faa4:	3302      	adds	r3, #2
 800faa6:	6003      	str	r3, [r0, #0]
 800faa8:	680b      	ldr	r3, [r1, #0]
 800faaa:	b10b      	cbz	r3, 800fab0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 800faac:	3301      	adds	r3, #1
 800faae:	600b      	str	r3, [r1, #0]
 800fab0:	6803      	ldr	r3, [r0, #0]
 800fab2:	2b00      	cmp	r3, #0
 800fab4:	d036      	beq.n	800fb24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 800fab6:	881b      	ldrh	r3, [r3, #0]
 800fab8:	2b2a      	cmp	r3, #42	; 0x2a
 800faba:	d137      	bne.n	800fb2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800fabc:	f04f 33ff 	mov.w	r3, #4294967295
 800fac0:	602b      	str	r3, [r5, #0]
 800fac2:	6803      	ldr	r3, [r0, #0]
 800fac4:	b10b      	cbz	r3, 800faca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 800fac6:	3302      	adds	r3, #2
 800fac8:	6003      	str	r3, [r0, #0]
 800faca:	680b      	ldr	r3, [r1, #0]
 800facc:	b10b      	cbz	r3, 800fad2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800face:	3301      	adds	r3, #1
 800fad0:	600b      	str	r3, [r1, #0]
 800fad2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fad6:	680c      	ldr	r4, [r1, #0]
 800fad8:	b134      	cbz	r4, 800fae8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800fada:	7824      	ldrb	r4, [r4, #0]
 800fadc:	e7cc      	b.n	800fa78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800fade:	680b      	ldr	r3, [r1, #0]
 800fae0:	2b00      	cmp	r3, #0
 800fae2:	d0f6      	beq.n	800fad2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800fae4:	781c      	ldrb	r4, [r3, #0]
 800fae6:	e7d7      	b.n	800fa98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800fae8:	2300      	movs	r3, #0
 800faea:	6033      	str	r3, [r6, #0]
 800faec:	220a      	movs	r2, #10
 800faee:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800faf2:	fa1f f38c 	uxth.w	r3, ip
 800faf6:	2b09      	cmp	r3, #9
 800faf8:	d8ce      	bhi.n	800fa98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800fafa:	6833      	ldr	r3, [r6, #0]
 800fafc:	fb02 c303 	mla	r3, r2, r3, ip
 800fb00:	6033      	str	r3, [r6, #0]
 800fb02:	6803      	ldr	r3, [r0, #0]
 800fb04:	b10b      	cbz	r3, 800fb0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 800fb06:	3302      	adds	r3, #2
 800fb08:	6003      	str	r3, [r0, #0]
 800fb0a:	680b      	ldr	r3, [r1, #0]
 800fb0c:	b10b      	cbz	r3, 800fb12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 800fb0e:	3301      	adds	r3, #1
 800fb10:	600b      	str	r3, [r1, #0]
 800fb12:	6803      	ldr	r3, [r0, #0]
 800fb14:	b10b      	cbz	r3, 800fb1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 800fb16:	881c      	ldrh	r4, [r3, #0]
 800fb18:	e7e9      	b.n	800faee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800fb1a:	680c      	ldr	r4, [r1, #0]
 800fb1c:	2c00      	cmp	r4, #0
 800fb1e:	d0e6      	beq.n	800faee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800fb20:	7824      	ldrb	r4, [r4, #0]
 800fb22:	e7e4      	b.n	800faee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800fb24:	680b      	ldr	r3, [r1, #0]
 800fb26:	b10b      	cbz	r3, 800fb2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800fb28:	781b      	ldrb	r3, [r3, #0]
 800fb2a:	e7c5      	b.n	800fab8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 800fb2c:	2200      	movs	r2, #0
 800fb2e:	602a      	str	r2, [r5, #0]
 800fb30:	240a      	movs	r4, #10
 800fb32:	3b30      	subs	r3, #48	; 0x30
 800fb34:	b29e      	uxth	r6, r3
 800fb36:	2e09      	cmp	r6, #9
 800fb38:	682a      	ldr	r2, [r5, #0]
 800fb3a:	d813      	bhi.n	800fb64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 800fb3c:	fb04 3302 	mla	r3, r4, r2, r3
 800fb40:	602b      	str	r3, [r5, #0]
 800fb42:	6803      	ldr	r3, [r0, #0]
 800fb44:	b10b      	cbz	r3, 800fb4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 800fb46:	3302      	adds	r3, #2
 800fb48:	6003      	str	r3, [r0, #0]
 800fb4a:	680b      	ldr	r3, [r1, #0]
 800fb4c:	b10b      	cbz	r3, 800fb52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 800fb4e:	3301      	adds	r3, #1
 800fb50:	600b      	str	r3, [r1, #0]
 800fb52:	6803      	ldr	r3, [r0, #0]
 800fb54:	b10b      	cbz	r3, 800fb5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 800fb56:	881b      	ldrh	r3, [r3, #0]
 800fb58:	e7eb      	b.n	800fb32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800fb5a:	680b      	ldr	r3, [r1, #0]
 800fb5c:	2b00      	cmp	r3, #0
 800fb5e:	d0e8      	beq.n	800fb32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800fb60:	781b      	ldrb	r3, [r3, #0]
 800fb62:	e7e6      	b.n	800fb32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800fb64:	2a06      	cmp	r2, #6
 800fb66:	bfa8      	it	ge
 800fb68:	2206      	movge	r2, #6
 800fb6a:	602a      	str	r2, [r5, #0]
 800fb6c:	e7b1      	b.n	800fad2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0800fb6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 800fb6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb72:	b0a3      	sub	sp, #140	; 0x8c
 800fb74:	2600      	movs	r6, #0
 800fb76:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 800fb7a:	4607      	mov	r7, r0
 800fb7c:	4688      	mov	r8, r1
 800fb7e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 800fb82:	4631      	mov	r1, r6
 800fb84:	2242      	movs	r2, #66	; 0x42
 800fb86:	4648      	mov	r0, r9
 800fb88:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800fb8a:	960d      	str	r6, [sp, #52]	; 0x34
 800fb8c:	f00d ff10 	bl	801d9b0 <memset>
 800fb90:	b15f      	cbz	r7, 800fbaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 800fb92:	f108 3aff 	add.w	sl, r8, #4294967295
 800fb96:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fb98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fb9a:	b152      	cbz	r2, 800fbb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 800fb9c:	8812      	ldrh	r2, [r2, #0]
 800fb9e:	b10a      	cbz	r2, 800fba4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800fba0:	459a      	cmp	sl, r3
 800fba2:	dc2e      	bgt.n	800fc02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 800fba4:	2200      	movs	r2, #0
 800fba6:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800fbaa:	4638      	mov	r0, r7
 800fbac:	b023      	add	sp, #140	; 0x8c
 800fbae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fbb2:	9a08      	ldr	r2, [sp, #32]
 800fbb4:	2a00      	cmp	r2, #0
 800fbb6:	d0f5      	beq.n	800fba4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800fbb8:	7812      	ldrb	r2, [r2, #0]
 800fbba:	e7f0      	b.n	800fb9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 800fbbc:	2d00      	cmp	r5, #0
 800fbbe:	d0ea      	beq.n	800fb96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fbc0:	782a      	ldrb	r2, [r5, #0]
 800fbc2:	b142      	cbz	r2, 800fbd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 800fbc4:	2a25      	cmp	r2, #37	; 0x25
 800fbc6:	d001      	beq.n	800fbcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 800fbc8:	459a      	cmp	sl, r3
 800fbca:	dc08      	bgt.n	800fbde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 800fbcc:	f1bb 0f00 	cmp.w	fp, #0
 800fbd0:	d121      	bne.n	800fc16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 800fbd2:	2d00      	cmp	r5, #0
 800fbd4:	d0df      	beq.n	800fb96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fbd6:	782a      	ldrb	r2, [r5, #0]
 800fbd8:	f04f 0b00 	mov.w	fp, #0
 800fbdc:	e01d      	b.n	800fc1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 800fbde:	f1bb 0f00 	cmp.w	fp, #0
 800fbe2:	d078      	beq.n	800fcd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 800fbe4:	f8bb 2000 	ldrh.w	r2, [fp]
 800fbe8:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800fbec:	f1bb 0f00 	cmp.w	fp, #0
 800fbf0:	d002      	beq.n	800fbf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 800fbf2:	f10b 0202 	add.w	r2, fp, #2
 800fbf6:	9209      	str	r2, [sp, #36]	; 0x24
 800fbf8:	b10d      	cbz	r5, 800fbfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 800fbfa:	3501      	adds	r5, #1
 800fbfc:	9508      	str	r5, [sp, #32]
 800fbfe:	3301      	adds	r3, #1
 800fc00:	930d      	str	r3, [sp, #52]	; 0x34
 800fc02:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 800fc06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fc08:	f1bb 0f00 	cmp.w	fp, #0
 800fc0c:	d0d6      	beq.n	800fbbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 800fc0e:	f8bb 2000 	ldrh.w	r2, [fp]
 800fc12:	2a00      	cmp	r2, #0
 800fc14:	d1d6      	bne.n	800fbc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 800fc16:	f8bb 2000 	ldrh.w	r2, [fp]
 800fc1a:	2a00      	cmp	r2, #0
 800fc1c:	d0bb      	beq.n	800fb96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fc1e:	459a      	cmp	sl, r3
 800fc20:	ddb9      	ble.n	800fb96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fc22:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 800fc26:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 800fc2a:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800fc2e:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 800fc32:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 800fc36:	960e      	str	r6, [sp, #56]	; 0x38
 800fc38:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 800fc3c:	960f      	str	r6, [sp, #60]	; 0x3c
 800fc3e:	f1bb 0f00 	cmp.w	fp, #0
 800fc42:	d002      	beq.n	800fc4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 800fc44:	f10b 0302 	add.w	r3, fp, #2
 800fc48:	9309      	str	r3, [sp, #36]	; 0x24
 800fc4a:	b10d      	cbz	r5, 800fc50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 800fc4c:	1c6b      	adds	r3, r5, #1
 800fc4e:	9308      	str	r3, [sp, #32]
 800fc50:	ab0f      	add	r3, sp, #60	; 0x3c
 800fc52:	9305      	str	r3, [sp, #20]
 800fc54:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 800fc58:	9304      	str	r3, [sp, #16]
 800fc5a:	ab0e      	add	r3, sp, #56	; 0x38
 800fc5c:	9303      	str	r3, [sp, #12]
 800fc5e:	ab0c      	add	r3, sp, #48	; 0x30
 800fc60:	9302      	str	r3, [sp, #8]
 800fc62:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 800fc66:	9301      	str	r3, [sp, #4]
 800fc68:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800fc6c:	9300      	str	r3, [sp, #0]
 800fc6e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 800fc72:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 800fc76:	a908      	add	r1, sp, #32
 800fc78:	a809      	add	r0, sp, #36	; 0x24
 800fc7a:	f7ff fea8 	bl	800f9ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 800fc7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fc80:	2b00      	cmp	r3, #0
 800fc82:	bfbe      	ittt	lt
 800fc84:	6823      	ldrlt	r3, [r4, #0]
 800fc86:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800fc8a:	930e      	strlt	r3, [sp, #56]	; 0x38
 800fc8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fc8e:	bfb8      	it	lt
 800fc90:	3404      	addlt	r4, #4
 800fc92:	2b00      	cmp	r3, #0
 800fc94:	bfb8      	it	lt
 800fc96:	6823      	ldrlt	r3, [r4, #0]
 800fc98:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 800fc9c:	bfbe      	ittt	lt
 800fc9e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800fca2:	930f      	strlt	r3, [sp, #60]	; 0x3c
 800fca4:	3404      	addlt	r4, #4
 800fca6:	b1d9      	cbz	r1, 800fce0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 800fca8:	880b      	ldrh	r3, [r1, #0]
 800fcaa:	2b69      	cmp	r3, #105	; 0x69
 800fcac:	d01f      	beq.n	800fcee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fcae:	d82f      	bhi.n	800fd10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 800fcb0:	2b58      	cmp	r3, #88	; 0x58
 800fcb2:	d01c      	beq.n	800fcee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fcb4:	d818      	bhi.n	800fce8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 800fcb6:	2b25      	cmp	r3, #37	; 0x25
 800fcb8:	d034      	beq.n	800fd24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 800fcba:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 800fcbe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fcc0:	f1bb 0f00 	cmp.w	fp, #0
 800fcc4:	f000 80b8 	beq.w	800fe38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 800fcc8:	f8bb 5000 	ldrh.w	r5, [fp]
 800fccc:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 800fcd0:	3301      	adds	r3, #1
 800fcd2:	930d      	str	r3, [sp, #52]	; 0x34
 800fcd4:	e029      	b.n	800fd2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800fcd6:	b10d      	cbz	r5, 800fcdc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 800fcd8:	782a      	ldrb	r2, [r5, #0]
 800fcda:	e785      	b.n	800fbe8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800fcdc:	462a      	mov	r2, r5
 800fcde:	e783      	b.n	800fbe8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800fce0:	2a00      	cmp	r2, #0
 800fce2:	d0ea      	beq.n	800fcba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800fce4:	7813      	ldrb	r3, [r2, #0]
 800fce6:	e7e0      	b.n	800fcaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 800fce8:	3b63      	subs	r3, #99	; 0x63
 800fcea:	2b01      	cmp	r3, #1
 800fcec:	d8e5      	bhi.n	800fcba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800fcee:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 800fcf2:	b329      	cbz	r1, 800fd40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 800fcf4:	880b      	ldrh	r3, [r1, #0]
 800fcf6:	2b69      	cmp	r3, #105	; 0x69
 800fcf8:	d063      	beq.n	800fdc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800fcfa:	d825      	bhi.n	800fd48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 800fcfc:	2b63      	cmp	r3, #99	; 0x63
 800fcfe:	d038      	beq.n	800fd72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 800fd00:	2b64      	cmp	r3, #100	; 0x64
 800fd02:	d05e      	beq.n	800fdc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800fd04:	2b58      	cmp	r3, #88	; 0x58
 800fd06:	d07b      	beq.n	800fe00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 800fd08:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 800fd0c:	4625      	mov	r5, r4
 800fd0e:	e036      	b.n	800fd7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fd10:	2b73      	cmp	r3, #115	; 0x73
 800fd12:	d0ec      	beq.n	800fcee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fd14:	d802      	bhi.n	800fd1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 800fd16:	2b6f      	cmp	r3, #111	; 0x6f
 800fd18:	d1cf      	bne.n	800fcba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800fd1a:	e7e8      	b.n	800fcee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fd1c:	2b75      	cmp	r3, #117	; 0x75
 800fd1e:	d0e6      	beq.n	800fcee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fd20:	2b78      	cmp	r3, #120	; 0x78
 800fd22:	e7f9      	b.n	800fd18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 800fd24:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fd26:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 800fd2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fd2c:	b10b      	cbz	r3, 800fd32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 800fd2e:	3302      	adds	r3, #2
 800fd30:	9309      	str	r3, [sp, #36]	; 0x24
 800fd32:	9b08      	ldr	r3, [sp, #32]
 800fd34:	2b00      	cmp	r3, #0
 800fd36:	f43f af2e 	beq.w	800fb96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fd3a:	3301      	adds	r3, #1
 800fd3c:	9308      	str	r3, [sp, #32]
 800fd3e:	e72a      	b.n	800fb96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fd40:	2a00      	cmp	r2, #0
 800fd42:	d0e1      	beq.n	800fd08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800fd44:	7813      	ldrb	r3, [r2, #0]
 800fd46:	e7d6      	b.n	800fcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 800fd48:	2b73      	cmp	r3, #115	; 0x73
 800fd4a:	d036      	beq.n	800fdba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 800fd4c:	d807      	bhi.n	800fd5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 800fd4e:	2b6f      	cmp	r3, #111	; 0x6f
 800fd50:	d1da      	bne.n	800fd08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800fd52:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fd54:	1d25      	adds	r5, r4, #4
 800fd56:	eba8 0202 	sub.w	r2, r8, r2
 800fd5a:	2308      	movs	r3, #8
 800fd5c:	e04a      	b.n	800fdf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800fd5e:	2b75      	cmp	r3, #117	; 0x75
 800fd60:	d043      	beq.n	800fdea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 800fd62:	2b78      	cmp	r3, #120	; 0x78
 800fd64:	d1d0      	bne.n	800fd08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800fd66:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fd68:	1d25      	adds	r5, r4, #4
 800fd6a:	eba8 0202 	sub.w	r2, r8, r2
 800fd6e:	2310      	movs	r3, #16
 800fd70:	e040      	b.n	800fdf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800fd72:	6823      	ldr	r3, [r4, #0]
 800fd74:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 800fd78:	1d25      	adds	r5, r4, #4
 800fd7a:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 800fd7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fd80:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800fd84:	2b00      	cmp	r3, #0
 800fd86:	d052      	beq.n	800fe2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 800fd88:	881a      	ldrh	r2, [r3, #0]
 800fd8a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 800fd8e:	a80d      	add	r0, sp, #52	; 0x34
 800fd90:	9005      	str	r0, [sp, #20]
 800fd92:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 800fd96:	9004      	str	r0, [sp, #16]
 800fd98:	980e      	ldr	r0, [sp, #56]	; 0x38
 800fd9a:	9003      	str	r0, [sp, #12]
 800fd9c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 800fda0:	9002      	str	r0, [sp, #8]
 800fda2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800fda4:	9001      	str	r0, [sp, #4]
 800fda6:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 800fdaa:	9000      	str	r0, [sp, #0]
 800fdac:	e9cd 8706 	strd	r8, r7, [sp, #24]
 800fdb0:	a810      	add	r0, sp, #64	; 0x40
 800fdb2:	f7ff fd49 	bl	800f848 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 800fdb6:	462c      	mov	r4, r5
 800fdb8:	e7b7      	b.n	800fd2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800fdba:	6823      	ldr	r3, [r4, #0]
 800fdbc:	1d25      	adds	r5, r4, #4
 800fdbe:	9310      	str	r3, [sp, #64]	; 0x40
 800fdc0:	e7dd      	b.n	800fd7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fdc2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fdc4:	6820      	ldr	r0, [r4, #0]
 800fdc6:	eba8 0202 	sub.w	r2, r8, r2
 800fdca:	230a      	movs	r3, #10
 800fdcc:	b292      	uxth	r2, r2
 800fdce:	4649      	mov	r1, r9
 800fdd0:	f7ff fcf0 	bl	800f7b4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 800fdd4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800fdd8:	2b2d      	cmp	r3, #45	; 0x2d
 800fdda:	f104 0504 	add.w	r5, r4, #4
 800fdde:	d1ce      	bne.n	800fd7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fde0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800fde4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fde6:	3302      	adds	r3, #2
 800fde8:	e7e9      	b.n	800fdbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 800fdea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fdec:	1d25      	adds	r5, r4, #4
 800fdee:	eba8 0202 	sub.w	r2, r8, r2
 800fdf2:	230a      	movs	r3, #10
 800fdf4:	b292      	uxth	r2, r2
 800fdf6:	4649      	mov	r1, r9
 800fdf8:	6820      	ldr	r0, [r4, #0]
 800fdfa:	f7ff fd07 	bl	800f80c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 800fdfe:	e7be      	b.n	800fd7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fe00:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fe02:	6820      	ldr	r0, [r4, #0]
 800fe04:	eba8 0202 	sub.w	r2, r8, r2
 800fe08:	b292      	uxth	r2, r2
 800fe0a:	2310      	movs	r3, #16
 800fe0c:	4649      	mov	r1, r9
 800fe0e:	f7ff fcfd 	bl	800f80c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 800fe12:	1d25      	adds	r5, r4, #4
 800fe14:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 800fe18:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800fe1c:	2b00      	cmp	r3, #0
 800fe1e:	d0ae      	beq.n	800fd7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fe20:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 800fe24:	2919      	cmp	r1, #25
 800fe26:	d8f7      	bhi.n	800fe18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800fe28:	3b20      	subs	r3, #32
 800fe2a:	8013      	strh	r3, [r2, #0]
 800fe2c:	e7f4      	b.n	800fe18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800fe2e:	9a08      	ldr	r2, [sp, #32]
 800fe30:	2a00      	cmp	r2, #0
 800fe32:	d0aa      	beq.n	800fd8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800fe34:	7812      	ldrb	r2, [r2, #0]
 800fe36:	e7a8      	b.n	800fd8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800fe38:	2d00      	cmp	r5, #0
 800fe3a:	f43f af47 	beq.w	800fccc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 800fe3e:	782d      	ldrb	r5, [r5, #0]
 800fe40:	e744      	b.n	800fccc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0800fe42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 800fe42:	b507      	push	{r0, r1, r2, lr}
 800fe44:	9300      	str	r3, [sp, #0]
 800fe46:	4613      	mov	r3, r2
 800fe48:	2200      	movs	r2, #0
 800fe4a:	f7ff fe90 	bl	800fb6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 800fe4e:	b003      	add	sp, #12
 800fe50:	f85d fb04 	ldr.w	pc, [sp], #4

0800fe54 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 800fe54:	b40c      	push	{r2, r3}
 800fe56:	b507      	push	{r0, r1, r2, lr}
 800fe58:	ab04      	add	r3, sp, #16
 800fe5a:	f853 2b04 	ldr.w	r2, [r3], #4
 800fe5e:	9301      	str	r3, [sp, #4]
 800fe60:	f7ff ffef 	bl	800fe42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 800fe64:	b003      	add	sp, #12
 800fe66:	f85d eb04 	ldr.w	lr, [sp], #4
 800fe6a:	b002      	add	sp, #8
 800fe6c:	4770      	bx	lr
	...

0800fe70 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800fe70:	4b01      	ldr	r3, [pc, #4]	; (800fe78 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800fe72:	6018      	str	r0, [r3, #0]
 800fe74:	4770      	bx	lr
 800fe76:	bf00      	nop
 800fe78:	200126a4 	.word	0x200126a4

0800fe7c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800fe7c:	4b06      	ldr	r3, [pc, #24]	; (800fe98 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800fe7e:	881a      	ldrh	r2, [r3, #0]
 800fe80:	4282      	cmp	r2, r0
 800fe82:	d807      	bhi.n	800fe94 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800fe84:	4b05      	ldr	r3, [pc, #20]	; (800fe9c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800fe86:	881b      	ldrh	r3, [r3, #0]
 800fe88:	4413      	add	r3, r2
 800fe8a:	4298      	cmp	r0, r3
 800fe8c:	bfac      	ite	ge
 800fe8e:	2000      	movge	r0, #0
 800fe90:	2001      	movlt	r0, #1
 800fe92:	4770      	bx	lr
 800fe94:	2000      	movs	r0, #0
 800fe96:	4770      	bx	lr
 800fe98:	200126c4 	.word	0x200126c4
 800fe9c:	200126c8 	.word	0x200126c8

0800fea0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800fea0:	b508      	push	{r3, lr}
 800fea2:	4601      	mov	r1, r0
 800fea4:	f7ff ffea 	bl	800fe7c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800fea8:	b118      	cbz	r0, 800feb2 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800feaa:	4b02      	ldr	r3, [pc, #8]	; (800feb4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800feac:	681b      	ldr	r3, [r3, #0]
 800feae:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800feb2:	bd08      	pop	{r3, pc}
 800feb4:	200126a8 	.word	0x200126a8

0800feb8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800feb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800feba:	4c24      	ldr	r4, [pc, #144]	; (800ff4c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 800febc:	6823      	ldr	r3, [r4, #0]
 800febe:	2b00      	cmp	r3, #0
 800fec0:	d042      	beq.n	800ff48 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800fec2:	4a23      	ldr	r2, [pc, #140]	; (800ff50 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 800fec4:	4d23      	ldr	r5, [pc, #140]	; (800ff54 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 800fec6:	8811      	ldrh	r1, [r2, #0]
 800fec8:	f8b5 c000 	ldrh.w	ip, [r5]
 800fecc:	4822      	ldr	r0, [pc, #136]	; (800ff58 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800fece:	4461      	add	r1, ip
 800fed0:	1c4a      	adds	r2, r1, #1
 800fed2:	f022 0201 	bic.w	r2, r2, #1
 800fed6:	008f      	lsls	r7, r1, #2
 800fed8:	0412      	lsls	r2, r2, #16
 800feda:	19de      	adds	r6, r3, r7
 800fedc:	0c12      	lsrs	r2, r2, #16
 800fede:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 800fee2:	6006      	str	r6, [r0, #0]
 800fee4:	4e1d      	ldr	r6, [pc, #116]	; (800ff5c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800fee6:	19da      	adds	r2, r3, r7
 800fee8:	6032      	str	r2, [r6, #0]
 800feea:	220e      	movs	r2, #14
 800feec:	fb02 f20c 	mul.w	r2, r2, ip
 800fef0:	3203      	adds	r2, #3
 800fef2:	f022 0203 	bic.w	r2, r2, #3
 800fef6:	443a      	add	r2, r7
 800fef8:	4f19      	ldr	r7, [pc, #100]	; (800ff60 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800fefa:	4413      	add	r3, r2
 800fefc:	603b      	str	r3, [r7, #0]
 800fefe:	4f19      	ldr	r7, [pc, #100]	; (800ff64 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800ff00:	2300      	movs	r3, #0
 800ff02:	803b      	strh	r3, [r7, #0]
 800ff04:	4f18      	ldr	r7, [pc, #96]	; (800ff68 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800ff06:	683f      	ldr	r7, [r7, #0]
 800ff08:	1aba      	subs	r2, r7, r2
 800ff0a:	4f18      	ldr	r7, [pc, #96]	; (800ff6c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800ff0c:	603a      	str	r2, [r7, #0]
 800ff0e:	4a18      	ldr	r2, [pc, #96]	; (800ff70 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800ff10:	469c      	mov	ip, r3
 800ff12:	8013      	strh	r3, [r2, #0]
 800ff14:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800ff18:	428b      	cmp	r3, r1
 800ff1a:	d10d      	bne.n	800ff38 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 800ff1c:	882d      	ldrh	r5, [r5, #0]
 800ff1e:	6830      	ldr	r0, [r6, #0]
 800ff20:	2300      	movs	r3, #0
 800ff22:	240e      	movs	r4, #14
 800ff24:	429d      	cmp	r5, r3
 800ff26:	d90f      	bls.n	800ff48 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800ff28:	fb04 0203 	mla	r2, r4, r3, r0
 800ff2c:	3301      	adds	r3, #1
 800ff2e:	7b11      	ldrb	r1, [r2, #12]
 800ff30:	f36f 1145 	bfc	r1, #5, #1
 800ff34:	7311      	strb	r1, [r2, #12]
 800ff36:	e7f5      	b.n	800ff24 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 800ff38:	6822      	ldr	r2, [r4, #0]
 800ff3a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800ff3e:	6802      	ldr	r2, [r0, #0]
 800ff40:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 800ff44:	3301      	adds	r3, #1
 800ff46:	e7e7      	b.n	800ff18 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 800ff48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ff4a:	bf00      	nop
 800ff4c:	200126a8 	.word	0x200126a8
 800ff50:	200126c4 	.word	0x200126c4
 800ff54:	200126c8 	.word	0x200126c8
 800ff58:	200126bc 	.word	0x200126bc
 800ff5c:	200126ac 	.word	0x200126ac
 800ff60:	200126b4 	.word	0x200126b4
 800ff64:	200126c6 	.word	0x200126c6
 800ff68:	200126b0 	.word	0x200126b0
 800ff6c:	200126c0 	.word	0x200126c0
 800ff70:	200126b8 	.word	0x200126b8

0800ff74 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800ff74:	4b06      	ldr	r3, [pc, #24]	; (800ff90 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 800ff76:	681b      	ldr	r3, [r3, #0]
 800ff78:	b943      	cbnz	r3, 800ff8c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800ff7a:	b139      	cbz	r1, 800ff8c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800ff7c:	4b05      	ldr	r3, [pc, #20]	; (800ff94 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 800ff7e:	801a      	strh	r2, [r3, #0]
 800ff80:	4b05      	ldr	r3, [pc, #20]	; (800ff98 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 800ff82:	6019      	str	r1, [r3, #0]
 800ff84:	4b05      	ldr	r3, [pc, #20]	; (800ff9c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 800ff86:	6018      	str	r0, [r3, #0]
 800ff88:	f7ff bf96 	b.w	800feb8 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800ff8c:	4770      	bx	lr
 800ff8e:	bf00      	nop
 800ff90:	200126b4 	.word	0x200126b4
 800ff94:	200126c8 	.word	0x200126c8
 800ff98:	200126b0 	.word	0x200126b0
 800ff9c:	200126a8 	.word	0x200126a8

0800ffa0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800ffa0:	b470      	push	{r4, r5, r6}
 800ffa2:	4c07      	ldr	r4, [pc, #28]	; (800ffc0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800ffa4:	6826      	ldr	r6, [r4, #0]
 800ffa6:	4605      	mov	r5, r0
 800ffa8:	4610      	mov	r0, r2
 800ffaa:	9a03      	ldr	r2, [sp, #12]
 800ffac:	b936      	cbnz	r6, 800ffbc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800ffae:	6025      	str	r5, [r4, #0]
 800ffb0:	4c04      	ldr	r4, [pc, #16]	; (800ffc4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800ffb2:	8021      	strh	r1, [r4, #0]
 800ffb4:	bc70      	pop	{r4, r5, r6}
 800ffb6:	4619      	mov	r1, r3
 800ffb8:	f7ff bfdc 	b.w	800ff74 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800ffbc:	bc70      	pop	{r4, r5, r6}
 800ffbe:	4770      	bx	lr
 800ffc0:	200126cc 	.word	0x200126cc
 800ffc4:	200126c4 	.word	0x200126c4

0800ffc8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800ffc8:	4a12      	ldr	r2, [pc, #72]	; (8010014 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 800ffca:	8803      	ldrh	r3, [r0, #0]
 800ffcc:	8812      	ldrh	r2, [r2, #0]
 800ffce:	4293      	cmp	r3, r2
 800ffd0:	d207      	bcs.n	800ffe2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 800ffd2:	4a11      	ldr	r2, [pc, #68]	; (8010018 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 800ffd4:	6812      	ldr	r2, [r2, #0]
 800ffd6:	2114      	movs	r1, #20
 800ffd8:	fb01 2303 	mla	r3, r1, r3, r2
 800ffdc:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 800ffe0:	4770      	bx	lr
 800ffe2:	490e      	ldr	r1, [pc, #56]	; (801001c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800ffe4:	8809      	ldrh	r1, [r1, #0]
 800ffe6:	4411      	add	r1, r2
 800ffe8:	428b      	cmp	r3, r1
 800ffea:	da04      	bge.n	800fff6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 800ffec:	1a9b      	subs	r3, r3, r2
 800ffee:	4a0c      	ldr	r2, [pc, #48]	; (8010020 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800fff0:	210e      	movs	r1, #14
 800fff2:	6812      	ldr	r2, [r2, #0]
 800fff4:	e7f0      	b.n	800ffd8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 800fff6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fffa:	4293      	cmp	r3, r2
 800fffc:	d108      	bne.n	8010010 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 800fffe:	4b09      	ldr	r3, [pc, #36]	; (8010024 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8010000:	781b      	ldrb	r3, [r3, #0]
 8010002:	b91b      	cbnz	r3, 801000c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8010004:	4b08      	ldr	r3, [pc, #32]	; (8010028 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8010006:	f9b3 0000 	ldrsh.w	r0, [r3]
 801000a:	4770      	bx	lr
 801000c:	4b07      	ldr	r3, [pc, #28]	; (801002c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801000e:	e7fa      	b.n	8010006 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8010010:	2000      	movs	r0, #0
 8010012:	4770      	bx	lr
 8010014:	200126c4 	.word	0x200126c4
 8010018:	200126cc 	.word	0x200126cc
 801001c:	200126c8 	.word	0x200126c8
 8010020:	200126ac 	.word	0x200126ac
 8010024:	2001263c 	.word	0x2001263c
 8010028:	2001263e 	.word	0x2001263e
 801002c:	20012640 	.word	0x20012640

08010030 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8010030:	4a12      	ldr	r2, [pc, #72]	; (801007c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8010032:	8803      	ldrh	r3, [r0, #0]
 8010034:	8812      	ldrh	r2, [r2, #0]
 8010036:	4293      	cmp	r3, r2
 8010038:	d207      	bcs.n	801004a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801003a:	4a11      	ldr	r2, [pc, #68]	; (8010080 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801003c:	6812      	ldr	r2, [r2, #0]
 801003e:	2114      	movs	r1, #20
 8010040:	fb01 2303 	mla	r3, r1, r3, r2
 8010044:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8010048:	4770      	bx	lr
 801004a:	490e      	ldr	r1, [pc, #56]	; (8010084 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801004c:	8809      	ldrh	r1, [r1, #0]
 801004e:	4411      	add	r1, r2
 8010050:	428b      	cmp	r3, r1
 8010052:	da04      	bge.n	801005e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8010054:	1a9b      	subs	r3, r3, r2
 8010056:	4a0c      	ldr	r2, [pc, #48]	; (8010088 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8010058:	210e      	movs	r1, #14
 801005a:	6812      	ldr	r2, [r2, #0]
 801005c:	e7f0      	b.n	8010040 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801005e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010062:	4293      	cmp	r3, r2
 8010064:	d108      	bne.n	8010078 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8010066:	4b09      	ldr	r3, [pc, #36]	; (801008c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8010068:	781b      	ldrb	r3, [r3, #0]
 801006a:	b91b      	cbnz	r3, 8010074 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801006c:	4b08      	ldr	r3, [pc, #32]	; (8010090 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801006e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8010072:	4770      	bx	lr
 8010074:	4b07      	ldr	r3, [pc, #28]	; (8010094 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8010076:	e7fa      	b.n	801006e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8010078:	2000      	movs	r0, #0
 801007a:	4770      	bx	lr
 801007c:	200126c4 	.word	0x200126c4
 8010080:	200126cc 	.word	0x200126cc
 8010084:	200126c8 	.word	0x200126c8
 8010088:	200126ac 	.word	0x200126ac
 801008c:	2001263c 	.word	0x2001263c
 8010090:	20012640 	.word	0x20012640
 8010094:	2001263e 	.word	0x2001263e

08010098 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8010098:	b510      	push	{r4, lr}
 801009a:	4a1f      	ldr	r2, [pc, #124]	; (8010118 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801009c:	880b      	ldrh	r3, [r1, #0]
 801009e:	8812      	ldrh	r2, [r2, #0]
 80100a0:	4293      	cmp	r3, r2
 80100a2:	d213      	bcs.n	80100cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80100a4:	4a1d      	ldr	r2, [pc, #116]	; (801011c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80100a6:	6812      	ldr	r2, [r2, #0]
 80100a8:	2114      	movs	r1, #20
 80100aa:	fb01 2303 	mla	r3, r1, r3, r2
 80100ae:	8a1a      	ldrh	r2, [r3, #16]
 80100b0:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80100b4:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80100b8:	8a5b      	ldrh	r3, [r3, #18]
 80100ba:	8004      	strh	r4, [r0, #0]
 80100bc:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80100c0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80100c4:	8041      	strh	r1, [r0, #2]
 80100c6:	8082      	strh	r2, [r0, #4]
 80100c8:	80c3      	strh	r3, [r0, #6]
 80100ca:	e00e      	b.n	80100ea <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80100cc:	4914      	ldr	r1, [pc, #80]	; (8010120 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80100ce:	8809      	ldrh	r1, [r1, #0]
 80100d0:	4411      	add	r1, r2
 80100d2:	428b      	cmp	r3, r1
 80100d4:	da0a      	bge.n	80100ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80100d6:	1a9b      	subs	r3, r3, r2
 80100d8:	4a12      	ldr	r2, [pc, #72]	; (8010124 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80100da:	6812      	ldr	r2, [r2, #0]
 80100dc:	210e      	movs	r1, #14
 80100de:	fb01 2303 	mla	r3, r1, r3, r2
 80100e2:	681a      	ldr	r2, [r3, #0]
 80100e4:	6002      	str	r2, [r0, #0]
 80100e6:	685a      	ldr	r2, [r3, #4]
 80100e8:	6042      	str	r2, [r0, #4]
 80100ea:	bd10      	pop	{r4, pc}
 80100ec:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80100f0:	4293      	cmp	r3, r2
 80100f2:	d10b      	bne.n	801010c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80100f4:	4b0c      	ldr	r3, [pc, #48]	; (8010128 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80100f6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80100fa:	4b0c      	ldr	r3, [pc, #48]	; (801012c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80100fc:	8081      	strh	r1, [r0, #4]
 80100fe:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010102:	80c2      	strh	r2, [r0, #6]
 8010104:	2300      	movs	r3, #0
 8010106:	8003      	strh	r3, [r0, #0]
 8010108:	8043      	strh	r3, [r0, #2]
 801010a:	e7ee      	b.n	80100ea <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801010c:	2300      	movs	r3, #0
 801010e:	8003      	strh	r3, [r0, #0]
 8010110:	8043      	strh	r3, [r0, #2]
 8010112:	8083      	strh	r3, [r0, #4]
 8010114:	e7d8      	b.n	80100c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8010116:	bf00      	nop
 8010118:	200126c4 	.word	0x200126c4
 801011c:	200126cc 	.word	0x200126cc
 8010120:	200126c8 	.word	0x200126c8
 8010124:	200126ac 	.word	0x200126ac
 8010128:	20012638 	.word	0x20012638
 801012c:	2001263a 	.word	0x2001263a

08010130 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8010130:	4a17      	ldr	r2, [pc, #92]	; (8010190 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8010132:	8803      	ldrh	r3, [r0, #0]
 8010134:	8812      	ldrh	r2, [r2, #0]
 8010136:	4293      	cmp	r3, r2
 8010138:	d213      	bcs.n	8010162 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801013a:	4a16      	ldr	r2, [pc, #88]	; (8010194 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801013c:	6812      	ldr	r2, [r2, #0]
 801013e:	2114      	movs	r1, #20
 8010140:	fb01 2303 	mla	r3, r1, r3, r2
 8010144:	8a1a      	ldrh	r2, [r3, #16]
 8010146:	8919      	ldrh	r1, [r3, #8]
 8010148:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801014c:	428a      	cmp	r2, r1
 801014e:	db1d      	blt.n	801018c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8010150:	8a58      	ldrh	r0, [r3, #18]
 8010152:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8010156:	895b      	ldrh	r3, [r3, #10]
 8010158:	4298      	cmp	r0, r3
 801015a:	bfac      	ite	ge
 801015c:	2000      	movge	r0, #0
 801015e:	2001      	movlt	r0, #1
 8010160:	4770      	bx	lr
 8010162:	490d      	ldr	r1, [pc, #52]	; (8010198 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8010164:	8809      	ldrh	r1, [r1, #0]
 8010166:	4411      	add	r1, r2
 8010168:	428b      	cmp	r3, r1
 801016a:	da0d      	bge.n	8010188 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801016c:	1a9b      	subs	r3, r3, r2
 801016e:	4a0b      	ldr	r2, [pc, #44]	; (801019c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8010170:	6812      	ldr	r2, [r2, #0]
 8010172:	210e      	movs	r1, #14
 8010174:	fb01 2303 	mla	r3, r1, r3, r2
 8010178:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801017c:	891a      	ldrh	r2, [r3, #8]
 801017e:	4291      	cmp	r1, r2
 8010180:	db04      	blt.n	801018c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8010182:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8010186:	e7e6      	b.n	8010156 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8010188:	2000      	movs	r0, #0
 801018a:	4770      	bx	lr
 801018c:	2001      	movs	r0, #1
 801018e:	4770      	bx	lr
 8010190:	200126c4 	.word	0x200126c4
 8010194:	200126cc 	.word	0x200126cc
 8010198:	200126c8 	.word	0x200126c8
 801019c:	200126ac 	.word	0x200126ac

080101a0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80101a0:	4a12      	ldr	r2, [pc, #72]	; (80101ec <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80101a2:	8803      	ldrh	r3, [r0, #0]
 80101a4:	8811      	ldrh	r1, [r2, #0]
 80101a6:	428b      	cmp	r3, r1
 80101a8:	d20b      	bcs.n	80101c2 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80101aa:	4a11      	ldr	r2, [pc, #68]	; (80101f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80101ac:	6812      	ldr	r2, [r2, #0]
 80101ae:	b112      	cbz	r2, 80101b6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80101b0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80101b4:	b9c0      	cbnz	r0, 80101e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80101b6:	4a0f      	ldr	r2, [pc, #60]	; (80101f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80101b8:	6811      	ldr	r1, [r2, #0]
 80101ba:	2214      	movs	r2, #20
 80101bc:	4353      	muls	r3, r2
 80101be:	58c8      	ldr	r0, [r1, r3]
 80101c0:	4770      	bx	lr
 80101c2:	4a0d      	ldr	r2, [pc, #52]	; (80101f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80101c4:	8812      	ldrh	r2, [r2, #0]
 80101c6:	440a      	add	r2, r1
 80101c8:	4293      	cmp	r3, r2
 80101ca:	da04      	bge.n	80101d6 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80101cc:	4a08      	ldr	r2, [pc, #32]	; (80101f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80101ce:	6812      	ldr	r2, [r2, #0]
 80101d0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80101d4:	4770      	bx	lr
 80101d6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80101da:	4293      	cmp	r3, r2
 80101dc:	d103      	bne.n	80101e6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80101de:	4b07      	ldr	r3, [pc, #28]	; (80101fc <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80101e0:	681b      	ldr	r3, [r3, #0]
 80101e2:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80101e4:	4770      	bx	lr
 80101e6:	2000      	movs	r0, #0
 80101e8:	4770      	bx	lr
 80101ea:	bf00      	nop
 80101ec:	200126c4 	.word	0x200126c4
 80101f0:	200126a8 	.word	0x200126a8
 80101f4:	200126cc 	.word	0x200126cc
 80101f8:	200126c8 	.word	0x200126c8
 80101fc:	20012644 	.word	0x20012644

08010200 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8010200:	4b24      	ldr	r3, [pc, #144]	; (8010294 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8010202:	8802      	ldrh	r2, [r0, #0]
 8010204:	8818      	ldrh	r0, [r3, #0]
 8010206:	4282      	cmp	r2, r0
 8010208:	d221      	bcs.n	801024e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801020a:	4b23      	ldr	r3, [pc, #140]	; (8010298 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801020c:	6819      	ldr	r1, [r3, #0]
 801020e:	2314      	movs	r3, #20
 8010210:	fb03 1302 	mla	r3, r3, r2, r1
 8010214:	6858      	ldr	r0, [r3, #4]
 8010216:	2800      	cmp	r0, #0
 8010218:	d03a      	beq.n	8010290 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801021a:	4920      	ldr	r1, [pc, #128]	; (801029c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801021c:	6809      	ldr	r1, [r1, #0]
 801021e:	2900      	cmp	r1, #0
 8010220:	d036      	beq.n	8010290 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8010222:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8010226:	2900      	cmp	r1, #0
 8010228:	d032      	beq.n	8010290 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801022a:	891a      	ldrh	r2, [r3, #8]
 801022c:	8958      	ldrh	r0, [r3, #10]
 801022e:	4350      	muls	r0, r2
 8010230:	7c5a      	ldrb	r2, [r3, #17]
 8010232:	7cdb      	ldrb	r3, [r3, #19]
 8010234:	0952      	lsrs	r2, r2, #5
 8010236:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801023a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801023e:	2b0b      	cmp	r3, #11
 8010240:	bf18      	it	ne
 8010242:	0040      	lslne	r0, r0, #1
 8010244:	3003      	adds	r0, #3
 8010246:	f020 0003 	bic.w	r0, r0, #3
 801024a:	4408      	add	r0, r1
 801024c:	4770      	bx	lr
 801024e:	4b14      	ldr	r3, [pc, #80]	; (80102a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8010250:	881b      	ldrh	r3, [r3, #0]
 8010252:	4403      	add	r3, r0
 8010254:	429a      	cmp	r2, r3
 8010256:	da1a      	bge.n	801028e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010258:	4b12      	ldr	r3, [pc, #72]	; (80102a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801025a:	681b      	ldr	r3, [r3, #0]
 801025c:	1a10      	subs	r0, r2, r0
 801025e:	210e      	movs	r1, #14
 8010260:	fb01 3000 	mla	r0, r1, r0, r3
 8010264:	7b03      	ldrb	r3, [r0, #12]
 8010266:	f003 031f 	and.w	r3, r3, #31
 801026a:	2b0b      	cmp	r3, #11
 801026c:	d10b      	bne.n	8010286 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801026e:	8903      	ldrh	r3, [r0, #8]
 8010270:	8940      	ldrh	r0, [r0, #10]
 8010272:	4358      	muls	r0, r3
 8010274:	4b09      	ldr	r3, [pc, #36]	; (801029c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8010276:	6819      	ldr	r1, [r3, #0]
 8010278:	3003      	adds	r0, #3
 801027a:	f020 0303 	bic.w	r3, r0, #3
 801027e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8010282:	4418      	add	r0, r3
 8010284:	4770      	bx	lr
 8010286:	2b0d      	cmp	r3, #13
 8010288:	d101      	bne.n	801028e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801028a:	300d      	adds	r0, #13
 801028c:	4770      	bx	lr
 801028e:	2000      	movs	r0, #0
 8010290:	4770      	bx	lr
 8010292:	bf00      	nop
 8010294:	200126c4 	.word	0x200126c4
 8010298:	200126cc 	.word	0x200126cc
 801029c:	200126a8 	.word	0x200126a8
 80102a0:	200126c8 	.word	0x200126c8
 80102a4:	200126ac 	.word	0x200126ac

080102a8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80102a8:	b510      	push	{r4, lr}
 80102aa:	4a17      	ldr	r2, [pc, #92]	; (8010308 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80102ac:	8803      	ldrh	r3, [r0, #0]
 80102ae:	8812      	ldrh	r2, [r2, #0]
 80102b0:	4293      	cmp	r3, r2
 80102b2:	d20c      	bcs.n	80102ce <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80102b4:	4a15      	ldr	r2, [pc, #84]	; (801030c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80102b6:	6812      	ldr	r2, [r2, #0]
 80102b8:	2114      	movs	r1, #20
 80102ba:	fb01 2303 	mla	r3, r1, r3, r2
 80102be:	7c58      	ldrb	r0, [r3, #17]
 80102c0:	0942      	lsrs	r2, r0, #5
 80102c2:	7cd8      	ldrb	r0, [r3, #19]
 80102c4:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80102c8:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80102cc:	bd10      	pop	{r4, pc}
 80102ce:	4910      	ldr	r1, [pc, #64]	; (8010310 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80102d0:	8809      	ldrh	r1, [r1, #0]
 80102d2:	4411      	add	r1, r2
 80102d4:	428b      	cmp	r3, r1
 80102d6:	da09      	bge.n	80102ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80102d8:	1a9b      	subs	r3, r3, r2
 80102da:	4a0e      	ldr	r2, [pc, #56]	; (8010314 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80102dc:	6812      	ldr	r2, [r2, #0]
 80102de:	210e      	movs	r1, #14
 80102e0:	fb01 2303 	mla	r3, r1, r3, r2
 80102e4:	7b18      	ldrb	r0, [r3, #12]
 80102e6:	f000 001f 	and.w	r0, r0, #31
 80102ea:	e7ef      	b.n	80102cc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80102ec:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80102f0:	4293      	cmp	r3, r2
 80102f2:	d106      	bne.n	8010302 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80102f4:	f7f2 fbd6 	bl	8002aa4 <_ZN8touchgfx3HAL3lcdEv>
 80102f8:	6803      	ldr	r3, [r0, #0]
 80102fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80102fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010300:	4718      	bx	r3
 8010302:	2000      	movs	r0, #0
 8010304:	e7e2      	b.n	80102cc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8010306:	bf00      	nop
 8010308:	200126c4 	.word	0x200126c4
 801030c:	200126cc 	.word	0x200126cc
 8010310:	200126c8 	.word	0x200126c8
 8010314:	200126ac 	.word	0x200126ac

08010318 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8010318:	2010      	movs	r0, #16
 801031a:	4770      	bx	lr

0801031c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801031c:	2000      	movs	r0, #0
 801031e:	4770      	bx	lr

08010320 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8010320:	4b02      	ldr	r3, [pc, #8]	; (801032c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8010322:	8818      	ldrh	r0, [r3, #0]
 8010324:	0040      	lsls	r0, r0, #1
 8010326:	b280      	uxth	r0, r0
 8010328:	4770      	bx	lr
 801032a:	bf00      	nop
 801032c:	2001263e 	.word	0x2001263e

08010330 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8010330:	2bff      	cmp	r3, #255	; 0xff
 8010332:	d050      	beq.n	80103d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8010334:	2a0b      	cmp	r2, #11
 8010336:	d04a      	beq.n	80103ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8010338:	d80e      	bhi.n	8010358 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801033a:	2a03      	cmp	r2, #3
 801033c:	d03f      	beq.n	80103be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801033e:	d804      	bhi.n	801034a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8010340:	2a01      	cmp	r2, #1
 8010342:	d03e      	beq.n	80103c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8010344:	d93f      	bls.n	80103c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8010346:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8010348:	4770      	bx	lr
 801034a:	2a09      	cmp	r2, #9
 801034c:	d03f      	beq.n	80103ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801034e:	d83c      	bhi.n	80103ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8010350:	2a08      	cmp	r2, #8
 8010352:	d03a      	beq.n	80103ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8010354:	2000      	movs	r0, #0
 8010356:	4770      	bx	lr
 8010358:	2a2f      	cmp	r2, #47	; 0x2f
 801035a:	d024      	beq.n	80103a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801035c:	d80d      	bhi.n	801037a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801035e:	2a2d      	cmp	r2, #45	; 0x2d
 8010360:	d014      	beq.n	801038c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8010362:	d826      	bhi.n	80103b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8010364:	2a2c      	cmp	r2, #44	; 0x2c
 8010366:	d1f5      	bne.n	8010354 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010368:	684b      	ldr	r3, [r1, #4]
 801036a:	781b      	ldrb	r3, [r3, #0]
 801036c:	2b01      	cmp	r3, #1
 801036e:	d018      	beq.n	80103a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8010370:	d323      	bcc.n	80103ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8010372:	2b02      	cmp	r3, #2
 8010374:	d1ee      	bne.n	8010354 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010376:	6880      	ldr	r0, [r0, #8]
 8010378:	4770      	bx	lr
 801037a:	2a31      	cmp	r2, #49	; 0x31
 801037c:	d004      	beq.n	8010388 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801037e:	d328      	bcc.n	80103d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8010380:	2a32      	cmp	r2, #50	; 0x32
 8010382:	d026      	beq.n	80103d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8010384:	2a33      	cmp	r2, #51	; 0x33
 8010386:	d1e5      	bne.n	8010354 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010388:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801038a:	4770      	bx	lr
 801038c:	684b      	ldr	r3, [r1, #4]
 801038e:	781b      	ldrb	r3, [r3, #0]
 8010390:	2b01      	cmp	r3, #1
 8010392:	d004      	beq.n	801039e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8010394:	d30b      	bcc.n	80103ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8010396:	2b02      	cmp	r3, #2
 8010398:	d1dc      	bne.n	8010354 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801039a:	6900      	ldr	r0, [r0, #16]
 801039c:	4770      	bx	lr
 801039e:	6a00      	ldr	r0, [r0, #32]
 80103a0:	4770      	bx	lr
 80103a2:	6980      	ldr	r0, [r0, #24]
 80103a4:	4770      	bx	lr
 80103a6:	684b      	ldr	r3, [r1, #4]
 80103a8:	781b      	ldrb	r3, [r3, #0]
 80103aa:	2b00      	cmp	r3, #0
 80103ac:	d1d2      	bne.n	8010354 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80103ae:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80103b0:	4770      	bx	lr
 80103b2:	684b      	ldr	r3, [r1, #4]
 80103b4:	781b      	ldrb	r3, [r3, #0]
 80103b6:	2b00      	cmp	r3, #0
 80103b8:	d1cc      	bne.n	8010354 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80103ba:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80103bc:	4770      	bx	lr
 80103be:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80103c0:	4770      	bx	lr
 80103c2:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80103c4:	4770      	bx	lr
 80103c6:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80103c8:	4770      	bx	lr
 80103ca:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80103cc:	4770      	bx	lr
 80103ce:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80103d0:	4770      	bx	lr
 80103d2:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80103d4:	4770      	bx	lr
 80103d6:	2a0b      	cmp	r2, #11
 80103d8:	d049      	beq.n	801046e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80103da:	d80e      	bhi.n	80103fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80103dc:	2a03      	cmp	r2, #3
 80103de:	d040      	beq.n	8010462 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80103e0:	d804      	bhi.n	80103ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80103e2:	2a01      	cmp	r2, #1
 80103e4:	d03f      	beq.n	8010466 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80103e6:	d940      	bls.n	801046a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80103e8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80103ea:	4770      	bx	lr
 80103ec:	2a09      	cmp	r2, #9
 80103ee:	d03e      	beq.n	801046e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80103f0:	d801      	bhi.n	80103f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80103f2:	2a08      	cmp	r2, #8
 80103f4:	d1ae      	bne.n	8010354 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80103f6:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80103f8:	4770      	bx	lr
 80103fa:	2a2f      	cmp	r2, #47	; 0x2f
 80103fc:	d024      	beq.n	8010448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80103fe:	d80d      	bhi.n	801041c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8010400:	2a2d      	cmp	r2, #45	; 0x2d
 8010402:	d014      	beq.n	801042e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8010404:	d826      	bhi.n	8010454 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8010406:	2a2c      	cmp	r2, #44	; 0x2c
 8010408:	d1a4      	bne.n	8010354 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801040a:	684b      	ldr	r3, [r1, #4]
 801040c:	781b      	ldrb	r3, [r3, #0]
 801040e:	2b01      	cmp	r3, #1
 8010410:	d018      	beq.n	8010444 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8010412:	d324      	bcc.n	801045e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8010414:	2b02      	cmp	r3, #2
 8010416:	d19d      	bne.n	8010354 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010418:	68c0      	ldr	r0, [r0, #12]
 801041a:	4770      	bx	lr
 801041c:	2a31      	cmp	r2, #49	; 0x31
 801041e:	d004      	beq.n	801042a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8010420:	d327      	bcc.n	8010472 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8010422:	2a32      	cmp	r2, #50	; 0x32
 8010424:	d025      	beq.n	8010472 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8010426:	2a33      	cmp	r2, #51	; 0x33
 8010428:	d194      	bne.n	8010354 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801042a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801042c:	4770      	bx	lr
 801042e:	684b      	ldr	r3, [r1, #4]
 8010430:	781b      	ldrb	r3, [r3, #0]
 8010432:	2b01      	cmp	r3, #1
 8010434:	d004      	beq.n	8010440 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8010436:	d30b      	bcc.n	8010450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8010438:	2b02      	cmp	r3, #2
 801043a:	d18b      	bne.n	8010354 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801043c:	6940      	ldr	r0, [r0, #20]
 801043e:	4770      	bx	lr
 8010440:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8010442:	4770      	bx	lr
 8010444:	69c0      	ldr	r0, [r0, #28]
 8010446:	4770      	bx	lr
 8010448:	684b      	ldr	r3, [r1, #4]
 801044a:	781b      	ldrb	r3, [r3, #0]
 801044c:	2b00      	cmp	r3, #0
 801044e:	d181      	bne.n	8010354 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010450:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8010452:	4770      	bx	lr
 8010454:	684b      	ldr	r3, [r1, #4]
 8010456:	781b      	ldrb	r3, [r3, #0]
 8010458:	2b00      	cmp	r3, #0
 801045a:	f47f af7b 	bne.w	8010354 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801045e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8010460:	4770      	bx	lr
 8010462:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8010464:	4770      	bx	lr
 8010466:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8010468:	4770      	bx	lr
 801046a:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801046c:	4770      	bx	lr
 801046e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8010470:	4770      	bx	lr
 8010472:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8010474:	4770      	bx	lr

08010476 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010476:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801047a:	b087      	sub	sp, #28
 801047c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801047e:	9205      	str	r2, [sp, #20]
 8010480:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010484:	9202      	str	r2, [sp, #8]
 8010486:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801048a:	9101      	str	r1, [sp, #4]
 801048c:	6841      	ldr	r1, [r0, #4]
 801048e:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8010492:	fb01 2404 	mla	r4, r1, r4, r2
 8010496:	6802      	ldr	r2, [r0, #0]
 8010498:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801049c:	f8de 2000 	ldr.w	r2, [lr]
 80104a0:	9203      	str	r2, [sp, #12]
 80104a2:	f8de 2004 	ldr.w	r2, [lr, #4]
 80104a6:	3204      	adds	r2, #4
 80104a8:	9204      	str	r2, [sp, #16]
 80104aa:	9a02      	ldr	r2, [sp, #8]
 80104ac:	43d6      	mvns	r6, r2
 80104ae:	b2f6      	uxtb	r6, r6
 80104b0:	9a01      	ldr	r2, [sp, #4]
 80104b2:	2a00      	cmp	r2, #0
 80104b4:	dc03      	bgt.n	80104be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80104b6:	9a05      	ldr	r2, [sp, #20]
 80104b8:	2a00      	cmp	r2, #0
 80104ba:	f340 8129 	ble.w	8010710 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80104be:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80104c0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80104c4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80104c8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80104cc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80104ce:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80104d2:	2b00      	cmp	r3, #0
 80104d4:	dd0e      	ble.n	80104f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80104d6:	1408      	asrs	r0, r1, #16
 80104d8:	d405      	bmi.n	80104e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80104da:	4560      	cmp	r0, ip
 80104dc:	da03      	bge.n	80104e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80104de:	1410      	asrs	r0, r2, #16
 80104e0:	d401      	bmi.n	80104e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80104e2:	42b8      	cmp	r0, r7
 80104e4:	db07      	blt.n	80104f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80104e6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80104e8:	4401      	add	r1, r0
 80104ea:	9814      	ldr	r0, [sp, #80]	; 0x50
 80104ec:	3b01      	subs	r3, #1
 80104ee:	4402      	add	r2, r0
 80104f0:	3402      	adds	r4, #2
 80104f2:	e7ee      	b.n	80104d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80104f4:	d071      	beq.n	80105da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80104f6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80104f8:	1e58      	subs	r0, r3, #1
 80104fa:	fb05 1500 	mla	r5, r5, r0, r1
 80104fe:	142d      	asrs	r5, r5, #16
 8010500:	d45f      	bmi.n	80105c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010502:	4565      	cmp	r5, ip
 8010504:	da5d      	bge.n	80105c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010506:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010508:	fb05 2000 	mla	r0, r5, r0, r2
 801050c:	1400      	asrs	r0, r0, #16
 801050e:	d458      	bmi.n	80105c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010510:	42b8      	cmp	r0, r7
 8010512:	da56      	bge.n	80105c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010514:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8010518:	4699      	mov	r9, r3
 801051a:	46a2      	mov	sl, r4
 801051c:	f1b9 0f00 	cmp.w	r9, #0
 8010520:	dd57      	ble.n	80105d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8010522:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010526:	9803      	ldr	r0, [sp, #12]
 8010528:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801052c:	140d      	asrs	r5, r1, #16
 801052e:	fb07 000c 	mla	r0, r7, ip, r0
 8010532:	f109 39ff 	add.w	r9, r9, #4294967295
 8010536:	5d40      	ldrb	r0, [r0, r5]
 8010538:	9d04      	ldr	r5, [sp, #16]
 801053a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801053e:	f8ba 5000 	ldrh.w	r5, [sl]
 8010542:	122f      	asrs	r7, r5, #8
 8010544:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010548:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801054c:	fb17 f706 	smulbb	r7, r7, r6
 8010550:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8010554:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010558:	00ed      	lsls	r5, r5, #3
 801055a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801055e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8010562:	10c7      	asrs	r7, r0, #3
 8010564:	b2ed      	uxtb	r5, r5
 8010566:	00c0      	lsls	r0, r0, #3
 8010568:	fb18 f806 	smulbb	r8, r8, r6
 801056c:	fb15 f506 	smulbb	r5, r5, r6
 8010570:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010574:	b2c0      	uxtb	r0, r0
 8010576:	fa1f fc8c 	uxth.w	ip, ip
 801057a:	fb07 870b 	mla	r7, r7, fp, r8
 801057e:	fb00 500b 	mla	r0, r0, fp, r5
 8010582:	b280      	uxth	r0, r0
 8010584:	b2bf      	uxth	r7, r7
 8010586:	f10c 0501 	add.w	r5, ip, #1
 801058a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801058e:	f107 0801 	add.w	r8, r7, #1
 8010592:	1c45      	adds	r5, r0, #1
 8010594:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8010598:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801059c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801059e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80105a2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80105a6:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80105aa:	ea45 0c0c 	orr.w	ip, r5, ip
 80105ae:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80105b2:	4401      	add	r1, r0
 80105b4:	9814      	ldr	r0, [sp, #80]	; 0x50
 80105b6:	ea4c 0c08 	orr.w	ip, ip, r8
 80105ba:	f82a cb02 	strh.w	ip, [sl], #2
 80105be:	4402      	add	r2, r0
 80105c0:	e7ac      	b.n	801051c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80105c2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80105c6:	f04f 0800 	mov.w	r8, #0
 80105ca:	eb03 0008 	add.w	r0, r3, r8
 80105ce:	2800      	cmp	r0, #0
 80105d0:	dc41      	bgt.n	8010656 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80105d2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80105d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80105da:	9b01      	ldr	r3, [sp, #4]
 80105dc:	2b00      	cmp	r3, #0
 80105de:	f340 8097 	ble.w	8010710 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80105e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80105e6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80105ea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80105ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80105f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80105f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80105f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80105fc:	eef0 6a62 	vmov.f32	s13, s5
 8010600:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010604:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010608:	ee77 2a62 	vsub.f32	s5, s14, s5
 801060c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8010610:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010614:	eef0 6a43 	vmov.f32	s13, s6
 8010618:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801061c:	ee12 2a90 	vmov	r2, s5
 8010620:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010624:	fb92 f3f3 	sdiv	r3, r2, r3
 8010628:	ee13 2a10 	vmov	r2, s6
 801062c:	9313      	str	r3, [sp, #76]	; 0x4c
 801062e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010630:	fb92 f3f3 	sdiv	r3, r2, r3
 8010634:	9314      	str	r3, [sp, #80]	; 0x50
 8010636:	9b01      	ldr	r3, [sp, #4]
 8010638:	9a05      	ldr	r2, [sp, #20]
 801063a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801063e:	3b01      	subs	r3, #1
 8010640:	9301      	str	r3, [sp, #4]
 8010642:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8010646:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010648:	eeb0 3a67 	vmov.f32	s6, s15
 801064c:	bf08      	it	eq
 801064e:	4613      	moveq	r3, r2
 8010650:	eef0 2a47 	vmov.f32	s5, s14
 8010654:	e72c      	b.n	80104b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8010656:	140f      	asrs	r7, r1, #16
 8010658:	d453      	bmi.n	8010702 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801065a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801065e:	42bd      	cmp	r5, r7
 8010660:	dd4f      	ble.n	8010702 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010662:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010666:	d44c      	bmi.n	8010702 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010668:	f8de 000c 	ldr.w	r0, [lr, #12]
 801066c:	4560      	cmp	r0, ip
 801066e:	dd48      	ble.n	8010702 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010670:	9803      	ldr	r0, [sp, #12]
 8010672:	b22d      	sxth	r5, r5
 8010674:	fb0c 0505 	mla	r5, ip, r5, r0
 8010678:	5de8      	ldrb	r0, [r5, r7]
 801067a:	9d04      	ldr	r5, [sp, #16]
 801067c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8010680:	f06f 0501 	mvn.w	r5, #1
 8010684:	fb05 fb08 	mul.w	fp, r5, r8
 8010688:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801068c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8010690:	122f      	asrs	r7, r5, #8
 8010692:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010696:	fb17 f706 	smulbb	r7, r7, r6
 801069a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801069e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80106a2:	00ed      	lsls	r5, r5, #3
 80106a4:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80106a8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80106ac:	10c7      	asrs	r7, r0, #3
 80106ae:	b2ed      	uxtb	r5, r5
 80106b0:	00c0      	lsls	r0, r0, #3
 80106b2:	fb19 f906 	smulbb	r9, r9, r6
 80106b6:	fb15 f506 	smulbb	r5, r5, r6
 80106ba:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80106be:	b2c0      	uxtb	r0, r0
 80106c0:	fa1f fc8c 	uxth.w	ip, ip
 80106c4:	fb07 970a 	mla	r7, r7, sl, r9
 80106c8:	fb00 500a 	mla	r0, r0, sl, r5
 80106cc:	b2bf      	uxth	r7, r7
 80106ce:	b280      	uxth	r0, r0
 80106d0:	f10c 0501 	add.w	r5, ip, #1
 80106d4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80106d8:	f107 0901 	add.w	r9, r7, #1
 80106dc:	1c45      	adds	r5, r0, #1
 80106de:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80106e2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80106e6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80106ea:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80106ee:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80106f2:	ea45 0c0c 	orr.w	ip, r5, ip
 80106f6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80106fa:	ea4c 0c09 	orr.w	ip, ip, r9
 80106fe:	f824 c00b 	strh.w	ip, [r4, fp]
 8010702:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010704:	4401      	add	r1, r0
 8010706:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010708:	f108 38ff 	add.w	r8, r8, #4294967295
 801070c:	4402      	add	r2, r0
 801070e:	e75c      	b.n	80105ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8010710:	b007      	add	sp, #28
 8010712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010716 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010716:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801071a:	b085      	sub	sp, #20
 801071c:	4693      	mov	fp, r2
 801071e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010720:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8010722:	6870      	ldr	r0, [r6, #4]
 8010724:	9100      	str	r1, [sp, #0]
 8010726:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801072a:	fb00 2404 	mla	r4, r0, r4, r2
 801072e:	6832      	ldr	r2, [r6, #0]
 8010730:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010734:	682a      	ldr	r2, [r5, #0]
 8010736:	9201      	str	r2, [sp, #4]
 8010738:	686a      	ldr	r2, [r5, #4]
 801073a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801073e:	3204      	adds	r2, #4
 8010740:	9202      	str	r2, [sp, #8]
 8010742:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010746:	9a00      	ldr	r2, [sp, #0]
 8010748:	2a00      	cmp	r2, #0
 801074a:	dc03      	bgt.n	8010754 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801074c:	f1bb 0f00 	cmp.w	fp, #0
 8010750:	f340 80a0 	ble.w	8010894 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8010754:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010756:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801075a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801075e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010762:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010764:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010768:	2b00      	cmp	r3, #0
 801076a:	dd0c      	ble.n	8010786 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801076c:	1406      	asrs	r6, r0, #16
 801076e:	d405      	bmi.n	801077c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010770:	454e      	cmp	r6, r9
 8010772:	da03      	bge.n	801077c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010774:	1416      	asrs	r6, r2, #16
 8010776:	d401      	bmi.n	801077c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010778:	4546      	cmp	r6, r8
 801077a:	db05      	blt.n	8010788 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801077c:	4470      	add	r0, lr
 801077e:	4462      	add	r2, ip
 8010780:	3b01      	subs	r3, #1
 8010782:	3402      	adds	r4, #2
 8010784:	e7f0      	b.n	8010768 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8010786:	d00f      	beq.n	80107a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8010788:	1e5e      	subs	r6, r3, #1
 801078a:	fb0e 0706 	mla	r7, lr, r6, r0
 801078e:	143f      	asrs	r7, r7, #16
 8010790:	d541      	bpl.n	8010816 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8010792:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8010796:	4698      	mov	r8, r3
 8010798:	9603      	str	r6, [sp, #12]
 801079a:	f1b8 0f00 	cmp.w	r8, #0
 801079e:	dc59      	bgt.n	8010854 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80107a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80107a4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80107a8:	9b00      	ldr	r3, [sp, #0]
 80107aa:	2b00      	cmp	r3, #0
 80107ac:	dd72      	ble.n	8010894 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80107ae:	ee30 0a04 	vadd.f32	s0, s0, s8
 80107b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80107b6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80107ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80107bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80107c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80107c4:	eeb0 6a62 	vmov.f32	s12, s5
 80107c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80107cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80107d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80107d4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80107d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80107dc:	eeb0 6a43 	vmov.f32	s12, s6
 80107e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80107e4:	ee12 2a90 	vmov	r2, s5
 80107e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80107ec:	fb92 fef3 	sdiv	lr, r2, r3
 80107f0:	ee13 2a10 	vmov	r2, s6
 80107f4:	fb92 fcf3 	sdiv	ip, r2, r3
 80107f8:	9b00      	ldr	r3, [sp, #0]
 80107fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80107fe:	3b01      	subs	r3, #1
 8010800:	9300      	str	r3, [sp, #0]
 8010802:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010806:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010808:	eeb0 3a67 	vmov.f32	s6, s15
 801080c:	bf08      	it	eq
 801080e:	465b      	moveq	r3, fp
 8010810:	eef0 2a47 	vmov.f32	s5, s14
 8010814:	e797      	b.n	8010746 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8010816:	454f      	cmp	r7, r9
 8010818:	dabb      	bge.n	8010792 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801081a:	fb0c 2606 	mla	r6, ip, r6, r2
 801081e:	1436      	asrs	r6, r6, #16
 8010820:	d4b7      	bmi.n	8010792 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010822:	4546      	cmp	r6, r8
 8010824:	dab5      	bge.n	8010792 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010826:	461e      	mov	r6, r3
 8010828:	46a0      	mov	r8, r4
 801082a:	2e00      	cmp	r6, #0
 801082c:	ddb8      	ble.n	80107a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801082e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8010832:	9901      	ldr	r1, [sp, #4]
 8010834:	1417      	asrs	r7, r2, #16
 8010836:	ea4f 4920 	mov.w	r9, r0, asr #16
 801083a:	fb0a 1707 	mla	r7, sl, r7, r1
 801083e:	9902      	ldr	r1, [sp, #8]
 8010840:	f817 7009 	ldrb.w	r7, [r7, r9]
 8010844:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8010848:	f828 7b02 	strh.w	r7, [r8], #2
 801084c:	4470      	add	r0, lr
 801084e:	4462      	add	r2, ip
 8010850:	3e01      	subs	r6, #1
 8010852:	e7ea      	b.n	801082a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8010854:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010858:	d417      	bmi.n	801088a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801085a:	68ae      	ldr	r6, [r5, #8]
 801085c:	454e      	cmp	r6, r9
 801085e:	dd14      	ble.n	801088a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010860:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8010864:	d411      	bmi.n	801088a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010866:	68ef      	ldr	r7, [r5, #12]
 8010868:	4557      	cmp	r7, sl
 801086a:	dd0e      	ble.n	801088a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801086c:	9f01      	ldr	r7, [sp, #4]
 801086e:	b236      	sxth	r6, r6
 8010870:	fb0a 7606 	mla	r6, sl, r6, r7
 8010874:	9f02      	ldr	r7, [sp, #8]
 8010876:	f816 6009 	ldrb.w	r6, [r6, r9]
 801087a:	f06f 0101 	mvn.w	r1, #1
 801087e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8010882:	fb01 f608 	mul.w	r6, r1, r8
 8010886:	9903      	ldr	r1, [sp, #12]
 8010888:	538f      	strh	r7, [r1, r6]
 801088a:	4470      	add	r0, lr
 801088c:	4462      	add	r2, ip
 801088e:	f108 38ff 	add.w	r8, r8, #4294967295
 8010892:	e782      	b.n	801079a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010894:	b005      	add	sp, #20
 8010896:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801089a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801089a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801089e:	b087      	sub	sp, #28
 80108a0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80108a2:	9205      	str	r2, [sp, #20]
 80108a4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80108a8:	9203      	str	r2, [sp, #12]
 80108aa:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80108ae:	9102      	str	r1, [sp, #8]
 80108b0:	6861      	ldr	r1, [r4, #4]
 80108b2:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80108b6:	fb01 2000 	mla	r0, r1, r0, r2
 80108ba:	6822      	ldr	r2, [r4, #0]
 80108bc:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80108c0:	9200      	str	r2, [sp, #0]
 80108c2:	f8dc 2000 	ldr.w	r2, [ip]
 80108c6:	9204      	str	r2, [sp, #16]
 80108c8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80108cc:	3204      	adds	r2, #4
 80108ce:	9201      	str	r2, [sp, #4]
 80108d0:	9a03      	ldr	r2, [sp, #12]
 80108d2:	43d5      	mvns	r5, r2
 80108d4:	b2ed      	uxtb	r5, r5
 80108d6:	9a02      	ldr	r2, [sp, #8]
 80108d8:	2a00      	cmp	r2, #0
 80108da:	dc03      	bgt.n	80108e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80108dc:	9a05      	ldr	r2, [sp, #20]
 80108de:	2a00      	cmp	r2, #0
 80108e0:	f340 812c 	ble.w	8010b3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80108e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80108e6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80108ea:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80108ee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80108f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80108f4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80108f8:	2b00      	cmp	r3, #0
 80108fa:	dd10      	ble.n	801091e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80108fc:	140c      	asrs	r4, r1, #16
 80108fe:	d405      	bmi.n	801090c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010900:	4574      	cmp	r4, lr
 8010902:	da03      	bge.n	801090c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010904:	1414      	asrs	r4, r2, #16
 8010906:	d401      	bmi.n	801090c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010908:	42bc      	cmp	r4, r7
 801090a:	db09      	blt.n	8010920 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801090c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801090e:	9800      	ldr	r0, [sp, #0]
 8010910:	4421      	add	r1, r4
 8010912:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010914:	3002      	adds	r0, #2
 8010916:	4422      	add	r2, r4
 8010918:	3b01      	subs	r3, #1
 801091a:	9000      	str	r0, [sp, #0]
 801091c:	e7ec      	b.n	80108f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801091e:	d071      	beq.n	8010a04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8010920:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010922:	1e5c      	subs	r4, r3, #1
 8010924:	fb06 1604 	mla	r6, r6, r4, r1
 8010928:	1436      	asrs	r6, r6, #16
 801092a:	d45d      	bmi.n	80109e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801092c:	4576      	cmp	r6, lr
 801092e:	da5b      	bge.n	80109e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010930:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8010932:	fb06 2404 	mla	r4, r6, r4, r2
 8010936:	1424      	asrs	r4, r4, #16
 8010938:	d456      	bmi.n	80109e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801093a:	42bc      	cmp	r4, r7
 801093c:	da54      	bge.n	80109e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801093e:	f8dd 9000 	ldr.w	r9, [sp]
 8010942:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8010946:	4698      	mov	r8, r3
 8010948:	f1b8 0f00 	cmp.w	r8, #0
 801094c:	dd54      	ble.n	80109f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801094e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010952:	9804      	ldr	r0, [sp, #16]
 8010954:	1414      	asrs	r4, r2, #16
 8010956:	fb07 0404 	mla	r4, r7, r4, r0
 801095a:	140e      	asrs	r6, r1, #16
 801095c:	9801      	ldr	r0, [sp, #4]
 801095e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8010962:	f8b9 4000 	ldrh.w	r4, [r9]
 8010966:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801096a:	eb00 0b0e 	add.w	fp, r0, lr
 801096e:	1227      	asrs	r7, r4, #8
 8010970:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010974:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010978:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801097c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801097e:	fb16 f60a 	smulbb	r6, r6, sl
 8010982:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010986:	fb07 6705 	mla	r7, r7, r5, r6
 801098a:	10e6      	asrs	r6, r4, #3
 801098c:	00e4      	lsls	r4, r4, #3
 801098e:	b2e4      	uxtb	r4, r4
 8010990:	fb1b fb0a 	smulbb	fp, fp, sl
 8010994:	fb14 f405 	smulbb	r4, r4, r5
 8010998:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801099c:	b2bf      	uxth	r7, r7
 801099e:	fb06 b605 	mla	r6, r6, r5, fp
 80109a2:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80109a6:	b2b6      	uxth	r6, r6
 80109a8:	fa1f fe8e 	uxth.w	lr, lr
 80109ac:	1c7c      	adds	r4, r7, #1
 80109ae:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80109b2:	f106 0b01 	add.w	fp, r6, #1
 80109b6:	f10e 0401 	add.w	r4, lr, #1
 80109ba:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80109be:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80109c2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80109c6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80109ca:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80109ce:	4327      	orrs	r7, r4
 80109d0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80109d4:	4401      	add	r1, r0
 80109d6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80109d8:	ea47 070b 	orr.w	r7, r7, fp
 80109dc:	f829 7b02 	strh.w	r7, [r9], #2
 80109e0:	4402      	add	r2, r0
 80109e2:	f108 38ff 	add.w	r8, r8, #4294967295
 80109e6:	e7af      	b.n	8010948 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80109e8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80109ec:	f04f 0e00 	mov.w	lr, #0
 80109f0:	eb03 040e 	add.w	r4, r3, lr
 80109f4:	2c00      	cmp	r4, #0
 80109f6:	dc43      	bgt.n	8010a80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80109f8:	9a00      	ldr	r2, [sp, #0]
 80109fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80109fe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8010a02:	9300      	str	r3, [sp, #0]
 8010a04:	9b02      	ldr	r3, [sp, #8]
 8010a06:	2b00      	cmp	r3, #0
 8010a08:	f340 8098 	ble.w	8010b3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8010a0c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010a10:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010a14:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010a18:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010a1a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010a1e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010a22:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010a26:	eef0 6a62 	vmov.f32	s13, s5
 8010a2a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010a2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010a32:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010a36:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8010a3a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010a3e:	eef0 6a43 	vmov.f32	s13, s6
 8010a42:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010a46:	ee12 2a90 	vmov	r2, s5
 8010a4a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010a4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010a52:	ee13 2a10 	vmov	r2, s6
 8010a56:	9313      	str	r3, [sp, #76]	; 0x4c
 8010a58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010a5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8010a5e:	9314      	str	r3, [sp, #80]	; 0x50
 8010a60:	9b02      	ldr	r3, [sp, #8]
 8010a62:	9a05      	ldr	r2, [sp, #20]
 8010a64:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010a68:	3b01      	subs	r3, #1
 8010a6a:	9302      	str	r3, [sp, #8]
 8010a6c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8010a70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010a72:	eeb0 3a67 	vmov.f32	s6, s15
 8010a76:	bf08      	it	eq
 8010a78:	4613      	moveq	r3, r2
 8010a7a:	eef0 2a47 	vmov.f32	s5, s14
 8010a7e:	e72a      	b.n	80108d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010a80:	140f      	asrs	r7, r1, #16
 8010a82:	d454      	bmi.n	8010b2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010a84:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8010a88:	42be      	cmp	r6, r7
 8010a8a:	dd50      	ble.n	8010b2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010a8c:	ea5f 4822 	movs.w	r8, r2, asr #16
 8010a90:	d44d      	bmi.n	8010b2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010a92:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8010a96:	4544      	cmp	r4, r8
 8010a98:	dd49      	ble.n	8010b2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010a9a:	9c04      	ldr	r4, [sp, #16]
 8010a9c:	b236      	sxth	r6, r6
 8010a9e:	fb08 4606 	mla	r6, r8, r6, r4
 8010aa2:	f06f 0001 	mvn.w	r0, #1
 8010aa6:	f816 8007 	ldrb.w	r8, [r6, r7]
 8010aaa:	9c01      	ldr	r4, [sp, #4]
 8010aac:	fb00 fa0e 	mul.w	sl, r0, lr
 8010ab0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8010ab4:	9800      	ldr	r0, [sp, #0]
 8010ab6:	eb04 0b08 	add.w	fp, r4, r8
 8010aba:	f830 400a 	ldrh.w	r4, [r0, sl]
 8010abe:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010ac2:	9801      	ldr	r0, [sp, #4]
 8010ac4:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010ac8:	f810 8008 	ldrb.w	r8, [r0, r8]
 8010acc:	9800      	ldr	r0, [sp, #0]
 8010ace:	1227      	asrs	r7, r4, #8
 8010ad0:	fb16 f609 	smulbb	r6, r6, r9
 8010ad4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010ad8:	fb07 6705 	mla	r7, r7, r5, r6
 8010adc:	10e6      	asrs	r6, r4, #3
 8010ade:	00e4      	lsls	r4, r4, #3
 8010ae0:	b2e4      	uxtb	r4, r4
 8010ae2:	fb1b fb09 	smulbb	fp, fp, r9
 8010ae6:	fb14 f405 	smulbb	r4, r4, r5
 8010aea:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010aee:	b2bf      	uxth	r7, r7
 8010af0:	fb06 b605 	mla	r6, r6, r5, fp
 8010af4:	fb08 4809 	mla	r8, r8, r9, r4
 8010af8:	b2b6      	uxth	r6, r6
 8010afa:	fa1f f888 	uxth.w	r8, r8
 8010afe:	1c7c      	adds	r4, r7, #1
 8010b00:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8010b04:	f106 0b01 	add.w	fp, r6, #1
 8010b08:	f108 0401 	add.w	r4, r8, #1
 8010b0c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8010b10:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8010b14:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010b18:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8010b1c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010b20:	4327      	orrs	r7, r4
 8010b22:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8010b26:	ea47 070b 	orr.w	r7, r7, fp
 8010b2a:	f820 700a 	strh.w	r7, [r0, sl]
 8010b2e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010b30:	4401      	add	r1, r0
 8010b32:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010b34:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010b38:	4402      	add	r2, r0
 8010b3a:	e759      	b.n	80109f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8010b3c:	b007      	add	sp, #28
 8010b3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08010b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b48:	b085      	sub	sp, #20
 8010b4a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010b4e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010b50:	9203      	str	r2, [sp, #12]
 8010b52:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010b56:	6870      	ldr	r0, [r6, #4]
 8010b58:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8010b5a:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8010b5e:	686f      	ldr	r7, [r5, #4]
 8010b60:	9101      	str	r1, [sp, #4]
 8010b62:	fb00 2404 	mla	r4, r0, r4, r2
 8010b66:	6832      	ldr	r2, [r6, #0]
 8010b68:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010b6c:	682a      	ldr	r2, [r5, #0]
 8010b6e:	9202      	str	r2, [sp, #8]
 8010b70:	3704      	adds	r7, #4
 8010b72:	9a01      	ldr	r2, [sp, #4]
 8010b74:	2a00      	cmp	r2, #0
 8010b76:	dc03      	bgt.n	8010b80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010b78:	9a03      	ldr	r2, [sp, #12]
 8010b7a:	2a00      	cmp	r2, #0
 8010b7c:	f340 80cc 	ble.w	8010d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010b80:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010b82:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8010b86:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8010b8a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010b8e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010b90:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010b94:	2b00      	cmp	r3, #0
 8010b96:	dd0d      	ble.n	8010bb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010b98:	1406      	asrs	r6, r0, #16
 8010b9a:	d405      	bmi.n	8010ba8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010b9c:	454e      	cmp	r6, r9
 8010b9e:	da03      	bge.n	8010ba8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010ba0:	1416      	asrs	r6, r2, #16
 8010ba2:	d401      	bmi.n	8010ba8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010ba4:	4546      	cmp	r6, r8
 8010ba6:	db06      	blt.n	8010bb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010ba8:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8010baa:	4460      	add	r0, ip
 8010bac:	4432      	add	r2, r6
 8010bae:	3b01      	subs	r3, #1
 8010bb0:	3402      	adds	r4, #2
 8010bb2:	e7ef      	b.n	8010b94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8010bb4:	d00f      	beq.n	8010bd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8010bb6:	1e5e      	subs	r6, r3, #1
 8010bb8:	fb0c 0e06 	mla	lr, ip, r6, r0
 8010bbc:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8010bc0:	d543      	bpl.n	8010c4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8010bc2:	4698      	mov	r8, r3
 8010bc4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8010bc8:	f1b8 0f00 	cmp.w	r8, #0
 8010bcc:	dc71      	bgt.n	8010cb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8010bce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010bd2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010bd6:	9b01      	ldr	r3, [sp, #4]
 8010bd8:	2b00      	cmp	r3, #0
 8010bda:	f340 809d 	ble.w	8010d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010bde:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010be2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010be6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010bea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010bec:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010bf0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010bf4:	eeb0 6a62 	vmov.f32	s12, s5
 8010bf8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010bfc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010c00:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010c04:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010c08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010c0c:	eeb0 6a43 	vmov.f32	s12, s6
 8010c10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010c14:	ee12 2a90 	vmov	r2, s5
 8010c18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010c1c:	fb92 fcf3 	sdiv	ip, r2, r3
 8010c20:	ee13 2a10 	vmov	r2, s6
 8010c24:	fb92 f3f3 	sdiv	r3, r2, r3
 8010c28:	9312      	str	r3, [sp, #72]	; 0x48
 8010c2a:	9b01      	ldr	r3, [sp, #4]
 8010c2c:	9a03      	ldr	r2, [sp, #12]
 8010c2e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010c32:	3b01      	subs	r3, #1
 8010c34:	9301      	str	r3, [sp, #4]
 8010c36:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010c3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010c3c:	eeb0 3a67 	vmov.f32	s6, s15
 8010c40:	bf08      	it	eq
 8010c42:	4613      	moveq	r3, r2
 8010c44:	eef0 2a47 	vmov.f32	s5, s14
 8010c48:	e793      	b.n	8010b72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8010c4a:	45ce      	cmp	lr, r9
 8010c4c:	dab9      	bge.n	8010bc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010c4e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010c50:	fb01 2606 	mla	r6, r1, r6, r2
 8010c54:	1436      	asrs	r6, r6, #16
 8010c56:	d4b4      	bmi.n	8010bc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010c58:	4546      	cmp	r6, r8
 8010c5a:	dab2      	bge.n	8010bc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010c5c:	4698      	mov	r8, r3
 8010c5e:	46a2      	mov	sl, r4
 8010c60:	f1b8 0f00 	cmp.w	r8, #0
 8010c64:	ddb3      	ble.n	8010bce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8010c66:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8010c6a:	9902      	ldr	r1, [sp, #8]
 8010c6c:	1416      	asrs	r6, r2, #16
 8010c6e:	fb09 1606 	mla	r6, r9, r6, r1
 8010c72:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8010c76:	492a      	ldr	r1, [pc, #168]	; (8010d20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8010c78:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8010c7c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010c80:	eb07 0b0e 	add.w	fp, r7, lr
 8010c84:	4460      	add	r0, ip
 8010c86:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8010c8a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8010c8e:	00f6      	lsls	r6, r6, #3
 8010c90:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8010c94:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010c98:	ea49 0606 	orr.w	r6, r9, r6
 8010c9c:	f817 900e 	ldrb.w	r9, [r7, lr]
 8010ca0:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010ca2:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8010ca6:	f82a 6b02 	strh.w	r6, [sl], #2
 8010caa:	440a      	add	r2, r1
 8010cac:	f108 38ff 	add.w	r8, r8, #4294967295
 8010cb0:	e7d6      	b.n	8010c60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8010cb2:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010cb6:	d429      	bmi.n	8010d0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010cb8:	68ae      	ldr	r6, [r5, #8]
 8010cba:	454e      	cmp	r6, r9
 8010cbc:	dd26      	ble.n	8010d0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010cbe:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8010cc2:	d423      	bmi.n	8010d0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010cc4:	68e9      	ldr	r1, [r5, #12]
 8010cc6:	4559      	cmp	r1, fp
 8010cc8:	dd20      	ble.n	8010d0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010cca:	9902      	ldr	r1, [sp, #8]
 8010ccc:	fa0f fe86 	sxth.w	lr, r6
 8010cd0:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8010cd4:	f06f 0101 	mvn.w	r1, #1
 8010cd8:	f81e e009 	ldrb.w	lr, [lr, r9]
 8010cdc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010ce0:	eb07 060e 	add.w	r6, r7, lr
 8010ce4:	fb01 f908 	mul.w	r9, r1, r8
 8010ce8:	f896 b002 	ldrb.w	fp, [r6, #2]
 8010cec:	7876      	ldrb	r6, [r6, #1]
 8010cee:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8010cf2:	00f6      	lsls	r6, r6, #3
 8010cf4:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8010cf8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010cfc:	ea4b 0606 	orr.w	r6, fp, r6
 8010d00:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8010d04:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8010d08:	f82a 6009 	strh.w	r6, [sl, r9]
 8010d0c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010d0e:	4460      	add	r0, ip
 8010d10:	440a      	add	r2, r1
 8010d12:	f108 38ff 	add.w	r8, r8, #4294967295
 8010d16:	e757      	b.n	8010bc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010d18:	b005      	add	sp, #20
 8010d1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d1e:	bf00      	nop
 8010d20:	fffff800 	.word	0xfffff800

08010d24 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010d24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d28:	b087      	sub	sp, #28
 8010d2a:	468b      	mov	fp, r1
 8010d2c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010d2e:	9204      	str	r2, [sp, #16]
 8010d30:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010d34:	9205      	str	r2, [sp, #20]
 8010d36:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010d3a:	6841      	ldr	r1, [r0, #4]
 8010d3c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8010d40:	fb01 2404 	mla	r4, r1, r4, r2
 8010d44:	6802      	ldr	r2, [r0, #0]
 8010d46:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010d4a:	f8dc 2000 	ldr.w	r2, [ip]
 8010d4e:	9201      	str	r2, [sp, #4]
 8010d50:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010d54:	3204      	adds	r2, #4
 8010d56:	9202      	str	r2, [sp, #8]
 8010d58:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010d5c:	f1bb 0f00 	cmp.w	fp, #0
 8010d60:	dc03      	bgt.n	8010d6a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8010d62:	9a04      	ldr	r2, [sp, #16]
 8010d64:	2a00      	cmp	r2, #0
 8010d66:	f340 8138 	ble.w	8010fda <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8010d6a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010d6c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010d70:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8010d74:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010d78:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010d7a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010d7e:	2b00      	cmp	r3, #0
 8010d80:	dd0e      	ble.n	8010da0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010d82:	1402      	asrs	r2, r0, #16
 8010d84:	d405      	bmi.n	8010d92 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010d86:	42ba      	cmp	r2, r7
 8010d88:	da03      	bge.n	8010d92 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010d8a:	140a      	asrs	r2, r1, #16
 8010d8c:	d401      	bmi.n	8010d92 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010d8e:	42b2      	cmp	r2, r6
 8010d90:	db07      	blt.n	8010da2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010d92:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010d94:	4410      	add	r0, r2
 8010d96:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010d98:	3b01      	subs	r3, #1
 8010d9a:	4411      	add	r1, r2
 8010d9c:	3402      	adds	r4, #2
 8010d9e:	e7ee      	b.n	8010d7e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8010da0:	d019      	beq.n	8010dd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8010da2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010da4:	1e5a      	subs	r2, r3, #1
 8010da6:	fb05 0502 	mla	r5, r5, r2, r0
 8010daa:	142d      	asrs	r5, r5, #16
 8010dac:	d409      	bmi.n	8010dc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010dae:	42bd      	cmp	r5, r7
 8010db0:	da07      	bge.n	8010dc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010db2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010db4:	fb05 1202 	mla	r2, r5, r2, r1
 8010db8:	1412      	asrs	r2, r2, #16
 8010dba:	d402      	bmi.n	8010dc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010dbc:	42b2      	cmp	r2, r6
 8010dbe:	f2c0 80ac 	blt.w	8010f1a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8010dc2:	f04f 0e00 	mov.w	lr, #0
 8010dc6:	eb03 020e 	add.w	r2, r3, lr
 8010dca:	2a00      	cmp	r2, #0
 8010dcc:	dc3e      	bgt.n	8010e4c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010dce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010dd2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010dd6:	f1bb 0f00 	cmp.w	fp, #0
 8010dda:	f340 80fe 	ble.w	8010fda <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8010dde:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010de2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010de6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010dea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010dec:	f1bb 0b01 	subs.w	fp, fp, #1
 8010df0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010df4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010df8:	eeb0 6a62 	vmov.f32	s12, s5
 8010dfc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010e00:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010e04:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010e08:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010e0c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010e10:	eeb0 6a43 	vmov.f32	s12, s6
 8010e14:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010e18:	ee12 2a90 	vmov	r2, s5
 8010e1c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010e20:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e24:	ee13 2a10 	vmov	r2, s6
 8010e28:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010e2c:	9313      	str	r3, [sp, #76]	; 0x4c
 8010e2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e30:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e34:	9a04      	ldr	r2, [sp, #16]
 8010e36:	9314      	str	r3, [sp, #80]	; 0x50
 8010e38:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010e3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e3e:	eeb0 3a67 	vmov.f32	s6, s15
 8010e42:	bf08      	it	eq
 8010e44:	4613      	moveq	r3, r2
 8010e46:	eef0 2a47 	vmov.f32	s5, s14
 8010e4a:	e787      	b.n	8010d5c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8010e4c:	1406      	asrs	r6, r0, #16
 8010e4e:	d45d      	bmi.n	8010f0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010e50:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8010e54:	42b5      	cmp	r5, r6
 8010e56:	dd59      	ble.n	8010f0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010e58:	140f      	asrs	r7, r1, #16
 8010e5a:	d457      	bmi.n	8010f0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010e5c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8010e60:	42ba      	cmp	r2, r7
 8010e62:	dd53      	ble.n	8010f0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010e64:	9a01      	ldr	r2, [sp, #4]
 8010e66:	b22d      	sxth	r5, r5
 8010e68:	fb07 2505 	mla	r5, r7, r5, r2
 8010e6c:	5daa      	ldrb	r2, [r5, r6]
 8010e6e:	9d02      	ldr	r5, [sp, #8]
 8010e70:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010e74:	0e2e      	lsrs	r6, r5, #24
 8010e76:	d049      	beq.n	8010f0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010e78:	f06f 0201 	mvn.w	r2, #1
 8010e7c:	fb02 f20e 	mul.w	r2, r2, lr
 8010e80:	9203      	str	r2, [sp, #12]
 8010e82:	f834 8002 	ldrh.w	r8, [r4, r2]
 8010e86:	9a05      	ldr	r2, [sp, #20]
 8010e88:	4356      	muls	r6, r2
 8010e8a:	1c72      	adds	r2, r6, #1
 8010e8c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010e90:	1212      	asrs	r2, r2, #8
 8010e92:	fa1f f982 	uxth.w	r9, r2
 8010e96:	ea4f 2728 	mov.w	r7, r8, asr #8
 8010e9a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010e9e:	43d2      	mvns	r2, r2
 8010ea0:	b2d2      	uxtb	r2, r2
 8010ea2:	fb16 f609 	smulbb	r6, r6, r9
 8010ea6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010eaa:	fb07 6702 	mla	r7, r7, r2, r6
 8010eae:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010eb2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8010eb6:	b2ed      	uxtb	r5, r5
 8010eb8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010ebc:	fa5f f888 	uxtb.w	r8, r8
 8010ec0:	fb15 f509 	smulbb	r5, r5, r9
 8010ec4:	fb08 5502 	mla	r5, r8, r2, r5
 8010ec8:	b2bf      	uxth	r7, r7
 8010eca:	fb1a fa09 	smulbb	sl, sl, r9
 8010ece:	b2ad      	uxth	r5, r5
 8010ed0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010ed4:	fb06 a602 	mla	r6, r6, r2, sl
 8010ed8:	1c7a      	adds	r2, r7, #1
 8010eda:	f105 0a01 	add.w	sl, r5, #1
 8010ede:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010ee2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010ee6:	b2b6      	uxth	r6, r6
 8010ee8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010eec:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010ef0:	ea4a 0707 	orr.w	r7, sl, r7
 8010ef4:	f106 0a01 	add.w	sl, r6, #1
 8010ef8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010efc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010f00:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010f04:	9a03      	ldr	r2, [sp, #12]
 8010f06:	ea47 070a 	orr.w	r7, r7, sl
 8010f0a:	52a7      	strh	r7, [r4, r2]
 8010f0c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010f0e:	4410      	add	r0, r2
 8010f10:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010f12:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010f16:	4411      	add	r1, r2
 8010f18:	e755      	b.n	8010dc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8010f1a:	f04f 0800 	mov.w	r8, #0
 8010f1e:	eba3 0208 	sub.w	r2, r3, r8
 8010f22:	2a00      	cmp	r2, #0
 8010f24:	f77f af53 	ble.w	8010dce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8010f28:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8010f2c:	9f01      	ldr	r7, [sp, #4]
 8010f2e:	140a      	asrs	r2, r1, #16
 8010f30:	1405      	asrs	r5, r0, #16
 8010f32:	fb06 7202 	mla	r2, r6, r2, r7
 8010f36:	5d52      	ldrb	r2, [r2, r5]
 8010f38:	9d02      	ldr	r5, [sp, #8]
 8010f3a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010f3e:	0e2e      	lsrs	r6, r5, #24
 8010f40:	d044      	beq.n	8010fcc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8010f42:	9a05      	ldr	r2, [sp, #20]
 8010f44:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8010f48:	4356      	muls	r6, r2
 8010f4a:	1c72      	adds	r2, r6, #1
 8010f4c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010f50:	1212      	asrs	r2, r2, #8
 8010f52:	fa1f f982 	uxth.w	r9, r2
 8010f56:	ea4f 272e 	mov.w	r7, lr, asr #8
 8010f5a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010f5e:	43d2      	mvns	r2, r2
 8010f60:	b2d2      	uxtb	r2, r2
 8010f62:	fb16 f609 	smulbb	r6, r6, r9
 8010f66:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010f6a:	fb07 6702 	mla	r7, r7, r2, r6
 8010f6e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010f72:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010f76:	b2ed      	uxtb	r5, r5
 8010f78:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010f7c:	fa5f fe8e 	uxtb.w	lr, lr
 8010f80:	fb15 f509 	smulbb	r5, r5, r9
 8010f84:	fb0e 5502 	mla	r5, lr, r2, r5
 8010f88:	b2bf      	uxth	r7, r7
 8010f8a:	fb1a fa09 	smulbb	sl, sl, r9
 8010f8e:	b2ad      	uxth	r5, r5
 8010f90:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010f94:	fb06 a602 	mla	r6, r6, r2, sl
 8010f98:	1c7a      	adds	r2, r7, #1
 8010f9a:	f105 0a01 	add.w	sl, r5, #1
 8010f9e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010fa2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010fa6:	b2b6      	uxth	r6, r6
 8010fa8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010fac:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010fb0:	ea4a 0707 	orr.w	r7, sl, r7
 8010fb4:	f106 0a01 	add.w	sl, r6, #1
 8010fb8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010fbc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010fc0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010fc4:	ea47 070a 	orr.w	r7, r7, sl
 8010fc8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010fcc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010fce:	4410      	add	r0, r2
 8010fd0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010fd2:	f108 0801 	add.w	r8, r8, #1
 8010fd6:	4411      	add	r1, r2
 8010fd8:	e7a1      	b.n	8010f1e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8010fda:	b007      	add	sp, #28
 8010fdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010fe0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010fe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010fe4:	b085      	sub	sp, #20
 8010fe6:	468b      	mov	fp, r1
 8010fe8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010fea:	9203      	str	r2, [sp, #12]
 8010fec:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010ff0:	6841      	ldr	r1, [r0, #4]
 8010ff2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8010ff6:	fb01 2404 	mla	r4, r1, r4, r2
 8010ffa:	6802      	ldr	r2, [r0, #0]
 8010ffc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011000:	f8de 2000 	ldr.w	r2, [lr]
 8011004:	9200      	str	r2, [sp, #0]
 8011006:	f8de 2004 	ldr.w	r2, [lr, #4]
 801100a:	3204      	adds	r2, #4
 801100c:	9201      	str	r2, [sp, #4]
 801100e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011012:	f1bb 0f00 	cmp.w	fp, #0
 8011016:	dc03      	bgt.n	8011020 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8011018:	9a03      	ldr	r2, [sp, #12]
 801101a:	2a00      	cmp	r2, #0
 801101c:	f340 8153 	ble.w	80112c6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8011020:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011022:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011026:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801102a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801102e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011030:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011034:	2b00      	cmp	r3, #0
 8011036:	dd0e      	ble.n	8011056 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011038:	1408      	asrs	r0, r1, #16
 801103a:	d405      	bmi.n	8011048 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801103c:	42b8      	cmp	r0, r7
 801103e:	da03      	bge.n	8011048 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011040:	1410      	asrs	r0, r2, #16
 8011042:	d401      	bmi.n	8011048 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011044:	42b0      	cmp	r0, r6
 8011046:	db07      	blt.n	8011058 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8011048:	9811      	ldr	r0, [sp, #68]	; 0x44
 801104a:	4401      	add	r1, r0
 801104c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801104e:	3b01      	subs	r3, #1
 8011050:	4402      	add	r2, r0
 8011052:	3402      	adds	r4, #2
 8011054:	e7ee      	b.n	8011034 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8011056:	d017      	beq.n	8011088 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8011058:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801105a:	1e58      	subs	r0, r3, #1
 801105c:	fb05 1500 	mla	r5, r5, r0, r1
 8011060:	142d      	asrs	r5, r5, #16
 8011062:	d409      	bmi.n	8011078 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011064:	42bd      	cmp	r5, r7
 8011066:	da07      	bge.n	8011078 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011068:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801106a:	fb05 2000 	mla	r0, r5, r0, r2
 801106e:	1400      	asrs	r0, r0, #16
 8011070:	d402      	bmi.n	8011078 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011072:	42b0      	cmp	r0, r6
 8011074:	f2c0 80bc 	blt.w	80111f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8011078:	2600      	movs	r6, #0
 801107a:	1998      	adds	r0, r3, r6
 801107c:	2800      	cmp	r0, #0
 801107e:	dc3e      	bgt.n	80110fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8011080:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011084:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011088:	f1bb 0f00 	cmp.w	fp, #0
 801108c:	f340 811b 	ble.w	80112c6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8011090:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011094:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011098:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801109c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801109e:	f1bb 0b01 	subs.w	fp, fp, #1
 80110a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80110a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80110aa:	eeb0 6a62 	vmov.f32	s12, s5
 80110ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80110b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80110b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80110ba:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80110be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80110c2:	eeb0 6a43 	vmov.f32	s12, s6
 80110c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80110ca:	ee12 2a90 	vmov	r2, s5
 80110ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80110d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80110d6:	ee13 2a10 	vmov	r2, s6
 80110da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80110de:	9311      	str	r3, [sp, #68]	; 0x44
 80110e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80110e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80110e6:	9a03      	ldr	r2, [sp, #12]
 80110e8:	9312      	str	r3, [sp, #72]	; 0x48
 80110ea:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80110ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80110f0:	eeb0 3a67 	vmov.f32	s6, s15
 80110f4:	bf08      	it	eq
 80110f6:	4613      	moveq	r3, r2
 80110f8:	eef0 2a47 	vmov.f32	s5, s14
 80110fc:	e789      	b.n	8011012 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80110fe:	140f      	asrs	r7, r1, #16
 8011100:	d426      	bmi.n	8011150 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011102:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011106:	42bd      	cmp	r5, r7
 8011108:	dd22      	ble.n	8011150 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801110a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801110e:	d41f      	bmi.n	8011150 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011110:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011114:	4560      	cmp	r0, ip
 8011116:	dd1b      	ble.n	8011150 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011118:	9800      	ldr	r0, [sp, #0]
 801111a:	b22d      	sxth	r5, r5
 801111c:	fb0c 0505 	mla	r5, ip, r5, r0
 8011120:	5de8      	ldrb	r0, [r5, r7]
 8011122:	9d01      	ldr	r5, [sp, #4]
 8011124:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8011128:	0e07      	lsrs	r7, r0, #24
 801112a:	2fff      	cmp	r7, #255	; 0xff
 801112c:	d116      	bne.n	801115c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801112e:	f06f 0501 	mvn.w	r5, #1
 8011132:	fb05 f706 	mul.w	r7, r5, r6
 8011136:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801113a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801113e:	0945      	lsrs	r5, r0, #5
 8011140:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011144:	ea4c 0505 	orr.w	r5, ip, r5
 8011148:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801114c:	4305      	orrs	r5, r0
 801114e:	53e5      	strh	r5, [r4, r7]
 8011150:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011152:	4401      	add	r1, r0
 8011154:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011156:	3e01      	subs	r6, #1
 8011158:	4402      	add	r2, r0
 801115a:	e78e      	b.n	801107a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801115c:	b2fd      	uxtb	r5, r7
 801115e:	2f00      	cmp	r7, #0
 8011160:	d0f6      	beq.n	8011150 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011162:	f06f 0701 	mvn.w	r7, #1
 8011166:	4377      	muls	r7, r6
 8011168:	fa1f f985 	uxth.w	r9, r5
 801116c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8011170:	9702      	str	r7, [sp, #8]
 8011172:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8011176:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801117a:	43ed      	mvns	r5, r5
 801117c:	b2ed      	uxtb	r5, r5
 801117e:	fb17 f709 	smulbb	r7, r7, r9
 8011182:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011186:	fb0c 7c05 	mla	ip, ip, r5, r7
 801118a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801118e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8011192:	b2c0      	uxtb	r0, r0
 8011194:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011198:	fa5f f888 	uxtb.w	r8, r8
 801119c:	fb10 f009 	smulbb	r0, r0, r9
 80111a0:	fb08 0005 	mla	r0, r8, r5, r0
 80111a4:	b280      	uxth	r0, r0
 80111a6:	fa1f fc8c 	uxth.w	ip, ip
 80111aa:	fb1a fa09 	smulbb	sl, sl, r9
 80111ae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80111b2:	fb07 a705 	mla	r7, r7, r5, sl
 80111b6:	f100 0a01 	add.w	sl, r0, #1
 80111ba:	f10c 0501 	add.w	r5, ip, #1
 80111be:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80111c2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80111c6:	b2bf      	uxth	r7, r7
 80111c8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80111cc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80111d0:	ea4a 0c0c 	orr.w	ip, sl, ip
 80111d4:	f107 0a01 	add.w	sl, r7, #1
 80111d8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80111dc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80111e0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80111e4:	9802      	ldr	r0, [sp, #8]
 80111e6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80111ea:	f824 c000 	strh.w	ip, [r4, r0]
 80111ee:	e7af      	b.n	8011150 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80111f0:	f04f 0800 	mov.w	r8, #0
 80111f4:	eba3 0008 	sub.w	r0, r3, r8
 80111f8:	2800      	cmp	r0, #0
 80111fa:	f77f af41 	ble.w	8011080 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80111fe:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8011202:	9f00      	ldr	r7, [sp, #0]
 8011204:	1410      	asrs	r0, r2, #16
 8011206:	140d      	asrs	r5, r1, #16
 8011208:	fb06 7000 	mla	r0, r6, r0, r7
 801120c:	5d40      	ldrb	r0, [r0, r5]
 801120e:	9d01      	ldr	r5, [sp, #4]
 8011210:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8011214:	0e2e      	lsrs	r6, r5, #24
 8011216:	2eff      	cmp	r6, #255	; 0xff
 8011218:	d112      	bne.n	8011240 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801121a:	482c      	ldr	r0, [pc, #176]	; (80112cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801121c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8011220:	0968      	lsrs	r0, r5, #5
 8011222:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8011226:	4330      	orrs	r0, r6
 8011228:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801122c:	4328      	orrs	r0, r5
 801122e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8011232:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011234:	4401      	add	r1, r0
 8011236:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011238:	f108 0801 	add.w	r8, r8, #1
 801123c:	4402      	add	r2, r0
 801123e:	e7d9      	b.n	80111f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8011240:	b2f0      	uxtb	r0, r6
 8011242:	2e00      	cmp	r6, #0
 8011244:	d0f5      	beq.n	8011232 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8011246:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801124a:	fa1f f980 	uxth.w	r9, r0
 801124e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011252:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011256:	43c0      	mvns	r0, r0
 8011258:	b2c0      	uxtb	r0, r0
 801125a:	fb16 f609 	smulbb	r6, r6, r9
 801125e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011262:	fb07 6700 	mla	r7, r7, r0, r6
 8011266:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801126a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801126e:	b2ed      	uxtb	r5, r5
 8011270:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011274:	fa5f fc8c 	uxtb.w	ip, ip
 8011278:	fb15 f509 	smulbb	r5, r5, r9
 801127c:	fb0c 5500 	mla	r5, ip, r0, r5
 8011280:	b2bf      	uxth	r7, r7
 8011282:	fb1a fa09 	smulbb	sl, sl, r9
 8011286:	b2ad      	uxth	r5, r5
 8011288:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801128c:	fb06 a600 	mla	r6, r6, r0, sl
 8011290:	1c78      	adds	r0, r7, #1
 8011292:	f105 0a01 	add.w	sl, r5, #1
 8011296:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801129a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801129e:	b2b6      	uxth	r6, r6
 80112a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80112a4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80112a8:	ea4a 0707 	orr.w	r7, sl, r7
 80112ac:	f106 0a01 	add.w	sl, r6, #1
 80112b0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80112b4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80112b8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80112bc:	ea47 070a 	orr.w	r7, r7, sl
 80112c0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80112c4:	e7b5      	b.n	8011232 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80112c6:	b005      	add	sp, #20
 80112c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80112cc:	fffff800 	.word	0xfffff800

080112d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80112d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80112d4:	b087      	sub	sp, #28
 80112d6:	468b      	mov	fp, r1
 80112d8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80112da:	9204      	str	r2, [sp, #16]
 80112dc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80112e0:	9205      	str	r2, [sp, #20]
 80112e2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80112e6:	6861      	ldr	r1, [r4, #4]
 80112e8:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80112ec:	fb01 2000 	mla	r0, r1, r0, r2
 80112f0:	6822      	ldr	r2, [r4, #0]
 80112f2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80112f6:	f8de 2000 	ldr.w	r2, [lr]
 80112fa:	9201      	str	r2, [sp, #4]
 80112fc:	f8de 2004 	ldr.w	r2, [lr, #4]
 8011300:	9202      	str	r2, [sp, #8]
 8011302:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011306:	f1bb 0f00 	cmp.w	fp, #0
 801130a:	dc03      	bgt.n	8011314 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801130c:	9a04      	ldr	r2, [sp, #16]
 801130e:	2a00      	cmp	r2, #0
 8011310:	f340 8142 	ble.w	8011598 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8011314:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011316:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801131a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801131e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011322:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011324:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011328:	2b00      	cmp	r3, #0
 801132a:	dd0e      	ble.n	801134a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801132c:	140c      	asrs	r4, r1, #16
 801132e:	d405      	bmi.n	801133c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011330:	42bc      	cmp	r4, r7
 8011332:	da03      	bge.n	801133c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011334:	1414      	asrs	r4, r2, #16
 8011336:	d401      	bmi.n	801133c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011338:	42b4      	cmp	r4, r6
 801133a:	db07      	blt.n	801134c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801133c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801133e:	4421      	add	r1, r4
 8011340:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011342:	3b01      	subs	r3, #1
 8011344:	4422      	add	r2, r4
 8011346:	3002      	adds	r0, #2
 8011348:	e7ee      	b.n	8011328 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801134a:	d019      	beq.n	8011380 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801134c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801134e:	1e5c      	subs	r4, r3, #1
 8011350:	fb05 1504 	mla	r5, r5, r4, r1
 8011354:	142d      	asrs	r5, r5, #16
 8011356:	d409      	bmi.n	801136c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011358:	42bd      	cmp	r5, r7
 801135a:	da07      	bge.n	801136c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801135c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801135e:	fb05 2404 	mla	r4, r5, r4, r2
 8011362:	1424      	asrs	r4, r4, #16
 8011364:	d402      	bmi.n	801136c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011366:	42b4      	cmp	r4, r6
 8011368:	f2c0 80b1 	blt.w	80114ce <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801136c:	f04f 0800 	mov.w	r8, #0
 8011370:	eb03 0408 	add.w	r4, r3, r8
 8011374:	2c00      	cmp	r4, #0
 8011376:	dc3e      	bgt.n	80113f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8011378:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801137c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011380:	f1bb 0f00 	cmp.w	fp, #0
 8011384:	f340 8108 	ble.w	8011598 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8011388:	ee30 0a04 	vadd.f32	s0, s0, s8
 801138c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011390:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011394:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011396:	f1bb 0b01 	subs.w	fp, fp, #1
 801139a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801139e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80113a2:	eeb0 6a62 	vmov.f32	s12, s5
 80113a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80113aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80113ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 80113b2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80113b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80113ba:	eeb0 6a43 	vmov.f32	s12, s6
 80113be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80113c2:	ee12 2a90 	vmov	r2, s5
 80113c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80113ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80113ce:	ee13 2a10 	vmov	r2, s6
 80113d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80113d6:	9313      	str	r3, [sp, #76]	; 0x4c
 80113d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80113da:	fb92 f3f3 	sdiv	r3, r2, r3
 80113de:	9a04      	ldr	r2, [sp, #16]
 80113e0:	9314      	str	r3, [sp, #80]	; 0x50
 80113e2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80113e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80113e8:	eeb0 3a67 	vmov.f32	s6, s15
 80113ec:	bf08      	it	eq
 80113ee:	4613      	moveq	r3, r2
 80113f0:	eef0 2a47 	vmov.f32	s5, s14
 80113f4:	e787      	b.n	8011306 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80113f6:	140e      	asrs	r6, r1, #16
 80113f8:	d462      	bmi.n	80114c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80113fa:	f8de 5008 	ldr.w	r5, [lr, #8]
 80113fe:	42b5      	cmp	r5, r6
 8011400:	dd5e      	ble.n	80114c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011402:	1417      	asrs	r7, r2, #16
 8011404:	d45c      	bmi.n	80114c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011406:	f8de 400c 	ldr.w	r4, [lr, #12]
 801140a:	42bc      	cmp	r4, r7
 801140c:	dd58      	ble.n	80114c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801140e:	b22d      	sxth	r5, r5
 8011410:	fb07 6505 	mla	r5, r7, r5, r6
 8011414:	9c02      	ldr	r4, [sp, #8]
 8011416:	5d66      	ldrb	r6, [r4, r5]
 8011418:	2e00      	cmp	r6, #0
 801141a:	d051      	beq.n	80114c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801141c:	9c01      	ldr	r4, [sp, #4]
 801141e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8011422:	f06f 0401 	mvn.w	r4, #1
 8011426:	fb04 f408 	mul.w	r4, r4, r8
 801142a:	9403      	str	r4, [sp, #12]
 801142c:	5b05      	ldrh	r5, [r0, r4]
 801142e:	9c05      	ldr	r4, [sp, #20]
 8011430:	4366      	muls	r6, r4
 8011432:	1c74      	adds	r4, r6, #1
 8011434:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8011438:	1224      	asrs	r4, r4, #8
 801143a:	b2a7      	uxth	r7, r4
 801143c:	122e      	asrs	r6, r5, #8
 801143e:	43e4      	mvns	r4, r4
 8011440:	b2e4      	uxtb	r4, r4
 8011442:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8011446:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801144a:	fb16 f604 	smulbb	r6, r6, r4
 801144e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011452:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011456:	00ed      	lsls	r5, r5, #3
 8011458:	fb0c 6c07 	mla	ip, ip, r7, r6
 801145c:	b2ed      	uxtb	r5, r5
 801145e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8011462:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8011466:	fb15 f504 	smulbb	r5, r5, r4
 801146a:	fa5f f989 	uxtb.w	r9, r9
 801146e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011472:	fb09 5507 	mla	r5, r9, r7, r5
 8011476:	fb1a fa04 	smulbb	sl, sl, r4
 801147a:	fa1f fc8c 	uxth.w	ip, ip
 801147e:	b2ad      	uxth	r5, r5
 8011480:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011484:	fb06 a607 	mla	r6, r6, r7, sl
 8011488:	f10c 0401 	add.w	r4, ip, #1
 801148c:	f105 0a01 	add.w	sl, r5, #1
 8011490:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011494:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011498:	b2b6      	uxth	r6, r6
 801149a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801149e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80114a2:	ea4a 0c0c 	orr.w	ip, sl, ip
 80114a6:	f106 0a01 	add.w	sl, r6, #1
 80114aa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80114ae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80114b2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80114b6:	9c03      	ldr	r4, [sp, #12]
 80114b8:	ea4c 0c0a 	orr.w	ip, ip, sl
 80114bc:	f820 c004 	strh.w	ip, [r0, r4]
 80114c0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80114c2:	4421      	add	r1, r4
 80114c4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80114c6:	f108 38ff 	add.w	r8, r8, #4294967295
 80114ca:	4422      	add	r2, r4
 80114cc:	e750      	b.n	8011370 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80114ce:	f04f 0900 	mov.w	r9, #0
 80114d2:	eba3 0409 	sub.w	r4, r3, r9
 80114d6:	2c00      	cmp	r4, #0
 80114d8:	f77f af4e 	ble.w	8011378 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80114dc:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80114e0:	140d      	asrs	r5, r1, #16
 80114e2:	1414      	asrs	r4, r2, #16
 80114e4:	fb06 5404 	mla	r4, r6, r4, r5
 80114e8:	9d02      	ldr	r5, [sp, #8]
 80114ea:	5d2e      	ldrb	r6, [r5, r4]
 80114ec:	2e00      	cmp	r6, #0
 80114ee:	d04c      	beq.n	801158a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80114f0:	9d01      	ldr	r5, [sp, #4]
 80114f2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80114f6:	9c05      	ldr	r4, [sp, #20]
 80114f8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80114fc:	4366      	muls	r6, r4
 80114fe:	1c74      	adds	r4, r6, #1
 8011500:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8011504:	1224      	asrs	r4, r4, #8
 8011506:	b2a7      	uxth	r7, r4
 8011508:	122e      	asrs	r6, r5, #8
 801150a:	43e4      	mvns	r4, r4
 801150c:	b2e4      	uxtb	r4, r4
 801150e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8011512:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011516:	fb16 f604 	smulbb	r6, r6, r4
 801151a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801151e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011522:	00ed      	lsls	r5, r5, #3
 8011524:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011528:	b2ed      	uxtb	r5, r5
 801152a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801152e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011532:	fb15 f504 	smulbb	r5, r5, r4
 8011536:	fa5f f888 	uxtb.w	r8, r8
 801153a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801153e:	fb08 5507 	mla	r5, r8, r7, r5
 8011542:	fb1a fa04 	smulbb	sl, sl, r4
 8011546:	fa1f fc8c 	uxth.w	ip, ip
 801154a:	b2ad      	uxth	r5, r5
 801154c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011550:	fb06 a607 	mla	r6, r6, r7, sl
 8011554:	f10c 0401 	add.w	r4, ip, #1
 8011558:	f105 0a01 	add.w	sl, r5, #1
 801155c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011560:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011564:	b2b6      	uxth	r6, r6
 8011566:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801156a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801156e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011572:	f106 0a01 	add.w	sl, r6, #1
 8011576:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801157a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801157e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011582:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011586:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801158a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801158c:	4421      	add	r1, r4
 801158e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011590:	f109 0901 	add.w	r9, r9, #1
 8011594:	4422      	add	r2, r4
 8011596:	e79c      	b.n	80114d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8011598:	b007      	add	sp, #28
 801159a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801159e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801159e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115a2:	b085      	sub	sp, #20
 80115a4:	468b      	mov	fp, r1
 80115a6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80115a8:	9203      	str	r2, [sp, #12]
 80115aa:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80115ae:	6861      	ldr	r1, [r4, #4]
 80115b0:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80115b4:	fb01 2000 	mla	r0, r1, r0, r2
 80115b8:	6822      	ldr	r2, [r4, #0]
 80115ba:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80115be:	f8d8 2000 	ldr.w	r2, [r8]
 80115c2:	9200      	str	r2, [sp, #0]
 80115c4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80115c8:	9201      	str	r2, [sp, #4]
 80115ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80115ce:	f1bb 0f00 	cmp.w	fp, #0
 80115d2:	dc03      	bgt.n	80115dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80115d4:	9a03      	ldr	r2, [sp, #12]
 80115d6:	2a00      	cmp	r2, #0
 80115d8:	f340 8146 	ble.w	8011868 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80115dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80115de:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80115e2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80115e6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80115ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80115ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80115f0:	2b00      	cmp	r3, #0
 80115f2:	dd0e      	ble.n	8011612 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80115f4:	140c      	asrs	r4, r1, #16
 80115f6:	d405      	bmi.n	8011604 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80115f8:	42bc      	cmp	r4, r7
 80115fa:	da03      	bge.n	8011604 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80115fc:	1414      	asrs	r4, r2, #16
 80115fe:	d401      	bmi.n	8011604 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011600:	42b4      	cmp	r4, r6
 8011602:	db07      	blt.n	8011614 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011604:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011606:	4421      	add	r1, r4
 8011608:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801160a:	3b01      	subs	r3, #1
 801160c:	4422      	add	r2, r4
 801160e:	3002      	adds	r0, #2
 8011610:	e7ee      	b.n	80115f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011612:	d017      	beq.n	8011644 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011614:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011616:	1e5c      	subs	r4, r3, #1
 8011618:	fb05 1504 	mla	r5, r5, r4, r1
 801161c:	142d      	asrs	r5, r5, #16
 801161e:	d409      	bmi.n	8011634 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011620:	42bd      	cmp	r5, r7
 8011622:	da07      	bge.n	8011634 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011624:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011626:	fb05 2404 	mla	r4, r5, r4, r2
 801162a:	1424      	asrs	r4, r4, #16
 801162c:	d402      	bmi.n	8011634 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801162e:	42b4      	cmp	r4, r6
 8011630:	f2c0 80b3 	blt.w	801179a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8011634:	2600      	movs	r6, #0
 8011636:	199c      	adds	r4, r3, r6
 8011638:	2c00      	cmp	r4, #0
 801163a:	dc3e      	bgt.n	80116ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801163c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011640:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011644:	f1bb 0f00 	cmp.w	fp, #0
 8011648:	f340 810e 	ble.w	8011868 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801164c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011650:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011654:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011658:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801165a:	f1bb 0b01 	subs.w	fp, fp, #1
 801165e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011662:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011666:	eeb0 6a62 	vmov.f32	s12, s5
 801166a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801166e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011672:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011676:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801167a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801167e:	eeb0 6a43 	vmov.f32	s12, s6
 8011682:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011686:	ee12 2a90 	vmov	r2, s5
 801168a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801168e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011692:	ee13 2a10 	vmov	r2, s6
 8011696:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801169a:	9311      	str	r3, [sp, #68]	; 0x44
 801169c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801169e:	fb92 f3f3 	sdiv	r3, r2, r3
 80116a2:	9a03      	ldr	r2, [sp, #12]
 80116a4:	9312      	str	r3, [sp, #72]	; 0x48
 80116a6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80116aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80116ac:	eeb0 3a67 	vmov.f32	s6, s15
 80116b0:	bf08      	it	eq
 80116b2:	4613      	moveq	r3, r2
 80116b4:	eef0 2a47 	vmov.f32	s5, s14
 80116b8:	e789      	b.n	80115ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80116ba:	140f      	asrs	r7, r1, #16
 80116bc:	d418      	bmi.n	80116f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80116be:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80116c2:	42bd      	cmp	r5, r7
 80116c4:	dd14      	ble.n	80116f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80116c6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80116ca:	d411      	bmi.n	80116f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80116cc:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80116d0:	4564      	cmp	r4, ip
 80116d2:	dd0d      	ble.n	80116f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80116d4:	b22d      	sxth	r5, r5
 80116d6:	fb0c 7505 	mla	r5, ip, r5, r7
 80116da:	9c01      	ldr	r4, [sp, #4]
 80116dc:	5d64      	ldrb	r4, [r4, r5]
 80116de:	2cff      	cmp	r4, #255	; 0xff
 80116e0:	d10c      	bne.n	80116fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80116e2:	9c00      	ldr	r4, [sp, #0]
 80116e4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80116e8:	f06f 0401 	mvn.w	r4, #1
 80116ec:	4374      	muls	r4, r6
 80116ee:	5305      	strh	r5, [r0, r4]
 80116f0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80116f2:	4421      	add	r1, r4
 80116f4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80116f6:	3e01      	subs	r6, #1
 80116f8:	4422      	add	r2, r4
 80116fa:	e79c      	b.n	8011636 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80116fc:	2c00      	cmp	r4, #0
 80116fe:	d0f7      	beq.n	80116f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011700:	9f00      	ldr	r7, [sp, #0]
 8011702:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8011706:	f06f 0501 	mvn.w	r5, #1
 801170a:	4375      	muls	r5, r6
 801170c:	9502      	str	r5, [sp, #8]
 801170e:	5b45      	ldrh	r5, [r0, r5]
 8011710:	fa1f fc84 	uxth.w	ip, r4
 8011714:	122f      	asrs	r7, r5, #8
 8011716:	43e4      	mvns	r4, r4
 8011718:	b2e4      	uxtb	r4, r4
 801171a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801171e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011722:	fb17 f704 	smulbb	r7, r7, r4
 8011726:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801172a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801172e:	00ed      	lsls	r5, r5, #3
 8011730:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8011734:	b2ed      	uxtb	r5, r5
 8011736:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801173a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801173e:	fb15 f504 	smulbb	r5, r5, r4
 8011742:	fa5f f989 	uxtb.w	r9, r9
 8011746:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801174a:	fb09 550c 	mla	r5, r9, ip, r5
 801174e:	fb1a fa04 	smulbb	sl, sl, r4
 8011752:	fa1f fe8e 	uxth.w	lr, lr
 8011756:	b2ad      	uxth	r5, r5
 8011758:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801175c:	fb07 a70c 	mla	r7, r7, ip, sl
 8011760:	f10e 0401 	add.w	r4, lr, #1
 8011764:	f105 0a01 	add.w	sl, r5, #1
 8011768:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801176c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011770:	b2bf      	uxth	r7, r7
 8011772:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011776:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801177a:	ea4a 0e0e 	orr.w	lr, sl, lr
 801177e:	f107 0a01 	add.w	sl, r7, #1
 8011782:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011786:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801178a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801178e:	9c02      	ldr	r4, [sp, #8]
 8011790:	ea4e 0e0a 	orr.w	lr, lr, sl
 8011794:	f820 e004 	strh.w	lr, [r0, r4]
 8011798:	e7aa      	b.n	80116f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801179a:	f04f 0900 	mov.w	r9, #0
 801179e:	eba3 0409 	sub.w	r4, r3, r9
 80117a2:	2c00      	cmp	r4, #0
 80117a4:	f77f af4a 	ble.w	801163c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80117a8:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80117ac:	1414      	asrs	r4, r2, #16
 80117ae:	140d      	asrs	r5, r1, #16
 80117b0:	fb06 5504 	mla	r5, r6, r4, r5
 80117b4:	9c01      	ldr	r4, [sp, #4]
 80117b6:	5d64      	ldrb	r4, [r4, r5]
 80117b8:	2cff      	cmp	r4, #255	; 0xff
 80117ba:	d10b      	bne.n	80117d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80117bc:	9c00      	ldr	r4, [sp, #0]
 80117be:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80117c2:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80117c6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80117c8:	4421      	add	r1, r4
 80117ca:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80117cc:	f109 0901 	add.w	r9, r9, #1
 80117d0:	4422      	add	r2, r4
 80117d2:	e7e4      	b.n	801179e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80117d4:	2c00      	cmp	r4, #0
 80117d6:	d0f6      	beq.n	80117c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80117d8:	9e00      	ldr	r6, [sp, #0]
 80117da:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80117de:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80117e2:	b2a7      	uxth	r7, r4
 80117e4:	122e      	asrs	r6, r5, #8
 80117e6:	43e4      	mvns	r4, r4
 80117e8:	b2e4      	uxtb	r4, r4
 80117ea:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80117ee:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80117f2:	fb16 f604 	smulbb	r6, r6, r4
 80117f6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80117fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80117fe:	00ed      	lsls	r5, r5, #3
 8011800:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011804:	b2ed      	uxtb	r5, r5
 8011806:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801180a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801180e:	fb15 f504 	smulbb	r5, r5, r4
 8011812:	fa5f fe8e 	uxtb.w	lr, lr
 8011816:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801181a:	fb0e 5507 	mla	r5, lr, r7, r5
 801181e:	fb1a fa04 	smulbb	sl, sl, r4
 8011822:	fa1f fc8c 	uxth.w	ip, ip
 8011826:	b2ad      	uxth	r5, r5
 8011828:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801182c:	fb06 a607 	mla	r6, r6, r7, sl
 8011830:	f10c 0401 	add.w	r4, ip, #1
 8011834:	f105 0a01 	add.w	sl, r5, #1
 8011838:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801183c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011840:	b2b6      	uxth	r6, r6
 8011842:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011846:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801184a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801184e:	f106 0a01 	add.w	sl, r6, #1
 8011852:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011856:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801185a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801185e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011862:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8011866:	e7ae      	b.n	80117c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8011868:	b005      	add	sp, #20
 801186a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801186e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801186e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011872:	b085      	sub	sp, #20
 8011874:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011876:	9203      	str	r2, [sp, #12]
 8011878:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801187c:	9201      	str	r2, [sp, #4]
 801187e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011882:	9100      	str	r1, [sp, #0]
 8011884:	6841      	ldr	r1, [r0, #4]
 8011886:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801188a:	fb01 2404 	mla	r4, r1, r4, r2
 801188e:	6802      	ldr	r2, [r0, #0]
 8011890:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011894:	f8de 2000 	ldr.w	r2, [lr]
 8011898:	9202      	str	r2, [sp, #8]
 801189a:	9a01      	ldr	r2, [sp, #4]
 801189c:	43d6      	mvns	r6, r2
 801189e:	b2f6      	uxtb	r6, r6
 80118a0:	9a00      	ldr	r2, [sp, #0]
 80118a2:	2a00      	cmp	r2, #0
 80118a4:	dc03      	bgt.n	80118ae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80118a6:	9a03      	ldr	r2, [sp, #12]
 80118a8:	2a00      	cmp	r2, #0
 80118aa:	f340 8124 	ble.w	8011af6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80118ae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80118b0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80118b4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80118b8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80118bc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80118be:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80118c2:	2b00      	cmp	r3, #0
 80118c4:	dd0e      	ble.n	80118e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80118c6:	1408      	asrs	r0, r1, #16
 80118c8:	d405      	bmi.n	80118d6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80118ca:	4560      	cmp	r0, ip
 80118cc:	da03      	bge.n	80118d6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80118ce:	1410      	asrs	r0, r2, #16
 80118d0:	d401      	bmi.n	80118d6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80118d2:	42b8      	cmp	r0, r7
 80118d4:	db07      	blt.n	80118e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80118d6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80118d8:	4401      	add	r1, r0
 80118da:	9812      	ldr	r0, [sp, #72]	; 0x48
 80118dc:	3b01      	subs	r3, #1
 80118de:	4402      	add	r2, r0
 80118e0:	3402      	adds	r4, #2
 80118e2:	e7ee      	b.n	80118c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80118e4:	d06e      	beq.n	80119c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80118e6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80118e8:	1e58      	subs	r0, r3, #1
 80118ea:	fb05 1500 	mla	r5, r5, r0, r1
 80118ee:	142d      	asrs	r5, r5, #16
 80118f0:	d45c      	bmi.n	80119ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80118f2:	4565      	cmp	r5, ip
 80118f4:	da5a      	bge.n	80119ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80118f6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80118f8:	fb05 2000 	mla	r0, r5, r0, r2
 80118fc:	1400      	asrs	r0, r0, #16
 80118fe:	d455      	bmi.n	80119ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011900:	42b8      	cmp	r0, r7
 8011902:	da53      	bge.n	80119ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011904:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8011908:	4699      	mov	r9, r3
 801190a:	46a2      	mov	sl, r4
 801190c:	f1b9 0f00 	cmp.w	r9, #0
 8011910:	dd54      	ble.n	80119bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011912:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011916:	140d      	asrs	r5, r1, #16
 8011918:	1410      	asrs	r0, r2, #16
 801191a:	fb07 5000 	mla	r0, r7, r0, r5
 801191e:	9d02      	ldr	r5, [sp, #8]
 8011920:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011924:	f8ba 5000 	ldrh.w	r5, [sl]
 8011928:	122f      	asrs	r7, r5, #8
 801192a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801192e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011932:	fb17 f706 	smulbb	r7, r7, r6
 8011936:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801193a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801193e:	00ed      	lsls	r5, r5, #3
 8011940:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8011944:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011948:	10c7      	asrs	r7, r0, #3
 801194a:	b2ed      	uxtb	r5, r5
 801194c:	00c0      	lsls	r0, r0, #3
 801194e:	fb18 f806 	smulbb	r8, r8, r6
 8011952:	fb15 f506 	smulbb	r5, r5, r6
 8011956:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801195a:	b2c0      	uxtb	r0, r0
 801195c:	fa1f fc8c 	uxth.w	ip, ip
 8011960:	fb07 870b 	mla	r7, r7, fp, r8
 8011964:	fb00 500b 	mla	r0, r0, fp, r5
 8011968:	b280      	uxth	r0, r0
 801196a:	b2bf      	uxth	r7, r7
 801196c:	f10c 0501 	add.w	r5, ip, #1
 8011970:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011974:	f107 0801 	add.w	r8, r7, #1
 8011978:	1c45      	adds	r5, r0, #1
 801197a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801197e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8011982:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011984:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011988:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801198c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011990:	ea45 0c0c 	orr.w	ip, r5, ip
 8011994:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8011998:	4401      	add	r1, r0
 801199a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801199c:	ea4c 0c08 	orr.w	ip, ip, r8
 80119a0:	f82a cb02 	strh.w	ip, [sl], #2
 80119a4:	4402      	add	r2, r0
 80119a6:	f109 39ff 	add.w	r9, r9, #4294967295
 80119aa:	e7af      	b.n	801190c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80119ac:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80119b0:	f04f 0800 	mov.w	r8, #0
 80119b4:	eb03 0008 	add.w	r0, r3, r8
 80119b8:	2800      	cmp	r0, #0
 80119ba:	dc41      	bgt.n	8011a40 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80119bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80119c0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80119c4:	9b00      	ldr	r3, [sp, #0]
 80119c6:	2b00      	cmp	r3, #0
 80119c8:	f340 8095 	ble.w	8011af6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80119cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80119d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80119d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80119d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80119da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80119de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80119e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80119e6:	eef0 6a62 	vmov.f32	s13, s5
 80119ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80119ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80119f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80119f6:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80119fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80119fe:	eef0 6a43 	vmov.f32	s13, s6
 8011a02:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011a06:	ee12 2a90 	vmov	r2, s5
 8011a0a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011a0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a12:	ee13 2a10 	vmov	r2, s6
 8011a16:	9311      	str	r3, [sp, #68]	; 0x44
 8011a18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011a1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a1e:	9312      	str	r3, [sp, #72]	; 0x48
 8011a20:	9b00      	ldr	r3, [sp, #0]
 8011a22:	9a03      	ldr	r2, [sp, #12]
 8011a24:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011a28:	3b01      	subs	r3, #1
 8011a2a:	9300      	str	r3, [sp, #0]
 8011a2c:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8011a30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011a32:	eeb0 3a67 	vmov.f32	s6, s15
 8011a36:	bf08      	it	eq
 8011a38:	4613      	moveq	r3, r2
 8011a3a:	eef0 2a47 	vmov.f32	s5, s14
 8011a3e:	e72f      	b.n	80118a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8011a40:	140f      	asrs	r7, r1, #16
 8011a42:	d451      	bmi.n	8011ae8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011a44:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011a48:	42bd      	cmp	r5, r7
 8011a4a:	dd4d      	ble.n	8011ae8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011a4c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011a50:	d44a      	bmi.n	8011ae8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011a52:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011a56:	4560      	cmp	r0, ip
 8011a58:	dd46      	ble.n	8011ae8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011a5a:	b22d      	sxth	r5, r5
 8011a5c:	fb0c 7505 	mla	r5, ip, r5, r7
 8011a60:	9802      	ldr	r0, [sp, #8]
 8011a62:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8011a66:	f06f 0501 	mvn.w	r5, #1
 8011a6a:	fb05 fb08 	mul.w	fp, r5, r8
 8011a6e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011a72:	f834 500b 	ldrh.w	r5, [r4, fp]
 8011a76:	122f      	asrs	r7, r5, #8
 8011a78:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011a7c:	fb17 f706 	smulbb	r7, r7, r6
 8011a80:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8011a84:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011a88:	00ed      	lsls	r5, r5, #3
 8011a8a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8011a8e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011a92:	10c7      	asrs	r7, r0, #3
 8011a94:	b2ed      	uxtb	r5, r5
 8011a96:	00c0      	lsls	r0, r0, #3
 8011a98:	fb19 f906 	smulbb	r9, r9, r6
 8011a9c:	fb15 f506 	smulbb	r5, r5, r6
 8011aa0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011aa4:	b2c0      	uxtb	r0, r0
 8011aa6:	fa1f fc8c 	uxth.w	ip, ip
 8011aaa:	fb07 970a 	mla	r7, r7, sl, r9
 8011aae:	fb00 500a 	mla	r0, r0, sl, r5
 8011ab2:	b2bf      	uxth	r7, r7
 8011ab4:	b280      	uxth	r0, r0
 8011ab6:	f10c 0501 	add.w	r5, ip, #1
 8011aba:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011abe:	f107 0901 	add.w	r9, r7, #1
 8011ac2:	1c45      	adds	r5, r0, #1
 8011ac4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011ac8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011acc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011ad0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011ad4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011ad8:	ea45 0c0c 	orr.w	ip, r5, ip
 8011adc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011ae0:	ea4c 0c09 	orr.w	ip, ip, r9
 8011ae4:	f824 c00b 	strh.w	ip, [r4, fp]
 8011ae8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011aea:	4401      	add	r1, r0
 8011aec:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011aee:	f108 38ff 	add.w	r8, r8, #4294967295
 8011af2:	4402      	add	r2, r0
 8011af4:	e75e      	b.n	80119b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8011af6:	b005      	add	sp, #20
 8011af8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011afc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011afc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b00:	b085      	sub	sp, #20
 8011b02:	4693      	mov	fp, r2
 8011b04:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011b06:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8011b08:	6870      	ldr	r0, [r6, #4]
 8011b0a:	9101      	str	r1, [sp, #4]
 8011b0c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011b10:	fb00 2404 	mla	r4, r0, r4, r2
 8011b14:	6832      	ldr	r2, [r6, #0]
 8011b16:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8011b1a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011b1e:	682a      	ldr	r2, [r5, #0]
 8011b20:	9202      	str	r2, [sp, #8]
 8011b22:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011b26:	9a01      	ldr	r2, [sp, #4]
 8011b28:	2a00      	cmp	r2, #0
 8011b2a:	dc03      	bgt.n	8011b34 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011b2c:	f1bb 0f00 	cmp.w	fp, #0
 8011b30:	f340 809a 	ble.w	8011c68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8011b34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011b36:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011b3a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011b3e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011b42:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011b44:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011b48:	2b00      	cmp	r3, #0
 8011b4a:	dd0c      	ble.n	8011b66 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8011b4c:	1406      	asrs	r6, r0, #16
 8011b4e:	d405      	bmi.n	8011b5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011b50:	454e      	cmp	r6, r9
 8011b52:	da03      	bge.n	8011b5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011b54:	1416      	asrs	r6, r2, #16
 8011b56:	d401      	bmi.n	8011b5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011b58:	4546      	cmp	r6, r8
 8011b5a:	db05      	blt.n	8011b68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011b5c:	4470      	add	r0, lr
 8011b5e:	4462      	add	r2, ip
 8011b60:	3b01      	subs	r3, #1
 8011b62:	3402      	adds	r4, #2
 8011b64:	e7f0      	b.n	8011b48 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011b66:	d00f      	beq.n	8011b88 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8011b68:	1e5e      	subs	r6, r3, #1
 8011b6a:	fb0e 0706 	mla	r7, lr, r6, r0
 8011b6e:	143f      	asrs	r7, r7, #16
 8011b70:	d541      	bpl.n	8011bf6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8011b72:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8011b76:	4698      	mov	r8, r3
 8011b78:	9603      	str	r6, [sp, #12]
 8011b7a:	f1b8 0f00 	cmp.w	r8, #0
 8011b7e:	dc56      	bgt.n	8011c2e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8011b80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011b84:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011b88:	9b01      	ldr	r3, [sp, #4]
 8011b8a:	2b00      	cmp	r3, #0
 8011b8c:	dd6c      	ble.n	8011c68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8011b8e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011b92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011b96:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011b9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011b9c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011ba0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011ba4:	eeb0 6a62 	vmov.f32	s12, s5
 8011ba8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011bac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011bb0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011bb4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011bb8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011bbc:	eeb0 6a43 	vmov.f32	s12, s6
 8011bc0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011bc4:	ee12 2a90 	vmov	r2, s5
 8011bc8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011bcc:	fb92 fef3 	sdiv	lr, r2, r3
 8011bd0:	ee13 2a10 	vmov	r2, s6
 8011bd4:	fb92 fcf3 	sdiv	ip, r2, r3
 8011bd8:	9b01      	ldr	r3, [sp, #4]
 8011bda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011bde:	3b01      	subs	r3, #1
 8011be0:	9301      	str	r3, [sp, #4]
 8011be2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011be6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011be8:	eeb0 3a67 	vmov.f32	s6, s15
 8011bec:	bf08      	it	eq
 8011bee:	465b      	moveq	r3, fp
 8011bf0:	eef0 2a47 	vmov.f32	s5, s14
 8011bf4:	e797      	b.n	8011b26 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8011bf6:	454f      	cmp	r7, r9
 8011bf8:	dabb      	bge.n	8011b72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011bfa:	fb0c 2606 	mla	r6, ip, r6, r2
 8011bfe:	1436      	asrs	r6, r6, #16
 8011c00:	d4b7      	bmi.n	8011b72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011c02:	4546      	cmp	r6, r8
 8011c04:	dab5      	bge.n	8011b72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011c06:	461e      	mov	r6, r3
 8011c08:	46a0      	mov	r8, r4
 8011c0a:	2e00      	cmp	r6, #0
 8011c0c:	ddb8      	ble.n	8011b80 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011c0e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8011c12:	9902      	ldr	r1, [sp, #8]
 8011c14:	1417      	asrs	r7, r2, #16
 8011c16:	ea4f 4920 	mov.w	r9, r0, asr #16
 8011c1a:	fb0a 9707 	mla	r7, sl, r7, r9
 8011c1e:	4470      	add	r0, lr
 8011c20:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8011c24:	f828 7b02 	strh.w	r7, [r8], #2
 8011c28:	4462      	add	r2, ip
 8011c2a:	3e01      	subs	r6, #1
 8011c2c:	e7ed      	b.n	8011c0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8011c2e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011c32:	d414      	bmi.n	8011c5e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011c34:	68ae      	ldr	r6, [r5, #8]
 8011c36:	454e      	cmp	r6, r9
 8011c38:	dd11      	ble.n	8011c5e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011c3a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011c3e:	d40e      	bmi.n	8011c5e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011c40:	68ef      	ldr	r7, [r5, #12]
 8011c42:	4557      	cmp	r7, sl
 8011c44:	dd0b      	ble.n	8011c5e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011c46:	b236      	sxth	r6, r6
 8011c48:	fb0a 9606 	mla	r6, sl, r6, r9
 8011c4c:	9f02      	ldr	r7, [sp, #8]
 8011c4e:	f06f 0101 	mvn.w	r1, #1
 8011c52:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8011c56:	fb01 f608 	mul.w	r6, r1, r8
 8011c5a:	9903      	ldr	r1, [sp, #12]
 8011c5c:	538f      	strh	r7, [r1, r6]
 8011c5e:	4470      	add	r0, lr
 8011c60:	4462      	add	r2, ip
 8011c62:	f108 38ff 	add.w	r8, r8, #4294967295
 8011c66:	e788      	b.n	8011b7a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011c68:	b005      	add	sp, #20
 8011c6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011c6e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011c6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c72:	b087      	sub	sp, #28
 8011c74:	468b      	mov	fp, r1
 8011c76:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011c78:	9203      	str	r2, [sp, #12]
 8011c7a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011c7e:	9204      	str	r2, [sp, #16]
 8011c80:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8011c84:	6841      	ldr	r1, [r0, #4]
 8011c86:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8011c8a:	fb01 2505 	mla	r5, r1, r5, r2
 8011c8e:	6802      	ldr	r2, [r0, #0]
 8011c90:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8011c94:	f8d9 2000 	ldr.w	r2, [r9]
 8011c98:	9201      	str	r2, [sp, #4]
 8011c9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011c9e:	f1bb 0f00 	cmp.w	fp, #0
 8011ca2:	dc03      	bgt.n	8011cac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011ca4:	9a03      	ldr	r2, [sp, #12]
 8011ca6:	2a00      	cmp	r2, #0
 8011ca8:	f340 8159 	ble.w	8011f5e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011cac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011cae:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8011cb2:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8011cb6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011cba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011cbc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011cc0:	2b00      	cmp	r3, #0
 8011cc2:	dd0e      	ble.n	8011ce2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8011cc4:	1402      	asrs	r2, r0, #16
 8011cc6:	d405      	bmi.n	8011cd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011cc8:	42ba      	cmp	r2, r7
 8011cca:	da03      	bge.n	8011cd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011ccc:	140a      	asrs	r2, r1, #16
 8011cce:	d401      	bmi.n	8011cd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011cd0:	42b2      	cmp	r2, r6
 8011cd2:	db07      	blt.n	8011ce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011cd4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011cd6:	4410      	add	r0, r2
 8011cd8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011cda:	3b01      	subs	r3, #1
 8011cdc:	4411      	add	r1, r2
 8011cde:	3502      	adds	r5, #2
 8011ce0:	e7ee      	b.n	8011cc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011ce2:	d017      	beq.n	8011d14 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011ce4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011ce6:	1e5a      	subs	r2, r3, #1
 8011ce8:	fb04 0402 	mla	r4, r4, r2, r0
 8011cec:	1424      	asrs	r4, r4, #16
 8011cee:	d409      	bmi.n	8011d04 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011cf0:	42bc      	cmp	r4, r7
 8011cf2:	da07      	bge.n	8011d04 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011cf4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011cf6:	fb04 1202 	mla	r2, r4, r2, r1
 8011cfa:	1412      	asrs	r2, r2, #16
 8011cfc:	d402      	bmi.n	8011d04 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011cfe:	42b2      	cmp	r2, r6
 8011d00:	f2c0 80bf 	blt.w	8011e82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8011d04:	2700      	movs	r7, #0
 8011d06:	19da      	adds	r2, r3, r7
 8011d08:	2a00      	cmp	r2, #0
 8011d0a:	dc3e      	bgt.n	8011d8a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8011d0c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011d10:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8011d14:	f1bb 0f00 	cmp.w	fp, #0
 8011d18:	f340 8121 	ble.w	8011f5e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011d1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011d20:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011d24:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011d28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d2a:	f1bb 0b01 	subs.w	fp, fp, #1
 8011d2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011d32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011d36:	eeb0 6a62 	vmov.f32	s12, s5
 8011d3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011d3e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d42:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011d46:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011d4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011d4e:	eeb0 6a43 	vmov.f32	s12, s6
 8011d52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011d56:	ee12 2a90 	vmov	r2, s5
 8011d5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011d5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d62:	ee13 2a10 	vmov	r2, s6
 8011d66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d6a:	9313      	str	r3, [sp, #76]	; 0x4c
 8011d6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d72:	9a03      	ldr	r2, [sp, #12]
 8011d74:	9314      	str	r3, [sp, #80]	; 0x50
 8011d76:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011d7a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d7c:	eeb0 3a67 	vmov.f32	s6, s15
 8011d80:	bf08      	it	eq
 8011d82:	4613      	moveq	r3, r2
 8011d84:	eef0 2a47 	vmov.f32	s5, s14
 8011d88:	e789      	b.n	8011c9e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8011d8a:	1406      	asrs	r6, r0, #16
 8011d8c:	d42d      	bmi.n	8011dea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011d8e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8011d92:	42b4      	cmp	r4, r6
 8011d94:	dd29      	ble.n	8011dea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011d96:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8011d9a:	d426      	bmi.n	8011dea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011d9c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8011da0:	4562      	cmp	r2, ip
 8011da2:	dd22      	ble.n	8011dea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011da4:	b224      	sxth	r4, r4
 8011da6:	9a01      	ldr	r2, [sp, #4]
 8011da8:	fb0c 6404 	mla	r4, ip, r4, r6
 8011dac:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8011db0:	0e22      	lsrs	r2, r4, #24
 8011db2:	d01a      	beq.n	8011dea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011db4:	9e04      	ldr	r6, [sp, #16]
 8011db6:	4372      	muls	r2, r6
 8011db8:	1c56      	adds	r6, r2, #1
 8011dba:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011dbe:	1212      	asrs	r2, r2, #8
 8011dc0:	0a26      	lsrs	r6, r4, #8
 8011dc2:	2aff      	cmp	r2, #255	; 0xff
 8011dc4:	9605      	str	r6, [sp, #20]
 8011dc6:	d116      	bne.n	8011df6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8011dc8:	f06f 0201 	mvn.w	r2, #1
 8011dcc:	fb02 fc07 	mul.w	ip, r2, r7
 8011dd0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011dd4:	0962      	lsrs	r2, r4, #5
 8011dd6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011dda:	f026 0607 	bic.w	r6, r6, #7
 8011dde:	4316      	orrs	r6, r2
 8011de0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011de4:	4326      	orrs	r6, r4
 8011de6:	f825 600c 	strh.w	r6, [r5, ip]
 8011dea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011dec:	4410      	add	r0, r2
 8011dee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011df0:	3f01      	subs	r7, #1
 8011df2:	4411      	add	r1, r2
 8011df4:	e787      	b.n	8011d06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011df6:	f06f 0601 	mvn.w	r6, #1
 8011dfa:	437e      	muls	r6, r7
 8011dfc:	fa1f fa82 	uxth.w	sl, r2
 8011e00:	f835 8006 	ldrh.w	r8, [r5, r6]
 8011e04:	9602      	str	r6, [sp, #8]
 8011e06:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011e0a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8011e0e:	43d2      	mvns	r2, r2
 8011e10:	b2d2      	uxtb	r2, r2
 8011e12:	fb1c fc0a 	smulbb	ip, ip, sl
 8011e16:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011e1a:	fb0e ce02 	mla	lr, lr, r2, ip
 8011e1e:	b2e4      	uxtb	r4, r4
 8011e20:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8011e24:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011e28:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8011e2c:	fa5f f888 	uxtb.w	r8, r8
 8011e30:	fb14 f40a 	smulbb	r4, r4, sl
 8011e34:	fb08 4402 	mla	r4, r8, r2, r4
 8011e38:	fa1f fe8e 	uxth.w	lr, lr
 8011e3c:	fb16 f60a 	smulbb	r6, r6, sl
 8011e40:	b2a4      	uxth	r4, r4
 8011e42:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011e46:	fb0c 6c02 	mla	ip, ip, r2, r6
 8011e4a:	f10e 0201 	add.w	r2, lr, #1
 8011e4e:	1c66      	adds	r6, r4, #1
 8011e50:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8011e54:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011e58:	fa1f fc8c 	uxth.w	ip, ip
 8011e5c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011e60:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011e64:	ea46 0e0e 	orr.w	lr, r6, lr
 8011e68:	f10c 0601 	add.w	r6, ip, #1
 8011e6c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011e70:	0976      	lsrs	r6, r6, #5
 8011e72:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011e76:	9a02      	ldr	r2, [sp, #8]
 8011e78:	ea4e 0e06 	orr.w	lr, lr, r6
 8011e7c:	f825 e002 	strh.w	lr, [r5, r2]
 8011e80:	e7b3      	b.n	8011dea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011e82:	f04f 0800 	mov.w	r8, #0
 8011e86:	eba3 0208 	sub.w	r2, r3, r8
 8011e8a:	2a00      	cmp	r2, #0
 8011e8c:	f77f af3e 	ble.w	8011d0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011e90:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8011e94:	1404      	asrs	r4, r0, #16
 8011e96:	140a      	asrs	r2, r1, #16
 8011e98:	fb06 4202 	mla	r2, r6, r2, r4
 8011e9c:	9c01      	ldr	r4, [sp, #4]
 8011e9e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8011ea2:	0e22      	lsrs	r2, r4, #24
 8011ea4:	d016      	beq.n	8011ed4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8011ea6:	9e04      	ldr	r6, [sp, #16]
 8011ea8:	4372      	muls	r2, r6
 8011eaa:	1c56      	adds	r6, r2, #1
 8011eac:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011eb0:	1212      	asrs	r2, r2, #8
 8011eb2:	2aff      	cmp	r2, #255	; 0xff
 8011eb4:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8011eb8:	d113      	bne.n	8011ee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8011eba:	0962      	lsrs	r2, r4, #5
 8011ebc:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011ec0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011ec4:	f026 0607 	bic.w	r6, r6, #7
 8011ec8:	4316      	orrs	r6, r2
 8011eca:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011ece:	4326      	orrs	r6, r4
 8011ed0:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8011ed4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011ed6:	4410      	add	r0, r2
 8011ed8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011eda:	f108 0801 	add.w	r8, r8, #1
 8011ede:	4411      	add	r1, r2
 8011ee0:	e7d1      	b.n	8011e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8011ee2:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8011ee6:	fa1f fa82 	uxth.w	sl, r2
 8011eea:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011eee:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8011ef2:	43d2      	mvns	r2, r2
 8011ef4:	b2d2      	uxtb	r2, r2
 8011ef6:	fb17 f70a 	smulbb	r7, r7, sl
 8011efa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011efe:	fb0c 7c02 	mla	ip, ip, r2, r7
 8011f02:	b2e4      	uxtb	r4, r4
 8011f04:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011f08:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011f0c:	fa5f fe8e 	uxtb.w	lr, lr
 8011f10:	fb14 f40a 	smulbb	r4, r4, sl
 8011f14:	fb0e 4402 	mla	r4, lr, r2, r4
 8011f18:	b2f6      	uxtb	r6, r6
 8011f1a:	fa1f fc8c 	uxth.w	ip, ip
 8011f1e:	fb16 f60a 	smulbb	r6, r6, sl
 8011f22:	b2a4      	uxth	r4, r4
 8011f24:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011f28:	fb07 6702 	mla	r7, r7, r2, r6
 8011f2c:	f10c 0201 	add.w	r2, ip, #1
 8011f30:	1c66      	adds	r6, r4, #1
 8011f32:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8011f36:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011f3a:	b2bf      	uxth	r7, r7
 8011f3c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011f40:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011f44:	ea46 0c0c 	orr.w	ip, r6, ip
 8011f48:	1c7e      	adds	r6, r7, #1
 8011f4a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8011f4e:	0976      	lsrs	r6, r6, #5
 8011f50:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011f54:	ea4c 0c06 	orr.w	ip, ip, r6
 8011f58:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8011f5c:	e7ba      	b.n	8011ed4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8011f5e:	b007      	add	sp, #28
 8011f60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011f64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011f64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f68:	b085      	sub	sp, #20
 8011f6a:	468b      	mov	fp, r1
 8011f6c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011f6e:	9203      	str	r2, [sp, #12]
 8011f70:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011f74:	6841      	ldr	r1, [r0, #4]
 8011f76:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8011f7a:	fb01 2404 	mla	r4, r1, r4, r2
 8011f7e:	6802      	ldr	r2, [r0, #0]
 8011f80:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011f84:	f8d8 2000 	ldr.w	r2, [r8]
 8011f88:	9201      	str	r2, [sp, #4]
 8011f8a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011f8e:	f1bb 0f00 	cmp.w	fp, #0
 8011f92:	dc03      	bgt.n	8011f9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011f94:	9a03      	ldr	r2, [sp, #12]
 8011f96:	2a00      	cmp	r2, #0
 8011f98:	f340 814f 	ble.w	801223a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011f9c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011f9e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011fa2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011fa6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011faa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011fac:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011fb0:	2b00      	cmp	r3, #0
 8011fb2:	dd0e      	ble.n	8011fd2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011fb4:	1408      	asrs	r0, r1, #16
 8011fb6:	d405      	bmi.n	8011fc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011fb8:	42b8      	cmp	r0, r7
 8011fba:	da03      	bge.n	8011fc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011fbc:	1410      	asrs	r0, r2, #16
 8011fbe:	d401      	bmi.n	8011fc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011fc0:	42b0      	cmp	r0, r6
 8011fc2:	db07      	blt.n	8011fd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011fc4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011fc6:	4401      	add	r1, r0
 8011fc8:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011fca:	3b01      	subs	r3, #1
 8011fcc:	4402      	add	r2, r0
 8011fce:	3402      	adds	r4, #2
 8011fd0:	e7ee      	b.n	8011fb0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011fd2:	d017      	beq.n	8012004 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011fd4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011fd6:	1e58      	subs	r0, r3, #1
 8011fd8:	fb05 1500 	mla	r5, r5, r0, r1
 8011fdc:	142d      	asrs	r5, r5, #16
 8011fde:	d409      	bmi.n	8011ff4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011fe0:	42bd      	cmp	r5, r7
 8011fe2:	da07      	bge.n	8011ff4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011fe4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011fe6:	fb05 2000 	mla	r0, r5, r0, r2
 8011fea:	1400      	asrs	r0, r0, #16
 8011fec:	d402      	bmi.n	8011ff4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011fee:	42b0      	cmp	r0, r6
 8011ff0:	f2c0 80ba 	blt.w	8012168 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8011ff4:	2600      	movs	r6, #0
 8011ff6:	1998      	adds	r0, r3, r6
 8011ff8:	2800      	cmp	r0, #0
 8011ffa:	dc3e      	bgt.n	801207a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8011ffc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012000:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012004:	f1bb 0f00 	cmp.w	fp, #0
 8012008:	f340 8117 	ble.w	801223a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801200c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012010:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012014:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012018:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801201a:	f1bb 0b01 	subs.w	fp, fp, #1
 801201e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012022:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012026:	eeb0 6a62 	vmov.f32	s12, s5
 801202a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801202e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012032:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012036:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801203a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801203e:	eeb0 6a43 	vmov.f32	s12, s6
 8012042:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012046:	ee12 2a90 	vmov	r2, s5
 801204a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801204e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012052:	ee13 2a10 	vmov	r2, s6
 8012056:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801205a:	9311      	str	r3, [sp, #68]	; 0x44
 801205c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801205e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012062:	9a03      	ldr	r2, [sp, #12]
 8012064:	9312      	str	r3, [sp, #72]	; 0x48
 8012066:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801206a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801206c:	eeb0 3a67 	vmov.f32	s6, s15
 8012070:	bf08      	it	eq
 8012072:	4613      	moveq	r3, r2
 8012074:	eef0 2a47 	vmov.f32	s5, s14
 8012078:	e789      	b.n	8011f8e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801207a:	140f      	asrs	r7, r1, #16
 801207c:	d424      	bmi.n	80120c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801207e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8012082:	42bd      	cmp	r5, r7
 8012084:	dd20      	ble.n	80120c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012086:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801208a:	d41d      	bmi.n	80120c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801208c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8012090:	4560      	cmp	r0, ip
 8012092:	dd19      	ble.n	80120c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012094:	b22d      	sxth	r5, r5
 8012096:	fb0c 7505 	mla	r5, ip, r5, r7
 801209a:	9801      	ldr	r0, [sp, #4]
 801209c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80120a0:	0e07      	lsrs	r7, r0, #24
 80120a2:	2fff      	cmp	r7, #255	; 0xff
 80120a4:	d116      	bne.n	80120d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80120a6:	f06f 0501 	mvn.w	r5, #1
 80120aa:	fb05 f706 	mul.w	r7, r5, r6
 80120ae:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80120b2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80120b6:	0945      	lsrs	r5, r0, #5
 80120b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80120bc:	ea4c 0505 	orr.w	r5, ip, r5
 80120c0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80120c4:	4305      	orrs	r5, r0
 80120c6:	53e5      	strh	r5, [r4, r7]
 80120c8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80120ca:	4401      	add	r1, r0
 80120cc:	9812      	ldr	r0, [sp, #72]	; 0x48
 80120ce:	3e01      	subs	r6, #1
 80120d0:	4402      	add	r2, r0
 80120d2:	e790      	b.n	8011ff6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80120d4:	b2fd      	uxtb	r5, r7
 80120d6:	2f00      	cmp	r7, #0
 80120d8:	d0f6      	beq.n	80120c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80120da:	f06f 0701 	mvn.w	r7, #1
 80120de:	4377      	muls	r7, r6
 80120e0:	fa1f f985 	uxth.w	r9, r5
 80120e4:	f834 e007 	ldrh.w	lr, [r4, r7]
 80120e8:	9702      	str	r7, [sp, #8]
 80120ea:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80120ee:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80120f2:	43ed      	mvns	r5, r5
 80120f4:	b2ed      	uxtb	r5, r5
 80120f6:	fb17 f709 	smulbb	r7, r7, r9
 80120fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80120fe:	fb0c 7c05 	mla	ip, ip, r5, r7
 8012102:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8012106:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801210a:	b2c0      	uxtb	r0, r0
 801210c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012110:	fa5f fe8e 	uxtb.w	lr, lr
 8012114:	fb10 f009 	smulbb	r0, r0, r9
 8012118:	fb0e 0005 	mla	r0, lr, r5, r0
 801211c:	b280      	uxth	r0, r0
 801211e:	fa1f fc8c 	uxth.w	ip, ip
 8012122:	fb1a fa09 	smulbb	sl, sl, r9
 8012126:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801212a:	fb07 a705 	mla	r7, r7, r5, sl
 801212e:	f100 0a01 	add.w	sl, r0, #1
 8012132:	f10c 0501 	add.w	r5, ip, #1
 8012136:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801213a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801213e:	b2bf      	uxth	r7, r7
 8012140:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012144:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012148:	ea4a 0c0c 	orr.w	ip, sl, ip
 801214c:	f107 0a01 	add.w	sl, r7, #1
 8012150:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012154:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012158:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801215c:	9802      	ldr	r0, [sp, #8]
 801215e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012162:	f824 c000 	strh.w	ip, [r4, r0]
 8012166:	e7af      	b.n	80120c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012168:	f04f 0e00 	mov.w	lr, #0
 801216c:	eba3 000e 	sub.w	r0, r3, lr
 8012170:	2800      	cmp	r0, #0
 8012172:	f77f af43 	ble.w	8011ffc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012176:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801217a:	140d      	asrs	r5, r1, #16
 801217c:	1410      	asrs	r0, r2, #16
 801217e:	fb06 5000 	mla	r0, r6, r0, r5
 8012182:	9d01      	ldr	r5, [sp, #4]
 8012184:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8012188:	0e2e      	lsrs	r6, r5, #24
 801218a:	2eff      	cmp	r6, #255	; 0xff
 801218c:	d112      	bne.n	80121b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801218e:	482c      	ldr	r0, [pc, #176]	; (8012240 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8012190:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8012194:	0968      	lsrs	r0, r5, #5
 8012196:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801219a:	4330      	orrs	r0, r6
 801219c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80121a0:	4328      	orrs	r0, r5
 80121a2:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80121a6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80121a8:	4401      	add	r1, r0
 80121aa:	9812      	ldr	r0, [sp, #72]	; 0x48
 80121ac:	f10e 0e01 	add.w	lr, lr, #1
 80121b0:	4402      	add	r2, r0
 80121b2:	e7db      	b.n	801216c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80121b4:	b2f0      	uxtb	r0, r6
 80121b6:	2e00      	cmp	r6, #0
 80121b8:	d0f5      	beq.n	80121a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80121ba:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80121be:	fa1f f980 	uxth.w	r9, r0
 80121c2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80121c6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80121ca:	43c0      	mvns	r0, r0
 80121cc:	b2c0      	uxtb	r0, r0
 80121ce:	fb16 f609 	smulbb	r6, r6, r9
 80121d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80121d6:	fb07 6700 	mla	r7, r7, r0, r6
 80121da:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80121de:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80121e2:	b2ed      	uxtb	r5, r5
 80121e4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80121e8:	fa5f fc8c 	uxtb.w	ip, ip
 80121ec:	fb15 f509 	smulbb	r5, r5, r9
 80121f0:	fb0c 5500 	mla	r5, ip, r0, r5
 80121f4:	b2bf      	uxth	r7, r7
 80121f6:	fb1a fa09 	smulbb	sl, sl, r9
 80121fa:	b2ad      	uxth	r5, r5
 80121fc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012200:	fb06 a600 	mla	r6, r6, r0, sl
 8012204:	1c78      	adds	r0, r7, #1
 8012206:	f105 0a01 	add.w	sl, r5, #1
 801220a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801220e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012212:	b2b6      	uxth	r6, r6
 8012214:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012218:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801221c:	ea4a 0707 	orr.w	r7, sl, r7
 8012220:	f106 0a01 	add.w	sl, r6, #1
 8012224:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012228:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801222c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012230:	ea47 070a 	orr.w	r7, r7, sl
 8012234:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8012238:	e7b5      	b.n	80121a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801223a:	b005      	add	sp, #20
 801223c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012240:	fffff800 	.word	0xfffff800

08012244 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012244:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012248:	b087      	sub	sp, #28
 801224a:	468b      	mov	fp, r1
 801224c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801224e:	9203      	str	r2, [sp, #12]
 8012250:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8012254:	9204      	str	r2, [sp, #16]
 8012256:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801225a:	6841      	ldr	r1, [r0, #4]
 801225c:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8012260:	fb01 2404 	mla	r4, r1, r4, r2
 8012264:	6802      	ldr	r2, [r0, #0]
 8012266:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801226a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801226e:	3201      	adds	r2, #1
 8012270:	f022 0201 	bic.w	r2, r2, #1
 8012274:	9200      	str	r2, [sp, #0]
 8012276:	f8d9 2000 	ldr.w	r2, [r9]
 801227a:	9201      	str	r2, [sp, #4]
 801227c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012280:	f1bb 0f00 	cmp.w	fp, #0
 8012284:	dc03      	bgt.n	801228e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8012286:	9a03      	ldr	r2, [sp, #12]
 8012288:	2a00      	cmp	r2, #0
 801228a:	f340 8169 	ble.w	8012560 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801228e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012290:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8012294:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8012298:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801229c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801229e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80122a2:	2b00      	cmp	r3, #0
 80122a4:	dd0e      	ble.n	80122c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80122a6:	1402      	asrs	r2, r0, #16
 80122a8:	d405      	bmi.n	80122b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80122aa:	42ba      	cmp	r2, r7
 80122ac:	da03      	bge.n	80122b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80122ae:	140a      	asrs	r2, r1, #16
 80122b0:	d401      	bmi.n	80122b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80122b2:	42b2      	cmp	r2, r6
 80122b4:	db07      	blt.n	80122c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80122b6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80122b8:	4410      	add	r0, r2
 80122ba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80122bc:	3b01      	subs	r3, #1
 80122be:	4411      	add	r1, r2
 80122c0:	3402      	adds	r4, #2
 80122c2:	e7ee      	b.n	80122a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80122c4:	d017      	beq.n	80122f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80122c6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80122c8:	1e5a      	subs	r2, r3, #1
 80122ca:	fb05 0502 	mla	r5, r5, r2, r0
 80122ce:	142d      	asrs	r5, r5, #16
 80122d0:	d409      	bmi.n	80122e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80122d2:	42bd      	cmp	r5, r7
 80122d4:	da07      	bge.n	80122e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80122d6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80122d8:	fb05 1202 	mla	r2, r5, r2, r1
 80122dc:	1412      	asrs	r2, r2, #16
 80122de:	d402      	bmi.n	80122e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80122e0:	42b2      	cmp	r2, r6
 80122e2:	f2c0 80c7 	blt.w	8012474 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80122e6:	2700      	movs	r7, #0
 80122e8:	19da      	adds	r2, r3, r7
 80122ea:	2a00      	cmp	r2, #0
 80122ec:	dc3e      	bgt.n	801236c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80122ee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80122f2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80122f6:	f1bb 0f00 	cmp.w	fp, #0
 80122fa:	f340 8131 	ble.w	8012560 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80122fe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012302:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012306:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801230a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801230c:	f1bb 0b01 	subs.w	fp, fp, #1
 8012310:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012314:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012318:	eeb0 6a62 	vmov.f32	s12, s5
 801231c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012320:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012324:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012328:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801232c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012330:	eeb0 6a43 	vmov.f32	s12, s6
 8012334:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012338:	ee12 2a90 	vmov	r2, s5
 801233c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012340:	fb92 f3f3 	sdiv	r3, r2, r3
 8012344:	ee13 2a10 	vmov	r2, s6
 8012348:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801234c:	9313      	str	r3, [sp, #76]	; 0x4c
 801234e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012350:	fb92 f3f3 	sdiv	r3, r2, r3
 8012354:	9a03      	ldr	r2, [sp, #12]
 8012356:	9314      	str	r3, [sp, #80]	; 0x50
 8012358:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801235c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801235e:	eeb0 3a67 	vmov.f32	s6, s15
 8012362:	bf08      	it	eq
 8012364:	4613      	moveq	r3, r2
 8012366:	eef0 2a47 	vmov.f32	s5, s14
 801236a:	e789      	b.n	8012280 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801236c:	1405      	asrs	r5, r0, #16
 801236e:	d435      	bmi.n	80123dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012370:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8012374:	42aa      	cmp	r2, r5
 8012376:	dd31      	ble.n	80123dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012378:	140e      	asrs	r6, r1, #16
 801237a:	d42f      	bmi.n	80123dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801237c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8012380:	42b2      	cmp	r2, r6
 8012382:	dd2b      	ble.n	80123dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012384:	9a00      	ldr	r2, [sp, #0]
 8012386:	fb06 5502 	mla	r5, r6, r2, r5
 801238a:	086a      	lsrs	r2, r5, #1
 801238c:	9e01      	ldr	r6, [sp, #4]
 801238e:	5cb2      	ldrb	r2, [r6, r2]
 8012390:	07ee      	lsls	r6, r5, #31
 8012392:	bf54      	ite	pl
 8012394:	f002 020f 	andpl.w	r2, r2, #15
 8012398:	1112      	asrmi	r2, r2, #4
 801239a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801239e:	b2d2      	uxtb	r2, r2
 80123a0:	b1e2      	cbz	r2, 80123dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80123a2:	9d04      	ldr	r5, [sp, #16]
 80123a4:	436a      	muls	r2, r5
 80123a6:	1c55      	adds	r5, r2, #1
 80123a8:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80123ac:	4d6e      	ldr	r5, [pc, #440]	; (8012568 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80123ae:	682d      	ldr	r5, [r5, #0]
 80123b0:	1212      	asrs	r2, r2, #8
 80123b2:	0a2e      	lsrs	r6, r5, #8
 80123b4:	2aff      	cmp	r2, #255	; 0xff
 80123b6:	9605      	str	r6, [sp, #20]
 80123b8:	d116      	bne.n	80123e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80123ba:	f06f 0201 	mvn.w	r2, #1
 80123be:	fb02 fc07 	mul.w	ip, r2, r7
 80123c2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80123c6:	096a      	lsrs	r2, r5, #5
 80123c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80123cc:	f026 0607 	bic.w	r6, r6, #7
 80123d0:	4316      	orrs	r6, r2
 80123d2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80123d6:	432e      	orrs	r6, r5
 80123d8:	f824 600c 	strh.w	r6, [r4, ip]
 80123dc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80123de:	4410      	add	r0, r2
 80123e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80123e2:	3f01      	subs	r7, #1
 80123e4:	4411      	add	r1, r2
 80123e6:	e77f      	b.n	80122e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80123e8:	f06f 0601 	mvn.w	r6, #1
 80123ec:	437e      	muls	r6, r7
 80123ee:	fa1f fa82 	uxth.w	sl, r2
 80123f2:	f834 8006 	ldrh.w	r8, [r4, r6]
 80123f6:	9602      	str	r6, [sp, #8]
 80123f8:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80123fc:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8012400:	43d2      	mvns	r2, r2
 8012402:	b2d2      	uxtb	r2, r2
 8012404:	fb1c fc0a 	smulbb	ip, ip, sl
 8012408:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801240c:	fb0e ce02 	mla	lr, lr, r2, ip
 8012410:	b2ed      	uxtb	r5, r5
 8012412:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8012416:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801241a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801241e:	fa5f f888 	uxtb.w	r8, r8
 8012422:	fb15 f50a 	smulbb	r5, r5, sl
 8012426:	fb08 5502 	mla	r5, r8, r2, r5
 801242a:	fa1f fe8e 	uxth.w	lr, lr
 801242e:	fb16 f60a 	smulbb	r6, r6, sl
 8012432:	b2ad      	uxth	r5, r5
 8012434:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8012438:	fb0c 6c02 	mla	ip, ip, r2, r6
 801243c:	f10e 0201 	add.w	r2, lr, #1
 8012440:	1c6e      	adds	r6, r5, #1
 8012442:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8012446:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801244a:	fa1f fc8c 	uxth.w	ip, ip
 801244e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012452:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8012456:	ea46 0e0e 	orr.w	lr, r6, lr
 801245a:	f10c 0601 	add.w	r6, ip, #1
 801245e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8012462:	0976      	lsrs	r6, r6, #5
 8012464:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012468:	9a02      	ldr	r2, [sp, #8]
 801246a:	ea4e 0e06 	orr.w	lr, lr, r6
 801246e:	f824 e002 	strh.w	lr, [r4, r2]
 8012472:	e7b3      	b.n	80123dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012474:	f04f 0800 	mov.w	r8, #0
 8012478:	eba3 0208 	sub.w	r2, r3, r8
 801247c:	2a00      	cmp	r2, #0
 801247e:	f77f af36 	ble.w	80122ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8012482:	9e00      	ldr	r6, [sp, #0]
 8012484:	1402      	asrs	r2, r0, #16
 8012486:	140d      	asrs	r5, r1, #16
 8012488:	fb06 2505 	mla	r5, r6, r5, r2
 801248c:	086a      	lsrs	r2, r5, #1
 801248e:	9e01      	ldr	r6, [sp, #4]
 8012490:	5cb2      	ldrb	r2, [r6, r2]
 8012492:	07ed      	lsls	r5, r5, #31
 8012494:	bf54      	ite	pl
 8012496:	f002 020f 	andpl.w	r2, r2, #15
 801249a:	1112      	asrmi	r2, r2, #4
 801249c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80124a0:	b2d2      	uxtb	r2, r2
 80124a2:	b1c2      	cbz	r2, 80124d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80124a4:	9d04      	ldr	r5, [sp, #16]
 80124a6:	436a      	muls	r2, r5
 80124a8:	1c55      	adds	r5, r2, #1
 80124aa:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80124ae:	4d2e      	ldr	r5, [pc, #184]	; (8012568 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80124b0:	1212      	asrs	r2, r2, #8
 80124b2:	682e      	ldr	r6, [r5, #0]
 80124b4:	2aff      	cmp	r2, #255	; 0xff
 80124b6:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80124ba:	d113      	bne.n	80124e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80124bc:	0972      	lsrs	r2, r6, #5
 80124be:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 80124c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80124c6:	f025 0507 	bic.w	r5, r5, #7
 80124ca:	4315      	orrs	r5, r2
 80124cc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80124d0:	4335      	orrs	r5, r6
 80124d2:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80124d6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80124d8:	4410      	add	r0, r2
 80124da:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80124dc:	f108 0801 	add.w	r8, r8, #1
 80124e0:	4411      	add	r1, r2
 80124e2:	e7c9      	b.n	8012478 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80124e4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80124e8:	fa1f fa82 	uxth.w	sl, r2
 80124ec:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80124f0:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80124f4:	43d2      	mvns	r2, r2
 80124f6:	b2d2      	uxtb	r2, r2
 80124f8:	fb17 f70a 	smulbb	r7, r7, sl
 80124fc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012500:	fb0c 7c02 	mla	ip, ip, r2, r7
 8012504:	b2f6      	uxtb	r6, r6
 8012506:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801250a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801250e:	fa5f fe8e 	uxtb.w	lr, lr
 8012512:	fb16 f60a 	smulbb	r6, r6, sl
 8012516:	fb0e 6602 	mla	r6, lr, r2, r6
 801251a:	b2ed      	uxtb	r5, r5
 801251c:	fa1f fc8c 	uxth.w	ip, ip
 8012520:	fb15 f50a 	smulbb	r5, r5, sl
 8012524:	b2b6      	uxth	r6, r6
 8012526:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801252a:	fb07 5702 	mla	r7, r7, r2, r5
 801252e:	f10c 0201 	add.w	r2, ip, #1
 8012532:	1c75      	adds	r5, r6, #1
 8012534:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8012538:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801253c:	b2bf      	uxth	r7, r7
 801253e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012542:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012546:	ea45 0c0c 	orr.w	ip, r5, ip
 801254a:	1c7d      	adds	r5, r7, #1
 801254c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8012550:	096d      	lsrs	r5, r5, #5
 8012552:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012556:	ea4c 0c05 	orr.w	ip, ip, r5
 801255a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801255e:	e7ba      	b.n	80124d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8012560:	b007      	add	sp, #28
 8012562:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012566:	bf00      	nop
 8012568:	2001264c 	.word	0x2001264c

0801256c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801256c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012570:	b087      	sub	sp, #28
 8012572:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8012880 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8012576:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012578:	9205      	str	r2, [sp, #20]
 801257a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801257e:	9101      	str	r1, [sp, #4]
 8012580:	6841      	ldr	r1, [r0, #4]
 8012582:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8012586:	fb01 2404 	mla	r4, r1, r4, r2
 801258a:	6802      	ldr	r2, [r0, #0]
 801258c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012590:	f8db 2008 	ldr.w	r2, [fp, #8]
 8012594:	3201      	adds	r2, #1
 8012596:	f022 0201 	bic.w	r2, r2, #1
 801259a:	9202      	str	r2, [sp, #8]
 801259c:	f8db 2000 	ldr.w	r2, [fp]
 80125a0:	9203      	str	r2, [sp, #12]
 80125a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80125a6:	9a01      	ldr	r2, [sp, #4]
 80125a8:	2a00      	cmp	r2, #0
 80125aa:	dc03      	bgt.n	80125b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80125ac:	9a05      	ldr	r2, [sp, #20]
 80125ae:	2a00      	cmp	r2, #0
 80125b0:	f340 8162 	ble.w	8012878 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80125b4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80125b6:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80125ba:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80125be:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80125c2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80125c4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80125c8:	2b00      	cmp	r3, #0
 80125ca:	dd0e      	ble.n	80125ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80125cc:	1402      	asrs	r2, r0, #16
 80125ce:	d405      	bmi.n	80125dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80125d0:	42ba      	cmp	r2, r7
 80125d2:	da03      	bge.n	80125dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80125d4:	140a      	asrs	r2, r1, #16
 80125d6:	d401      	bmi.n	80125dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80125d8:	42b2      	cmp	r2, r6
 80125da:	db07      	blt.n	80125ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80125dc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80125de:	4410      	add	r0, r2
 80125e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80125e2:	3b01      	subs	r3, #1
 80125e4:	4411      	add	r1, r2
 80125e6:	3402      	adds	r4, #2
 80125e8:	e7ee      	b.n	80125c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80125ea:	d017      	beq.n	801261c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80125ec:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80125ee:	1e5a      	subs	r2, r3, #1
 80125f0:	fb05 0502 	mla	r5, r5, r2, r0
 80125f4:	142d      	asrs	r5, r5, #16
 80125f6:	d409      	bmi.n	801260c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80125f8:	42bd      	cmp	r5, r7
 80125fa:	da07      	bge.n	801260c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80125fc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80125fe:	fb05 1202 	mla	r2, r5, r2, r1
 8012602:	1412      	asrs	r2, r2, #16
 8012604:	d402      	bmi.n	801260c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012606:	42b2      	cmp	r2, r6
 8012608:	f2c0 80c3 	blt.w	8012792 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801260c:	2500      	movs	r5, #0
 801260e:	195a      	adds	r2, r3, r5
 8012610:	2a00      	cmp	r2, #0
 8012612:	dc3f      	bgt.n	8012694 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8012614:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012618:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801261c:	9b01      	ldr	r3, [sp, #4]
 801261e:	2b00      	cmp	r3, #0
 8012620:	f340 812a 	ble.w	8012878 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8012624:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012628:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801262c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012630:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012632:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012636:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801263a:	eeb0 6a62 	vmov.f32	s12, s5
 801263e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012642:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012646:	ee77 2a62 	vsub.f32	s5, s14, s5
 801264a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801264e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012652:	eeb0 6a43 	vmov.f32	s12, s6
 8012656:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801265a:	ee12 2a90 	vmov	r2, s5
 801265e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012662:	fb92 f3f3 	sdiv	r3, r2, r3
 8012666:	ee13 2a10 	vmov	r2, s6
 801266a:	9313      	str	r3, [sp, #76]	; 0x4c
 801266c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801266e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012672:	9314      	str	r3, [sp, #80]	; 0x50
 8012674:	9b01      	ldr	r3, [sp, #4]
 8012676:	9a05      	ldr	r2, [sp, #20]
 8012678:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801267c:	3b01      	subs	r3, #1
 801267e:	9301      	str	r3, [sp, #4]
 8012680:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012684:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012686:	eeb0 3a67 	vmov.f32	s6, s15
 801268a:	bf08      	it	eq
 801268c:	4613      	moveq	r3, r2
 801268e:	eef0 2a47 	vmov.f32	s5, s14
 8012692:	e788      	b.n	80125a6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8012694:	1406      	asrs	r6, r0, #16
 8012696:	d42c      	bmi.n	80126f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012698:	f8db 2008 	ldr.w	r2, [fp, #8]
 801269c:	42b2      	cmp	r2, r6
 801269e:	dd28      	ble.n	80126f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80126a0:	140f      	asrs	r7, r1, #16
 80126a2:	d426      	bmi.n	80126f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80126a4:	f8db 200c 	ldr.w	r2, [fp, #12]
 80126a8:	42ba      	cmp	r2, r7
 80126aa:	dd22      	ble.n	80126f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80126ac:	9a02      	ldr	r2, [sp, #8]
 80126ae:	fb07 6602 	mla	r6, r7, r2, r6
 80126b2:	0872      	lsrs	r2, r6, #1
 80126b4:	9f03      	ldr	r7, [sp, #12]
 80126b6:	5cba      	ldrb	r2, [r7, r2]
 80126b8:	07f6      	lsls	r6, r6, #31
 80126ba:	bf54      	ite	pl
 80126bc:	f002 020f 	andpl.w	r2, r2, #15
 80126c0:	1112      	asrmi	r2, r2, #4
 80126c2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80126c6:	b2d2      	uxtb	r2, r2
 80126c8:	2aff      	cmp	r2, #255	; 0xff
 80126ca:	d118      	bne.n	80126fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80126cc:	f8d8 2000 	ldr.w	r2, [r8]
 80126d0:	f06f 0601 	mvn.w	r6, #1
 80126d4:	fb06 f705 	mul.w	r7, r6, r5
 80126d8:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 80126dc:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80126e0:	0956      	lsrs	r6, r2, #5
 80126e2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80126e6:	ea4c 0606 	orr.w	r6, ip, r6
 80126ea:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80126ee:	4316      	orrs	r6, r2
 80126f0:	53e6      	strh	r6, [r4, r7]
 80126f2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80126f4:	4410      	add	r0, r2
 80126f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80126f8:	3d01      	subs	r5, #1
 80126fa:	4411      	add	r1, r2
 80126fc:	e787      	b.n	801260e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80126fe:	2a00      	cmp	r2, #0
 8012700:	d0f7      	beq.n	80126f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012702:	f06f 0601 	mvn.w	r6, #1
 8012706:	436e      	muls	r6, r5
 8012708:	f8d8 c000 	ldr.w	ip, [r8]
 801270c:	f834 e006 	ldrh.w	lr, [r4, r6]
 8012710:	9604      	str	r6, [sp, #16]
 8012712:	fa1f f982 	uxth.w	r9, r2
 8012716:	ea4f 272e 	mov.w	r7, lr, asr #8
 801271a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801271e:	43d2      	mvns	r2, r2
 8012720:	b2d2      	uxtb	r2, r2
 8012722:	fb16 f609 	smulbb	r6, r6, r9
 8012726:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801272a:	fb07 6702 	mla	r7, r7, r2, r6
 801272e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8012732:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012736:	fa5f fc8c 	uxtb.w	ip, ip
 801273a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801273e:	fa5f fe8e 	uxtb.w	lr, lr
 8012742:	fb1c fc09 	smulbb	ip, ip, r9
 8012746:	fb0e cc02 	mla	ip, lr, r2, ip
 801274a:	b2bf      	uxth	r7, r7
 801274c:	fb1a fa09 	smulbb	sl, sl, r9
 8012750:	fa1f fc8c 	uxth.w	ip, ip
 8012754:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012758:	fb06 a602 	mla	r6, r6, r2, sl
 801275c:	1c7a      	adds	r2, r7, #1
 801275e:	f10c 0a01 	add.w	sl, ip, #1
 8012762:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012766:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801276a:	b2b6      	uxth	r6, r6
 801276c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012770:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012774:	ea4a 0707 	orr.w	r7, sl, r7
 8012778:	f106 0a01 	add.w	sl, r6, #1
 801277c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012780:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012784:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012788:	9a04      	ldr	r2, [sp, #16]
 801278a:	ea47 070a 	orr.w	r7, r7, sl
 801278e:	52a7      	strh	r7, [r4, r2]
 8012790:	e7af      	b.n	80126f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012792:	f04f 0e00 	mov.w	lr, #0
 8012796:	eba3 020e 	sub.w	r2, r3, lr
 801279a:	2a00      	cmp	r2, #0
 801279c:	f77f af3a 	ble.w	8012614 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80127a0:	9e02      	ldr	r6, [sp, #8]
 80127a2:	1402      	asrs	r2, r0, #16
 80127a4:	140d      	asrs	r5, r1, #16
 80127a6:	fb06 2505 	mla	r5, r6, r5, r2
 80127aa:	086a      	lsrs	r2, r5, #1
 80127ac:	9e03      	ldr	r6, [sp, #12]
 80127ae:	5cb2      	ldrb	r2, [r6, r2]
 80127b0:	07ed      	lsls	r5, r5, #31
 80127b2:	bf54      	ite	pl
 80127b4:	f002 020f 	andpl.w	r2, r2, #15
 80127b8:	1112      	asrmi	r2, r2, #4
 80127ba:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80127be:	b2d2      	uxtb	r2, r2
 80127c0:	2aff      	cmp	r2, #255	; 0xff
 80127c2:	d115      	bne.n	80127f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80127c4:	f8d8 5000 	ldr.w	r5, [r8]
 80127c8:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 80127cc:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 80127d0:	096a      	lsrs	r2, r5, #5
 80127d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80127d6:	4332      	orrs	r2, r6
 80127d8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80127dc:	432a      	orrs	r2, r5
 80127de:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80127e2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80127e4:	4410      	add	r0, r2
 80127e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80127e8:	f10e 0e01 	add.w	lr, lr, #1
 80127ec:	4411      	add	r1, r2
 80127ee:	e7d2      	b.n	8012796 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80127f0:	2a00      	cmp	r2, #0
 80127f2:	d0f6      	beq.n	80127e2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80127f4:	f8d8 7000 	ldr.w	r7, [r8]
 80127f8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80127fc:	fa1f f982 	uxth.w	r9, r2
 8012800:	ea4f 262c 	mov.w	r6, ip, asr #8
 8012804:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8012808:	43d2      	mvns	r2, r2
 801280a:	b2d2      	uxtb	r2, r2
 801280c:	fb15 f509 	smulbb	r5, r5, r9
 8012810:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012814:	fb06 5602 	mla	r6, r6, r2, r5
 8012818:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801281c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8012820:	b2ff      	uxtb	r7, r7
 8012822:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012826:	fa5f fc8c 	uxtb.w	ip, ip
 801282a:	fb17 f709 	smulbb	r7, r7, r9
 801282e:	fb0c 7702 	mla	r7, ip, r2, r7
 8012832:	b2b6      	uxth	r6, r6
 8012834:	fb1a fa09 	smulbb	sl, sl, r9
 8012838:	b2bf      	uxth	r7, r7
 801283a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801283e:	fb05 a502 	mla	r5, r5, r2, sl
 8012842:	1c72      	adds	r2, r6, #1
 8012844:	f107 0a01 	add.w	sl, r7, #1
 8012848:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801284c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012850:	b2ad      	uxth	r5, r5
 8012852:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012856:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801285a:	ea4a 0606 	orr.w	r6, sl, r6
 801285e:	f105 0a01 	add.w	sl, r5, #1
 8012862:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012866:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801286a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801286e:	ea46 060a 	orr.w	r6, r6, sl
 8012872:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8012876:	e7b4      	b.n	80127e2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8012878:	b007      	add	sp, #28
 801287a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801287e:	bf00      	nop
 8012880:	2001264c 	.word	0x2001264c

08012884 <_ZN8touchgfx8LCD16bppD1Ev>:
 8012884:	4770      	bx	lr

08012886 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8012886:	4770      	bx	lr

08012888 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8012888:	4770      	bx	lr

0801288a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801288a:	4770      	bx	lr

0801288c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801288c:	4770      	bx	lr

0801288e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801288e:	4770      	bx	lr

08012890 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8012890:	4770      	bx	lr

08012892 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8012892:	4770      	bx	lr

08012894 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012894:	4770      	bx	lr

08012896 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012896:	4770      	bx	lr

08012898 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012898:	4770      	bx	lr

0801289a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801289a:	4770      	bx	lr

0801289c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801289c:	4770      	bx	lr

0801289e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801289e:	4770      	bx	lr

080128a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80128a0:	4770      	bx	lr

080128a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80128a2:	4770      	bx	lr

080128a4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80128a4:	4770      	bx	lr

080128a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80128a6:	4770      	bx	lr

080128a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80128a8:	4770      	bx	lr

080128aa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80128aa:	4770      	bx	lr

080128ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80128ac:	4770      	bx	lr

080128ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80128ae:	4770      	bx	lr

080128b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80128b0:	4770      	bx	lr

080128b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80128b2:	4770      	bx	lr

080128b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80128b4:	4770      	bx	lr

080128b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80128b6:	4770      	bx	lr

080128b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80128b8:	4770      	bx	lr

080128ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80128ba:	4770      	bx	lr

080128bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80128bc:	4770      	bx	lr

080128be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80128be:	4770      	bx	lr

080128c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80128c0:	4770      	bx	lr

080128c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80128c2:	4770      	bx	lr

080128c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80128c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80128c8:	b088      	sub	sp, #32
 80128ca:	ac08      	add	r4, sp, #32
 80128cc:	4606      	mov	r6, r0
 80128ce:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80128d2:	4620      	mov	r0, r4
 80128d4:	4688      	mov	r8, r1
 80128d6:	4691      	mov	r9, r2
 80128d8:	f7fd fc62 	bl	80101a0 <_ZNK8touchgfx6Bitmap7getDataEv>
 80128dc:	6833      	ldr	r3, [r6, #0]
 80128de:	4605      	mov	r5, r0
 80128e0:	4620      	mov	r0, r4
 80128e2:	699f      	ldr	r7, [r3, #24]
 80128e4:	f7fd fb70 	bl	800ffc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80128e8:	4682      	mov	sl, r0
 80128ea:	4620      	mov	r0, r4
 80128ec:	f7fd fba0 	bl	8010030 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80128f0:	9500      	str	r5, [sp, #0]
 80128f2:	e9cd a001 	strd	sl, r0, [sp, #4]
 80128f6:	464b      	mov	r3, r9
 80128f8:	a806      	add	r0, sp, #24
 80128fa:	4642      	mov	r2, r8
 80128fc:	4631      	mov	r1, r6
 80128fe:	47b8      	blx	r7
 8012900:	4628      	mov	r0, r5
 8012902:	b008      	add	sp, #32
 8012904:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08012908 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8012908:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801290c:	2300      	movs	r3, #0
 801290e:	9300      	str	r3, [sp, #0]
 8012910:	4b3d      	ldr	r3, [pc, #244]	; (8012a08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8012912:	781b      	ldrb	r3, [r3, #0]
 8012914:	2b00      	cmp	r3, #0
 8012916:	d137      	bne.n	8012988 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8012918:	4a3c      	ldr	r2, [pc, #240]	; (8012a0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801291a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801291e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012922:	2b00      	cmp	r3, #0
 8012924:	d132      	bne.n	801298c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8012926:	4b3a      	ldr	r3, [pc, #232]	; (8012a10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8012928:	f9b3 3000 	ldrsh.w	r3, [r3]
 801292c:	6808      	ldr	r0, [r1, #0]
 801292e:	6849      	ldr	r1, [r1, #4]
 8012930:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012934:	ac02      	add	r4, sp, #8
 8012936:	ab02      	add	r3, sp, #8
 8012938:	c303      	stmia	r3!, {r0, r1}
 801293a:	4669      	mov	r1, sp
 801293c:	4620      	mov	r0, r4
 801293e:	f7fa f8eb 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012942:	4668      	mov	r0, sp
 8012944:	f7fa f8c0 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012948:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801294c:	f8bd 2000 	ldrh.w	r2, [sp]
 8012950:	4d30      	ldr	r5, [pc, #192]	; (8012a14 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8012952:	4413      	add	r3, r2
 8012954:	f8ad 3008 	strh.w	r3, [sp, #8]
 8012958:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801295c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012960:	6828      	ldr	r0, [r5, #0]
 8012962:	4413      	add	r3, r2
 8012964:	f8ad 300a 	strh.w	r3, [sp, #10]
 8012968:	6803      	ldr	r3, [r0, #0]
 801296a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801296c:	4798      	blx	r3
 801296e:	f010 0f01 	tst.w	r0, #1
 8012972:	462f      	mov	r7, r5
 8012974:	d00c      	beq.n	8012990 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8012976:	6828      	ldr	r0, [r5, #0]
 8012978:	6803      	ldr	r3, [r0, #0]
 801297a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801297e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8012980:	4798      	blx	r3
 8012982:	b004      	add	sp, #16
 8012984:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012988:	4a21      	ldr	r2, [pc, #132]	; (8012a10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801298a:	e7c6      	b.n	801291a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801298c:	4b1f      	ldr	r3, [pc, #124]	; (8012a0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801298e:	e7cb      	b.n	8012928 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8012990:	6838      	ldr	r0, [r7, #0]
 8012992:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8012996:	6803      	ldr	r3, [r0, #0]
 8012998:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801299c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801299e:	4798      	blx	r3
 80129a0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80129a4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80129a8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80129ac:	fb16 3602 	smlabb	r6, r6, r2, r3
 80129b0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80129b4:	6838      	ldr	r0, [r7, #0]
 80129b6:	6803      	ldr	r3, [r0, #0]
 80129b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80129ba:	4798      	blx	r3
 80129bc:	4a13      	ldr	r2, [pc, #76]	; (8012a0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80129be:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80129c2:	8813      	ldrh	r3, [r2, #0]
 80129c4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80129c8:	fb03 1404 	mla	r4, r3, r4, r1
 80129cc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80129d0:	435d      	muls	r5, r3
 80129d2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80129d6:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80129da:	4691      	mov	r9, r2
 80129dc:	6838      	ldr	r0, [r7, #0]
 80129de:	42ac      	cmp	r4, r5
 80129e0:	6803      	ldr	r3, [r0, #0]
 80129e2:	d20e      	bcs.n	8012a02 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80129e4:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 80129e8:	4632      	mov	r2, r6
 80129ea:	4643      	mov	r3, r8
 80129ec:	4621      	mov	r1, r4
 80129ee:	47d0      	blx	sl
 80129f0:	f8b9 3000 	ldrh.w	r3, [r9]
 80129f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80129f8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80129fc:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012a00:	e7ec      	b.n	80129dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8012a02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012a04:	4798      	blx	r3
 8012a06:	e7bc      	b.n	8012982 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8012a08:	2001263c 	.word	0x2001263c
 8012a0c:	2001263e 	.word	0x2001263e
 8012a10:	20012640 	.word	0x20012640
 8012a14:	20012644 	.word	0x20012644

08012a18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8012a18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a1c:	b08b      	sub	sp, #44	; 0x2c
 8012a1e:	460f      	mov	r7, r1
 8012a20:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8012a24:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8012a28:	4616      	mov	r6, r2
 8012a2a:	f1bb 0f00 	cmp.w	fp, #0
 8012a2e:	d04a      	beq.n	8012ac6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8012a30:	6810      	ldr	r0, [r2, #0]
 8012a32:	6851      	ldr	r1, [r2, #4]
 8012a34:	ad06      	add	r5, sp, #24
 8012a36:	c503      	stmia	r5!, {r0, r1}
 8012a38:	6818      	ldr	r0, [r3, #0]
 8012a3a:	6859      	ldr	r1, [r3, #4]
 8012a3c:	ad08      	add	r5, sp, #32
 8012a3e:	c503      	stmia	r5!, {r0, r1}
 8012a40:	a806      	add	r0, sp, #24
 8012a42:	f7fa f841 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012a46:	4631      	mov	r1, r6
 8012a48:	a808      	add	r0, sp, #32
 8012a4a:	f7fa f865 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012a4e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012a52:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012a56:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8012a5a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8012a5e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8012a62:	fb16 2103 	smlabb	r1, r6, r3, r2
 8012a66:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8012a6a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8012a6e:	4f5f      	ldr	r7, [pc, #380]	; (8012bec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8012a70:	440a      	add	r2, r1
 8012a72:	f8ad 2020 	strh.w	r2, [sp, #32]
 8012a76:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8012a7a:	6838      	ldr	r0, [r7, #0]
 8012a7c:	4413      	add	r3, r2
 8012a7e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012a82:	6803      	ldr	r3, [r0, #0]
 8012a84:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012a86:	4798      	blx	r3
 8012a88:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012a8c:	46b9      	mov	r9, r7
 8012a8e:	d11d      	bne.n	8012acc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8012a90:	b9fc      	cbnz	r4, 8012ad2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8012a92:	f010 0f01 	tst.w	r0, #1
 8012a96:	d01c      	beq.n	8012ad2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8012a98:	f8d9 0000 	ldr.w	r0, [r9]
 8012a9c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012aa0:	6801      	ldr	r1, [r0, #0]
 8012aa2:	f8cd b00c 	str.w	fp, [sp, #12]
 8012aa6:	2700      	movs	r7, #0
 8012aa8:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8012aac:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8012ab0:	9402      	str	r4, [sp, #8]
 8012ab2:	b2ad      	uxth	r5, r5
 8012ab4:	fa1f f488 	uxth.w	r4, r8
 8012ab8:	9501      	str	r5, [sp, #4]
 8012aba:	9400      	str	r4, [sp, #0]
 8012abc:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8012abe:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012ac2:	4631      	mov	r1, r6
 8012ac4:	47a0      	blx	r4
 8012ac6:	b00b      	add	sp, #44	; 0x2c
 8012ac8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012acc:	f010 0f04 	tst.w	r0, #4
 8012ad0:	e7e1      	b.n	8012a96 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8012ad2:	f8d9 0000 	ldr.w	r0, [r9]
 8012ad6:	6803      	ldr	r3, [r0, #0]
 8012ad8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012ada:	4798      	blx	r3
 8012adc:	4b44      	ldr	r3, [pc, #272]	; (8012bf0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8012ade:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8012ae2:	881a      	ldrh	r2, [r3, #0]
 8012ae4:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8012ae8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012aec:	fb02 1404 	mla	r4, r2, r4, r1
 8012af0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012af4:	469a      	mov	sl, r3
 8012af6:	fb05 f502 	mul.w	r5, r5, r2
 8012afa:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8012afe:	d059      	beq.n	8012bb4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8012b00:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8012b04:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012b08:	fa1f f28b 	uxth.w	r2, fp
 8012b0c:	fa1f f989 	uxth.w	r9, r9
 8012b10:	469e      	mov	lr, r3
 8012b12:	42ac      	cmp	r4, r5
 8012b14:	d264      	bcs.n	8012be0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8012b16:	eb04 0a07 	add.w	sl, r4, r7
 8012b1a:	4554      	cmp	r4, sl
 8012b1c:	d23d      	bcs.n	8012b9a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8012b1e:	8821      	ldrh	r1, [r4, #0]
 8012b20:	f836 3b02 	ldrh.w	r3, [r6], #2
 8012b24:	1208      	asrs	r0, r1, #8
 8012b26:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8012b2a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8012b2e:	fb10 f009 	smulbb	r0, r0, r9
 8012b32:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8012b36:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012b3a:	00c9      	lsls	r1, r1, #3
 8012b3c:	fb0c 0c02 	mla	ip, ip, r2, r0
 8012b40:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8012b44:	10d8      	asrs	r0, r3, #3
 8012b46:	b2c9      	uxtb	r1, r1
 8012b48:	00db      	lsls	r3, r3, #3
 8012b4a:	fa1f fc8c 	uxth.w	ip, ip
 8012b4e:	fb1b fb09 	smulbb	fp, fp, r9
 8012b52:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8012b56:	b2db      	uxtb	r3, r3
 8012b58:	fb11 f109 	smulbb	r1, r1, r9
 8012b5c:	fb00 b002 	mla	r0, r0, r2, fp
 8012b60:	fb03 1302 	mla	r3, r3, r2, r1
 8012b64:	f10c 0b01 	add.w	fp, ip, #1
 8012b68:	b29b      	uxth	r3, r3
 8012b6a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8012b6e:	b280      	uxth	r0, r0
 8012b70:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8012b74:	f103 0c01 	add.w	ip, r3, #1
 8012b78:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8012b7c:	1c43      	adds	r3, r0, #1
 8012b7e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8012b82:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8012b86:	0940      	lsrs	r0, r0, #5
 8012b88:	ea4c 0c0b 	orr.w	ip, ip, fp
 8012b8c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8012b90:	ea4c 0c00 	orr.w	ip, ip, r0
 8012b94:	f824 cb02 	strh.w	ip, [r4], #2
 8012b98:	e7bf      	b.n	8012b1a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8012b9a:	f8be 3000 	ldrh.w	r3, [lr]
 8012b9e:	eba3 0308 	sub.w	r3, r3, r8
 8012ba2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012ba6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012baa:	eba3 0308 	sub.w	r3, r3, r8
 8012bae:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012bb2:	e7ae      	b.n	8012b12 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8012bb4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012bb8:	f8d9 0000 	ldr.w	r0, [r9]
 8012bbc:	42ac      	cmp	r4, r5
 8012bbe:	6803      	ldr	r3, [r0, #0]
 8012bc0:	d20e      	bcs.n	8012be0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8012bc2:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8012bc6:	4632      	mov	r2, r6
 8012bc8:	463b      	mov	r3, r7
 8012bca:	4621      	mov	r1, r4
 8012bcc:	47c0      	blx	r8
 8012bce:	f8ba 3000 	ldrh.w	r3, [sl]
 8012bd2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012bd6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012bda:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012bde:	e7eb      	b.n	8012bb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8012be0:	4b02      	ldr	r3, [pc, #8]	; (8012bec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8012be2:	6818      	ldr	r0, [r3, #0]
 8012be4:	6803      	ldr	r3, [r0, #0]
 8012be6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012be8:	4798      	blx	r3
 8012bea:	e76c      	b.n	8012ac6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8012bec:	20012644 	.word	0x20012644
 8012bf0:	2001263e 	.word	0x2001263e

08012bf4 <_ZN8touchgfx8LCD16bppD0Ev>:
 8012bf4:	b510      	push	{r4, lr}
 8012bf6:	2184      	movs	r1, #132	; 0x84
 8012bf8:	4604      	mov	r4, r0
 8012bfa:	f00a fe1e 	bl	801d83a <_ZdlPvj>
 8012bfe:	4620      	mov	r0, r4
 8012c00:	bd10      	pop	{r4, pc}

08012c02 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8012c02:	b510      	push	{r4, lr}
 8012c04:	2104      	movs	r1, #4
 8012c06:	4604      	mov	r4, r0
 8012c08:	f00a fe17 	bl	801d83a <_ZdlPvj>
 8012c0c:	4620      	mov	r0, r4
 8012c0e:	bd10      	pop	{r4, pc}

08012c10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8012c10:	b510      	push	{r4, lr}
 8012c12:	2104      	movs	r1, #4
 8012c14:	4604      	mov	r4, r0
 8012c16:	f00a fe10 	bl	801d83a <_ZdlPvj>
 8012c1a:	4620      	mov	r0, r4
 8012c1c:	bd10      	pop	{r4, pc}

08012c1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8012c1e:	b510      	push	{r4, lr}
 8012c20:	f640 0144 	movw	r1, #2116	; 0x844
 8012c24:	4604      	mov	r4, r0
 8012c26:	f00a fe08 	bl	801d83a <_ZdlPvj>
 8012c2a:	4620      	mov	r0, r4
 8012c2c:	bd10      	pop	{r4, pc}

08012c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012c2e:	b510      	push	{r4, lr}
 8012c30:	2104      	movs	r1, #4
 8012c32:	4604      	mov	r4, r0
 8012c34:	f00a fe01 	bl	801d83a <_ZdlPvj>
 8012c38:	4620      	mov	r0, r4
 8012c3a:	bd10      	pop	{r4, pc}

08012c3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012c3c:	b510      	push	{r4, lr}
 8012c3e:	2104      	movs	r1, #4
 8012c40:	4604      	mov	r4, r0
 8012c42:	f00a fdfa 	bl	801d83a <_ZdlPvj>
 8012c46:	4620      	mov	r0, r4
 8012c48:	bd10      	pop	{r4, pc}

08012c4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012c4a:	b510      	push	{r4, lr}
 8012c4c:	2104      	movs	r1, #4
 8012c4e:	4604      	mov	r4, r0
 8012c50:	f00a fdf3 	bl	801d83a <_ZdlPvj>
 8012c54:	4620      	mov	r0, r4
 8012c56:	bd10      	pop	{r4, pc}

08012c58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012c58:	b510      	push	{r4, lr}
 8012c5a:	2104      	movs	r1, #4
 8012c5c:	4604      	mov	r4, r0
 8012c5e:	f00a fdec 	bl	801d83a <_ZdlPvj>
 8012c62:	4620      	mov	r0, r4
 8012c64:	bd10      	pop	{r4, pc}

08012c66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012c66:	b510      	push	{r4, lr}
 8012c68:	2104      	movs	r1, #4
 8012c6a:	4604      	mov	r4, r0
 8012c6c:	f00a fde5 	bl	801d83a <_ZdlPvj>
 8012c70:	4620      	mov	r0, r4
 8012c72:	bd10      	pop	{r4, pc}

08012c74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8012c74:	b510      	push	{r4, lr}
 8012c76:	2104      	movs	r1, #4
 8012c78:	4604      	mov	r4, r0
 8012c7a:	f00a fdde 	bl	801d83a <_ZdlPvj>
 8012c7e:	4620      	mov	r0, r4
 8012c80:	bd10      	pop	{r4, pc}

08012c82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012c82:	b510      	push	{r4, lr}
 8012c84:	2104      	movs	r1, #4
 8012c86:	4604      	mov	r4, r0
 8012c88:	f00a fdd7 	bl	801d83a <_ZdlPvj>
 8012c8c:	4620      	mov	r0, r4
 8012c8e:	bd10      	pop	{r4, pc}

08012c90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8012c90:	b510      	push	{r4, lr}
 8012c92:	2104      	movs	r1, #4
 8012c94:	4604      	mov	r4, r0
 8012c96:	f00a fdd0 	bl	801d83a <_ZdlPvj>
 8012c9a:	4620      	mov	r0, r4
 8012c9c:	bd10      	pop	{r4, pc}

08012c9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012c9e:	b510      	push	{r4, lr}
 8012ca0:	2104      	movs	r1, #4
 8012ca2:	4604      	mov	r4, r0
 8012ca4:	f00a fdc9 	bl	801d83a <_ZdlPvj>
 8012ca8:	4620      	mov	r0, r4
 8012caa:	bd10      	pop	{r4, pc}

08012cac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012cac:	b510      	push	{r4, lr}
 8012cae:	2104      	movs	r1, #4
 8012cb0:	4604      	mov	r4, r0
 8012cb2:	f00a fdc2 	bl	801d83a <_ZdlPvj>
 8012cb6:	4620      	mov	r0, r4
 8012cb8:	bd10      	pop	{r4, pc}

08012cba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012cba:	b510      	push	{r4, lr}
 8012cbc:	2104      	movs	r1, #4
 8012cbe:	4604      	mov	r4, r0
 8012cc0:	f00a fdbb 	bl	801d83a <_ZdlPvj>
 8012cc4:	4620      	mov	r0, r4
 8012cc6:	bd10      	pop	{r4, pc}

08012cc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012cc8:	b510      	push	{r4, lr}
 8012cca:	2104      	movs	r1, #4
 8012ccc:	4604      	mov	r4, r0
 8012cce:	f00a fdb4 	bl	801d83a <_ZdlPvj>
 8012cd2:	4620      	mov	r0, r4
 8012cd4:	bd10      	pop	{r4, pc}

08012cd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012cd6:	b510      	push	{r4, lr}
 8012cd8:	2104      	movs	r1, #4
 8012cda:	4604      	mov	r4, r0
 8012cdc:	f00a fdad 	bl	801d83a <_ZdlPvj>
 8012ce0:	4620      	mov	r0, r4
 8012ce2:	bd10      	pop	{r4, pc}

08012ce4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012ce4:	b510      	push	{r4, lr}
 8012ce6:	2104      	movs	r1, #4
 8012ce8:	4604      	mov	r4, r0
 8012cea:	f00a fda6 	bl	801d83a <_ZdlPvj>
 8012cee:	4620      	mov	r0, r4
 8012cf0:	bd10      	pop	{r4, pc}

08012cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012cf2:	b510      	push	{r4, lr}
 8012cf4:	2104      	movs	r1, #4
 8012cf6:	4604      	mov	r4, r0
 8012cf8:	f00a fd9f 	bl	801d83a <_ZdlPvj>
 8012cfc:	4620      	mov	r0, r4
 8012cfe:	bd10      	pop	{r4, pc}

08012d00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012d00:	b510      	push	{r4, lr}
 8012d02:	2104      	movs	r1, #4
 8012d04:	4604      	mov	r4, r0
 8012d06:	f00a fd98 	bl	801d83a <_ZdlPvj>
 8012d0a:	4620      	mov	r0, r4
 8012d0c:	bd10      	pop	{r4, pc}

08012d0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012d0e:	b510      	push	{r4, lr}
 8012d10:	2104      	movs	r1, #4
 8012d12:	4604      	mov	r4, r0
 8012d14:	f00a fd91 	bl	801d83a <_ZdlPvj>
 8012d18:	4620      	mov	r0, r4
 8012d1a:	bd10      	pop	{r4, pc}

08012d1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012d1c:	b510      	push	{r4, lr}
 8012d1e:	2104      	movs	r1, #4
 8012d20:	4604      	mov	r4, r0
 8012d22:	f00a fd8a 	bl	801d83a <_ZdlPvj>
 8012d26:	4620      	mov	r0, r4
 8012d28:	bd10      	pop	{r4, pc}

08012d2a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012d2a:	b510      	push	{r4, lr}
 8012d2c:	2104      	movs	r1, #4
 8012d2e:	4604      	mov	r4, r0
 8012d30:	f00a fd83 	bl	801d83a <_ZdlPvj>
 8012d34:	4620      	mov	r0, r4
 8012d36:	bd10      	pop	{r4, pc}

08012d38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012d38:	b510      	push	{r4, lr}
 8012d3a:	2104      	movs	r1, #4
 8012d3c:	4604      	mov	r4, r0
 8012d3e:	f00a fd7c 	bl	801d83a <_ZdlPvj>
 8012d42:	4620      	mov	r0, r4
 8012d44:	bd10      	pop	{r4, pc}

08012d46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012d46:	b510      	push	{r4, lr}
 8012d48:	2104      	movs	r1, #4
 8012d4a:	4604      	mov	r4, r0
 8012d4c:	f00a fd75 	bl	801d83a <_ZdlPvj>
 8012d50:	4620      	mov	r0, r4
 8012d52:	bd10      	pop	{r4, pc}

08012d54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012d54:	b510      	push	{r4, lr}
 8012d56:	2104      	movs	r1, #4
 8012d58:	4604      	mov	r4, r0
 8012d5a:	f00a fd6e 	bl	801d83a <_ZdlPvj>
 8012d5e:	4620      	mov	r0, r4
 8012d60:	bd10      	pop	{r4, pc}

08012d62 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012d62:	b510      	push	{r4, lr}
 8012d64:	2104      	movs	r1, #4
 8012d66:	4604      	mov	r4, r0
 8012d68:	f00a fd67 	bl	801d83a <_ZdlPvj>
 8012d6c:	4620      	mov	r0, r4
 8012d6e:	bd10      	pop	{r4, pc}

08012d70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012d70:	b510      	push	{r4, lr}
 8012d72:	2104      	movs	r1, #4
 8012d74:	4604      	mov	r4, r0
 8012d76:	f00a fd60 	bl	801d83a <_ZdlPvj>
 8012d7a:	4620      	mov	r0, r4
 8012d7c:	bd10      	pop	{r4, pc}

08012d7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8012d7e:	b510      	push	{r4, lr}
 8012d80:	2104      	movs	r1, #4
 8012d82:	4604      	mov	r4, r0
 8012d84:	f00a fd59 	bl	801d83a <_ZdlPvj>
 8012d88:	4620      	mov	r0, r4
 8012d8a:	bd10      	pop	{r4, pc}

08012d8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8012d8c:	b510      	push	{r4, lr}
 8012d8e:	2104      	movs	r1, #4
 8012d90:	4604      	mov	r4, r0
 8012d92:	f00a fd52 	bl	801d83a <_ZdlPvj>
 8012d96:	4620      	mov	r0, r4
 8012d98:	bd10      	pop	{r4, pc}

08012d9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8012d9a:	b510      	push	{r4, lr}
 8012d9c:	2104      	movs	r1, #4
 8012d9e:	4604      	mov	r4, r0
 8012da0:	f00a fd4b 	bl	801d83a <_ZdlPvj>
 8012da4:	4620      	mov	r0, r4
 8012da6:	bd10      	pop	{r4, pc}

08012da8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8012da8:	b510      	push	{r4, lr}
 8012daa:	2104      	movs	r1, #4
 8012dac:	4604      	mov	r4, r0
 8012dae:	f00a fd44 	bl	801d83a <_ZdlPvj>
 8012db2:	4620      	mov	r0, r4
 8012db4:	bd10      	pop	{r4, pc}
	...

08012db8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8012db8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012dbc:	b08f      	sub	sp, #60	; 0x3c
 8012dbe:	461c      	mov	r4, r3
 8012dc0:	9205      	str	r2, [sp, #20]
 8012dc2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8012dc6:	9100      	str	r1, [sp, #0]
 8012dc8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8012dca:	9201      	str	r2, [sp, #4]
 8012dcc:	2a00      	cmp	r2, #0
 8012dce:	f000 8115 	beq.w	8012ffc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8012dd2:	6820      	ldr	r0, [r4, #0]
 8012dd4:	6861      	ldr	r1, [r4, #4]
 8012dd6:	aa0a      	add	r2, sp, #40	; 0x28
 8012dd8:	c203      	stmia	r2!, {r0, r1}
 8012dda:	6818      	ldr	r0, [r3, #0]
 8012ddc:	6859      	ldr	r1, [r3, #4]
 8012dde:	aa0c      	add	r2, sp, #48	; 0x30
 8012de0:	c203      	stmia	r2!, {r0, r1}
 8012de2:	a80a      	add	r0, sp, #40	; 0x28
 8012de4:	f7f9 fe70 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012de8:	4621      	mov	r1, r4
 8012dea:	a80c      	add	r0, sp, #48	; 0x30
 8012dec:	f7f9 fe94 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012df0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8012df4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8012df8:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8012dfc:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8012e00:	bfde      	ittt	le
 8012e02:	b2b3      	uxthle	r3, r6
 8012e04:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8012e08:	fb92 f3f3 	sdivle	r3, r2, r3
 8012e0c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8012e10:	bfc8      	it	gt
 8012e12:	2301      	movgt	r3, #1
 8012e14:	fb92 f1f3 	sdiv	r1, r2, r3
 8012e18:	fa1f fc81 	uxth.w	ip, r1
 8012e1c:	fb0c 2413 	mls	r4, ip, r3, r2
 8012e20:	fb14 f406 	smulbb	r4, r4, r6
 8012e24:	441d      	add	r5, r3
 8012e26:	4404      	add	r4, r0
 8012e28:	4661      	mov	r1, ip
 8012e2a:	3d01      	subs	r5, #1
 8012e2c:	b2a4      	uxth	r4, r4
 8012e2e:	fb95 f5f3 	sdiv	r5, r5, r3
 8012e32:	b131      	cbz	r1, 8012e42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8012e34:	9b05      	ldr	r3, [sp, #20]
 8012e36:	9900      	ldr	r1, [sp, #0]
 8012e38:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8012e3c:	ba1b      	rev	r3, r3
 8012e3e:	4419      	add	r1, r3
 8012e40:	9100      	str	r1, [sp, #0]
 8012e42:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8012e46:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8012e4a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8012e4e:	4418      	add	r0, r3
 8012e50:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8012e54:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8012e58:	441a      	add	r2, r3
 8012e5a:	4b6a      	ldr	r3, [pc, #424]	; (8013004 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8012e5c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8012e60:	6818      	ldr	r0, [r3, #0]
 8012e62:	6803      	ldr	r3, [r0, #0]
 8012e64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012e66:	4798      	blx	r3
 8012e68:	4967      	ldr	r1, [pc, #412]	; (8013008 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8012e6a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8012e6e:	880b      	ldrh	r3, [r1, #0]
 8012e70:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8012e74:	9109      	str	r1, [sp, #36]	; 0x24
 8012e76:	fb03 c202 	mla	r2, r3, r2, ip
 8012e7a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012e7e:	4373      	muls	r3, r6
 8012e80:	b2ad      	uxth	r5, r5
 8012e82:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012e86:	00ad      	lsls	r5, r5, #2
 8012e88:	9306      	str	r3, [sp, #24]
 8012e8a:	1d2b      	adds	r3, r5, #4
 8012e8c:	9307      	str	r3, [sp, #28]
 8012e8e:	9b01      	ldr	r3, [sp, #4]
 8012e90:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8012e94:	9103      	str	r1, [sp, #12]
 8012e96:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 8012e9a:	2c00      	cmp	r4, #0
 8012e9c:	bf0c      	ite	eq
 8012e9e:	46c6      	moveq	lr, r8
 8012ea0:	f04f 0e00 	movne.w	lr, #0
 8012ea4:	2300      	movs	r3, #0
 8012ea6:	b292      	uxth	r2, r2
 8012ea8:	fa1f fe8e 	uxth.w	lr, lr
 8012eac:	9302      	str	r3, [sp, #8]
 8012eae:	9204      	str	r2, [sp, #16]
 8012eb0:	9a06      	ldr	r2, [sp, #24]
 8012eb2:	4282      	cmp	r2, r0
 8012eb4:	f240 809d 	bls.w	8012ff2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8012eb8:	b963      	cbnz	r3, 8012ed4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8012eba:	9b00      	ldr	r3, [sp, #0]
 8012ebc:	781a      	ldrb	r2, [r3, #0]
 8012ebe:	0993      	lsrs	r3, r2, #6
 8012ec0:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8012ec4:	9202      	str	r2, [sp, #8]
 8012ec6:	1e5a      	subs	r2, r3, #1
 8012ec8:	2a02      	cmp	r2, #2
 8012eca:	d815      	bhi.n	8012ef8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8012ecc:	9a00      	ldr	r2, [sp, #0]
 8012ece:	3201      	adds	r2, #1
 8012ed0:	9200      	str	r2, [sp, #0]
 8012ed2:	b29b      	uxth	r3, r3
 8012ed4:	b1b4      	cbz	r4, 8012f04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8012ed6:	429c      	cmp	r4, r3
 8012ed8:	bf95      	itete	ls
 8012eda:	1b1c      	subls	r4, r3, r4
 8012edc:	1ae4      	subhi	r4, r4, r3
 8012ede:	fa1f fa84 	uxthls.w	sl, r4
 8012ee2:	b2a4      	uxthhi	r4, r4
 8012ee4:	bf87      	ittee	hi
 8012ee6:	4671      	movhi	r1, lr
 8012ee8:	f04f 0a00 	movhi.w	sl, #0
 8012eec:	fa1f f188 	uxthls.w	r1, r8
 8012ef0:	2400      	movls	r4, #0
 8012ef2:	4653      	mov	r3, sl
 8012ef4:	468e      	mov	lr, r1
 8012ef6:	e7db      	b.n	8012eb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8012ef8:	9a00      	ldr	r2, [sp, #0]
 8012efa:	9b00      	ldr	r3, [sp, #0]
 8012efc:	3202      	adds	r2, #2
 8012efe:	785b      	ldrb	r3, [r3, #1]
 8012f00:	9200      	str	r2, [sp, #0]
 8012f02:	e7e7      	b.n	8012ed4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8012f04:	2202      	movs	r2, #2
 8012f06:	4615      	mov	r5, r2
 8012f08:	9907      	ldr	r1, [sp, #28]
 8012f0a:	9a02      	ldr	r2, [sp, #8]
 8012f0c:	fb15 1202 	smlabb	r2, r5, r2, r1
 8012f10:	9905      	ldr	r1, [sp, #20]
 8012f12:	4573      	cmp	r3, lr
 8012f14:	f831 c002 	ldrh.w	ip, [r1, r2]
 8012f18:	9a01      	ldr	r2, [sp, #4]
 8012f1a:	bf2b      	itete	cs
 8012f1c:	eba3 0a0e 	subcs.w	sl, r3, lr
 8012f20:	ebae 0103 	subcc.w	r1, lr, r3
 8012f24:	46f1      	movcs	r9, lr
 8012f26:	4699      	movcc	r9, r3
 8012f28:	bf27      	ittee	cs
 8012f2a:	fa1f fa8a 	uxthcs.w	sl, sl
 8012f2e:	4621      	movcs	r1, r4
 8012f30:	b289      	uxthcc	r1, r1
 8012f32:	46a2      	movcc	sl, r4
 8012f34:	2aff      	cmp	r2, #255	; 0xff
 8012f36:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8012f3a:	d105      	bne.n	8012f48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8012f3c:	4481      	add	r9, r0
 8012f3e:	4581      	cmp	r9, r0
 8012f40:	d045      	beq.n	8012fce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8012f42:	f820 cb02 	strh.w	ip, [r0], #2
 8012f46:	e7fa      	b.n	8012f3e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8012f48:	9d03      	ldr	r5, [sp, #12]
 8012f4a:	ea4f 222c 	mov.w	r2, ip, asr #8
 8012f4e:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8012f52:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8012f56:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012f5a:	436a      	muls	r2, r5
 8012f5c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8012f60:	fa5f fc8c 	uxtb.w	ip, ip
 8012f64:	9208      	str	r2, [sp, #32]
 8012f66:	fb0b fb05 	mul.w	fp, fp, r5
 8012f6a:	fb0c fc05 	mul.w	ip, ip, r5
 8012f6e:	4481      	add	r9, r0
 8012f70:	4581      	cmp	r9, r0
 8012f72:	d02c      	beq.n	8012fce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8012f74:	8802      	ldrh	r2, [r0, #0]
 8012f76:	9d04      	ldr	r5, [sp, #16]
 8012f78:	9f04      	ldr	r7, [sp, #16]
 8012f7a:	1216      	asrs	r6, r2, #8
 8012f7c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012f80:	fb16 f605 	smulbb	r6, r6, r5
 8012f84:	9d08      	ldr	r5, [sp, #32]
 8012f86:	442e      	add	r6, r5
 8012f88:	10d5      	asrs	r5, r2, #3
 8012f8a:	00d2      	lsls	r2, r2, #3
 8012f8c:	b2d2      	uxtb	r2, r2
 8012f8e:	fb12 f207 	smulbb	r2, r2, r7
 8012f92:	b2b6      	uxth	r6, r6
 8012f94:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012f98:	4462      	add	r2, ip
 8012f9a:	fb15 f507 	smulbb	r5, r5, r7
 8012f9e:	b292      	uxth	r2, r2
 8012fa0:	1c77      	adds	r7, r6, #1
 8012fa2:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8012fa6:	1c57      	adds	r7, r2, #1
 8012fa8:	445d      	add	r5, fp
 8012faa:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8012fae:	b2ad      	uxth	r5, r5
 8012fb0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012fb4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8012fb8:	4316      	orrs	r6, r2
 8012fba:	1c6a      	adds	r2, r5, #1
 8012fbc:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8012fc0:	096d      	lsrs	r5, r5, #5
 8012fc2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012fc6:	432e      	orrs	r6, r5
 8012fc8:	f820 6b02 	strh.w	r6, [r0], #2
 8012fcc:	e7d0      	b.n	8012f70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8012fce:	4573      	cmp	r3, lr
 8012fd0:	d38f      	bcc.n	8012ef2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8012fd2:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8012fd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012fd8:	fa1f f188 	uxth.w	r1, r8
 8012fdc:	1a64      	subs	r4, r4, r1
 8012fde:	881b      	ldrh	r3, [r3, #0]
 8012fe0:	b2a4      	uxth	r4, r4
 8012fe2:	2c00      	cmp	r4, #0
 8012fe4:	eba3 0308 	sub.w	r3, r3, r8
 8012fe8:	bf18      	it	ne
 8012fea:	2100      	movne	r1, #0
 8012fec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012ff0:	e77f      	b.n	8012ef2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8012ff2:	4b04      	ldr	r3, [pc, #16]	; (8013004 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8012ff4:	6818      	ldr	r0, [r3, #0]
 8012ff6:	6803      	ldr	r3, [r0, #0]
 8012ff8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012ffa:	4798      	blx	r3
 8012ffc:	b00f      	add	sp, #60	; 0x3c
 8012ffe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013002:	bf00      	nop
 8013004:	20012644 	.word	0x20012644
 8013008:	2001263e 	.word	0x2001263e

0801300c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801300c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013010:	b09f      	sub	sp, #124	; 0x7c
 8013012:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8013016:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801301a:	9209      	str	r2, [sp, #36]	; 0x24
 801301c:	461d      	mov	r5, r3
 801301e:	4604      	mov	r4, r0
 8013020:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013022:	2a00      	cmp	r2, #0
 8013024:	f000 81eb 	beq.w	80133fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8013028:	6828      	ldr	r0, [r5, #0]
 801302a:	6869      	ldr	r1, [r5, #4]
 801302c:	aa1a      	add	r2, sp, #104	; 0x68
 801302e:	c203      	stmia	r2!, {r0, r1}
 8013030:	6818      	ldr	r0, [r3, #0]
 8013032:	6859      	ldr	r1, [r3, #4]
 8013034:	aa1c      	add	r2, sp, #112	; 0x70
 8013036:	c203      	stmia	r2!, {r0, r1}
 8013038:	a81a      	add	r0, sp, #104	; 0x68
 801303a:	f7f9 fd45 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801303e:	4629      	mov	r1, r5
 8013040:	a81c      	add	r0, sp, #112	; 0x70
 8013042:	f7f9 fd69 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013046:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801304a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801304e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 8013052:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8013056:	bfd7      	itett	le
 8013058:	b29a      	uxthle	r2, r3
 801305a:	2201      	movgt	r2, #1
 801305c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8013060:	fb91 f2f2 	sdivle	r2, r1, r2
 8013064:	9202      	str	r2, [sp, #8]
 8013066:	9802      	ldr	r0, [sp, #8]
 8013068:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801306c:	fb92 f0f0 	sdiv	r0, r2, r0
 8013070:	b280      	uxth	r0, r0
 8013072:	9010      	str	r0, [sp, #64]	; 0x40
 8013074:	9902      	ldr	r1, [sp, #8]
 8013076:	9802      	ldr	r0, [sp, #8]
 8013078:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801307a:	4488      	add	r8, r1
 801307c:	fb05 2510 	mls	r5, r5, r0, r2
 8013080:	fb15 f503 	smulbb	r5, r5, r3
 8013084:	f108 38ff 	add.w	r8, r8, #4294967295
 8013088:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801308c:	fb98 f8f1 	sdiv	r8, r8, r1
 8013090:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8013094:	440d      	add	r5, r1
 8013096:	4419      	add	r1, r3
 8013098:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801309c:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 80130a0:	441a      	add	r2, r3
 80130a2:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 80130a6:	9304      	str	r3, [sp, #16]
 80130a8:	4b95      	ldr	r3, [pc, #596]	; (8013300 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 80130aa:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 80130ae:	6818      	ldr	r0, [r3, #0]
 80130b0:	6803      	ldr	r3, [r0, #0]
 80130b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80130b4:	4798      	blx	r3
 80130b6:	4b93      	ldr	r3, [pc, #588]	; (8013304 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 80130b8:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 80130bc:	881a      	ldrh	r2, [r3, #0]
 80130be:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80130c2:	9318      	str	r3, [sp, #96]	; 0x60
 80130c4:	fb02 7101 	mla	r1, r2, r1, r7
 80130c8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80130cc:	4356      	muls	r6, r2
 80130ce:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 80130d2:	f108 0801 	add.w	r8, r8, #1
 80130d6:	920a      	str	r2, [sp, #40]	; 0x28
 80130d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80130da:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 80130de:	930f      	str	r3, [sp, #60]	; 0x3c
 80130e0:	fa1f f888 	uxth.w	r8, r8
 80130e4:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 80130e8:	f108 0204 	add.w	r2, r8, #4
 80130ec:	9211      	str	r2, [sp, #68]	; 0x44
 80130ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80130f0:	4b85      	ldr	r3, [pc, #532]	; (8013308 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 80130f2:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 80130f6:	b2ad      	uxth	r5, r5
 80130f8:	9215      	str	r2, [sp, #84]	; 0x54
 80130fa:	2d00      	cmp	r5, #0
 80130fc:	9a04      	ldr	r2, [sp, #16]
 80130fe:	f04f 0100 	mov.w	r1, #0
 8013102:	bf18      	it	ne
 8013104:	2200      	movne	r2, #0
 8013106:	1b1b      	subs	r3, r3, r4
 8013108:	b292      	uxth	r2, r2
 801310a:	910d      	str	r1, [sp, #52]	; 0x34
 801310c:	9319      	str	r3, [sp, #100]	; 0x64
 801310e:	9910      	ldr	r1, [sp, #64]	; 0x40
 8013110:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013112:	fa11 f383 	uxtah	r3, r1, r3
 8013116:	9914      	ldr	r1, [sp, #80]	; 0x50
 8013118:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801311c:	3304      	adds	r3, #4
 801311e:	9306      	str	r3, [sp, #24]
 8013120:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013122:	4283      	cmp	r3, r0
 8013124:	f240 8166 	bls.w	80133f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8013128:	9902      	ldr	r1, [sp, #8]
 801312a:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801312e:	fbb5 f3f3 	udiv	r3, r5, r3
 8013132:	1acb      	subs	r3, r1, r3
 8013134:	b29b      	uxth	r3, r3
 8013136:	9316      	str	r3, [sp, #88]	; 0x58
 8013138:	9b06      	ldr	r3, [sp, #24]
 801313a:	9e06      	ldr	r6, [sp, #24]
 801313c:	7859      	ldrb	r1, [r3, #1]
 801313e:	789b      	ldrb	r3, [r3, #2]
 8013140:	7836      	ldrb	r6, [r6, #0]
 8013142:	9612      	str	r6, [sp, #72]	; 0x48
 8013144:	021b      	lsls	r3, r3, #8
 8013146:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801314a:	9906      	ldr	r1, [sp, #24]
 801314c:	78c9      	ldrb	r1, [r1, #3]
 801314e:	430b      	orrs	r3, r1
 8013150:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8013152:	3601      	adds	r6, #1
 8013154:	4419      	add	r1, r3
 8013156:	9605      	str	r6, [sp, #20]
 8013158:	1c4e      	adds	r6, r1, #1
 801315a:	9603      	str	r6, [sp, #12]
 801315c:	7849      	ldrb	r1, [r1, #1]
 801315e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013160:	0209      	lsls	r1, r1, #8
 8013162:	5cf3      	ldrb	r3, [r6, r3]
 8013164:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 8013168:	4319      	orrs	r1, r3
 801316a:	b28b      	uxth	r3, r1
 801316c:	930c      	str	r3, [sp, #48]	; 0x30
 801316e:	2300      	movs	r3, #0
 8013170:	f04f 0a01 	mov.w	sl, #1
 8013174:	9307      	str	r3, [sp, #28]
 8013176:	469c      	mov	ip, r3
 8013178:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801317c:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8013180:	46d3      	mov	fp, sl
 8013182:	4657      	mov	r7, sl
 8013184:	930e      	str	r3, [sp, #56]	; 0x38
 8013186:	2d00      	cmp	r5, #0
 8013188:	d07e      	beq.n	8013288 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801318a:	42af      	cmp	r7, r5
 801318c:	d26e      	bcs.n	801326c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801318e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013190:	9201      	str	r2, [sp, #4]
 8013192:	1bed      	subs	r5, r5, r7
 8013194:	4283      	cmp	r3, r0
 8013196:	b2ad      	uxth	r5, r5
 8013198:	d802      	bhi.n	80131a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801319a:	e073      	b.n	8013284 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801319c:	2b00      	cmp	r3, #0
 801319e:	d15f      	bne.n	8013260 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 80131a0:	9b03      	ldr	r3, [sp, #12]
 80131a2:	785b      	ldrb	r3, [r3, #1]
 80131a4:	f1cb 0207 	rsb	r2, fp, #7
 80131a8:	4093      	lsls	r3, r2
 80131aa:	005b      	lsls	r3, r3, #1
 80131ac:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 80131b0:	9b03      	ldr	r3, [sp, #12]
 80131b2:	781b      	ldrb	r3, [r3, #0]
 80131b4:	fa43 f30b 	asr.w	r3, r3, fp
 80131b8:	b2db      	uxtb	r3, r3
 80131ba:	4313      	orrs	r3, r2
 80131bc:	f10b 0201 	add.w	r2, fp, #1
 80131c0:	fa5f fb82 	uxtb.w	fp, r2
 80131c4:	9a03      	ldr	r2, [sp, #12]
 80131c6:	f1bb 0f08 	cmp.w	fp, #8
 80131ca:	bf15      	itete	ne
 80131cc:	3201      	addne	r2, #1
 80131ce:	3202      	addeq	r2, #2
 80131d0:	9203      	strne	r2, [sp, #12]
 80131d2:	9203      	streq	r2, [sp, #12]
 80131d4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80131d6:	b29f      	uxth	r7, r3
 80131d8:	bf08      	it	eq
 80131da:	f04f 0b00 	moveq.w	fp, #0
 80131de:	42ba      	cmp	r2, r7
 80131e0:	d309      	bcc.n	80131f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 80131e2:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 80131e6:	2301      	movs	r3, #1
 80131e8:	9a05      	ldr	r2, [sp, #20]
 80131ea:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 80131ee:	d30e      	bcc.n	801320e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 80131f0:	469a      	mov	sl, r3
 80131f2:	2600      	movs	r6, #0
 80131f4:	e035      	b.n	8013262 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 80131f6:	9b05      	ldr	r3, [sp, #20]
 80131f8:	429f      	cmp	r7, r3
 80131fa:	d318      	bcc.n	801322e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 80131fc:	eb04 030a 	add.w	r3, r4, sl
 8013200:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 8013204:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 8013208:	f10a 0301 	add.w	r3, sl, #1
 801320c:	b29b      	uxth	r3, r3
 801320e:	9a05      	ldr	r2, [sp, #20]
 8013210:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8013214:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013216:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801321a:	7116      	strb	r6, [r2, #4]
 801321c:	f10a 0601 	add.w	r6, sl, #1
 8013220:	80d1      	strh	r1, [r2, #6]
 8013222:	7156      	strb	r6, [r2, #5]
 8013224:	9a05      	ldr	r2, [sp, #20]
 8013226:	3201      	adds	r2, #1
 8013228:	b292      	uxth	r2, r2
 801322a:	9205      	str	r2, [sp, #20]
 801322c:	e7e0      	b.n	80131f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801322e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8013232:	463a      	mov	r2, r7
 8013234:	795b      	ldrb	r3, [r3, #5]
 8013236:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801323a:	4426      	add	r6, r4
 801323c:	9919      	ldr	r1, [sp, #100]	; 0x64
 801323e:	eb01 0c06 	add.w	ip, r1, r6
 8013242:	f1bc 0f00 	cmp.w	ip, #0
 8013246:	dd07      	ble.n	8013258 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 8013248:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801324c:	f892 c004 	ldrb.w	ip, [r2, #4]
 8013250:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8013254:	88d2      	ldrh	r2, [r2, #6]
 8013256:	e7f1      	b.n	801323c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 8013258:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801325c:	b29b      	uxth	r3, r3
 801325e:	e7c3      	b.n	80131e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8013260:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8013262:	970c      	str	r7, [sp, #48]	; 0x30
 8013264:	9a01      	ldr	r2, [sp, #4]
 8013266:	46b4      	mov	ip, r6
 8013268:	461f      	mov	r7, r3
 801326a:	e78c      	b.n	8013186 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801326c:	1b7b      	subs	r3, r7, r5
 801326e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013272:	9201      	str	r2, [sp, #4]
 8013274:	eb0c 0605 	add.w	r6, ip, r5
 8013278:	b29b      	uxth	r3, r3
 801327a:	b2b6      	uxth	r6, r6
 801327c:	2500      	movs	r5, #0
 801327e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013280:	4282      	cmp	r2, r0
 8013282:	d88b      	bhi.n	801319c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8013284:	9a01      	ldr	r2, [sp, #4]
 8013286:	e74b      	b.n	8013120 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8013288:	4297      	cmp	r7, r2
 801328a:	d332      	bcc.n	80132f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801328c:	1abb      	subs	r3, r7, r2
 801328e:	b29b      	uxth	r3, r3
 8013290:	9208      	str	r2, [sp, #32]
 8013292:	9501      	str	r5, [sp, #4]
 8013294:	9909      	ldr	r1, [sp, #36]	; 0x24
 8013296:	29ff      	cmp	r1, #255	; 0xff
 8013298:	9908      	ldr	r1, [sp, #32]
 801329a:	eb0c 0601 	add.w	r6, ip, r1
 801329e:	d135      	bne.n	801330c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 80132a0:	f1a0 0e02 	sub.w	lr, r0, #2
 80132a4:	b2b6      	uxth	r6, r6
 80132a6:	45b4      	cmp	ip, r6
 80132a8:	f040 808c 	bne.w	80133c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 80132ac:	9908      	ldr	r1, [sp, #32]
 80132ae:	4297      	cmp	r7, r2
 80132b0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80132b4:	d3e2      	bcc.n	801327c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 80132b6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80132b8:	9904      	ldr	r1, [sp, #16]
 80132ba:	8812      	ldrh	r2, [r2, #0]
 80132bc:	1a52      	subs	r2, r2, r1
 80132be:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80132c2:	9a07      	ldr	r2, [sp, #28]
 80132c4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80132c6:	3201      	adds	r2, #1
 80132c8:	428a      	cmp	r2, r1
 80132ca:	9207      	str	r2, [sp, #28]
 80132cc:	f040 8087 	bne.w	80133de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 80132d0:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 80132d4:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 80132d8:	9b04      	ldr	r3, [sp, #16]
 80132da:	1bed      	subs	r5, r5, r7
 80132dc:	b2ad      	uxth	r5, r5
 80132de:	2d00      	cmp	r5, #0
 80132e0:	bf08      	it	eq
 80132e2:	461a      	moveq	r2, r3
 80132e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80132e6:	bf18      	it	ne
 80132e8:	2200      	movne	r2, #0
 80132ea:	3301      	adds	r3, #1
 80132ec:	930d      	str	r3, [sp, #52]	; 0x34
 80132ee:	b292      	uxth	r2, r2
 80132f0:	e70d      	b.n	801310e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 80132f2:	1bd1      	subs	r1, r2, r7
 80132f4:	b28b      	uxth	r3, r1
 80132f6:	9301      	str	r3, [sp, #4]
 80132f8:	9708      	str	r7, [sp, #32]
 80132fa:	462b      	mov	r3, r5
 80132fc:	e7ca      	b.n	8013294 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 80132fe:	bf00      	nop
 8013300:	20012644 	.word	0x20012644
 8013304:	2001263e 	.word	0x2001263e
 8013308:	fffff7fb 	.word	0xfffff7fb
 801330c:	b2b6      	uxth	r6, r6
 801330e:	900b      	str	r0, [sp, #44]	; 0x2c
 8013310:	45b4      	cmp	ip, r6
 8013312:	d0cb      	beq.n	80132ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8013314:	f10c 0101 	add.w	r1, ip, #1
 8013318:	44a4      	add	ip, r4
 801331a:	9117      	str	r1, [sp, #92]	; 0x5c
 801331c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 8013320:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013322:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8013326:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8013328:	f8b1 c000 	ldrh.w	ip, [r1]
 801332c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801332e:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8013332:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8013336:	fb1e fe01 	smulbb	lr, lr, r1
 801333a:	ea4f 2825 	mov.w	r8, r5, asr #8
 801333e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8013340:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8013344:	fb08 e801 	mla	r8, r8, r1, lr
 8013348:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801334c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801334e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013352:	fb19 f901 	smulbb	r9, r9, r1
 8013356:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801335a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801335c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8013360:	fb0e 9e01 	mla	lr, lr, r1, r9
 8013364:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013368:	990e      	ldr	r1, [sp, #56]	; 0x38
 801336a:	fa5f fc8c 	uxtb.w	ip, ip
 801336e:	fb1c fc01 	smulbb	ip, ip, r1
 8013372:	00ed      	lsls	r5, r5, #3
 8013374:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8013376:	b2ed      	uxtb	r5, r5
 8013378:	fb05 c501 	mla	r5, r5, r1, ip
 801337c:	fa1f f888 	uxth.w	r8, r8
 8013380:	fa1f fe8e 	uxth.w	lr, lr
 8013384:	b2ad      	uxth	r5, r5
 8013386:	f108 0c01 	add.w	ip, r8, #1
 801338a:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801338e:	f10e 0901 	add.w	r9, lr, #1
 8013392:	f105 0c01 	add.w	ip, r5, #1
 8013396:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801339a:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801339e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80133a2:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 80133a6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80133aa:	ea4c 0808 	orr.w	r8, ip, r8
 80133ae:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80133b0:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 80133b4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80133b8:	ea48 0809 	orr.w	r8, r8, r9
 80133bc:	f821 8b02 	strh.w	r8, [r1], #2
 80133c0:	910b      	str	r1, [sp, #44]	; 0x2c
 80133c2:	e7a5      	b.n	8013310 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 80133c4:	f10c 0801 	add.w	r8, ip, #1
 80133c8:	44a4      	add	ip, r4
 80133ca:	9911      	ldr	r1, [sp, #68]	; 0x44
 80133cc:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 80133d0:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80133d4:	f82e 5f02 	strh.w	r5, [lr, #2]!
 80133d8:	fa1f fc88 	uxth.w	ip, r8
 80133dc:	e763      	b.n	80132a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 80133de:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80133e2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 80133e6:	1aad      	subs	r5, r5, r2
 80133e8:	b2ad      	uxth	r5, r5
 80133ea:	2d00      	cmp	r5, #0
 80133ec:	bf18      	it	ne
 80133ee:	2200      	movne	r2, #0
 80133f0:	9201      	str	r2, [sp, #4]
 80133f2:	e744      	b.n	801327e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 80133f4:	4b03      	ldr	r3, [pc, #12]	; (8013404 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 80133f6:	6818      	ldr	r0, [r3, #0]
 80133f8:	6803      	ldr	r3, [r0, #0]
 80133fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80133fc:	4798      	blx	r3
 80133fe:	b01f      	add	sp, #124	; 0x7c
 8013400:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013404:	20012644 	.word	0x20012644

08013408 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8013408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801340c:	b08f      	sub	sp, #60	; 0x3c
 801340e:	461c      	mov	r4, r3
 8013410:	9203      	str	r2, [sp, #12]
 8013412:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013416:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8013418:	9202      	str	r2, [sp, #8]
 801341a:	460f      	mov	r7, r1
 801341c:	2a00      	cmp	r2, #0
 801341e:	f000 8128 	beq.w	8013672 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8013422:	6820      	ldr	r0, [r4, #0]
 8013424:	6861      	ldr	r1, [r4, #4]
 8013426:	aa0a      	add	r2, sp, #40	; 0x28
 8013428:	c203      	stmia	r2!, {r0, r1}
 801342a:	6818      	ldr	r0, [r3, #0]
 801342c:	6859      	ldr	r1, [r3, #4]
 801342e:	aa0c      	add	r2, sp, #48	; 0x30
 8013430:	c203      	stmia	r2!, {r0, r1}
 8013432:	a80a      	add	r0, sp, #40	; 0x28
 8013434:	f7f9 fb48 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013438:	4621      	mov	r1, r4
 801343a:	a80c      	add	r0, sp, #48	; 0x30
 801343c:	f7f9 fb6c 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013440:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8013444:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8013448:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801344c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8013450:	bfde      	ittt	le
 8013452:	b2b3      	uxthle	r3, r6
 8013454:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8013458:	fb92 f3f3 	sdivle	r3, r2, r3
 801345c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8013460:	bfc8      	it	gt
 8013462:	2301      	movgt	r3, #1
 8013464:	fb92 f1f3 	sdiv	r1, r2, r3
 8013468:	fa1f fc81 	uxth.w	ip, r1
 801346c:	fb0c 2413 	mls	r4, ip, r3, r2
 8013470:	fb14 f406 	smulbb	r4, r4, r6
 8013474:	441d      	add	r5, r3
 8013476:	4404      	add	r4, r0
 8013478:	4661      	mov	r1, ip
 801347a:	3d01      	subs	r5, #1
 801347c:	b2a4      	uxth	r4, r4
 801347e:	fb95 f5f3 	sdiv	r5, r5, r3
 8013482:	b121      	cbz	r1, 801348e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8013484:	9b03      	ldr	r3, [sp, #12]
 8013486:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801348a:	ba1b      	rev	r3, r3
 801348c:	441f      	add	r7, r3
 801348e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8013492:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8013496:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801349a:	4418      	add	r0, r3
 801349c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80134a0:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 80134a4:	441a      	add	r2, r3
 80134a6:	4b74      	ldr	r3, [pc, #464]	; (8013678 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80134a8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80134ac:	6818      	ldr	r0, [r3, #0]
 80134ae:	6803      	ldr	r3, [r0, #0]
 80134b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80134b2:	4798      	blx	r3
 80134b4:	4a71      	ldr	r2, [pc, #452]	; (801367c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 80134b6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80134ba:	8813      	ldrh	r3, [r2, #0]
 80134bc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 80134c0:	9209      	str	r2, [sp, #36]	; 0x24
 80134c2:	fb03 c101 	mla	r1, r3, r1, ip
 80134c6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80134ca:	4373      	muls	r3, r6
 80134cc:	b2ad      	uxth	r5, r5
 80134ce:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80134d2:	00ad      	lsls	r5, r5, #2
 80134d4:	2c00      	cmp	r4, #0
 80134d6:	9304      	str	r3, [sp, #16]
 80134d8:	f105 0304 	add.w	r3, r5, #4
 80134dc:	9305      	str	r3, [sp, #20]
 80134de:	bf0c      	ite	eq
 80134e0:	46c8      	moveq	r8, r9
 80134e2:	f04f 0800 	movne.w	r8, #0
 80134e6:	2300      	movs	r3, #0
 80134e8:	fa1f f888 	uxth.w	r8, r8
 80134ec:	9301      	str	r3, [sp, #4]
 80134ee:	9a04      	ldr	r2, [sp, #16]
 80134f0:	4282      	cmp	r2, r0
 80134f2:	f240 80b9 	bls.w	8013668 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 80134f6:	b95b      	cbnz	r3, 8013510 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 80134f8:	783a      	ldrb	r2, [r7, #0]
 80134fa:	0993      	lsrs	r3, r2, #6
 80134fc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8013500:	9201      	str	r2, [sp, #4]
 8013502:	1e5a      	subs	r2, r3, #1
 8013504:	2a02      	cmp	r2, #2
 8013506:	bf8d      	iteet	hi
 8013508:	787b      	ldrbhi	r3, [r7, #1]
 801350a:	3701      	addls	r7, #1
 801350c:	b29b      	uxthls	r3, r3
 801350e:	3702      	addhi	r7, #2
 8013510:	b184      	cbz	r4, 8013534 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8013512:	429c      	cmp	r4, r3
 8013514:	bf95      	itete	ls
 8013516:	1b1c      	subls	r4, r3, r4
 8013518:	1ae4      	subhi	r4, r4, r3
 801351a:	fa1f fa84 	uxthls.w	sl, r4
 801351e:	b2a4      	uxthhi	r4, r4
 8013520:	bf87      	ittee	hi
 8013522:	46c4      	movhi	ip, r8
 8013524:	f04f 0a00 	movhi.w	sl, #0
 8013528:	fa1f fc89 	uxthls.w	ip, r9
 801352c:	2400      	movls	r4, #0
 801352e:	4653      	mov	r3, sl
 8013530:	46e0      	mov	r8, ip
 8013532:	e7dc      	b.n	80134ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8013534:	2204      	movs	r2, #4
 8013536:	4615      	mov	r5, r2
 8013538:	9905      	ldr	r1, [sp, #20]
 801353a:	9a01      	ldr	r2, [sp, #4]
 801353c:	fb15 1202 	smlabb	r2, r5, r2, r1
 8013540:	9903      	ldr	r1, [sp, #12]
 8013542:	588a      	ldr	r2, [r1, r2]
 8013544:	4543      	cmp	r3, r8
 8013546:	bf27      	ittee	cs
 8013548:	eba3 0a08 	subcs.w	sl, r3, r8
 801354c:	46c6      	movcs	lr, r8
 801354e:	eba8 0c03 	subcc.w	ip, r8, r3
 8013552:	469e      	movcc	lr, r3
 8013554:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8013558:	bf27      	ittee	cs
 801355a:	fa1f fa8a 	uxthcs.w	sl, sl
 801355e:	46a4      	movcs	ip, r4
 8013560:	fa1f fc8c 	uxthcc.w	ip, ip
 8013564:	46a2      	movcc	sl, r4
 8013566:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801356a:	2900      	cmp	r1, #0
 801356c:	d066      	beq.n	801363c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801356e:	29ff      	cmp	r1, #255	; 0xff
 8013570:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8013574:	d114      	bne.n	80135a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8013576:	9d02      	ldr	r5, [sp, #8]
 8013578:	2dff      	cmp	r5, #255	; 0xff
 801357a:	d111      	bne.n	80135a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801357c:	0951      	lsrs	r1, r2, #5
 801357e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8013582:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013586:	f026 0607 	bic.w	r6, r6, #7
 801358a:	430e      	orrs	r6, r1
 801358c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8013590:	4316      	orrs	r6, r2
 8013592:	b2b6      	uxth	r6, r6
 8013594:	4486      	add	lr, r0
 8013596:	4586      	cmp	lr, r0
 8013598:	d051      	beq.n	801363e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801359a:	f820 6b02 	strh.w	r6, [r0], #2
 801359e:	e7fa      	b.n	8013596 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 80135a0:	9d02      	ldr	r5, [sp, #8]
 80135a2:	4369      	muls	r1, r5
 80135a4:	1c4d      	adds	r5, r1, #1
 80135a6:	eb05 2521 	add.w	r5, r5, r1, asr #8
 80135aa:	122d      	asrs	r5, r5, #8
 80135ac:	ea6f 0b05 	mvn.w	fp, r5
 80135b0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80135b4:	b2ad      	uxth	r5, r5
 80135b6:	b2f6      	uxtb	r6, r6
 80135b8:	b2d2      	uxtb	r2, r2
 80135ba:	fb11 f105 	smulbb	r1, r1, r5
 80135be:	fb16 f605 	smulbb	r6, r6, r5
 80135c2:	fb12 f205 	smulbb	r2, r2, r5
 80135c6:	b289      	uxth	r1, r1
 80135c8:	b2b6      	uxth	r6, r6
 80135ca:	b292      	uxth	r2, r2
 80135cc:	9106      	str	r1, [sp, #24]
 80135ce:	9607      	str	r6, [sp, #28]
 80135d0:	9208      	str	r2, [sp, #32]
 80135d2:	4486      	add	lr, r0
 80135d4:	fa5f fb8b 	uxtb.w	fp, fp
 80135d8:	4586      	cmp	lr, r0
 80135da:	d030      	beq.n	801363e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80135dc:	8802      	ldrh	r2, [r0, #0]
 80135de:	9906      	ldr	r1, [sp, #24]
 80135e0:	1216      	asrs	r6, r2, #8
 80135e2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80135e6:	10d5      	asrs	r5, r2, #3
 80135e8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80135ec:	fb06 160b 	mla	r6, r6, fp, r1
 80135f0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80135f4:	9907      	ldr	r1, [sp, #28]
 80135f6:	00d2      	lsls	r2, r2, #3
 80135f8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80135fc:	fb05 150b 	mla	r5, r5, fp, r1
 8013600:	b2d2      	uxtb	r2, r2
 8013602:	9908      	ldr	r1, [sp, #32]
 8013604:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8013608:	b2b6      	uxth	r6, r6
 801360a:	fb02 120b 	mla	r2, r2, fp, r1
 801360e:	b292      	uxth	r2, r2
 8013610:	1c71      	adds	r1, r6, #1
 8013612:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8013616:	1c51      	adds	r1, r2, #1
 8013618:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801361c:	b2ad      	uxth	r5, r5
 801361e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013622:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8013626:	4316      	orrs	r6, r2
 8013628:	1c6a      	adds	r2, r5, #1
 801362a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801362e:	096d      	lsrs	r5, r5, #5
 8013630:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013634:	432e      	orrs	r6, r5
 8013636:	f820 6b02 	strh.w	r6, [r0], #2
 801363a:	e7cd      	b.n	80135d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801363c:	4470      	add	r0, lr
 801363e:	4543      	cmp	r3, r8
 8013640:	f4ff af75 	bcc.w	801352e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8013644:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8013648:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801364a:	fa1f fc89 	uxth.w	ip, r9
 801364e:	eba4 040c 	sub.w	r4, r4, ip
 8013652:	881b      	ldrh	r3, [r3, #0]
 8013654:	b2a4      	uxth	r4, r4
 8013656:	2c00      	cmp	r4, #0
 8013658:	eba3 0309 	sub.w	r3, r3, r9
 801365c:	bf18      	it	ne
 801365e:	f04f 0c00 	movne.w	ip, #0
 8013662:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013666:	e762      	b.n	801352e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8013668:	4b03      	ldr	r3, [pc, #12]	; (8013678 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801366a:	6818      	ldr	r0, [r3, #0]
 801366c:	6803      	ldr	r3, [r0, #0]
 801366e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013670:	4798      	blx	r3
 8013672:	b00f      	add	sp, #60	; 0x3c
 8013674:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013678:	20012644 	.word	0x20012644
 801367c:	2001263e 	.word	0x2001263e

08013680 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8013680:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013684:	b093      	sub	sp, #76	; 0x4c
 8013686:	461c      	mov	r4, r3
 8013688:	9205      	str	r2, [sp, #20]
 801368a:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801368e:	9101      	str	r1, [sp, #4]
 8013690:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8013692:	9202      	str	r2, [sp, #8]
 8013694:	2a00      	cmp	r2, #0
 8013696:	f000 812c 	beq.w	80138f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801369a:	6820      	ldr	r0, [r4, #0]
 801369c:	6861      	ldr	r1, [r4, #4]
 801369e:	aa0e      	add	r2, sp, #56	; 0x38
 80136a0:	c203      	stmia	r2!, {r0, r1}
 80136a2:	6818      	ldr	r0, [r3, #0]
 80136a4:	6859      	ldr	r1, [r3, #4]
 80136a6:	aa10      	add	r2, sp, #64	; 0x40
 80136a8:	c203      	stmia	r2!, {r0, r1}
 80136aa:	a80e      	add	r0, sp, #56	; 0x38
 80136ac:	f7f9 fa0c 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80136b0:	4621      	mov	r1, r4
 80136b2:	a810      	add	r0, sp, #64	; 0x40
 80136b4:	f7f9 fa30 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80136b8:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 80136bc:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 80136c0:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 80136c4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 80136c8:	bfde      	ittt	le
 80136ca:	b2b3      	uxthle	r3, r6
 80136cc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 80136d0:	fb92 f3f3 	sdivle	r3, r2, r3
 80136d4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80136d8:	bfc8      	it	gt
 80136da:	2301      	movgt	r3, #1
 80136dc:	fb92 f1f3 	sdiv	r1, r2, r3
 80136e0:	fa1f fc81 	uxth.w	ip, r1
 80136e4:	fb0c 2413 	mls	r4, ip, r3, r2
 80136e8:	fb14 f406 	smulbb	r4, r4, r6
 80136ec:	441d      	add	r5, r3
 80136ee:	4404      	add	r4, r0
 80136f0:	4661      	mov	r1, ip
 80136f2:	3d01      	subs	r5, #1
 80136f4:	b2a4      	uxth	r4, r4
 80136f6:	fb95 f5f3 	sdiv	r5, r5, r3
 80136fa:	b131      	cbz	r1, 801370a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 80136fc:	9b05      	ldr	r3, [sp, #20]
 80136fe:	9901      	ldr	r1, [sp, #4]
 8013700:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8013704:	ba1b      	rev	r3, r3
 8013706:	4419      	add	r1, r3
 8013708:	9101      	str	r1, [sp, #4]
 801370a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801370e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8013712:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 8013716:	4418      	add	r0, r3
 8013718:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801371c:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 8013720:	441a      	add	r2, r3
 8013722:	4b75      	ldr	r3, [pc, #468]	; (80138f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8013724:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8013728:	6818      	ldr	r0, [r3, #0]
 801372a:	6803      	ldr	r3, [r0, #0]
 801372c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801372e:	4798      	blx	r3
 8013730:	4972      	ldr	r1, [pc, #456]	; (80138fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8013732:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 8013736:	880b      	ldrh	r3, [r1, #0]
 8013738:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801373c:	910d      	str	r1, [sp, #52]	; 0x34
 801373e:	fb03 c202 	mla	r2, r3, r2, ip
 8013742:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013746:	4373      	muls	r3, r6
 8013748:	b2ad      	uxth	r5, r5
 801374a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801374e:	00ad      	lsls	r5, r5, #2
 8013750:	9308      	str	r3, [sp, #32]
 8013752:	1d2b      	adds	r3, r5, #4
 8013754:	9309      	str	r3, [sp, #36]	; 0x24
 8013756:	9b02      	ldr	r3, [sp, #8]
 8013758:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801375c:	9106      	str	r1, [sp, #24]
 801375e:	43da      	mvns	r2, r3
 8013760:	2c00      	cmp	r4, #0
 8013762:	bf0c      	ite	eq
 8013764:	46dc      	moveq	ip, fp
 8013766:	f04f 0c00 	movne.w	ip, #0
 801376a:	2300      	movs	r3, #0
 801376c:	b2d2      	uxtb	r2, r2
 801376e:	fa1f fc8c 	uxth.w	ip, ip
 8013772:	9303      	str	r3, [sp, #12]
 8013774:	9207      	str	r2, [sp, #28]
 8013776:	9a08      	ldr	r2, [sp, #32]
 8013778:	4282      	cmp	r2, r0
 801377a:	f240 80b5 	bls.w	80138e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801377e:	b963      	cbnz	r3, 801379a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8013780:	9b01      	ldr	r3, [sp, #4]
 8013782:	781a      	ldrb	r2, [r3, #0]
 8013784:	0993      	lsrs	r3, r2, #6
 8013786:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801378a:	9203      	str	r2, [sp, #12]
 801378c:	1e5a      	subs	r2, r3, #1
 801378e:	2a02      	cmp	r2, #2
 8013790:	d815      	bhi.n	80137be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8013792:	9a01      	ldr	r2, [sp, #4]
 8013794:	3201      	adds	r2, #1
 8013796:	9201      	str	r2, [sp, #4]
 8013798:	b29b      	uxth	r3, r3
 801379a:	b1b4      	cbz	r4, 80137ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801379c:	429c      	cmp	r4, r3
 801379e:	bf95      	itete	ls
 80137a0:	1b1c      	subls	r4, r3, r4
 80137a2:	1ae4      	subhi	r4, r4, r3
 80137a4:	fa1f f884 	uxthls.w	r8, r4
 80137a8:	b2a4      	uxthhi	r4, r4
 80137aa:	bf87      	ittee	hi
 80137ac:	4666      	movhi	r6, ip
 80137ae:	f04f 0800 	movhi.w	r8, #0
 80137b2:	fa1f f68b 	uxthls.w	r6, fp
 80137b6:	2400      	movls	r4, #0
 80137b8:	4643      	mov	r3, r8
 80137ba:	46b4      	mov	ip, r6
 80137bc:	e7db      	b.n	8013776 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 80137be:	9a01      	ldr	r2, [sp, #4]
 80137c0:	9b01      	ldr	r3, [sp, #4]
 80137c2:	3202      	adds	r2, #2
 80137c4:	785b      	ldrb	r3, [r3, #1]
 80137c6:	9201      	str	r2, [sp, #4]
 80137c8:	e7e7      	b.n	801379a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 80137ca:	2203      	movs	r2, #3
 80137cc:	4615      	mov	r5, r2
 80137ce:	9909      	ldr	r1, [sp, #36]	; 0x24
 80137d0:	9a03      	ldr	r2, [sp, #12]
 80137d2:	fb15 1202 	smlabb	r2, r5, r2, r1
 80137d6:	9905      	ldr	r1, [sp, #20]
 80137d8:	4563      	cmp	r3, ip
 80137da:	eb01 0502 	add.w	r5, r1, r2
 80137de:	9902      	ldr	r1, [sp, #8]
 80137e0:	bf29      	itett	cs
 80137e2:	eba3 080c 	subcs.w	r8, r3, ip
 80137e6:	ebac 0603 	subcc.w	r6, ip, r3
 80137ea:	fa1f f888 	uxthcs.w	r8, r8
 80137ee:	46e1      	movcs	r9, ip
 80137f0:	bf2f      	iteee	cs
 80137f2:	4626      	movcs	r6, r4
 80137f4:	b2b6      	uxthcc	r6, r6
 80137f6:	4699      	movcc	r9, r3
 80137f8:	46a0      	movcc	r8, r4
 80137fa:	29ff      	cmp	r1, #255	; 0xff
 80137fc:	d04a      	beq.n	8013894 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 80137fe:	9f06      	ldr	r7, [sp, #24]
 8013800:	78a9      	ldrb	r1, [r5, #2]
 8013802:	9004      	str	r0, [sp, #16]
 8013804:	4379      	muls	r1, r7
 8013806:	910a      	str	r1, [sp, #40]	; 0x28
 8013808:	7869      	ldrb	r1, [r5, #1]
 801380a:	4379      	muls	r1, r7
 801380c:	910b      	str	r1, [sp, #44]	; 0x2c
 801380e:	9905      	ldr	r1, [sp, #20]
 8013810:	5c8a      	ldrb	r2, [r1, r2]
 8013812:	437a      	muls	r2, r7
 8013814:	920c      	str	r2, [sp, #48]	; 0x30
 8013816:	46ca      	mov	sl, r9
 8013818:	f1ba 0f00 	cmp.w	sl, #0
 801381c:	d03d      	beq.n	801389a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801381e:	9a04      	ldr	r2, [sp, #16]
 8013820:	9f07      	ldr	r7, [sp, #28]
 8013822:	8812      	ldrh	r2, [r2, #0]
 8013824:	1215      	asrs	r5, r2, #8
 8013826:	46be      	mov	lr, r7
 8013828:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801382c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801382e:	10d1      	asrs	r1, r2, #3
 8013830:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8013834:	fb05 750e 	mla	r5, r5, lr, r7
 8013838:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801383c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801383e:	00d2      	lsls	r2, r2, #3
 8013840:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8013844:	fb01 710e 	mla	r1, r1, lr, r7
 8013848:	b2d2      	uxtb	r2, r2
 801384a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801384c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8013850:	b2ad      	uxth	r5, r5
 8013852:	fb02 720e 	mla	r2, r2, lr, r7
 8013856:	b292      	uxth	r2, r2
 8013858:	f105 0e01 	add.w	lr, r5, #1
 801385c:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8013860:	f102 0e01 	add.w	lr, r2, #1
 8013864:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8013868:	b289      	uxth	r1, r1
 801386a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801386e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8013872:	4315      	orrs	r5, r2
 8013874:	1c4a      	adds	r2, r1, #1
 8013876:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801387a:	0949      	lsrs	r1, r1, #5
 801387c:	9a04      	ldr	r2, [sp, #16]
 801387e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013882:	430d      	orrs	r5, r1
 8013884:	f822 5b02 	strh.w	r5, [r2], #2
 8013888:	f10a 3aff 	add.w	sl, sl, #4294967295
 801388c:	9204      	str	r2, [sp, #16]
 801388e:	fa1f fa8a 	uxth.w	sl, sl
 8013892:	e7c1      	b.n	8013818 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8013894:	4649      	mov	r1, r9
 8013896:	4686      	mov	lr, r0
 8013898:	b999      	cbnz	r1, 80138c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801389a:	4563      	cmp	r3, ip
 801389c:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 80138a0:	d38a      	bcc.n	80137b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80138a2:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 80138a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80138a8:	fa1f f68b 	uxth.w	r6, fp
 80138ac:	1ba4      	subs	r4, r4, r6
 80138ae:	881b      	ldrh	r3, [r3, #0]
 80138b0:	b2a4      	uxth	r4, r4
 80138b2:	2c00      	cmp	r4, #0
 80138b4:	eba3 030b 	sub.w	r3, r3, fp
 80138b8:	bf18      	it	ne
 80138ba:	2600      	movne	r6, #0
 80138bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80138c0:	e77a      	b.n	80137b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80138c2:	78aa      	ldrb	r2, [r5, #2]
 80138c4:	4f0e      	ldr	r7, [pc, #56]	; (8013900 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 80138c6:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 80138ca:	786a      	ldrb	r2, [r5, #1]
 80138cc:	00d2      	lsls	r2, r2, #3
 80138ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80138d2:	ea4a 0202 	orr.w	r2, sl, r2
 80138d6:	f895 a000 	ldrb.w	sl, [r5]
 80138da:	3901      	subs	r1, #1
 80138dc:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 80138e0:	f82e 2b02 	strh.w	r2, [lr], #2
 80138e4:	b289      	uxth	r1, r1
 80138e6:	e7d7      	b.n	8013898 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 80138e8:	4b03      	ldr	r3, [pc, #12]	; (80138f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 80138ea:	6818      	ldr	r0, [r3, #0]
 80138ec:	6803      	ldr	r3, [r0, #0]
 80138ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80138f0:	4798      	blx	r3
 80138f2:	b013      	add	sp, #76	; 0x4c
 80138f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80138f8:	20012644 	.word	0x20012644
 80138fc:	2001263e 	.word	0x2001263e
 8013900:	fffff800 	.word	0xfffff800

08013904 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8013904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013908:	b09d      	sub	sp, #116	; 0x74
 801390a:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801390e:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 8013912:	920e      	str	r2, [sp, #56]	; 0x38
 8013914:	461c      	mov	r4, r3
 8013916:	4683      	mov	fp, r0
 8013918:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801391a:	2a00      	cmp	r2, #0
 801391c:	f000 81e0 	beq.w	8013ce0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8013920:	6820      	ldr	r0, [r4, #0]
 8013922:	6861      	ldr	r1, [r4, #4]
 8013924:	aa18      	add	r2, sp, #96	; 0x60
 8013926:	c203      	stmia	r2!, {r0, r1}
 8013928:	6818      	ldr	r0, [r3, #0]
 801392a:	6859      	ldr	r1, [r3, #4]
 801392c:	aa1a      	add	r2, sp, #104	; 0x68
 801392e:	c203      	stmia	r2!, {r0, r1}
 8013930:	a818      	add	r0, sp, #96	; 0x60
 8013932:	f7f9 f8c9 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013936:	4621      	mov	r1, r4
 8013938:	a81a      	add	r0, sp, #104	; 0x68
 801393a:	f7f9 f8ed 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801393e:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 8013942:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 8013946:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801394a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801394e:	bfd7      	itett	le
 8013950:	b29a      	uxthle	r2, r3
 8013952:	2201      	movgt	r2, #1
 8013954:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8013958:	fb91 f2f2 	sdivle	r2, r1, r2
 801395c:	9202      	str	r2, [sp, #8]
 801395e:	9802      	ldr	r0, [sp, #8]
 8013960:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 8013964:	fb92 f0f0 	sdiv	r0, r2, r0
 8013968:	b280      	uxth	r0, r0
 801396a:	900f      	str	r0, [sp, #60]	; 0x3c
 801396c:	9902      	ldr	r1, [sp, #8]
 801396e:	9802      	ldr	r0, [sp, #8]
 8013970:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8013972:	440c      	add	r4, r1
 8013974:	fb05 2510 	mls	r5, r5, r0, r2
 8013978:	fb15 f503 	smulbb	r5, r5, r3
 801397c:	3c01      	subs	r4, #1
 801397e:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 8013982:	fb94 f4f1 	sdiv	r4, r4, r1
 8013986:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801398a:	440d      	add	r5, r1
 801398c:	4419      	add	r1, r3
 801398e:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 8013992:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 8013996:	441a      	add	r2, r3
 8013998:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801399c:	9306      	str	r3, [sp, #24]
 801399e:	4bb3      	ldr	r3, [pc, #716]	; (8013c6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 80139a0:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 80139a4:	6818      	ldr	r0, [r3, #0]
 80139a6:	6803      	ldr	r3, [r0, #0]
 80139a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80139aa:	4798      	blx	r3
 80139ac:	4bb0      	ldr	r3, [pc, #704]	; (8013c70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 80139ae:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 80139b2:	881a      	ldrh	r2, [r3, #0]
 80139b4:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 80139b8:	9316      	str	r3, [sp, #88]	; 0x58
 80139ba:	fb02 7101 	mla	r1, r2, r1, r7
 80139be:	3401      	adds	r4, #1
 80139c0:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 80139c4:	b2a4      	uxth	r4, r4
 80139c6:	4356      	muls	r6, r2
 80139c8:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 80139cc:	00a4      	lsls	r4, r4, #2
 80139ce:	920a      	str	r2, [sp, #40]	; 0x28
 80139d0:	1d22      	adds	r2, r4, #4
 80139d2:	b2ad      	uxth	r5, r5
 80139d4:	9213      	str	r2, [sp, #76]	; 0x4c
 80139d6:	4ba7      	ldr	r3, [pc, #668]	; (8013c74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 80139d8:	9a06      	ldr	r2, [sp, #24]
 80139da:	2d00      	cmp	r5, #0
 80139dc:	bf0c      	ite	eq
 80139de:	4611      	moveq	r1, r2
 80139e0:	2100      	movne	r1, #0
 80139e2:	2200      	movs	r2, #0
 80139e4:	eba3 030b 	sub.w	r3, r3, fp
 80139e8:	b289      	uxth	r1, r1
 80139ea:	920d      	str	r2, [sp, #52]	; 0x34
 80139ec:	9317      	str	r3, [sp, #92]	; 0x5c
 80139ee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80139f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80139f2:	fa12 f383 	uxtah	r3, r2, r3
 80139f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80139f8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80139fc:	3304      	adds	r3, #4
 80139fe:	9308      	str	r3, [sp, #32]
 8013a00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013a02:	4543      	cmp	r3, r8
 8013a04:	f240 8167 	bls.w	8013cd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8013a08:	9a02      	ldr	r2, [sp, #8]
 8013a0a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 8013a0e:	fbb5 f3f3 	udiv	r3, r5, r3
 8013a12:	1ad3      	subs	r3, r2, r3
 8013a14:	b29b      	uxth	r3, r3
 8013a16:	9314      	str	r3, [sp, #80]	; 0x50
 8013a18:	9b08      	ldr	r3, [sp, #32]
 8013a1a:	9808      	ldr	r0, [sp, #32]
 8013a1c:	785a      	ldrb	r2, [r3, #1]
 8013a1e:	789b      	ldrb	r3, [r3, #2]
 8013a20:	7800      	ldrb	r0, [r0, #0]
 8013a22:	9010      	str	r0, [sp, #64]	; 0x40
 8013a24:	021b      	lsls	r3, r3, #8
 8013a26:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8013a2a:	9a08      	ldr	r2, [sp, #32]
 8013a2c:	78d2      	ldrb	r2, [r2, #3]
 8013a2e:	4313      	orrs	r3, r2
 8013a30:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013a32:	3001      	adds	r0, #1
 8013a34:	441a      	add	r2, r3
 8013a36:	9007      	str	r0, [sp, #28]
 8013a38:	1c50      	adds	r0, r2, #1
 8013a3a:	9005      	str	r0, [sp, #20]
 8013a3c:	7852      	ldrb	r2, [r2, #1]
 8013a3e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013a40:	0212      	lsls	r2, r2, #8
 8013a42:	5cc3      	ldrb	r3, [r0, r3]
 8013a44:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8013a48:	431a      	orrs	r2, r3
 8013a4a:	b293      	uxth	r3, r2
 8013a4c:	930b      	str	r3, [sp, #44]	; 0x2c
 8013a4e:	2300      	movs	r3, #0
 8013a50:	9309      	str	r3, [sp, #36]	; 0x24
 8013a52:	2301      	movs	r3, #1
 8013a54:	9301      	str	r3, [sp, #4]
 8013a56:	9304      	str	r3, [sp, #16]
 8013a58:	2300      	movs	r3, #0
 8013a5a:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 8013a5e:	9303      	str	r3, [sp, #12]
 8013a60:	f04f 0e01 	mov.w	lr, #1
 8013a64:	2d00      	cmp	r5, #0
 8013a66:	d07c      	beq.n	8013b62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8013a68:	45ae      	cmp	lr, r5
 8013a6a:	d26b      	bcs.n	8013b44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8013a6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013a6e:	eba5 050e 	sub.w	r5, r5, lr
 8013a72:	4543      	cmp	r3, r8
 8013a74:	b2ad      	uxth	r5, r5
 8013a76:	460c      	mov	r4, r1
 8013a78:	d802      	bhi.n	8013a80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 8013a7a:	e070      	b.n	8013b5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8013a7c:	2b00      	cmp	r3, #0
 8013a7e:	d15c      	bne.n	8013b3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8013a80:	9b05      	ldr	r3, [sp, #20]
 8013a82:	9a04      	ldr	r2, [sp, #16]
 8013a84:	785b      	ldrb	r3, [r3, #1]
 8013a86:	9904      	ldr	r1, [sp, #16]
 8013a88:	f1c2 0207 	rsb	r2, r2, #7
 8013a8c:	4093      	lsls	r3, r2
 8013a8e:	005b      	lsls	r3, r3, #1
 8013a90:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8013a94:	9b05      	ldr	r3, [sp, #20]
 8013a96:	781b      	ldrb	r3, [r3, #0]
 8013a98:	410b      	asrs	r3, r1
 8013a9a:	3101      	adds	r1, #1
 8013a9c:	b2c9      	uxtb	r1, r1
 8013a9e:	2908      	cmp	r1, #8
 8013aa0:	9104      	str	r1, [sp, #16]
 8013aa2:	9905      	ldr	r1, [sp, #20]
 8013aa4:	bf0a      	itet	eq
 8013aa6:	3102      	addeq	r1, #2
 8013aa8:	3101      	addne	r1, #1
 8013aaa:	9105      	streq	r1, [sp, #20]
 8013aac:	b2db      	uxtb	r3, r3
 8013aae:	bf0a      	itet	eq
 8013ab0:	2100      	moveq	r1, #0
 8013ab2:	9105      	strne	r1, [sp, #20]
 8013ab4:	9104      	streq	r1, [sp, #16]
 8013ab6:	4313      	orrs	r3, r2
 8013ab8:	9910      	ldr	r1, [sp, #64]	; 0x40
 8013aba:	b29a      	uxth	r2, r3
 8013abc:	4291      	cmp	r1, r2
 8013abe:	d30a      	bcc.n	8013ad6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8013ac0:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 8013ac4:	2301      	movs	r3, #1
 8013ac6:	9907      	ldr	r1, [sp, #28]
 8013ac8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8013acc:	d30f      	bcc.n	8013aee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8013ace:	2100      	movs	r1, #0
 8013ad0:	9301      	str	r3, [sp, #4]
 8013ad2:	9103      	str	r1, [sp, #12]
 8013ad4:	e032      	b.n	8013b3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8013ad6:	9b07      	ldr	r3, [sp, #28]
 8013ad8:	429a      	cmp	r2, r3
 8013ada:	d318      	bcc.n	8013b0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8013adc:	9b01      	ldr	r3, [sp, #4]
 8013ade:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 8013ae2:	445b      	add	r3, fp
 8013ae4:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8013ae8:	9b01      	ldr	r3, [sp, #4]
 8013aea:	3301      	adds	r3, #1
 8013aec:	b29b      	uxth	r3, r3
 8013aee:	9907      	ldr	r1, [sp, #28]
 8013af0:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 8013af4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8013af8:	7108      	strb	r0, [r1, #4]
 8013afa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013afc:	80c8      	strh	r0, [r1, #6]
 8013afe:	9801      	ldr	r0, [sp, #4]
 8013b00:	3001      	adds	r0, #1
 8013b02:	7148      	strb	r0, [r1, #5]
 8013b04:	9907      	ldr	r1, [sp, #28]
 8013b06:	3101      	adds	r1, #1
 8013b08:	b289      	uxth	r1, r1
 8013b0a:	9107      	str	r1, [sp, #28]
 8013b0c:	e7df      	b.n	8013ace <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8013b0e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8013b12:	4611      	mov	r1, r2
 8013b14:	795b      	ldrb	r3, [r3, #5]
 8013b16:	f603 0004 	addw	r0, r3, #2052	; 0x804
 8013b1a:	4458      	add	r0, fp
 8013b1c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8013b1e:	4406      	add	r6, r0
 8013b20:	2e00      	cmp	r6, #0
 8013b22:	dd06      	ble.n	8013b32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8013b24:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8013b28:	790e      	ldrb	r6, [r1, #4]
 8013b2a:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8013b2e:	88c9      	ldrh	r1, [r1, #6]
 8013b30:	e7f4      	b.n	8013b1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8013b32:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 8013b36:	b29b      	uxth	r3, r3
 8013b38:	e7c5      	b.n	8013ac6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 8013b3a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013b3c:	920b      	str	r2, [sp, #44]	; 0x2c
 8013b3e:	4621      	mov	r1, r4
 8013b40:	469e      	mov	lr, r3
 8013b42:	e78f      	b.n	8013a64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8013b44:	9a03      	ldr	r2, [sp, #12]
 8013b46:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8013b4a:	442a      	add	r2, r5
 8013b4c:	ebae 0305 	sub.w	r3, lr, r5
 8013b50:	b292      	uxth	r2, r2
 8013b52:	b29b      	uxth	r3, r3
 8013b54:	9203      	str	r2, [sp, #12]
 8013b56:	2500      	movs	r5, #0
 8013b58:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013b5a:	4542      	cmp	r2, r8
 8013b5c:	d88e      	bhi.n	8013a7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8013b5e:	4621      	mov	r1, r4
 8013b60:	e74e      	b.n	8013a00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8013b62:	458e      	cmp	lr, r1
 8013b64:	bf29      	itett	cs
 8013b66:	ebae 0301 	subcs.w	r3, lr, r1
 8013b6a:	eba1 040e 	subcc.w	r4, r1, lr
 8013b6e:	b29b      	uxthcs	r3, r3
 8013b70:	910c      	strcs	r1, [sp, #48]	; 0x30
 8013b72:	bf2f      	iteee	cs
 8013b74:	462c      	movcs	r4, r5
 8013b76:	b2a4      	uxthcc	r4, r4
 8013b78:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 8013b7c:	462b      	movcc	r3, r5
 8013b7e:	f04f 0900 	mov.w	r9, #0
 8013b82:	9a03      	ldr	r2, [sp, #12]
 8013b84:	980c      	ldr	r0, [sp, #48]	; 0x30
 8013b86:	444a      	add	r2, r9
 8013b88:	4548      	cmp	r0, r9
 8013b8a:	b292      	uxth	r2, r2
 8013b8c:	d074      	beq.n	8013c78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8013b8e:	445a      	add	r2, fp
 8013b90:	2004      	movs	r0, #4
 8013b92:	4605      	mov	r5, r0
 8013b94:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 8013b98:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013b9a:	fb15 0202 	smlabb	r2, r5, r2, r0
 8013b9e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8013ba0:	5880      	ldr	r0, [r0, r2]
 8013ba2:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8013ba6:	d014      	beq.n	8013bd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8013ba8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013bac:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8013bb0:	d112      	bne.n	8013bd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8013bb2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013bb4:	2aff      	cmp	r2, #255	; 0xff
 8013bb6:	d10f      	bne.n	8013bd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8013bb8:	0942      	lsrs	r2, r0, #5
 8013bba:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8013bbe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013bc2:	f025 0507 	bic.w	r5, r5, #7
 8013bc6:	4315      	orrs	r5, r2
 8013bc8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013bcc:	4305      	orrs	r5, r0
 8013bce:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8013bd2:	f109 0901 	add.w	r9, r9, #1
 8013bd6:	e7d4      	b.n	8013b82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8013bd8:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8013bdc:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013be0:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 8013be4:	9215      	str	r2, [sp, #84]	; 0x54
 8013be6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013be8:	fb02 fa0a 	mul.w	sl, r2, sl
 8013bec:	f10a 0201 	add.w	r2, sl, #1
 8013bf0:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8013bf4:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013bf8:	1212      	asrs	r2, r2, #8
 8013bfa:	fa1f fa82 	uxth.w	sl, r2
 8013bfe:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8013c02:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013c06:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013c0a:	43d2      	mvns	r2, r2
 8013c0c:	b2d2      	uxtb	r2, r2
 8013c0e:	fb16 f60a 	smulbb	r6, r6, sl
 8013c12:	fa5f fc8c 	uxtb.w	ip, ip
 8013c16:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8013c1a:	b2c0      	uxtb	r0, r0
 8013c1c:	fb07 6702 	mla	r7, r7, r2, r6
 8013c20:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8013c24:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8013c26:	fb10 f00a 	smulbb	r0, r0, sl
 8013c2a:	fb0c 0002 	mla	r0, ip, r2, r0
 8013c2e:	b2ed      	uxtb	r5, r5
 8013c30:	b2bf      	uxth	r7, r7
 8013c32:	fb15 f50a 	smulbb	r5, r5, sl
 8013c36:	b280      	uxth	r0, r0
 8013c38:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8013c3c:	fb06 5602 	mla	r6, r6, r2, r5
 8013c40:	1c7a      	adds	r2, r7, #1
 8013c42:	1c45      	adds	r5, r0, #1
 8013c44:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013c48:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013c4c:	b2b6      	uxth	r6, r6
 8013c4e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013c52:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013c56:	432f      	orrs	r7, r5
 8013c58:	1c75      	adds	r5, r6, #1
 8013c5a:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8013c5e:	096d      	lsrs	r5, r5, #5
 8013c60:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013c64:	432f      	orrs	r7, r5
 8013c66:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8013c6a:	e7b2      	b.n	8013bd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8013c6c:	20012644 	.word	0x20012644
 8013c70:	2001263e 	.word	0x2001263e
 8013c74:	fffff7fb 	.word	0xfffff7fb
 8013c78:	9203      	str	r2, [sp, #12]
 8013c7a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013c7c:	458e      	cmp	lr, r1
 8013c7e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8013c82:	f4ff af68 	bcc.w	8013b56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8013c86:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8013c88:	9906      	ldr	r1, [sp, #24]
 8013c8a:	8812      	ldrh	r2, [r2, #0]
 8013c8c:	1a52      	subs	r2, r2, r1
 8013c8e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8013c92:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013c94:	9914      	ldr	r1, [sp, #80]	; 0x50
 8013c96:	3201      	adds	r2, #1
 8013c98:	428a      	cmp	r2, r1
 8013c9a:	9209      	str	r2, [sp, #36]	; 0x24
 8013c9c:	d111      	bne.n	8013cc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8013c9e:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 8013ca2:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8013ca6:	9b06      	ldr	r3, [sp, #24]
 8013ca8:	eba5 0509 	sub.w	r5, r5, r9
 8013cac:	b2ad      	uxth	r5, r5
 8013cae:	2d00      	cmp	r5, #0
 8013cb0:	bf08      	it	eq
 8013cb2:	4619      	moveq	r1, r3
 8013cb4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013cb6:	bf18      	it	ne
 8013cb8:	2100      	movne	r1, #0
 8013cba:	3301      	adds	r3, #1
 8013cbc:	930d      	str	r3, [sp, #52]	; 0x34
 8013cbe:	b289      	uxth	r1, r1
 8013cc0:	e695      	b.n	80139ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8013cc2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8013cc6:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8013cca:	1b2d      	subs	r5, r5, r4
 8013ccc:	b2ad      	uxth	r5, r5
 8013cce:	2d00      	cmp	r5, #0
 8013cd0:	bf18      	it	ne
 8013cd2:	2400      	movne	r4, #0
 8013cd4:	e740      	b.n	8013b58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8013cd6:	4b04      	ldr	r3, [pc, #16]	; (8013ce8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8013cd8:	6818      	ldr	r0, [r3, #0]
 8013cda:	6803      	ldr	r3, [r0, #0]
 8013cdc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013cde:	4798      	blx	r3
 8013ce0:	b01d      	add	sp, #116	; 0x74
 8013ce2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ce6:	bf00      	nop
 8013ce8:	20012644 	.word	0x20012644

08013cec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8013cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cf0:	b09f      	sub	sp, #124	; 0x7c
 8013cf2:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8013cf6:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8013cfa:	920a      	str	r2, [sp, #40]	; 0x28
 8013cfc:	461d      	mov	r5, r3
 8013cfe:	4604      	mov	r4, r0
 8013d00:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013d02:	2a00      	cmp	r2, #0
 8013d04:	f000 81fa 	beq.w	80140fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8013d08:	6828      	ldr	r0, [r5, #0]
 8013d0a:	6869      	ldr	r1, [r5, #4]
 8013d0c:	aa1a      	add	r2, sp, #104	; 0x68
 8013d0e:	c203      	stmia	r2!, {r0, r1}
 8013d10:	6818      	ldr	r0, [r3, #0]
 8013d12:	6859      	ldr	r1, [r3, #4]
 8013d14:	aa1c      	add	r2, sp, #112	; 0x70
 8013d16:	c203      	stmia	r2!, {r0, r1}
 8013d18:	a81a      	add	r0, sp, #104	; 0x68
 8013d1a:	f7f8 fed5 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013d1e:	4629      	mov	r1, r5
 8013d20:	a81c      	add	r0, sp, #112	; 0x70
 8013d22:	f7f8 fef9 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013d26:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8013d2a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 8013d2e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 8013d32:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8013d36:	bfd7      	itett	le
 8013d38:	b29a      	uxthle	r2, r3
 8013d3a:	2201      	movgt	r2, #1
 8013d3c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8013d40:	fb91 f2f2 	sdivle	r2, r1, r2
 8013d44:	9201      	str	r2, [sp, #4]
 8013d46:	9801      	ldr	r0, [sp, #4]
 8013d48:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8013d4c:	fb92 f0f0 	sdiv	r0, r2, r0
 8013d50:	b280      	uxth	r0, r0
 8013d52:	9010      	str	r0, [sp, #64]	; 0x40
 8013d54:	9901      	ldr	r1, [sp, #4]
 8013d56:	9801      	ldr	r0, [sp, #4]
 8013d58:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8013d5a:	440e      	add	r6, r1
 8013d5c:	fb05 2510 	mls	r5, r5, r0, r2
 8013d60:	fb15 f503 	smulbb	r5, r5, r3
 8013d64:	3e01      	subs	r6, #1
 8013d66:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8013d6a:	fb96 f6f1 	sdiv	r6, r6, r1
 8013d6e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8013d72:	440d      	add	r5, r1
 8013d74:	4419      	add	r1, r3
 8013d76:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8013d7a:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8013d7e:	441a      	add	r2, r3
 8013d80:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8013d84:	9304      	str	r3, [sp, #16]
 8013d86:	4b96      	ldr	r3, [pc, #600]	; (8013fe0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8013d88:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8013d8c:	6818      	ldr	r0, [r3, #0]
 8013d8e:	6803      	ldr	r3, [r0, #0]
 8013d90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013d92:	4798      	blx	r3
 8013d94:	4b93      	ldr	r3, [pc, #588]	; (8013fe4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8013d96:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8013d9a:	881a      	ldrh	r2, [r3, #0]
 8013d9c:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 8013da0:	9318      	str	r3, [sp, #96]	; 0x60
 8013da2:	fb02 c101 	mla	r1, r2, r1, ip
 8013da6:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8013daa:	4357      	muls	r7, r2
 8013dac:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8013db0:	3601      	adds	r6, #1
 8013db2:	920b      	str	r2, [sp, #44]	; 0x2c
 8013db4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013db6:	4b8c      	ldr	r3, [pc, #560]	; (8013fe8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8013db8:	b2b6      	uxth	r6, r6
 8013dba:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8013dbe:	1d32      	adds	r2, r6, #4
 8013dc0:	9206      	str	r2, [sp, #24]
 8013dc2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013dc4:	43d2      	mvns	r2, r2
 8013dc6:	b2d2      	uxtb	r2, r2
 8013dc8:	b2ad      	uxth	r5, r5
 8013dca:	9215      	str	r2, [sp, #84]	; 0x54
 8013dcc:	9a04      	ldr	r2, [sp, #16]
 8013dce:	2d00      	cmp	r5, #0
 8013dd0:	bf0c      	ite	eq
 8013dd2:	4611      	moveq	r1, r2
 8013dd4:	2100      	movne	r1, #0
 8013dd6:	2200      	movs	r2, #0
 8013dd8:	1b1b      	subs	r3, r3, r4
 8013dda:	b289      	uxth	r1, r1
 8013ddc:	920d      	str	r2, [sp, #52]	; 0x34
 8013dde:	9319      	str	r3, [sp, #100]	; 0x64
 8013de0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013de2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013de4:	fa12 f383 	uxtah	r3, r2, r3
 8013de8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013dea:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8013dee:	3304      	adds	r3, #4
 8013df0:	9307      	str	r3, [sp, #28]
 8013df2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013df4:	455b      	cmp	r3, fp
 8013df6:	f240 817c 	bls.w	80140f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8013dfa:	9a01      	ldr	r2, [sp, #4]
 8013dfc:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8013e00:	fbb5 f3f3 	udiv	r3, r5, r3
 8013e04:	1ad3      	subs	r3, r2, r3
 8013e06:	b29b      	uxth	r3, r3
 8013e08:	9316      	str	r3, [sp, #88]	; 0x58
 8013e0a:	9b07      	ldr	r3, [sp, #28]
 8013e0c:	9807      	ldr	r0, [sp, #28]
 8013e0e:	785a      	ldrb	r2, [r3, #1]
 8013e10:	789b      	ldrb	r3, [r3, #2]
 8013e12:	7800      	ldrb	r0, [r0, #0]
 8013e14:	9011      	str	r0, [sp, #68]	; 0x44
 8013e16:	021b      	lsls	r3, r3, #8
 8013e18:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8013e1c:	9a07      	ldr	r2, [sp, #28]
 8013e1e:	78d2      	ldrb	r2, [r2, #3]
 8013e20:	4313      	orrs	r3, r2
 8013e22:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013e24:	3001      	adds	r0, #1
 8013e26:	441a      	add	r2, r3
 8013e28:	9005      	str	r0, [sp, #20]
 8013e2a:	1c50      	adds	r0, r2, #1
 8013e2c:	9003      	str	r0, [sp, #12]
 8013e2e:	7852      	ldrb	r2, [r2, #1]
 8013e30:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013e32:	0212      	lsls	r2, r2, #8
 8013e34:	5cc3      	ldrb	r3, [r0, r3]
 8013e36:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8013e3a:	431a      	orrs	r2, r3
 8013e3c:	b293      	uxth	r3, r2
 8013e3e:	930c      	str	r3, [sp, #48]	; 0x30
 8013e40:	2300      	movs	r3, #0
 8013e42:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8013e46:	9308      	str	r3, [sp, #32]
 8013e48:	461a      	mov	r2, r3
 8013e4a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8013e4e:	930e      	str	r3, [sp, #56]	; 0x38
 8013e50:	f04f 0801 	mov.w	r8, #1
 8013e54:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013e58:	f8cd 8008 	str.w	r8, [sp, #8]
 8013e5c:	46c4      	mov	ip, r8
 8013e5e:	930f      	str	r3, [sp, #60]	; 0x3c
 8013e60:	2d00      	cmp	r5, #0
 8013e62:	d07c      	beq.n	8013f5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8013e64:	45ac      	cmp	ip, r5
 8013e66:	d26c      	bcs.n	8013f42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8013e68:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013e6a:	eba5 050c 	sub.w	r5, r5, ip
 8013e6e:	455b      	cmp	r3, fp
 8013e70:	b2ad      	uxth	r5, r5
 8013e72:	4608      	mov	r0, r1
 8013e74:	d802      	bhi.n	8013e7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8013e76:	e070      	b.n	8013f5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8013e78:	2b00      	cmp	r3, #0
 8013e7a:	d15c      	bne.n	8013f36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8013e7c:	9b03      	ldr	r3, [sp, #12]
 8013e7e:	9a02      	ldr	r2, [sp, #8]
 8013e80:	785b      	ldrb	r3, [r3, #1]
 8013e82:	9902      	ldr	r1, [sp, #8]
 8013e84:	f1c2 0207 	rsb	r2, r2, #7
 8013e88:	4093      	lsls	r3, r2
 8013e8a:	005b      	lsls	r3, r3, #1
 8013e8c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8013e90:	9b03      	ldr	r3, [sp, #12]
 8013e92:	781b      	ldrb	r3, [r3, #0]
 8013e94:	410b      	asrs	r3, r1
 8013e96:	3101      	adds	r1, #1
 8013e98:	b2c9      	uxtb	r1, r1
 8013e9a:	2908      	cmp	r1, #8
 8013e9c:	9102      	str	r1, [sp, #8]
 8013e9e:	9903      	ldr	r1, [sp, #12]
 8013ea0:	bf0a      	itet	eq
 8013ea2:	3102      	addeq	r1, #2
 8013ea4:	3101      	addne	r1, #1
 8013ea6:	9103      	streq	r1, [sp, #12]
 8013ea8:	b2db      	uxtb	r3, r3
 8013eaa:	bf0a      	itet	eq
 8013eac:	2100      	moveq	r1, #0
 8013eae:	9103      	strne	r1, [sp, #12]
 8013eb0:	9102      	streq	r1, [sp, #8]
 8013eb2:	4313      	orrs	r3, r2
 8013eb4:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013eb6:	b29a      	uxth	r2, r3
 8013eb8:	4291      	cmp	r1, r2
 8013eba:	d30a      	bcc.n	8013ed2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8013ebc:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8013ec0:	2301      	movs	r3, #1
 8013ec2:	9905      	ldr	r1, [sp, #20]
 8013ec4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8013ec8:	d30f      	bcc.n	8013eea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8013eca:	2100      	movs	r1, #0
 8013ecc:	4698      	mov	r8, r3
 8013ece:	9100      	str	r1, [sp, #0]
 8013ed0:	e032      	b.n	8013f38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 8013ed2:	9b05      	ldr	r3, [sp, #20]
 8013ed4:	429a      	cmp	r2, r3
 8013ed6:	d318      	bcc.n	8013f0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8013ed8:	eb04 0308 	add.w	r3, r4, r8
 8013edc:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8013ee0:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8013ee4:	f108 0301 	add.w	r3, r8, #1
 8013ee8:	b29b      	uxth	r3, r3
 8013eea:	9905      	ldr	r1, [sp, #20]
 8013eec:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8013ef0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8013ef4:	710e      	strb	r6, [r1, #4]
 8013ef6:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8013ef8:	80ce      	strh	r6, [r1, #6]
 8013efa:	f108 0601 	add.w	r6, r8, #1
 8013efe:	714e      	strb	r6, [r1, #5]
 8013f00:	9905      	ldr	r1, [sp, #20]
 8013f02:	3101      	adds	r1, #1
 8013f04:	b289      	uxth	r1, r1
 8013f06:	9105      	str	r1, [sp, #20]
 8013f08:	e7df      	b.n	8013eca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8013f0a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8013f0e:	4611      	mov	r1, r2
 8013f10:	795b      	ldrb	r3, [r3, #5]
 8013f12:	f603 0604 	addw	r6, r3, #2052	; 0x804
 8013f16:	4426      	add	r6, r4
 8013f18:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8013f1a:	4437      	add	r7, r6
 8013f1c:	2f00      	cmp	r7, #0
 8013f1e:	dd06      	ble.n	8013f2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8013f20:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8013f24:	790f      	ldrb	r7, [r1, #4]
 8013f26:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8013f2a:	88c9      	ldrh	r1, [r1, #6]
 8013f2c:	e7f4      	b.n	8013f18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8013f2e:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8013f32:	b29b      	uxth	r3, r3
 8013f34:	e7c5      	b.n	8013ec2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8013f36:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013f38:	920c      	str	r2, [sp, #48]	; 0x30
 8013f3a:	4601      	mov	r1, r0
 8013f3c:	9a00      	ldr	r2, [sp, #0]
 8013f3e:	469c      	mov	ip, r3
 8013f40:	e78e      	b.n	8013e60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8013f42:	1957      	adds	r7, r2, r5
 8013f44:	ebac 0305 	sub.w	r3, ip, r5
 8013f48:	b2ba      	uxth	r2, r7
 8013f4a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8013f4e:	9200      	str	r2, [sp, #0]
 8013f50:	b29b      	uxth	r3, r3
 8013f52:	2500      	movs	r5, #0
 8013f54:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013f56:	455a      	cmp	r2, fp
 8013f58:	d88e      	bhi.n	8013e78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 8013f5a:	4601      	mov	r1, r0
 8013f5c:	e749      	b.n	8013df2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8013f5e:	458c      	cmp	ip, r1
 8013f60:	bf2c      	ite	cs
 8013f62:	4628      	movcs	r0, r5
 8013f64:	462b      	movcc	r3, r5
 8013f66:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8013f68:	bf27      	ittee	cs
 8013f6a:	9109      	strcs	r1, [sp, #36]	; 0x24
 8013f6c:	ebac 0301 	subcs.w	r3, ip, r1
 8013f70:	eba1 000c 	subcc.w	r0, r1, ip
 8013f74:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 8013f78:	bf2c      	ite	cs
 8013f7a:	b29b      	uxthcs	r3, r3
 8013f7c:	b280      	uxthcc	r0, r0
 8013f7e:	2dff      	cmp	r5, #255	; 0xff
 8013f80:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8013f82:	eb02 0705 	add.w	r7, r2, r5
 8013f86:	b2bd      	uxth	r5, r7
 8013f88:	9500      	str	r5, [sp, #0]
 8013f8a:	d12f      	bne.n	8013fec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8013f8c:	465e      	mov	r6, fp
 8013f8e:	9d00      	ldr	r5, [sp, #0]
 8013f90:	42aa      	cmp	r2, r5
 8013f92:	f040 8084 	bne.w	801409e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 8013f96:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013f98:	458c      	cmp	ip, r1
 8013f9a:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8013f9e:	d3d8      	bcc.n	8013f52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8013fa0:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8013fa2:	9904      	ldr	r1, [sp, #16]
 8013fa4:	8812      	ldrh	r2, [r2, #0]
 8013fa6:	1a52      	subs	r2, r2, r1
 8013fa8:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8013fac:	9a08      	ldr	r2, [sp, #32]
 8013fae:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013fb0:	3201      	adds	r2, #1
 8013fb2:	428a      	cmp	r2, r1
 8013fb4:	9208      	str	r2, [sp, #32]
 8013fb6:	f040 8092 	bne.w	80140de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8013fba:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8013fbe:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 8013fc2:	9b04      	ldr	r3, [sp, #16]
 8013fc4:	eba5 050c 	sub.w	r5, r5, ip
 8013fc8:	b2ad      	uxth	r5, r5
 8013fca:	2d00      	cmp	r5, #0
 8013fcc:	bf08      	it	eq
 8013fce:	4619      	moveq	r1, r3
 8013fd0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013fd2:	bf18      	it	ne
 8013fd4:	2100      	movne	r1, #0
 8013fd6:	3301      	adds	r3, #1
 8013fd8:	930d      	str	r3, [sp, #52]	; 0x34
 8013fda:	b289      	uxth	r1, r1
 8013fdc:	e700      	b.n	8013de0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8013fde:	bf00      	nop
 8013fe0:	20012644 	.word	0x20012644
 8013fe4:	2001263e 	.word	0x2001263e
 8013fe8:	fffff7fb 	.word	0xfffff7fb
 8013fec:	46d9      	mov	r9, fp
 8013fee:	9d00      	ldr	r5, [sp, #0]
 8013ff0:	42aa      	cmp	r2, r5
 8013ff2:	d0d0      	beq.n	8013f96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8013ff4:	1c55      	adds	r5, r2, #1
 8013ff6:	4422      	add	r2, r4
 8013ff8:	9517      	str	r5, [sp, #92]	; 0x5c
 8013ffa:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 8013ffe:	9a06      	ldr	r2, [sp, #24]
 8014000:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014004:	4472      	add	r2, lr
 8014006:	9212      	str	r2, [sp, #72]	; 0x48
 8014008:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801400a:	f8b9 2000 	ldrh.w	r2, [r9]
 801400e:	f897 a002 	ldrb.w	sl, [r7, #2]
 8014012:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8014014:	1216      	asrs	r6, r2, #8
 8014016:	fb1a fa07 	smulbb	sl, sl, r7
 801401a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801401e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8014020:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8014024:	fb06 a607 	mla	r6, r6, r7, sl
 8014028:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801402a:	f897 a001 	ldrb.w	sl, [r7, #1]
 801402e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8014030:	10d5      	asrs	r5, r2, #3
 8014032:	fb1a fa07 	smulbb	sl, sl, r7
 8014036:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801403a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801403c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8014040:	fb05 a507 	mla	r5, r5, r7, sl
 8014044:	9f06      	ldr	r7, [sp, #24]
 8014046:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801404a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801404c:	00d2      	lsls	r2, r2, #3
 801404e:	fb1e fe07 	smulbb	lr, lr, r7
 8014052:	b2d2      	uxtb	r2, r2
 8014054:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8014056:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801405a:	b2b6      	uxth	r6, r6
 801405c:	fb02 e207 	mla	r2, r2, r7, lr
 8014060:	b292      	uxth	r2, r2
 8014062:	b2ad      	uxth	r5, r5
 8014064:	f106 0a01 	add.w	sl, r6, #1
 8014068:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801406c:	f102 0e01 	add.w	lr, r2, #1
 8014070:	f105 0a01 	add.w	sl, r5, #1
 8014074:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8014078:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801407c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8014080:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8014084:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014088:	ea4e 0606 	orr.w	r6, lr, r6
 801408c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014090:	ea46 060a 	orr.w	r6, r6, sl
 8014094:	f829 6b02 	strh.w	r6, [r9], #2
 8014098:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801409c:	e7a7      	b.n	8013fee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801409e:	f102 0e01 	add.w	lr, r2, #1
 80140a2:	4422      	add	r2, r4
 80140a4:	9f06      	ldr	r7, [sp, #24]
 80140a6:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 80140aa:	9a06      	ldr	r2, [sp, #24]
 80140ac:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80140b0:	eb02 0a05 	add.w	sl, r2, r5
 80140b4:	4a13      	ldr	r2, [pc, #76]	; (8014104 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 80140b6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80140ba:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 80140be:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80140c2:	00d2      	lsls	r2, r2, #3
 80140c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80140c8:	ea49 0202 	orr.w	r2, r9, r2
 80140cc:	f817 9005 	ldrb.w	r9, [r7, r5]
 80140d0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80140d4:	f826 2b02 	strh.w	r2, [r6], #2
 80140d8:	fa1f f28e 	uxth.w	r2, lr
 80140dc:	e757      	b.n	8013f8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 80140de:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80140e2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 80140e6:	1a2d      	subs	r5, r5, r0
 80140e8:	b2ad      	uxth	r5, r5
 80140ea:	2d00      	cmp	r5, #0
 80140ec:	bf18      	it	ne
 80140ee:	2000      	movne	r0, #0
 80140f0:	e730      	b.n	8013f54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 80140f2:	4b05      	ldr	r3, [pc, #20]	; (8014108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 80140f4:	6818      	ldr	r0, [r3, #0]
 80140f6:	6803      	ldr	r3, [r0, #0]
 80140f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80140fa:	4798      	blx	r3
 80140fc:	b01f      	add	sp, #124	; 0x7c
 80140fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014102:	bf00      	nop
 8014104:	fffff800 	.word	0xfffff800
 8014108:	20012644 	.word	0x20012644

0801410c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801410c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014110:	b091      	sub	sp, #68	; 0x44
 8014112:	469b      	mov	fp, r3
 8014114:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8014118:	4616      	mov	r6, r2
 801411a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801411e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014122:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8014126:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801412a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801412e:	4604      	mov	r4, r0
 8014130:	460d      	mov	r5, r1
 8014132:	4640      	mov	r0, r8
 8014134:	4659      	mov	r1, fp
 8014136:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801413a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801413e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8014142:	f7f5 fcad 	bl	8009aa0 <_ZN8touchgfx4RectaNERKS0_>
 8014146:	4631      	mov	r1, r6
 8014148:	4640      	mov	r0, r8
 801414a:	f7f5 fca9 	bl	8009aa0 <_ZN8touchgfx4RectaNERKS0_>
 801414e:	4b74      	ldr	r3, [pc, #464]	; (8014320 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8014150:	8818      	ldrh	r0, [r3, #0]
 8014152:	4b74      	ldr	r3, [pc, #464]	; (8014324 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8014154:	8819      	ldrh	r1, [r3, #0]
 8014156:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801415a:	2b00      	cmp	r3, #0
 801415c:	b202      	sxth	r2, r0
 801415e:	b20e      	sxth	r6, r1
 8014160:	da07      	bge.n	8014172 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8014162:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8014166:	4463      	add	r3, ip
 8014168:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801416c:	2300      	movs	r3, #0
 801416e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8014172:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8014176:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801417a:	1ad2      	subs	r2, r2, r3
 801417c:	4594      	cmp	ip, r2
 801417e:	bfc4      	itt	gt
 8014180:	1ac2      	subgt	r2, r0, r3
 8014182:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8014186:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801418a:	2a00      	cmp	r2, #0
 801418c:	da07      	bge.n	801419e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801418e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8014192:	4462      	add	r2, ip
 8014194:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8014198:	2200      	movs	r2, #0
 801419a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801419e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 80141a2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80141a6:	eba6 060a 	sub.w	r6, r6, sl
 80141aa:	42b2      	cmp	r2, r6
 80141ac:	bfc4      	itt	gt
 80141ae:	eba1 020a 	subgt.w	r2, r1, sl
 80141b2:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 80141b6:	4a5c      	ldr	r2, [pc, #368]	; (8014328 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80141b8:	7812      	ldrb	r2, [r2, #0]
 80141ba:	b9a2      	cbnz	r2, 80141e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80141bc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 80141c0:	4286      	cmp	r6, r0
 80141c2:	4640      	mov	r0, r8
 80141c4:	9303      	str	r3, [sp, #12]
 80141c6:	bf14      	ite	ne
 80141c8:	2600      	movne	r6, #0
 80141ca:	2601      	moveq	r6, #1
 80141cc:	f7f5 fcab 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 80141d0:	9b03      	ldr	r3, [sp, #12]
 80141d2:	b160      	cbz	r0, 80141ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80141d4:	2300      	movs	r3, #0
 80141d6:	8023      	strh	r3, [r4, #0]
 80141d8:	8063      	strh	r3, [r4, #2]
 80141da:	80a3      	strh	r3, [r4, #4]
 80141dc:	4620      	mov	r0, r4
 80141de:	80e3      	strh	r3, [r4, #6]
 80141e0:	b011      	add	sp, #68	; 0x44
 80141e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80141e6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80141ea:	428e      	cmp	r6, r1
 80141ec:	e7e9      	b.n	80141c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80141ee:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80141f2:	9205      	str	r2, [sp, #20]
 80141f4:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80141f8:	9206      	str	r2, [sp, #24]
 80141fa:	f8bb 2000 	ldrh.w	r2, [fp]
 80141fe:	900e      	str	r0, [sp, #56]	; 0x38
 8014200:	1a9b      	subs	r3, r3, r2
 8014202:	b21b      	sxth	r3, r3
 8014204:	9303      	str	r3, [sp, #12]
 8014206:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801420a:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801420e:	ebaa 0a03 	sub.w	sl, sl, r3
 8014212:	fa0f f38a 	sxth.w	r3, sl
 8014216:	9304      	str	r3, [sp, #16]
 8014218:	9b03      	ldr	r3, [sp, #12]
 801421a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801421e:	9b04      	ldr	r3, [sp, #16]
 8014220:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014224:	9b05      	ldr	r3, [sp, #20]
 8014226:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801422a:	a90e      	add	r1, sp, #56	; 0x38
 801422c:	9b06      	ldr	r3, [sp, #24]
 801422e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014232:	a80c      	add	r0, sp, #48	; 0x30
 8014234:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8014238:	f7f8 fc6e 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801423c:	4640      	mov	r0, r8
 801423e:	f7f8 fc43 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014242:	a80e      	add	r0, sp, #56	; 0x38
 8014244:	f7f8 fc40 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014248:	4b38      	ldr	r3, [pc, #224]	; (801432c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801424a:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801424e:	881b      	ldrh	r3, [r3, #0]
 8014250:	9307      	str	r3, [sp, #28]
 8014252:	682b      	ldr	r3, [r5, #0]
 8014254:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8014330 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8014258:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801425a:	4628      	mov	r0, r5
 801425c:	4798      	blx	r3
 801425e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8014262:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8014266:	4681      	mov	r9, r0
 8014268:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801426c:	f8db 0000 	ldr.w	r0, [fp]
 8014270:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8014272:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8014276:	6803      	ldr	r3, [r0, #0]
 8014278:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801427a:	4798      	blx	r3
 801427c:	4607      	mov	r7, r0
 801427e:	f8db 0000 	ldr.w	r0, [fp]
 8014282:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8014286:	6803      	ldr	r3, [r0, #0]
 8014288:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801428c:	9109      	str	r1, [sp, #36]	; 0x24
 801428e:	9208      	str	r2, [sp, #32]
 8014290:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014292:	4798      	blx	r3
 8014294:	f010 0f01 	tst.w	r0, #1
 8014298:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801429c:	d012      	beq.n	80142c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801429e:	f8db 0000 	ldr.w	r0, [fp]
 80142a2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 80142a6:	6803      	ldr	r3, [r0, #0]
 80142a8:	9200      	str	r2, [sp, #0]
 80142aa:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80142ac:	e898 0006 	ldmia.w	r8, {r1, r2}
 80142b0:	462b      	mov	r3, r5
 80142b2:	47b0      	blx	r6
 80142b4:	9b03      	ldr	r3, [sp, #12]
 80142b6:	8023      	strh	r3, [r4, #0]
 80142b8:	9b04      	ldr	r3, [sp, #16]
 80142ba:	8063      	strh	r3, [r4, #2]
 80142bc:	9b05      	ldr	r3, [sp, #20]
 80142be:	80a3      	strh	r3, [r4, #4]
 80142c0:	9b06      	ldr	r3, [sp, #24]
 80142c2:	e78b      	b.n	80141dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80142c4:	fb09 f202 	mul.w	r2, r9, r2
 80142c8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80142cc:	440f      	add	r7, r1
 80142ce:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 80142d2:	b166      	cbz	r6, 80142ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80142d4:	9a07      	ldr	r2, [sp, #28]
 80142d6:	4592      	cmp	sl, r2
 80142d8:	d109      	bne.n	80142ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80142da:	f8db 0000 	ldr.w	r0, [fp]
 80142de:	6802      	ldr	r2, [r0, #0]
 80142e0:	fb09 f303 	mul.w	r3, r9, r3
 80142e4:	6b56      	ldr	r6, [r2, #52]	; 0x34
 80142e6:	4629      	mov	r1, r5
 80142e8:	463a      	mov	r2, r7
 80142ea:	47b0      	blx	r6
 80142ec:	e7e2      	b.n	80142b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80142ee:	fb0a f303 	mul.w	r3, sl, r3
 80142f2:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8014330 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80142f6:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 80142fa:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80142fe:	4545      	cmp	r5, r8
 8014300:	d2d8      	bcs.n	80142b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8014302:	f8db 0000 	ldr.w	r0, [fp]
 8014306:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801430a:	6802      	ldr	r2, [r0, #0]
 801430c:	4629      	mov	r1, r5
 801430e:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8014312:	005b      	lsls	r3, r3, #1
 8014314:	463a      	mov	r2, r7
 8014316:	47d0      	blx	sl
 8014318:	444f      	add	r7, r9
 801431a:	4435      	add	r5, r6
 801431c:	e7ef      	b.n	80142fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801431e:	bf00      	nop
 8014320:	20012638 	.word	0x20012638
 8014324:	2001263a 	.word	0x2001263a
 8014328:	2001263c 	.word	0x2001263c
 801432c:	2001263e 	.word	0x2001263e
 8014330:	20012644 	.word	0x20012644

08014334 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8014334:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014336:	4606      	mov	r6, r0
 8014338:	b087      	sub	sp, #28
 801433a:	460c      	mov	r4, r1
 801433c:	4617      	mov	r7, r2
 801433e:	461d      	mov	r5, r3
 8014340:	b333      	cbz	r3, 8014390 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8014342:	4608      	mov	r0, r1
 8014344:	f7f5 fbef 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014348:	bb10      	cbnz	r0, 8014390 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801434a:	6820      	ldr	r0, [r4, #0]
 801434c:	6861      	ldr	r1, [r4, #4]
 801434e:	4c1c      	ldr	r4, [pc, #112]	; (80143c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8014350:	ab04      	add	r3, sp, #16
 8014352:	c303      	stmia	r3!, {r0, r1}
 8014354:	a804      	add	r0, sp, #16
 8014356:	f7f8 fbb7 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801435a:	6820      	ldr	r0, [r4, #0]
 801435c:	6803      	ldr	r3, [r0, #0]
 801435e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014360:	4798      	blx	r3
 8014362:	2dff      	cmp	r5, #255	; 0xff
 8014364:	d016      	beq.n	8014394 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8014366:	f010 0f08 	tst.w	r0, #8
 801436a:	6820      	ldr	r0, [r4, #0]
 801436c:	d015      	beq.n	801439a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801436e:	2400      	movs	r4, #0
 8014370:	6801      	ldr	r1, [r0, #0]
 8014372:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014376:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801437a:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801437e:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8014382:	9401      	str	r4, [sp, #4]
 8014384:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8014388:	9400      	str	r4, [sp, #0]
 801438a:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801438c:	4639      	mov	r1, r7
 801438e:	47a0      	blx	r4
 8014390:	b007      	add	sp, #28
 8014392:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014394:	f010 0f02 	tst.w	r0, #2
 8014398:	e7e7      	b.n	801436a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801439a:	6803      	ldr	r3, [r0, #0]
 801439c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801439e:	4798      	blx	r3
 80143a0:	4b08      	ldr	r3, [pc, #32]	; (80143c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80143a2:	881a      	ldrh	r2, [r3, #0]
 80143a4:	6833      	ldr	r3, [r6, #0]
 80143a6:	e9cd 7500 	strd	r7, r5, [sp]
 80143aa:	4601      	mov	r1, r0
 80143ac:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80143ae:	4630      	mov	r0, r6
 80143b0:	ab04      	add	r3, sp, #16
 80143b2:	47a8      	blx	r5
 80143b4:	6820      	ldr	r0, [r4, #0]
 80143b6:	6803      	ldr	r3, [r0, #0]
 80143b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80143ba:	4798      	blx	r3
 80143bc:	e7e8      	b.n	8014390 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80143be:	bf00      	nop
 80143c0:	20012644 	.word	0x20012644
 80143c4:	2001263e 	.word	0x2001263e

080143c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80143c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80143cc:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 80143d0:	9e08      	ldr	r6, [sp, #32]
 80143d2:	4688      	mov	r8, r1
 80143d4:	4614      	mov	r4, r2
 80143d6:	461d      	mov	r5, r3
 80143d8:	2f00      	cmp	r7, #0
 80143da:	f000 80a9 	beq.w	8014530 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80143de:	4618      	mov	r0, r3
 80143e0:	f7f5 fba1 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 80143e4:	2800      	cmp	r0, #0
 80143e6:	f040 80a3 	bne.w	8014530 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80143ea:	f9b5 1000 	ldrsh.w	r1, [r5]
 80143ee:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80143f2:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80143f6:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80143fa:	fb04 1303 	mla	r3, r4, r3, r1
 80143fe:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8014402:	4365      	muls	r5, r4
 8014404:	2fff      	cmp	r7, #255	; 0xff
 8014406:	eba4 0200 	sub.w	r2, r4, r0
 801440a:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801440e:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8014412:	d04a      	beq.n	80144aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8014414:	b2bc      	uxth	r4, r7
 8014416:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801441a:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801441e:	fa5f f788 	uxtb.w	r7, r8
 8014422:	b2f3      	uxtb	r3, r6
 8014424:	0040      	lsls	r0, r0, #1
 8014426:	fb0e fe04 	mul.w	lr, lr, r4
 801442a:	4367      	muls	r7, r4
 801442c:	4363      	muls	r3, r4
 801442e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8014432:	fa1f fc8c 	uxth.w	ip, ip
 8014436:	42a9      	cmp	r1, r5
 8014438:	d27a      	bcs.n	8014530 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801443a:	eb01 0900 	add.w	r9, r1, r0
 801443e:	4549      	cmp	r1, r9
 8014440:	d231      	bcs.n	80144a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8014442:	880a      	ldrh	r2, [r1, #0]
 8014444:	1214      	asrs	r4, r2, #8
 8014446:	10d6      	asrs	r6, r2, #3
 8014448:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801444c:	00d2      	lsls	r2, r2, #3
 801444e:	b2d2      	uxtb	r2, r2
 8014450:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8014454:	fb14 f40c 	smulbb	r4, r4, ip
 8014458:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801445c:	4474      	add	r4, lr
 801445e:	fb12 f20c 	smulbb	r2, r2, ip
 8014462:	b2a4      	uxth	r4, r4
 8014464:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014468:	441a      	add	r2, r3
 801446a:	b292      	uxth	r2, r2
 801446c:	f104 0a01 	add.w	sl, r4, #1
 8014470:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8014474:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8014478:	fb16 f60c 	smulbb	r6, r6, ip
 801447c:	f102 0a01 	add.w	sl, r2, #1
 8014480:	443e      	add	r6, r7
 8014482:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8014486:	b2b6      	uxth	r6, r6
 8014488:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801448c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014490:	4322      	orrs	r2, r4
 8014492:	1c74      	adds	r4, r6, #1
 8014494:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8014498:	0976      	lsrs	r6, r6, #5
 801449a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801449e:	4332      	orrs	r2, r6
 80144a0:	f821 2b02 	strh.w	r2, [r1], #2
 80144a4:	e7cb      	b.n	801443e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 80144a6:	4441      	add	r1, r8
 80144a8:	e7c5      	b.n	8014436 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 80144aa:	4f22      	ldr	r7, [pc, #136]	; (8014534 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 80144ac:	0973      	lsrs	r3, r6, #5
 80144ae:	ea08 0707 	and.w	r7, r8, r7
 80144b2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80144b6:	433b      	orrs	r3, r7
 80144b8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80144bc:	4333      	orrs	r3, r6
 80144be:	07e7      	lsls	r7, r4, #31
 80144c0:	b29b      	uxth	r3, r3
 80144c2:	d50b      	bpl.n	80144dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 80144c4:	0040      	lsls	r0, r0, #1
 80144c6:	0052      	lsls	r2, r2, #1
 80144c8:	42a9      	cmp	r1, r5
 80144ca:	d231      	bcs.n	8014530 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80144cc:	180c      	adds	r4, r1, r0
 80144ce:	42a1      	cmp	r1, r4
 80144d0:	d202      	bcs.n	80144d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 80144d2:	f821 3b02 	strh.w	r3, [r1], #2
 80144d6:	e7fa      	b.n	80144ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 80144d8:	4411      	add	r1, r2
 80144da:	e7f5      	b.n	80144c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 80144dc:	078e      	lsls	r6, r1, #30
 80144de:	d008      	beq.n	80144f2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 80144e0:	0066      	lsls	r6, r4, #1
 80144e2:	460a      	mov	r2, r1
 80144e4:	42aa      	cmp	r2, r5
 80144e6:	d202      	bcs.n	80144ee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 80144e8:	8013      	strh	r3, [r2, #0]
 80144ea:	4432      	add	r2, r6
 80144ec:	e7fa      	b.n	80144e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 80144ee:	3102      	adds	r1, #2
 80144f0:	3801      	subs	r0, #1
 80144f2:	07c2      	lsls	r2, r0, #31
 80144f4:	d50b      	bpl.n	801450e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 80144f6:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 80144fa:	3a01      	subs	r2, #1
 80144fc:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8014500:	0066      	lsls	r6, r4, #1
 8014502:	42aa      	cmp	r2, r5
 8014504:	d202      	bcs.n	801450c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8014506:	8013      	strh	r3, [r2, #0]
 8014508:	4432      	add	r2, r6
 801450a:	e7fa      	b.n	8014502 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801450c:	3801      	subs	r0, #1
 801450e:	b178      	cbz	r0, 8014530 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8014510:	1040      	asrs	r0, r0, #1
 8014512:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8014516:	0080      	lsls	r0, r0, #2
 8014518:	0064      	lsls	r4, r4, #1
 801451a:	42a9      	cmp	r1, r5
 801451c:	d208      	bcs.n	8014530 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801451e:	180e      	adds	r6, r1, r0
 8014520:	460a      	mov	r2, r1
 8014522:	42b2      	cmp	r2, r6
 8014524:	d202      	bcs.n	801452c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8014526:	f842 3b04 	str.w	r3, [r2], #4
 801452a:	e7fa      	b.n	8014522 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801452c:	4421      	add	r1, r4
 801452e:	e7f4      	b.n	801451a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8014530:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014534:	00fff800 	.word	0x00fff800

08014538 <_ZN8touchgfx8LCD16bppC1Ev>:
 8014538:	2200      	movs	r2, #0
 801453a:	4912      	ldr	r1, [pc, #72]	; (8014584 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801453c:	6042      	str	r2, [r0, #4]
 801453e:	6001      	str	r1, [r0, #0]
 8014540:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8014544:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8014548:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801454c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8014550:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8014554:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8014558:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801455c:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8014560:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8014564:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8014568:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801456c:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8014570:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8014574:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8014578:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801457c:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8014580:	4770      	bx	lr
 8014582:	bf00      	nop
 8014584:	08020a0c 	.word	0x08020a0c

08014588 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8014588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801458c:	460d      	mov	r5, r1
 801458e:	b08d      	sub	sp, #52	; 0x34
 8014590:	4604      	mov	r4, r0
 8014592:	6808      	ldr	r0, [r1, #0]
 8014594:	6849      	ldr	r1, [r1, #4]
 8014596:	4699      	mov	r9, r3
 8014598:	ab08      	add	r3, sp, #32
 801459a:	c303      	stmia	r3!, {r0, r1}
 801459c:	6810      	ldr	r0, [r2, #0]
 801459e:	6851      	ldr	r1, [r2, #4]
 80145a0:	ab0a      	add	r3, sp, #40	; 0x28
 80145a2:	c303      	stmia	r3!, {r0, r1}
 80145a4:	a808      	add	r0, sp, #32
 80145a6:	f7f8 fa8f 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80145aa:	4629      	mov	r1, r5
 80145ac:	a80a      	add	r0, sp, #40	; 0x28
 80145ae:	f7f8 fab3 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80145b2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80145b6:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80145ba:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80145be:	4d63      	ldr	r5, [pc, #396]	; (801474c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80145c0:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80145c4:	6828      	ldr	r0, [r5, #0]
 80145c6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80145ca:	fb11 2103 	smlabb	r1, r1, r3, r2
 80145ce:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80145d2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80145d6:	440a      	add	r2, r1
 80145d8:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80145dc:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80145e0:	4413      	add	r3, r2
 80145e2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80145e6:	6803      	ldr	r3, [r0, #0]
 80145e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80145ea:	4798      	blx	r3
 80145ec:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80145f0:	d119      	bne.n	8014626 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 80145f2:	f010 0f20 	tst.w	r0, #32
 80145f6:	6828      	ldr	r0, [r5, #0]
 80145f8:	d018      	beq.n	801462c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 80145fa:	2500      	movs	r5, #0
 80145fc:	6801      	ldr	r1, [r0, #0]
 80145fe:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8014602:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8014606:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801460a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801460e:	9502      	str	r5, [sp, #8]
 8014610:	b2b6      	uxth	r6, r6
 8014612:	fa1f f588 	uxth.w	r5, r8
 8014616:	9601      	str	r6, [sp, #4]
 8014618:	9500      	str	r5, [sp, #0]
 801461a:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801461c:	4621      	mov	r1, r4
 801461e:	47a8      	blx	r5
 8014620:	b00d      	add	sp, #52	; 0x34
 8014622:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014626:	f010 0f40 	tst.w	r0, #64	; 0x40
 801462a:	e7e4      	b.n	80145f6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801462c:	6803      	ldr	r3, [r0, #0]
 801462e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014630:	4798      	blx	r3
 8014632:	4947      	ldr	r1, [pc, #284]	; (8014750 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8014634:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8014638:	880b      	ldrh	r3, [r1, #0]
 801463a:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801463e:	fb03 5202 	mla	r2, r3, r2, r5
 8014642:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014646:	4373      	muls	r3, r6
 8014648:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801464c:	9307      	str	r3, [sp, #28]
 801464e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8014652:	9306      	str	r3, [sp, #24]
 8014654:	468a      	mov	sl, r1
 8014656:	9b07      	ldr	r3, [sp, #28]
 8014658:	4298      	cmp	r0, r3
 801465a:	d270      	bcs.n	801473e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801465c:	9b06      	ldr	r3, [sp, #24]
 801465e:	4621      	mov	r1, r4
 8014660:	eb00 0b03 	add.w	fp, r0, r3
 8014664:	4558      	cmp	r0, fp
 8014666:	d25d      	bcs.n	8014724 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8014668:	f851 4b04 	ldr.w	r4, [r1], #4
 801466c:	0e23      	lsrs	r3, r4, #24
 801466e:	d014      	beq.n	801469a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8014670:	2bff      	cmp	r3, #255	; 0xff
 8014672:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8014676:	d112      	bne.n	801469e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8014678:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801467c:	d10f      	bne.n	801469e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801467e:	0963      	lsrs	r3, r4, #5
 8014680:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8014684:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014688:	f02c 0c07 	bic.w	ip, ip, #7
 801468c:	ea43 0c0c 	orr.w	ip, r3, ip
 8014690:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014694:	ea4c 0404 	orr.w	r4, ip, r4
 8014698:	8004      	strh	r4, [r0, #0]
 801469a:	3002      	adds	r0, #2
 801469c:	e7e2      	b.n	8014664 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801469e:	fb09 f303 	mul.w	r3, r9, r3
 80146a2:	8807      	ldrh	r7, [r0, #0]
 80146a4:	1c5a      	adds	r2, r3, #1
 80146a6:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80146aa:	1212      	asrs	r2, r2, #8
 80146ac:	123e      	asrs	r6, r7, #8
 80146ae:	b293      	uxth	r3, r2
 80146b0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80146b4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80146b8:	43d2      	mvns	r2, r2
 80146ba:	b2d2      	uxtb	r2, r2
 80146bc:	10fd      	asrs	r5, r7, #3
 80146be:	fb1e fe03 	smulbb	lr, lr, r3
 80146c2:	00ff      	lsls	r7, r7, #3
 80146c4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80146c8:	fb06 e602 	mla	r6, r6, r2, lr
 80146cc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80146d0:	b2ff      	uxtb	r7, r7
 80146d2:	fa5f fc8c 	uxtb.w	ip, ip
 80146d6:	b2e4      	uxtb	r4, r4
 80146d8:	b2b6      	uxth	r6, r6
 80146da:	fb1c fc03 	smulbb	ip, ip, r3
 80146de:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80146e2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80146e6:	fb14 f403 	smulbb	r4, r4, r3
 80146ea:	fb05 c502 	mla	r5, r5, r2, ip
 80146ee:	f106 0e01 	add.w	lr, r6, #1
 80146f2:	fb07 4702 	mla	r7, r7, r2, r4
 80146f6:	b2ad      	uxth	r5, r5
 80146f8:	b2bf      	uxth	r7, r7
 80146fa:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 80146fe:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8014702:	f105 0c01 	add.w	ip, r5, #1
 8014706:	1c7e      	adds	r6, r7, #1
 8014708:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801470c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8014710:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014714:	096d      	lsrs	r5, r5, #5
 8014716:	ea46 060e 	orr.w	r6, r6, lr
 801471a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801471e:	432e      	orrs	r6, r5
 8014720:	8006      	strh	r6, [r0, #0]
 8014722:	e7ba      	b.n	801469a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8014724:	f8ba 3000 	ldrh.w	r3, [sl]
 8014728:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801472c:	eba3 0308 	sub.w	r3, r3, r8
 8014730:	eba4 0408 	sub.w	r4, r4, r8
 8014734:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014738:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801473c:	e78b      	b.n	8014656 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801473e:	4b03      	ldr	r3, [pc, #12]	; (801474c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8014740:	6818      	ldr	r0, [r3, #0]
 8014742:	6803      	ldr	r3, [r0, #0]
 8014744:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014746:	4798      	blx	r3
 8014748:	e76a      	b.n	8014620 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801474a:	bf00      	nop
 801474c:	20012644 	.word	0x20012644
 8014750:	2001263e 	.word	0x2001263e

08014754 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8014754:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014758:	460c      	mov	r4, r1
 801475a:	b085      	sub	sp, #20
 801475c:	6810      	ldr	r0, [r2, #0]
 801475e:	6851      	ldr	r1, [r2, #4]
 8014760:	466d      	mov	r5, sp
 8014762:	c503      	stmia	r5!, {r0, r1}
 8014764:	6818      	ldr	r0, [r3, #0]
 8014766:	6859      	ldr	r1, [r3, #4]
 8014768:	4616      	mov	r6, r2
 801476a:	c503      	stmia	r5!, {r0, r1}
 801476c:	4668      	mov	r0, sp
 801476e:	f7f8 f9ab 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014772:	4631      	mov	r1, r6
 8014774:	a802      	add	r0, sp, #8
 8014776:	f7f8 f9cf 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801477a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801477e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8014782:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8014786:	4d28      	ldr	r5, [pc, #160]	; (8014828 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8014788:	4e28      	ldr	r6, [pc, #160]	; (801482c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801478a:	6828      	ldr	r0, [r5, #0]
 801478c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8014790:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8014794:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014798:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801479c:	f8bd 1000 	ldrh.w	r1, [sp]
 80147a0:	440a      	add	r2, r1
 80147a2:	f8ad 2008 	strh.w	r2, [sp, #8]
 80147a6:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80147aa:	4413      	add	r3, r2
 80147ac:	f8ad 300a 	strh.w	r3, [sp, #10]
 80147b0:	6803      	ldr	r3, [r0, #0]
 80147b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80147b4:	4798      	blx	r3
 80147b6:	8833      	ldrh	r3, [r6, #0]
 80147b8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80147bc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80147c0:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8014830 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 80147c4:	fb03 1202 	mla	r2, r3, r2, r1
 80147c8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80147cc:	fb08 f303 	mul.w	r3, r8, r3
 80147d0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80147d4:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 80147d8:	4298      	cmp	r0, r3
 80147da:	d21d      	bcs.n	8014818 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 80147dc:	eb00 080c 	add.w	r8, r0, ip
 80147e0:	4540      	cmp	r0, r8
 80147e2:	d20f      	bcs.n	8014804 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 80147e4:	f854 1b04 	ldr.w	r1, [r4], #4
 80147e8:	ea4f 1951 	mov.w	r9, r1, lsr #5
 80147ec:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 80147f0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80147f4:	ea42 0209 	orr.w	r2, r2, r9
 80147f8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80147fc:	430a      	orrs	r2, r1
 80147fe:	f820 2b02 	strh.w	r2, [r0], #2
 8014802:	e7ed      	b.n	80147e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8014804:	8832      	ldrh	r2, [r6, #0]
 8014806:	1bd2      	subs	r2, r2, r7
 8014808:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801480c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8014810:	1bd2      	subs	r2, r2, r7
 8014812:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8014816:	e7df      	b.n	80147d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8014818:	6828      	ldr	r0, [r5, #0]
 801481a:	6803      	ldr	r3, [r0, #0]
 801481c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801481e:	4798      	blx	r3
 8014820:	b005      	add	sp, #20
 8014822:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014826:	bf00      	nop
 8014828:	20012644 	.word	0x20012644
 801482c:	2001263e 	.word	0x2001263e
 8014830:	fffff800 	.word	0xfffff800

08014834 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8014834:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014838:	460e      	mov	r6, r1
 801483a:	b08e      	sub	sp, #56	; 0x38
 801483c:	4604      	mov	r4, r0
 801483e:	6808      	ldr	r0, [r1, #0]
 8014840:	6849      	ldr	r1, [r1, #4]
 8014842:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8014a1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8014846:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8014a20 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801484a:	461d      	mov	r5, r3
 801484c:	ab0a      	add	r3, sp, #40	; 0x28
 801484e:	c303      	stmia	r3!, {r0, r1}
 8014850:	6810      	ldr	r0, [r2, #0]
 8014852:	6851      	ldr	r1, [r2, #4]
 8014854:	ab0c      	add	r3, sp, #48	; 0x30
 8014856:	c303      	stmia	r3!, {r0, r1}
 8014858:	a80a      	add	r0, sp, #40	; 0x28
 801485a:	f7f8 f935 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801485e:	4631      	mov	r1, r6
 8014860:	a80c      	add	r0, sp, #48	; 0x30
 8014862:	f7f8 f959 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014866:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801486a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801486e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8014872:	f8d8 0000 	ldr.w	r0, [r8]
 8014876:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801487a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801487e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014882:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8014886:	440c      	add	r4, r1
 8014888:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801488c:	440a      	add	r2, r1
 801488e:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8014892:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8014896:	4413      	add	r3, r2
 8014898:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801489c:	6803      	ldr	r3, [r0, #0]
 801489e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80148a0:	4798      	blx	r3
 80148a2:	2dff      	cmp	r5, #255	; 0xff
 80148a4:	d124      	bne.n	80148f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80148a6:	f010 0f01 	tst.w	r0, #1
 80148aa:	f8d8 0000 	ldr.w	r0, [r8]
 80148ae:	d022      	beq.n	80148f6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80148b0:	2100      	movs	r1, #0
 80148b2:	f8d0 c000 	ldr.w	ip, [r0]
 80148b6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80148ba:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80148be:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80148c2:	f04f 0e01 	mov.w	lr, #1
 80148c6:	f8cd e018 	str.w	lr, [sp, #24]
 80148ca:	f8b9 e000 	ldrh.w	lr, [r9]
 80148ce:	9503      	str	r5, [sp, #12]
 80148d0:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80148d4:	b2b6      	uxth	r6, r6
 80148d6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80148da:	9102      	str	r1, [sp, #8]
 80148dc:	b2bf      	uxth	r7, r7
 80148de:	9601      	str	r6, [sp, #4]
 80148e0:	9700      	str	r7, [sp, #0]
 80148e2:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 80148e6:	4621      	mov	r1, r4
 80148e8:	47a8      	blx	r5
 80148ea:	b00e      	add	sp, #56	; 0x38
 80148ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80148f0:	f010 0f04 	tst.w	r0, #4
 80148f4:	e7d9      	b.n	80148aa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 80148f6:	6803      	ldr	r3, [r0, #0]
 80148f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80148fa:	4798      	blx	r3
 80148fc:	f8b9 3000 	ldrh.w	r3, [r9]
 8014900:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8014904:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8014908:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801490c:	fb03 1202 	mla	r2, r3, r2, r1
 8014910:	ebac 0c07 	sub.w	ip, ip, r7
 8014914:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014918:	435e      	muls	r6, r3
 801491a:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801491e:	2dff      	cmp	r5, #255	; 0xff
 8014920:	eba3 0707 	sub.w	r7, r3, r7
 8014924:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8014928:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801492c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8014930:	d049      	beq.n	80149c6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8014932:	43eb      	mvns	r3, r5
 8014934:	fa1f f985 	uxth.w	r9, r5
 8014938:	b2db      	uxtb	r3, r3
 801493a:	42b0      	cmp	r0, r6
 801493c:	d266      	bcs.n	8014a0c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801493e:	eb00 0a0e 	add.w	sl, r0, lr
 8014942:	4550      	cmp	r0, sl
 8014944:	4621      	mov	r1, r4
 8014946:	f104 0403 	add.w	r4, r4, #3
 801494a:	d25b      	bcs.n	8014a04 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801494c:	8802      	ldrh	r2, [r0, #0]
 801494e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8014952:	ea4f 2822 	mov.w	r8, r2, asr #8
 8014956:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801495a:	fb11 f109 	smulbb	r1, r1, r9
 801495e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8014962:	10d5      	asrs	r5, r2, #3
 8014964:	fb08 1803 	mla	r8, r8, r3, r1
 8014968:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801496c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014970:	fb11 f109 	smulbb	r1, r1, r9
 8014974:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8014978:	fb05 1503 	mla	r5, r5, r3, r1
 801497c:	00d2      	lsls	r2, r2, #3
 801497e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8014982:	b2d2      	uxtb	r2, r2
 8014984:	fb11 f109 	smulbb	r1, r1, r9
 8014988:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801498c:	fa1f f888 	uxth.w	r8, r8
 8014990:	fb02 1203 	mla	r2, r2, r3, r1
 8014994:	b292      	uxth	r2, r2
 8014996:	f108 0101 	add.w	r1, r8, #1
 801499a:	b2ad      	uxth	r5, r5
 801499c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80149a0:	1c51      	adds	r1, r2, #1
 80149a2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80149a6:	1c69      	adds	r1, r5, #1
 80149a8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80149ac:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 80149b0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80149b4:	096d      	lsrs	r5, r5, #5
 80149b6:	ea42 0208 	orr.w	r2, r2, r8
 80149ba:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80149be:	432a      	orrs	r2, r5
 80149c0:	f820 2b02 	strh.w	r2, [r0], #2
 80149c4:	e7bd      	b.n	8014942 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 80149c6:	4a14      	ldr	r2, [pc, #80]	; (8014a18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 80149c8:	42b0      	cmp	r0, r6
 80149ca:	d21f      	bcs.n	8014a0c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80149cc:	eb00 050e 	add.w	r5, r0, lr
 80149d0:	42a8      	cmp	r0, r5
 80149d2:	4621      	mov	r1, r4
 80149d4:	f104 0403 	add.w	r4, r4, #3
 80149d8:	d210      	bcs.n	80149fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 80149da:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80149de:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80149e2:	00db      	lsls	r3, r3, #3
 80149e4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80149e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80149ec:	430b      	orrs	r3, r1
 80149ee:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80149f2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80149f6:	f820 3b02 	strh.w	r3, [r0], #2
 80149fa:	e7e9      	b.n	80149d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 80149fc:	4438      	add	r0, r7
 80149fe:	eb01 040c 	add.w	r4, r1, ip
 8014a02:	e7e1      	b.n	80149c8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8014a04:	4438      	add	r0, r7
 8014a06:	eb01 040c 	add.w	r4, r1, ip
 8014a0a:	e796      	b.n	801493a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8014a0c:	4b03      	ldr	r3, [pc, #12]	; (8014a1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8014a0e:	6818      	ldr	r0, [r3, #0]
 8014a10:	6803      	ldr	r3, [r0, #0]
 8014a12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014a14:	4798      	blx	r3
 8014a16:	e768      	b.n	80148ea <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8014a18:	fffff800 	.word	0xfffff800
 8014a1c:	20012644 	.word	0x20012644
 8014a20:	2001263e 	.word	0x2001263e

08014a24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8014a24:	b4f0      	push	{r4, r5, r6, r7}
 8014a26:	4616      	mov	r6, r2
 8014a28:	2e01      	cmp	r6, #1
 8014a2a:	461c      	mov	r4, r3
 8014a2c:	460d      	mov	r5, r1
 8014a2e:	9a04      	ldr	r2, [sp, #16]
 8014a30:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8014a34:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8014a38:	d012      	beq.n	8014a60 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8014a3a:	d303      	bcc.n	8014a44 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8014a3c:	2e02      	cmp	r6, #2
 8014a3e:	d00a      	beq.n	8014a56 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8014a40:	bcf0      	pop	{r4, r5, r6, r7}
 8014a42:	4770      	bx	lr
 8014a44:	6805      	ldr	r5, [r0, #0]
 8014a46:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8014a4a:	68ed      	ldr	r5, [r5, #12]
 8014a4c:	4613      	mov	r3, r2
 8014a4e:	46ac      	mov	ip, r5
 8014a50:	4622      	mov	r2, r4
 8014a52:	bcf0      	pop	{r4, r5, r6, r7}
 8014a54:	4760      	bx	ip
 8014a56:	4621      	mov	r1, r4
 8014a58:	4628      	mov	r0, r5
 8014a5a:	bcf0      	pop	{r4, r5, r6, r7}
 8014a5c:	f7ff bd94 	b.w	8014588 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014a60:	4621      	mov	r1, r4
 8014a62:	4628      	mov	r0, r5
 8014a64:	bcf0      	pop	{r4, r5, r6, r7}
 8014a66:	f7ff bee5 	b.w	8014834 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08014a6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8014a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a70:	4681      	mov	r9, r0
 8014a72:	b093      	sub	sp, #76	; 0x4c
 8014a74:	6810      	ldr	r0, [r2, #0]
 8014a76:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8014a7a:	4f6d      	ldr	r7, [pc, #436]	; (8014c30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8014a7c:	4688      	mov	r8, r1
 8014a7e:	6851      	ldr	r1, [r2, #4]
 8014a80:	ac0e      	add	r4, sp, #56	; 0x38
 8014a82:	c403      	stmia	r4!, {r0, r1}
 8014a84:	6818      	ldr	r0, [r3, #0]
 8014a86:	6859      	ldr	r1, [r3, #4]
 8014a88:	ac10      	add	r4, sp, #64	; 0x40
 8014a8a:	4616      	mov	r6, r2
 8014a8c:	c403      	stmia	r4!, {r0, r1}
 8014a8e:	a80e      	add	r0, sp, #56	; 0x38
 8014a90:	f7f8 f81a 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014a94:	4631      	mov	r1, r6
 8014a96:	a810      	add	r0, sp, #64	; 0x40
 8014a98:	f7f8 f83e 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014a9c:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8014aa0:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8014aa4:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8014aa8:	4e62      	ldr	r6, [pc, #392]	; (8014c34 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8014aaa:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8014aae:	6830      	ldr	r0, [r6, #0]
 8014ab0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8014ab4:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014ab8:	4489      	add	r9, r1
 8014aba:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8014abe:	440a      	add	r2, r1
 8014ac0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8014ac4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8014ac8:	4413      	add	r3, r2
 8014aca:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8014ace:	6803      	ldr	r3, [r0, #0]
 8014ad0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014ad2:	4798      	blx	r3
 8014ad4:	f010 0f80 	tst.w	r0, #128	; 0x80
 8014ad8:	6830      	ldr	r0, [r6, #0]
 8014ada:	d01d      	beq.n	8014b18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8014adc:	2200      	movs	r2, #0
 8014ade:	6801      	ldr	r1, [r0, #0]
 8014ae0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8014ae4:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8014ae8:	220b      	movs	r2, #11
 8014aea:	9207      	str	r2, [sp, #28]
 8014aec:	883a      	ldrh	r2, [r7, #0]
 8014aee:	9206      	str	r2, [sp, #24]
 8014af0:	2201      	movs	r2, #1
 8014af2:	e9cd a204 	strd	sl, r2, [sp, #16]
 8014af6:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8014afa:	9203      	str	r2, [sp, #12]
 8014afc:	b2a4      	uxth	r4, r4
 8014afe:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8014b02:	9200      	str	r2, [sp, #0]
 8014b04:	b2ad      	uxth	r5, r5
 8014b06:	9502      	str	r5, [sp, #8]
 8014b08:	9401      	str	r4, [sp, #4]
 8014b0a:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8014b0c:	4642      	mov	r2, r8
 8014b0e:	4649      	mov	r1, r9
 8014b10:	47a0      	blx	r4
 8014b12:	b013      	add	sp, #76	; 0x4c
 8014b14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014b18:	6803      	ldr	r3, [r0, #0]
 8014b1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014b1c:	4798      	blx	r3
 8014b1e:	883b      	ldrh	r3, [r7, #0]
 8014b20:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8014b24:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8014b28:	fb03 1202 	mla	r2, r3, r2, r1
 8014b2c:	435d      	muls	r5, r3
 8014b2e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014b32:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8014b36:	920c      	str	r2, [sp, #48]	; 0x30
 8014b38:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8014b3c:	1b12      	subs	r2, r2, r4
 8014b3e:	920d      	str	r2, [sp, #52]	; 0x34
 8014b40:	0062      	lsls	r2, r4, #1
 8014b42:	1b1c      	subs	r4, r3, r4
 8014b44:	0063      	lsls	r3, r4, #1
 8014b46:	920a      	str	r2, [sp, #40]	; 0x28
 8014b48:	930b      	str	r3, [sp, #44]	; 0x2c
 8014b4a:	f04f 0e04 	mov.w	lr, #4
 8014b4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014b50:	4298      	cmp	r0, r3
 8014b52:	d266      	bcs.n	8014c22 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8014b54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014b56:	eb00 0b03 	add.w	fp, r0, r3
 8014b5a:	4558      	cmp	r0, fp
 8014b5c:	d25c      	bcs.n	8014c18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8014b5e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8014b62:	fb1e e303 	smlabb	r3, lr, r3, lr
 8014b66:	f858 2003 	ldr.w	r2, [r8, r3]
 8014b6a:	0e11      	lsrs	r1, r2, #24
 8014b6c:	d012      	beq.n	8014b94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8014b6e:	29ff      	cmp	r1, #255	; 0xff
 8014b70:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8014b74:	d110      	bne.n	8014b98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8014b76:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8014b7a:	d10d      	bne.n	8014b98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8014b7c:	0953      	lsrs	r3, r2, #5
 8014b7e:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8014b82:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014b86:	f027 0707 	bic.w	r7, r7, #7
 8014b8a:	431f      	orrs	r7, r3
 8014b8c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8014b90:	433a      	orrs	r2, r7
 8014b92:	8002      	strh	r2, [r0, #0]
 8014b94:	3002      	adds	r0, #2
 8014b96:	e7e0      	b.n	8014b5a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8014b98:	fb0a f101 	mul.w	r1, sl, r1
 8014b9c:	8806      	ldrh	r6, [r0, #0]
 8014b9e:	1c4b      	adds	r3, r1, #1
 8014ba0:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8014ba4:	1235      	asrs	r5, r6, #8
 8014ba6:	10f4      	asrs	r4, r6, #3
 8014ba8:	121b      	asrs	r3, r3, #8
 8014baa:	00f6      	lsls	r6, r6, #3
 8014bac:	b299      	uxth	r1, r3
 8014bae:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8014bb2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8014bb6:	b2f6      	uxtb	r6, r6
 8014bb8:	43db      	mvns	r3, r3
 8014bba:	b2d2      	uxtb	r2, r2
 8014bbc:	b2db      	uxtb	r3, r3
 8014bbe:	fb1c fc01 	smulbb	ip, ip, r1
 8014bc2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8014bc6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8014bca:	fb12 f201 	smulbb	r2, r2, r1
 8014bce:	fb05 c503 	mla	r5, r5, r3, ip
 8014bd2:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8014bd6:	b2ff      	uxtb	r7, r7
 8014bd8:	fb06 2203 	mla	r2, r6, r3, r2
 8014bdc:	b2ad      	uxth	r5, r5
 8014bde:	fb17 f701 	smulbb	r7, r7, r1
 8014be2:	b292      	uxth	r2, r2
 8014be4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8014be8:	fb04 7403 	mla	r4, r4, r3, r7
 8014bec:	f105 0c01 	add.w	ip, r5, #1
 8014bf0:	1c57      	adds	r7, r2, #1
 8014bf2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8014bf6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8014bfa:	b2a4      	uxth	r4, r4
 8014bfc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014c00:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8014c04:	433d      	orrs	r5, r7
 8014c06:	1c67      	adds	r7, r4, #1
 8014c08:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8014c0c:	0964      	lsrs	r4, r4, #5
 8014c0e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8014c12:	4325      	orrs	r5, r4
 8014c14:	8005      	strh	r5, [r0, #0]
 8014c16:	e7bd      	b.n	8014b94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8014c18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014c1a:	4418      	add	r0, r3
 8014c1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014c1e:	4499      	add	r9, r3
 8014c20:	e795      	b.n	8014b4e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8014c22:	4b04      	ldr	r3, [pc, #16]	; (8014c34 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8014c24:	6818      	ldr	r0, [r3, #0]
 8014c26:	6803      	ldr	r3, [r0, #0]
 8014c28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014c2a:	4798      	blx	r3
 8014c2c:	e771      	b.n	8014b12 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8014c2e:	bf00      	nop
 8014c30:	2001263e 	.word	0x2001263e
 8014c34:	20012644 	.word	0x20012644

08014c38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8014c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c3c:	b087      	sub	sp, #28
 8014c3e:	4680      	mov	r8, r0
 8014c40:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8014c44:	460d      	mov	r5, r1
 8014c46:	4614      	mov	r4, r2
 8014c48:	2e00      	cmp	r6, #0
 8014c4a:	f000 80b9 	beq.w	8014dc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8014c4e:	6810      	ldr	r0, [r2, #0]
 8014c50:	6851      	ldr	r1, [r2, #4]
 8014c52:	af02      	add	r7, sp, #8
 8014c54:	c703      	stmia	r7!, {r0, r1}
 8014c56:	6818      	ldr	r0, [r3, #0]
 8014c58:	6859      	ldr	r1, [r3, #4]
 8014c5a:	af04      	add	r7, sp, #16
 8014c5c:	c703      	stmia	r7!, {r0, r1}
 8014c5e:	a802      	add	r0, sp, #8
 8014c60:	f7f7 ff32 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014c64:	4621      	mov	r1, r4
 8014c66:	a804      	add	r0, sp, #16
 8014c68:	f7f7 ff56 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014c6c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8014c70:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014c74:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8014c78:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8014c7c:	fb14 2103 	smlabb	r1, r4, r3, r2
 8014c80:	eb08 0401 	add.w	r4, r8, r1
 8014c84:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014c88:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8014c8c:	440a      	add	r2, r1
 8014c8e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014c92:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014c96:	4413      	add	r3, r2
 8014c98:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014c9c:	4b4a      	ldr	r3, [pc, #296]	; (8014dc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8014c9e:	6818      	ldr	r0, [r3, #0]
 8014ca0:	6803      	ldr	r3, [r0, #0]
 8014ca2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014ca4:	4798      	blx	r3
 8014ca6:	4b49      	ldr	r3, [pc, #292]	; (8014dcc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8014ca8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8014cac:	881a      	ldrh	r2, [r3, #0]
 8014cae:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8014cb2:	2eff      	cmp	r6, #255	; 0xff
 8014cb4:	fb02 c101 	mla	r1, r2, r1, ip
 8014cb8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014cbc:	fb02 f207 	mul.w	r2, r2, r7
 8014cc0:	f105 0104 	add.w	r1, r5, #4
 8014cc4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8014cc8:	461d      	mov	r5, r3
 8014cca:	d05a      	beq.n	8014d82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8014ccc:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8014cd0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8014cd4:	b2b6      	uxth	r6, r6
 8014cd6:	fa1f fe8e 	uxth.w	lr, lr
 8014cda:	9301      	str	r3, [sp, #4]
 8014cdc:	4282      	cmp	r2, r0
 8014cde:	d96a      	bls.n	8014db6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8014ce0:	eb00 0b0a 	add.w	fp, r0, sl
 8014ce4:	4583      	cmp	fp, r0
 8014ce6:	d940      	bls.n	8014d6a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8014ce8:	f814 3b01 	ldrb.w	r3, [r4], #1
 8014cec:	8805      	ldrh	r5, [r0, #0]
 8014cee:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8014cf2:	122f      	asrs	r7, r5, #8
 8014cf4:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8014cf8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014cfc:	fb17 f70e 	smulbb	r7, r7, lr
 8014d00:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014d04:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014d08:	00ed      	lsls	r5, r5, #3
 8014d0a:	fb0c 7c06 	mla	ip, ip, r6, r7
 8014d0e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014d12:	10df      	asrs	r7, r3, #3
 8014d14:	b2ed      	uxtb	r5, r5
 8014d16:	00db      	lsls	r3, r3, #3
 8014d18:	fa1f fc8c 	uxth.w	ip, ip
 8014d1c:	fb19 f90e 	smulbb	r9, r9, lr
 8014d20:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014d24:	b2db      	uxtb	r3, r3
 8014d26:	fb15 f50e 	smulbb	r5, r5, lr
 8014d2a:	fb07 9706 	mla	r7, r7, r6, r9
 8014d2e:	fb03 5306 	mla	r3, r3, r6, r5
 8014d32:	f10c 0901 	add.w	r9, ip, #1
 8014d36:	b29b      	uxth	r3, r3
 8014d38:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8014d3c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8014d40:	f103 0c01 	add.w	ip, r3, #1
 8014d44:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8014d48:	b2bf      	uxth	r7, r7
 8014d4a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014d4e:	ea4c 0c09 	orr.w	ip, ip, r9
 8014d52:	f107 0901 	add.w	r9, r7, #1
 8014d56:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8014d5a:	097f      	lsrs	r7, r7, #5
 8014d5c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8014d60:	ea4c 0c07 	orr.w	ip, ip, r7
 8014d64:	f820 cb02 	strh.w	ip, [r0], #2
 8014d68:	e7bc      	b.n	8014ce4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8014d6a:	9b01      	ldr	r3, [sp, #4]
 8014d6c:	881b      	ldrh	r3, [r3, #0]
 8014d6e:	eba3 0308 	sub.w	r3, r3, r8
 8014d72:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014d76:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8014d7a:	eba3 0308 	sub.w	r3, r3, r8
 8014d7e:	441c      	add	r4, r3
 8014d80:	e7ac      	b.n	8014cdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8014d82:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8014d86:	4282      	cmp	r2, r0
 8014d88:	d915      	bls.n	8014db6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8014d8a:	eb00 060a 	add.w	r6, r0, sl
 8014d8e:	4286      	cmp	r6, r0
 8014d90:	d906      	bls.n	8014da0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8014d92:	f814 3b01 	ldrb.w	r3, [r4], #1
 8014d96:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8014d9a:	f820 3b02 	strh.w	r3, [r0], #2
 8014d9e:	e7f6      	b.n	8014d8e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8014da0:	882b      	ldrh	r3, [r5, #0]
 8014da2:	eba3 0308 	sub.w	r3, r3, r8
 8014da6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014daa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8014dae:	eba3 0308 	sub.w	r3, r3, r8
 8014db2:	441c      	add	r4, r3
 8014db4:	e7e7      	b.n	8014d86 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8014db6:	4b04      	ldr	r3, [pc, #16]	; (8014dc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8014db8:	6818      	ldr	r0, [r3, #0]
 8014dba:	6803      	ldr	r3, [r0, #0]
 8014dbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014dbe:	4798      	blx	r3
 8014dc0:	b007      	add	sp, #28
 8014dc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014dc6:	bf00      	nop
 8014dc8:	20012644 	.word	0x20012644
 8014dcc:	2001263e 	.word	0x2001263e

08014dd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8014dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014dd4:	b091      	sub	sp, #68	; 0x44
 8014dd6:	4680      	mov	r8, r0
 8014dd8:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8014ddc:	460f      	mov	r7, r1
 8014dde:	4614      	mov	r4, r2
 8014de0:	2d00      	cmp	r5, #0
 8014de2:	d051      	beq.n	8014e88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8014de4:	6810      	ldr	r0, [r2, #0]
 8014de6:	6851      	ldr	r1, [r2, #4]
 8014de8:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8014fec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8014dec:	ae0c      	add	r6, sp, #48	; 0x30
 8014dee:	c603      	stmia	r6!, {r0, r1}
 8014df0:	6818      	ldr	r0, [r3, #0]
 8014df2:	6859      	ldr	r1, [r3, #4]
 8014df4:	ae0e      	add	r6, sp, #56	; 0x38
 8014df6:	c603      	stmia	r6!, {r0, r1}
 8014df8:	a80c      	add	r0, sp, #48	; 0x30
 8014dfa:	f7f7 fe65 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014dfe:	4621      	mov	r1, r4
 8014e00:	a80e      	add	r0, sp, #56	; 0x38
 8014e02:	f7f7 fe89 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014e06:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8014e0a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8014e0e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014e12:	f8d9 0000 	ldr.w	r0, [r9]
 8014e16:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8014e1a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8014e1e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014e22:	eb08 0401 	add.w	r4, r8, r1
 8014e26:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8014e2a:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8014ff0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8014e2e:	440a      	add	r2, r1
 8014e30:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8014e34:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8014e38:	4413      	add	r3, r2
 8014e3a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8014e3e:	6803      	ldr	r3, [r0, #0]
 8014e40:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014e42:	4798      	blx	r3
 8014e44:	f010 0f80 	tst.w	r0, #128	; 0x80
 8014e48:	f8d9 0000 	ldr.w	r0, [r9]
 8014e4c:	d01f      	beq.n	8014e8e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8014e4e:	2200      	movs	r2, #0
 8014e50:	6801      	ldr	r1, [r0, #0]
 8014e52:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014e56:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8014e5a:	220b      	movs	r2, #11
 8014e5c:	9207      	str	r2, [sp, #28]
 8014e5e:	f8b8 2000 	ldrh.w	r2, [r8]
 8014e62:	9206      	str	r2, [sp, #24]
 8014e64:	2201      	movs	r2, #1
 8014e66:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8014e6a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8014e6e:	9203      	str	r2, [sp, #12]
 8014e70:	fa1f f28a 	uxth.w	r2, sl
 8014e74:	9202      	str	r2, [sp, #8]
 8014e76:	b2b6      	uxth	r6, r6
 8014e78:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8014e7c:	9200      	str	r2, [sp, #0]
 8014e7e:	9601      	str	r6, [sp, #4]
 8014e80:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8014e82:	463a      	mov	r2, r7
 8014e84:	4621      	mov	r1, r4
 8014e86:	47a8      	blx	r5
 8014e88:	b011      	add	sp, #68	; 0x44
 8014e8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e8e:	6803      	ldr	r3, [r0, #0]
 8014e90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014e92:	4798      	blx	r3
 8014e94:	f8b8 2000 	ldrh.w	r2, [r8]
 8014e98:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8014e9c:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8014ea0:	2dff      	cmp	r5, #255	; 0xff
 8014ea2:	fb02 1303 	mla	r3, r2, r3, r1
 8014ea6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014eaa:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8014eae:	fb0a fa02 	mul.w	sl, sl, r2
 8014eb2:	d062      	beq.n	8014f7a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8014eb4:	ea6f 0c05 	mvn.w	ip, r5
 8014eb8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8014ebc:	930a      	str	r3, [sp, #40]	; 0x28
 8014ebe:	b2ad      	uxth	r5, r5
 8014ec0:	fa5f fc8c 	uxtb.w	ip, ip
 8014ec4:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8014ec8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014eca:	4298      	cmp	r0, r3
 8014ecc:	f080 8085 	bcs.w	8014fda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8014ed0:	eb00 0b09 	add.w	fp, r0, r9
 8014ed4:	4558      	cmp	r0, fp
 8014ed6:	d246      	bcs.n	8014f66 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8014ed8:	f814 eb01 	ldrb.w	lr, [r4], #1
 8014edc:	2303      	movs	r3, #3
 8014ede:	2204      	movs	r2, #4
 8014ee0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8014ee4:	eb07 0a0e 	add.w	sl, r7, lr
 8014ee8:	8803      	ldrh	r3, [r0, #0]
 8014eea:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8014eee:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8014ef2:	1219      	asrs	r1, r3, #8
 8014ef4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014ef8:	fb18 f805 	smulbb	r8, r8, r5
 8014efc:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8014f00:	10da      	asrs	r2, r3, #3
 8014f02:	fb01 810c 	mla	r1, r1, ip, r8
 8014f06:	00db      	lsls	r3, r3, #3
 8014f08:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8014f0c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014f10:	b2db      	uxtb	r3, r3
 8014f12:	fb18 f805 	smulbb	r8, r8, r5
 8014f16:	fb1e fe05 	smulbb	lr, lr, r5
 8014f1a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8014f1e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8014f22:	b289      	uxth	r1, r1
 8014f24:	fb02 820c 	mla	r2, r2, ip, r8
 8014f28:	fb03 e30c 	mla	r3, r3, ip, lr
 8014f2c:	b292      	uxth	r2, r2
 8014f2e:	b29b      	uxth	r3, r3
 8014f30:	f101 0801 	add.w	r8, r1, #1
 8014f34:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8014f38:	f103 0e01 	add.w	lr, r3, #1
 8014f3c:	f102 0801 	add.w	r8, r2, #1
 8014f40:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8014f44:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8014f48:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8014f4c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8014f50:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014f54:	ea4e 0101 	orr.w	r1, lr, r1
 8014f58:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014f5c:	ea41 0108 	orr.w	r1, r1, r8
 8014f60:	f820 1b02 	strh.w	r1, [r0], #2
 8014f64:	e7b6      	b.n	8014ed4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8014f66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014f68:	881b      	ldrh	r3, [r3, #0]
 8014f6a:	1b9b      	subs	r3, r3, r6
 8014f6c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014f70:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8014f74:	1b9b      	subs	r3, r3, r6
 8014f76:	441c      	add	r4, r3
 8014f78:	e7a6      	b.n	8014ec8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8014f7a:	491b      	ldr	r1, [pc, #108]	; (8014fe8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8014f7c:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8014f80:	2203      	movs	r2, #3
 8014f82:	2504      	movs	r5, #4
 8014f84:	4550      	cmp	r0, sl
 8014f86:	d228      	bcs.n	8014fda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8014f88:	eb00 0c09 	add.w	ip, r0, r9
 8014f8c:	4560      	cmp	r0, ip
 8014f8e:	4623      	mov	r3, r4
 8014f90:	d219      	bcs.n	8014fc6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8014f92:	f893 e000 	ldrb.w	lr, [r3]
 8014f96:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8014f9a:	eb07 0b0e 	add.w	fp, r7, lr
 8014f9e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8014fa2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8014fa6:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014faa:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8014fae:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8014fb2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014fb6:	ea43 030b 	orr.w	r3, r3, fp
 8014fba:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8014fbe:	3401      	adds	r4, #1
 8014fc0:	f820 3b02 	strh.w	r3, [r0], #2
 8014fc4:	e7e2      	b.n	8014f8c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8014fc6:	f8b8 3000 	ldrh.w	r3, [r8]
 8014fca:	1b9b      	subs	r3, r3, r6
 8014fcc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014fd0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8014fd4:	1b9b      	subs	r3, r3, r6
 8014fd6:	441c      	add	r4, r3
 8014fd8:	e7d4      	b.n	8014f84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8014fda:	4b04      	ldr	r3, [pc, #16]	; (8014fec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8014fdc:	6818      	ldr	r0, [r3, #0]
 8014fde:	6803      	ldr	r3, [r0, #0]
 8014fe0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014fe2:	4798      	blx	r3
 8014fe4:	e750      	b.n	8014e88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8014fe6:	bf00      	nop
 8014fe8:	fffff800 	.word	0xfffff800
 8014fec:	20012644 	.word	0x20012644
 8014ff0:	2001263e 	.word	0x2001263e

08014ff4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8014ff4:	b4f0      	push	{r4, r5, r6, r7}
 8014ff6:	460c      	mov	r4, r1
 8014ff8:	4611      	mov	r1, r2
 8014ffa:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8014ffe:	780f      	ldrb	r7, [r1, #0]
 8015000:	784e      	ldrb	r6, [r1, #1]
 8015002:	2f01      	cmp	r7, #1
 8015004:	461a      	mov	r2, r3
 8015006:	9b04      	ldr	r3, [sp, #16]
 8015008:	d036      	beq.n	8015078 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801500a:	d31e      	bcc.n	801504a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801500c:	2f02      	cmp	r7, #2
 801500e:	d14a      	bne.n	80150a6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8015010:	2e03      	cmp	r6, #3
 8015012:	d848      	bhi.n	80150a6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8015014:	e8df f006 	tbb	[pc, r6]
 8015018:	16140702 	.word	0x16140702
 801501c:	9504      	str	r5, [sp, #16]
 801501e:	4620      	mov	r0, r4
 8015020:	bcf0      	pop	{r4, r5, r6, r7}
 8015022:	f7ff be09 	b.w	8014c38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8015026:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8015028:	2800      	cmp	r0, #0
 801502a:	d03c      	beq.n	80150a6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801502c:	6806      	ldr	r6, [r0, #0]
 801502e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8015032:	68b5      	ldr	r5, [r6, #8]
 8015034:	4613      	mov	r3, r2
 8015036:	46ac      	mov	ip, r5
 8015038:	460a      	mov	r2, r1
 801503a:	4621      	mov	r1, r4
 801503c:	bcf0      	pop	{r4, r5, r6, r7}
 801503e:	4760      	bx	ip
 8015040:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8015042:	e7f1      	b.n	8015028 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8015044:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8015048:	e7ee      	b.n	8015028 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801504a:	2e03      	cmp	r6, #3
 801504c:	d82b      	bhi.n	80150a6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801504e:	e8df f006 	tbb	[pc, r6]
 8015052:	0702      	.short	0x0702
 8015054:	100e      	.short	0x100e
 8015056:	9504      	str	r5, [sp, #16]
 8015058:	4620      	mov	r0, r4
 801505a:	bcf0      	pop	{r4, r5, r6, r7}
 801505c:	f7ff bd06 	b.w	8014a6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8015060:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8015062:	b300      	cbz	r0, 80150a6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8015064:	6806      	ldr	r6, [r0, #0]
 8015066:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801506a:	68f5      	ldr	r5, [r6, #12]
 801506c:	e7e2      	b.n	8015034 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801506e:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8015070:	e7f7      	b.n	8015062 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8015072:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8015076:	e7f4      	b.n	8015062 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8015078:	2e03      	cmp	r6, #3
 801507a:	d814      	bhi.n	80150a6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801507c:	e8df f006 	tbb	[pc, r6]
 8015080:	100e0702 	.word	0x100e0702
 8015084:	9504      	str	r5, [sp, #16]
 8015086:	4620      	mov	r0, r4
 8015088:	bcf0      	pop	{r4, r5, r6, r7}
 801508a:	f7ff bea1 	b.w	8014dd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801508e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8015090:	b148      	cbz	r0, 80150a6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8015092:	6806      	ldr	r6, [r0, #0]
 8015094:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8015098:	6935      	ldr	r5, [r6, #16]
 801509a:	e7cb      	b.n	8015034 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801509c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801509e:	e7f7      	b.n	8015090 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 80150a0:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80150a4:	e7f4      	b.n	8015090 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 80150a6:	bcf0      	pop	{r4, r5, r6, r7}
 80150a8:	4770      	bx	lr
	...

080150ac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80150ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80150b0:	4604      	mov	r4, r0
 80150b2:	b087      	sub	sp, #28
 80150b4:	6810      	ldr	r0, [r2, #0]
 80150b6:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80150ba:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80152f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80150be:	460e      	mov	r6, r1
 80150c0:	6851      	ldr	r1, [r2, #4]
 80150c2:	ad02      	add	r5, sp, #8
 80150c4:	c503      	stmia	r5!, {r0, r1}
 80150c6:	6818      	ldr	r0, [r3, #0]
 80150c8:	6859      	ldr	r1, [r3, #4]
 80150ca:	ad04      	add	r5, sp, #16
 80150cc:	4617      	mov	r7, r2
 80150ce:	c503      	stmia	r5!, {r0, r1}
 80150d0:	a802      	add	r0, sp, #8
 80150d2:	f7f7 fcf9 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80150d6:	4639      	mov	r1, r7
 80150d8:	a804      	add	r0, sp, #16
 80150da:	f7f7 fd1d 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80150de:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80150e2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80150e6:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80150ea:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80150ee:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80150f2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80150f6:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80150fa:	440e      	add	r6, r1
 80150fc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015100:	440a      	add	r2, r1
 8015102:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015106:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801510a:	4413      	add	r3, r2
 801510c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015110:	4b77      	ldr	r3, [pc, #476]	; (80152f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8015112:	6818      	ldr	r0, [r3, #0]
 8015114:	6803      	ldr	r3, [r0, #0]
 8015116:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015118:	4798      	blx	r3
 801511a:	f8b9 b000 	ldrh.w	fp, [r9]
 801511e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015122:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8015126:	fb0b 2303 	mla	r3, fp, r3, r2
 801512a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801512e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015132:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8015136:	fb05 f50b 	mul.w	r5, r5, fp
 801513a:	9300      	str	r3, [sp, #0]
 801513c:	d069      	beq.n	8015212 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801513e:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8015142:	4558      	cmp	r0, fp
 8015144:	f080 80cc 	bcs.w	80152e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8015148:	9b00      	ldr	r3, [sp, #0]
 801514a:	18c3      	adds	r3, r0, r3
 801514c:	9301      	str	r3, [sp, #4]
 801514e:	4631      	mov	r1, r6
 8015150:	9b01      	ldr	r3, [sp, #4]
 8015152:	4298      	cmp	r0, r3
 8015154:	d24f      	bcs.n	80151f6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8015156:	f811 2b01 	ldrb.w	r2, [r1], #1
 801515a:	2a00      	cmp	r2, #0
 801515c:	d048      	beq.n	80151f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801515e:	fb0a f202 	mul.w	r2, sl, r2
 8015162:	1c53      	adds	r3, r2, #1
 8015164:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8015168:	121b      	asrs	r3, r3, #8
 801516a:	d041      	beq.n	80151f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801516c:	8802      	ldrh	r2, [r0, #0]
 801516e:	f8b4 c000 	ldrh.w	ip, [r4]
 8015172:	b29e      	uxth	r6, r3
 8015174:	1215      	asrs	r5, r2, #8
 8015176:	43db      	mvns	r3, r3
 8015178:	b2db      	uxtb	r3, r3
 801517a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801517e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8015182:	fb15 f503 	smulbb	r5, r5, r3
 8015186:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801518a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801518e:	00d2      	lsls	r2, r2, #3
 8015190:	fb07 5706 	mla	r7, r7, r6, r5
 8015194:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8015198:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801519c:	b2d2      	uxtb	r2, r2
 801519e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80151a2:	b2bf      	uxth	r7, r7
 80151a4:	fb1e fe03 	smulbb	lr, lr, r3
 80151a8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80151ac:	fa5f fc8c 	uxtb.w	ip, ip
 80151b0:	fb12 f203 	smulbb	r2, r2, r3
 80151b4:	fb05 e506 	mla	r5, r5, r6, lr
 80151b8:	fb0c 2c06 	mla	ip, ip, r6, r2
 80151bc:	f107 0e01 	add.w	lr, r7, #1
 80151c0:	fa1f fc8c 	uxth.w	ip, ip
 80151c4:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80151c8:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80151cc:	f10c 0701 	add.w	r7, ip, #1
 80151d0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80151d4:	b2ad      	uxth	r5, r5
 80151d6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80151da:	ea47 070e 	orr.w	r7, r7, lr
 80151de:	f105 0e01 	add.w	lr, r5, #1
 80151e2:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80151e6:	096d      	lsrs	r5, r5, #5
 80151e8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80151ec:	432f      	orrs	r7, r5
 80151ee:	8007      	strh	r7, [r0, #0]
 80151f0:	3002      	adds	r0, #2
 80151f2:	3402      	adds	r4, #2
 80151f4:	e7ac      	b.n	8015150 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80151f6:	f8b9 3000 	ldrh.w	r3, [r9]
 80151fa:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80151fe:	eba3 0308 	sub.w	r3, r3, r8
 8015202:	eba6 0608 	sub.w	r6, r6, r8
 8015206:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801520a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801520e:	440e      	add	r6, r1
 8015210:	e797      	b.n	8015142 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8015212:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8015216:	42a8      	cmp	r0, r5
 8015218:	d262      	bcs.n	80152e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801521a:	9b00      	ldr	r3, [sp, #0]
 801521c:	4631      	mov	r1, r6
 801521e:	eb00 0b03 	add.w	fp, r0, r3
 8015222:	4558      	cmp	r0, fp
 8015224:	d24e      	bcs.n	80152c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8015226:	f811 3b01 	ldrb.w	r3, [r1], #1
 801522a:	b12b      	cbz	r3, 8015238 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801522c:	2bff      	cmp	r3, #255	; 0xff
 801522e:	f8b4 e000 	ldrh.w	lr, [r4]
 8015232:	d104      	bne.n	801523e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8015234:	f8a0 e000 	strh.w	lr, [r0]
 8015238:	3002      	adds	r0, #2
 801523a:	3402      	adds	r4, #2
 801523c:	e7f1      	b.n	8015222 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801523e:	8802      	ldrh	r2, [r0, #0]
 8015240:	b29f      	uxth	r7, r3
 8015242:	1216      	asrs	r6, r2, #8
 8015244:	43db      	mvns	r3, r3
 8015246:	b2db      	uxtb	r3, r3
 8015248:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801524c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015250:	fb16 f603 	smulbb	r6, r6, r3
 8015254:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8015258:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801525c:	00d2      	lsls	r2, r2, #3
 801525e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015262:	b2d2      	uxtb	r2, r2
 8015264:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015268:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801526c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015270:	fb1a fa03 	smulbb	sl, sl, r3
 8015274:	fa1f fc8c 	uxth.w	ip, ip
 8015278:	fb12 f303 	smulbb	r3, r2, r3
 801527c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015280:	fa5f fe8e 	uxtb.w	lr, lr
 8015284:	fb06 a607 	mla	r6, r6, r7, sl
 8015288:	f10c 0201 	add.w	r2, ip, #1
 801528c:	fb0e 3307 	mla	r3, lr, r7, r3
 8015290:	b2b6      	uxth	r6, r6
 8015292:	b29b      	uxth	r3, r3
 8015294:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015298:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801529c:	f106 0a01 	add.w	sl, r6, #1
 80152a0:	f103 0c01 	add.w	ip, r3, #1
 80152a4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80152a8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80152ac:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80152b0:	0976      	lsrs	r6, r6, #5
 80152b2:	ea4c 0c02 	orr.w	ip, ip, r2
 80152b6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80152ba:	ea4c 0c06 	orr.w	ip, ip, r6
 80152be:	f8a0 c000 	strh.w	ip, [r0]
 80152c2:	e7b9      	b.n	8015238 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80152c4:	f8b9 3000 	ldrh.w	r3, [r9]
 80152c8:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80152cc:	eba3 0308 	sub.w	r3, r3, r8
 80152d0:	eba6 0608 	sub.w	r6, r6, r8
 80152d4:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80152d8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80152dc:	440e      	add	r6, r1
 80152de:	e79a      	b.n	8015216 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80152e0:	4b03      	ldr	r3, [pc, #12]	; (80152f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80152e2:	6818      	ldr	r0, [r3, #0]
 80152e4:	6803      	ldr	r3, [r0, #0]
 80152e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80152e8:	4798      	blx	r3
 80152ea:	b007      	add	sp, #28
 80152ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80152f0:	20012644 	.word	0x20012644
 80152f4:	2001263e 	.word	0x2001263e

080152f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80152f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152fc:	b089      	sub	sp, #36	; 0x24
 80152fe:	4682      	mov	sl, r0
 8015300:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8015304:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015306:	460f      	mov	r7, r1
 8015308:	4691      	mov	r9, r2
 801530a:	4698      	mov	r8, r3
 801530c:	2e00      	cmp	r6, #0
 801530e:	d03d      	beq.n	801538c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015310:	4608      	mov	r0, r1
 8015312:	f7fa fe59 	bl	800ffc8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015316:	4605      	mov	r5, r0
 8015318:	4638      	mov	r0, r7
 801531a:	f7fa fe89 	bl	8010030 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801531e:	f8ad 000e 	strh.w	r0, [sp, #14]
 8015322:	4638      	mov	r0, r7
 8015324:	f8ad 9008 	strh.w	r9, [sp, #8]
 8015328:	f8ad 500c 	strh.w	r5, [sp, #12]
 801532c:	f8ad 800a 	strh.w	r8, [sp, #10]
 8015330:	f7fa ff36 	bl	80101a0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8015334:	4605      	mov	r5, r0
 8015336:	4638      	mov	r0, r7
 8015338:	f7fa ff62 	bl	8010200 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801533c:	4681      	mov	r9, r0
 801533e:	4638      	mov	r0, r7
 8015340:	f7fa ffb2 	bl	80102a8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8015344:	280b      	cmp	r0, #11
 8015346:	d821      	bhi.n	801538c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015348:	e8df f000 	tbb	[pc, r0]
 801534c:	2006aebe 	.word	0x2006aebe
 8015350:	20202020 	.word	0x20202020
 8015354:	b5202020 	.word	0xb5202020
 8015358:	4bb0      	ldr	r3, [pc, #704]	; (801561c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801535a:	6818      	ldr	r0, [r3, #0]
 801535c:	6803      	ldr	r3, [r0, #0]
 801535e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015360:	4798      	blx	r3
 8015362:	2eff      	cmp	r6, #255	; 0xff
 8015364:	d101      	bne.n	801536a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8015366:	0683      	lsls	r3, r0, #26
 8015368:	d506      	bpl.n	8015378 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801536a:	4633      	mov	r3, r6
 801536c:	4622      	mov	r2, r4
 801536e:	a902      	add	r1, sp, #8
 8015370:	4628      	mov	r0, r5
 8015372:	f7ff f909 	bl	8014588 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8015376:	e009      	b.n	801538c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015378:	4638      	mov	r0, r7
 801537a:	f7fa fed9 	bl	8010130 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801537e:	b940      	cbnz	r0, 8015392 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8015380:	4623      	mov	r3, r4
 8015382:	aa02      	add	r2, sp, #8
 8015384:	4629      	mov	r1, r5
 8015386:	4650      	mov	r0, sl
 8015388:	f7ff f9e4 	bl	8014754 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801538c:	b009      	add	sp, #36	; 0x24
 801538e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015392:	f10d 0818 	add.w	r8, sp, #24
 8015396:	4639      	mov	r1, r7
 8015398:	4640      	mov	r0, r8
 801539a:	f7fa fe7d 	bl	8010098 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801539e:	e898 0003 	ldmia.w	r8, {r0, r1}
 80153a2:	af04      	add	r7, sp, #16
 80153a4:	e887 0003 	stmia.w	r7, {r0, r1}
 80153a8:	4638      	mov	r0, r7
 80153aa:	4621      	mov	r1, r4
 80153ac:	f7f4 fb78 	bl	8009aa0 <_ZN8touchgfx4RectaNERKS0_>
 80153b0:	4638      	mov	r0, r7
 80153b2:	f7f4 fbb8 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 80153b6:	2800      	cmp	r0, #0
 80153b8:	d1d7      	bne.n	801536a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80153ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80153be:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80153c2:	4293      	cmp	r3, r2
 80153c4:	dd12      	ble.n	80153ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 80153c6:	1a9b      	subs	r3, r3, r2
 80153c8:	f9b4 0000 	ldrsh.w	r0, [r4]
 80153cc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80153d0:	f8ad 0018 	strh.w	r0, [sp, #24]
 80153d4:	f8ad 201a 	strh.w	r2, [sp, #26]
 80153d8:	f8ad 101c 	strh.w	r1, [sp, #28]
 80153dc:	f8ad 301e 	strh.w	r3, [sp, #30]
 80153e0:	4642      	mov	r2, r8
 80153e2:	4633      	mov	r3, r6
 80153e4:	a902      	add	r1, sp, #8
 80153e6:	4628      	mov	r0, r5
 80153e8:	f7ff f8ce 	bl	8014588 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80153ec:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80153f0:	f9b4 2000 	ldrsh.w	r2, [r4]
 80153f4:	4293      	cmp	r3, r2
 80153f6:	dd12      	ble.n	801541e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 80153f8:	1a9b      	subs	r3, r3, r2
 80153fa:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80153fe:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8015402:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015406:	f8ad 001a 	strh.w	r0, [sp, #26]
 801540a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801540e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8015412:	23ff      	movs	r3, #255	; 0xff
 8015414:	4642      	mov	r2, r8
 8015416:	a902      	add	r1, sp, #8
 8015418:	4628      	mov	r0, r5
 801541a:	f7ff f8b5 	bl	8014588 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801541e:	463b      	mov	r3, r7
 8015420:	aa02      	add	r2, sp, #8
 8015422:	4629      	mov	r1, r5
 8015424:	4650      	mov	r0, sl
 8015426:	f7ff f995 	bl	8014754 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801542a:	88a2      	ldrh	r2, [r4, #4]
 801542c:	8823      	ldrh	r3, [r4, #0]
 801542e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8015432:	4413      	add	r3, r2
 8015434:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015438:	440a      	add	r2, r1
 801543a:	b29b      	uxth	r3, r3
 801543c:	b292      	uxth	r2, r2
 801543e:	b211      	sxth	r1, r2
 8015440:	b218      	sxth	r0, r3
 8015442:	4288      	cmp	r0, r1
 8015444:	dd12      	ble.n	801546c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8015446:	1a9b      	subs	r3, r3, r2
 8015448:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801544c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8015450:	f8ad 1018 	strh.w	r1, [sp, #24]
 8015454:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015458:	f8ad 001e 	strh.w	r0, [sp, #30]
 801545c:	23ff      	movs	r3, #255	; 0xff
 801545e:	4642      	mov	r2, r8
 8015460:	a902      	add	r1, sp, #8
 8015462:	4628      	mov	r0, r5
 8015464:	f8ad 601a 	strh.w	r6, [sp, #26]
 8015468:	f7ff f88e 	bl	8014588 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801546c:	88e2      	ldrh	r2, [r4, #6]
 801546e:	8863      	ldrh	r3, [r4, #2]
 8015470:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8015474:	4413      	add	r3, r2
 8015476:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801547a:	440a      	add	r2, r1
 801547c:	b29b      	uxth	r3, r3
 801547e:	b292      	uxth	r2, r2
 8015480:	b211      	sxth	r1, r2
 8015482:	b218      	sxth	r0, r3
 8015484:	4288      	cmp	r0, r1
 8015486:	dd81      	ble.n	801538c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015488:	1a9b      	subs	r3, r3, r2
 801548a:	f9b4 6000 	ldrsh.w	r6, [r4]
 801548e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015492:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015496:	f8ad 6018 	strh.w	r6, [sp, #24]
 801549a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801549e:	f8ad 001c 	strh.w	r0, [sp, #28]
 80154a2:	23ff      	movs	r3, #255	; 0xff
 80154a4:	4642      	mov	r2, r8
 80154a6:	e762      	b.n	801536e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 80154a8:	4633      	mov	r3, r6
 80154aa:	4622      	mov	r2, r4
 80154ac:	a902      	add	r1, sp, #8
 80154ae:	4628      	mov	r0, r5
 80154b0:	f7ff f9c0 	bl	8014834 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80154b4:	e76a      	b.n	801538c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80154b6:	e9cd 4600 	strd	r4, r6, [sp]
 80154ba:	ab02      	add	r3, sp, #8
 80154bc:	464a      	mov	r2, r9
 80154be:	4629      	mov	r1, r5
 80154c0:	4650      	mov	r0, sl
 80154c2:	f7ff fd97 	bl	8014ff4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80154c6:	e761      	b.n	801538c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80154c8:	4638      	mov	r0, r7
 80154ca:	f7fa fe31 	bl	8010130 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80154ce:	b950      	cbnz	r0, 80154e6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 80154d0:	e9cd 6000 	strd	r6, r0, [sp]
 80154d4:	f8da 3000 	ldr.w	r3, [sl]
 80154d8:	aa02      	add	r2, sp, #8
 80154da:	68de      	ldr	r6, [r3, #12]
 80154dc:	4629      	mov	r1, r5
 80154de:	4623      	mov	r3, r4
 80154e0:	4650      	mov	r0, sl
 80154e2:	47b0      	blx	r6
 80154e4:	e752      	b.n	801538c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80154e6:	f10d 0818 	add.w	r8, sp, #24
 80154ea:	4639      	mov	r1, r7
 80154ec:	4640      	mov	r0, r8
 80154ee:	f7fa fdd3 	bl	8010098 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80154f2:	e898 0003 	ldmia.w	r8, {r0, r1}
 80154f6:	af04      	add	r7, sp, #16
 80154f8:	e887 0003 	stmia.w	r7, {r0, r1}
 80154fc:	4638      	mov	r0, r7
 80154fe:	4621      	mov	r1, r4
 8015500:	f7f4 face 	bl	8009aa0 <_ZN8touchgfx4RectaNERKS0_>
 8015504:	4638      	mov	r0, r7
 8015506:	f7f4 fb0e 	bl	8009b26 <_ZNK8touchgfx4Rect7isEmptyEv>
 801550a:	b138      	cbz	r0, 801551c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801550c:	9600      	str	r6, [sp, #0]
 801550e:	4623      	mov	r3, r4
 8015510:	aa02      	add	r2, sp, #8
 8015512:	4649      	mov	r1, r9
 8015514:	4628      	mov	r0, r5
 8015516:	f7ff fdc9 	bl	80150ac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801551a:	e737      	b.n	801538c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801551c:	e9cd 6000 	strd	r6, r0, [sp]
 8015520:	f8da 3000 	ldr.w	r3, [sl]
 8015524:	aa02      	add	r2, sp, #8
 8015526:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801552a:	4629      	mov	r1, r5
 801552c:	463b      	mov	r3, r7
 801552e:	4650      	mov	r0, sl
 8015530:	47d8      	blx	fp
 8015532:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015536:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801553a:	4293      	cmp	r3, r2
 801553c:	dd13      	ble.n	8015566 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801553e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8015542:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8015546:	f8ad 0018 	strh.w	r0, [sp, #24]
 801554a:	1a9b      	subs	r3, r3, r2
 801554c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8015550:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015554:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015558:	9600      	str	r6, [sp, #0]
 801555a:	4643      	mov	r3, r8
 801555c:	aa02      	add	r2, sp, #8
 801555e:	4649      	mov	r1, r9
 8015560:	4628      	mov	r0, r5
 8015562:	f7ff fda3 	bl	80150ac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8015566:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801556a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801556e:	4293      	cmp	r3, r2
 8015570:	dd13      	ble.n	801559a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 8015572:	1a9b      	subs	r3, r3, r2
 8015574:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8015578:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801557c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015580:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015584:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015588:	f8ad 101e 	strh.w	r1, [sp, #30]
 801558c:	9600      	str	r6, [sp, #0]
 801558e:	4643      	mov	r3, r8
 8015590:	aa02      	add	r2, sp, #8
 8015592:	4649      	mov	r1, r9
 8015594:	4628      	mov	r0, r5
 8015596:	f7ff fd89 	bl	80150ac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801559a:	88a2      	ldrh	r2, [r4, #4]
 801559c:	8823      	ldrh	r3, [r4, #0]
 801559e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80155a2:	4413      	add	r3, r2
 80155a4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80155a8:	440a      	add	r2, r1
 80155aa:	b29b      	uxth	r3, r3
 80155ac:	b292      	uxth	r2, r2
 80155ae:	b211      	sxth	r1, r2
 80155b0:	b218      	sxth	r0, r3
 80155b2:	4288      	cmp	r0, r1
 80155b4:	dd13      	ble.n	80155de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 80155b6:	1a9b      	subs	r3, r3, r2
 80155b8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80155bc:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80155c0:	f8ad 1018 	strh.w	r1, [sp, #24]
 80155c4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80155c8:	f8ad 001e 	strh.w	r0, [sp, #30]
 80155cc:	9600      	str	r6, [sp, #0]
 80155ce:	4643      	mov	r3, r8
 80155d0:	aa02      	add	r2, sp, #8
 80155d2:	4649      	mov	r1, r9
 80155d4:	4628      	mov	r0, r5
 80155d6:	f8ad 701a 	strh.w	r7, [sp, #26]
 80155da:	f7ff fd67 	bl	80150ac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80155de:	88e2      	ldrh	r2, [r4, #6]
 80155e0:	8863      	ldrh	r3, [r4, #2]
 80155e2:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80155e6:	4413      	add	r3, r2
 80155e8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80155ec:	440a      	add	r2, r1
 80155ee:	b29b      	uxth	r3, r3
 80155f0:	b292      	uxth	r2, r2
 80155f2:	b211      	sxth	r1, r2
 80155f4:	b218      	sxth	r0, r3
 80155f6:	4288      	cmp	r0, r1
 80155f8:	f77f aec8 	ble.w	801538c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80155fc:	f9b4 7000 	ldrsh.w	r7, [r4]
 8015600:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015604:	f8ad 7018 	strh.w	r7, [sp, #24]
 8015608:	1a9b      	subs	r3, r3, r2
 801560a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801560e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8015612:	f8ad 001c 	strh.w	r0, [sp, #28]
 8015616:	9600      	str	r6, [sp, #0]
 8015618:	4643      	mov	r3, r8
 801561a:	e779      	b.n	8015510 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801561c:	20012644 	.word	0x20012644

08015620 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8015620:	b180      	cbz	r0, 8015644 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8015622:	2903      	cmp	r1, #3
 8015624:	d81c      	bhi.n	8015660 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8015626:	e8df f001 	tbb	[pc, r1]
 801562a:	1d02      	.short	0x1d02
 801562c:	1f08      	.short	0x1f08
 801562e:	4b10      	ldr	r3, [pc, #64]	; (8015670 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8015630:	8818      	ldrh	r0, [r3, #0]
 8015632:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015636:	4240      	negs	r0, r0
 8015638:	4770      	bx	lr
 801563a:	4b0d      	ldr	r3, [pc, #52]	; (8015670 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801563c:	8818      	ldrh	r0, [r3, #0]
 801563e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015642:	4770      	bx	lr
 8015644:	2903      	cmp	r1, #3
 8015646:	d80b      	bhi.n	8015660 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8015648:	a301      	add	r3, pc, #4	; (adr r3, 8015650 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801564a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801564e:	bf00      	nop
 8015650:	08015665 	.word	0x08015665
 8015654:	0801563b 	.word	0x0801563b
 8015658:	08015669 	.word	0x08015669
 801565c:	0801562f 	.word	0x0801562f
 8015660:	2000      	movs	r0, #0
 8015662:	4770      	bx	lr
 8015664:	2001      	movs	r0, #1
 8015666:	4770      	bx	lr
 8015668:	f04f 30ff 	mov.w	r0, #4294967295
 801566c:	4770      	bx	lr
 801566e:	bf00      	nop
 8015670:	2001263e 	.word	0x2001263e

08015674 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8015674:	b180      	cbz	r0, 8015698 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8015676:	2903      	cmp	r1, #3
 8015678:	d81c      	bhi.n	80156b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801567a:	e8df f001 	tbb	[pc, r1]
 801567e:	021d      	.short	0x021d
 8015680:	071f      	.short	0x071f
 8015682:	4b10      	ldr	r3, [pc, #64]	; (80156c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8015684:	8818      	ldrh	r0, [r3, #0]
 8015686:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801568a:	4770      	bx	lr
 801568c:	4b0d      	ldr	r3, [pc, #52]	; (80156c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801568e:	8818      	ldrh	r0, [r3, #0]
 8015690:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015694:	4240      	negs	r0, r0
 8015696:	4770      	bx	lr
 8015698:	2903      	cmp	r1, #3
 801569a:	d80b      	bhi.n	80156b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801569c:	a301      	add	r3, pc, #4	; (adr r3, 80156a4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801569e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80156a2:	bf00      	nop
 80156a4:	08015683 	.word	0x08015683
 80156a8:	080156bd 	.word	0x080156bd
 80156ac:	0801568d 	.word	0x0801568d
 80156b0:	080156b9 	.word	0x080156b9
 80156b4:	2000      	movs	r0, #0
 80156b6:	4770      	bx	lr
 80156b8:	2001      	movs	r0, #1
 80156ba:	4770      	bx	lr
 80156bc:	f04f 30ff 	mov.w	r0, #4294967295
 80156c0:	4770      	bx	lr
 80156c2:	bf00      	nop
 80156c4:	2001263e 	.word	0x2001263e

080156c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80156c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156cc:	b099      	sub	sp, #100	; 0x64
 80156ce:	910b      	str	r1, [sp, #44]	; 0x2c
 80156d0:	a914      	add	r1, sp, #80	; 0x50
 80156d2:	e881 000c 	stmia.w	r1, {r2, r3}
 80156d6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 80156da:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 80156de:	f891 900d 	ldrb.w	r9, [r1, #13]
 80156e2:	9309      	str	r3, [sp, #36]	; 0x24
 80156e4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80156e8:	9310      	str	r3, [sp, #64]	; 0x40
 80156ea:	ea4f 1749 	mov.w	r7, r9, lsl #5
 80156ee:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 80156f2:	930c      	str	r3, [sp, #48]	; 0x30
 80156f4:	f407 7380 	and.w	r3, r7, #256	; 0x100
 80156f8:	798f      	ldrb	r7, [r1, #6]
 80156fa:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 80156fe:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8015702:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8015706:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801570a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801570e:	431f      	orrs	r7, r3
 8015710:	f000 8195 	beq.w	8015a3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015714:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8015718:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801571c:	f891 9007 	ldrb.w	r9, [r1, #7]
 8015720:	ea59 0903 	orrs.w	r9, r9, r3
 8015724:	f000 818b 	beq.w	8015a3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015728:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801572c:	b29b      	uxth	r3, r3
 801572e:	2d00      	cmp	r5, #0
 8015730:	f000 812e 	beq.w	8015990 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8015734:	1aed      	subs	r5, r5, r3
 8015736:	b2ad      	uxth	r5, r5
 8015738:	042b      	lsls	r3, r5, #16
 801573a:	d502      	bpl.n	8015742 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801573c:	1b64      	subs	r4, r4, r5
 801573e:	b224      	sxth	r4, r4
 8015740:	2500      	movs	r5, #0
 8015742:	f9b2 1000 	ldrsh.w	r1, [r2]
 8015746:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801574a:	428c      	cmp	r4, r1
 801574c:	b28b      	uxth	r3, r1
 801574e:	bfbf      	itttt	lt
 8015750:	18ed      	addlt	r5, r5, r3
 8015752:	1b2c      	sublt	r4, r5, r4
 8015754:	b2a5      	uxthlt	r5, r4
 8015756:	460c      	movlt	r4, r1
 8015758:	8891      	ldrh	r1, [r2, #4]
 801575a:	440b      	add	r3, r1
 801575c:	b21b      	sxth	r3, r3
 801575e:	930f      	str	r3, [sp, #60]	; 0x3c
 8015760:	88d3      	ldrh	r3, [r2, #6]
 8015762:	8852      	ldrh	r2, [r2, #2]
 8015764:	4413      	add	r3, r2
 8015766:	b21b      	sxth	r3, r3
 8015768:	930d      	str	r3, [sp, #52]	; 0x34
 801576a:	4bbe      	ldr	r3, [pc, #760]	; (8015a64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801576c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801576e:	f893 b000 	ldrb.w	fp, [r3]
 8015772:	f10b 3cff 	add.w	ip, fp, #4294967295
 8015776:	f1dc 0300 	rsbs	r3, ip, #0
 801577a:	eb43 030c 	adc.w	r3, r3, ip
 801577e:	930e      	str	r3, [sp, #56]	; 0x38
 8015780:	4621      	mov	r1, r4
 8015782:	4653      	mov	r3, sl
 8015784:	a814      	add	r0, sp, #80	; 0x50
 8015786:	f7f7 f814 	bl	800c7b2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801578a:	4621      	mov	r1, r4
 801578c:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8015790:	4653      	mov	r3, sl
 8015792:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015794:	a814      	add	r0, sp, #80	; 0x50
 8015796:	f7f7 f829 	bl	800c7ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801579a:	a918      	add	r1, sp, #96	; 0x60
 801579c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80157a0:	a817      	add	r0, sp, #92	; 0x5c
 80157a2:	f7f7 f94f 	bl	800ca44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80157a6:	f1ba 0f00 	cmp.w	sl, #0
 80157aa:	f040 80f4 	bne.w	8015996 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80157ae:	f1bb 0f01 	cmp.w	fp, #1
 80157b2:	f040 80f8 	bne.w	80159a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 80157b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80157b8:	2b00      	cmp	r3, #0
 80157ba:	f040 8145 	bne.w	8015a48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 80157be:	b2ba      	uxth	r2, r7
 80157c0:	b905      	cbnz	r5, 80157c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 80157c2:	b16e      	cbz	r6, 80157e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 80157c4:	fb06 5302 	mla	r3, r6, r2, r5
 80157c8:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80157ca:	fb08 f303 	mul.w	r3, r8, r3
 80157ce:	4631      	mov	r1, r6
 80157d0:	f003 0607 	and.w	r6, r3, #7
 80157d4:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 80157d8:	9328      	str	r3, [sp, #160]	; 0xa0
 80157da:	eba9 0301 	sub.w	r3, r9, r1
 80157de:	930a      	str	r3, [sp, #40]	; 0x28
 80157e0:	4651      	mov	r1, sl
 80157e2:	980e      	ldr	r0, [sp, #56]	; 0x38
 80157e4:	f7ff ff1c 	bl	8015620 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80157e8:	4681      	mov	r9, r0
 80157ea:	980e      	ldr	r0, [sp, #56]	; 0x38
 80157ec:	f7ff ff42 	bl	8015674 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80157f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80157f2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80157f4:	eba3 0a01 	sub.w	sl, r3, r1
 80157f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80157fa:	459a      	cmp	sl, r3
 80157fc:	bfa8      	it	ge
 80157fe:	469a      	movge	sl, r3
 8015800:	f1ba 0f00 	cmp.w	sl, #0
 8015804:	4683      	mov	fp, r0
 8015806:	f340 811a 	ble.w	8015a3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801580a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801580c:	1b64      	subs	r4, r4, r5
 801580e:	1b1c      	subs	r4, r3, r4
 8015810:	42bc      	cmp	r4, r7
 8015812:	bfd4      	ite	le
 8015814:	ebc5 0504 	rsble	r5, r5, r4
 8015818:	ebc5 0507 	rsbgt	r5, r5, r7
 801581c:	2d00      	cmp	r5, #0
 801581e:	f340 810e 	ble.w	8015a3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015822:	1b52      	subs	r2, r2, r5
 8015824:	fb08 f302 	mul.w	r3, r8, r2
 8015828:	930f      	str	r3, [sp, #60]	; 0x3c
 801582a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801582c:	2b00      	cmp	r3, #0
 801582e:	f040 8116 	bne.w	8015a5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8015832:	4b8d      	ldr	r3, [pc, #564]	; (8015a68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8015834:	6818      	ldr	r0, [r3, #0]
 8015836:	6803      	ldr	r3, [r0, #0]
 8015838:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801583a:	4798      	blx	r3
 801583c:	2301      	movs	r3, #1
 801583e:	fa03 f308 	lsl.w	r3, r3, r8
 8015842:	4a8a      	ldr	r2, [pc, #552]	; (8015a6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8015844:	3b01      	subs	r3, #1
 8015846:	b2db      	uxtb	r3, r3
 8015848:	8811      	ldrh	r1, [r2, #0]
 801584a:	930e      	str	r3, [sp, #56]	; 0x38
 801584c:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8015850:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8015854:	fb01 2303 	mla	r3, r1, r3, r2
 8015858:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801585c:	930a      	str	r3, [sp, #40]	; 0x28
 801585e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015860:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8015864:	9313      	str	r3, [sp, #76]	; 0x4c
 8015866:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015868:	0a19      	lsrs	r1, r3, #8
 801586a:	b2cb      	uxtb	r3, r1
 801586c:	9312      	str	r3, [sp, #72]	; 0x48
 801586e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015870:	b2db      	uxtb	r3, r3
 8015872:	9311      	str	r3, [sp, #68]	; 0x44
 8015874:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015876:	095a      	lsrs	r2, r3, #5
 8015878:	4b7d      	ldr	r3, [pc, #500]	; (8015a70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801587a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801587e:	400b      	ands	r3, r1
 8015880:	4313      	orrs	r3, r2
 8015882:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015884:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8015888:	4313      	orrs	r3, r2
 801588a:	b29b      	uxth	r3, r3
 801588c:	9310      	str	r3, [sp, #64]	; 0x40
 801588e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015890:	781a      	ldrb	r2, [r3, #0]
 8015892:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8015896:	4132      	asrs	r2, r6
 8015898:	fb05 b919 	mls	r9, r5, r9, fp
 801589c:	fb03 fb05 	mul.w	fp, r3, r5
 80158a0:	b2d2      	uxtb	r2, r2
 80158a2:	930d      	str	r3, [sp, #52]	; 0x34
 80158a4:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80158a8:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80158ac:	f0c0 80f5 	bcc.w	8015a9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 80158b0:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 80158b4:	46ae      	mov	lr, r5
 80158b6:	f11e 3eff 	adds.w	lr, lr, #4294967295
 80158ba:	f0c0 80dd 	bcc.w	8015a78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 80158be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80158c0:	4013      	ands	r3, r2
 80158c2:	d055      	beq.n	8015970 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 80158c4:	20ff      	movs	r0, #255	; 0xff
 80158c6:	990e      	ldr	r1, [sp, #56]	; 0x38
 80158c8:	fb90 f1f1 	sdiv	r1, r0, r1
 80158cc:	434b      	muls	r3, r1
 80158ce:	2bfe      	cmp	r3, #254	; 0xfe
 80158d0:	dd03      	ble.n	80158da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 80158d2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80158d4:	4281      	cmp	r1, r0
 80158d6:	f000 80cd 	beq.w	8015a74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 80158da:	990c      	ldr	r1, [sp, #48]	; 0x30
 80158dc:	f8bc 4000 	ldrh.w	r4, [ip]
 80158e0:	fb11 f303 	smulbb	r3, r1, r3
 80158e4:	b29b      	uxth	r3, r3
 80158e6:	1c59      	adds	r1, r3, #1
 80158e8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80158ec:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80158f0:	b29f      	uxth	r7, r3
 80158f2:	43db      	mvns	r3, r3
 80158f4:	b2db      	uxtb	r3, r3
 80158f6:	9309      	str	r3, [sp, #36]	; 0x24
 80158f8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80158fa:	1220      	asrs	r0, r4, #8
 80158fc:	fb13 f907 	smulbb	r9, r3, r7
 8015900:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015904:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015906:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801590a:	fb00 9003 	mla	r0, r0, r3, r9
 801590e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015910:	10e1      	asrs	r1, r4, #3
 8015912:	fb13 f907 	smulbb	r9, r3, r7
 8015916:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801591a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801591c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8015920:	fb01 9103 	mla	r1, r1, r3, r9
 8015924:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015926:	00e4      	lsls	r4, r4, #3
 8015928:	fb13 f707 	smulbb	r7, r3, r7
 801592c:	b2e4      	uxtb	r4, r4
 801592e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015930:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8015934:	fb04 7403 	mla	r4, r4, r3, r7
 8015938:	b280      	uxth	r0, r0
 801593a:	b2a4      	uxth	r4, r4
 801593c:	1c43      	adds	r3, r0, #1
 801593e:	f104 0901 	add.w	r9, r4, #1
 8015942:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015946:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801594a:	b289      	uxth	r1, r1
 801594c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8015950:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8015954:	ea49 0000 	orr.w	r0, r9, r0
 8015958:	f101 0901 	add.w	r9, r1, #1
 801595c:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8015960:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015964:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015968:	ea40 0009 	orr.w	r0, r0, r9
 801596c:	f8ac 0000 	strh.w	r0, [ip]
 8015970:	4446      	add	r6, r8
 8015972:	b2b6      	uxth	r6, r6
 8015974:	2e07      	cmp	r6, #7
 8015976:	bf81      	itttt	hi
 8015978:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801597a:	785a      	ldrbhi	r2, [r3, #1]
 801597c:	3301      	addhi	r3, #1
 801597e:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8015980:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015982:	bf9a      	itte	ls
 8015984:	fa42 f208 	asrls.w	r2, r2, r8
 8015988:	b2d2      	uxtbls	r2, r2
 801598a:	2600      	movhi	r6, #0
 801598c:	449c      	add	ip, r3
 801598e:	e792      	b.n	80158b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8015990:	441c      	add	r4, r3
 8015992:	b224      	sxth	r4, r4
 8015994:	e6d5      	b.n	8015742 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8015996:	f1ba 0f01 	cmp.w	sl, #1
 801599a:	f47f af0c 	bne.w	80157b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801599e:	f1bb 0f01 	cmp.w	fp, #1
 80159a2:	f47f af08 	bne.w	80157b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80159a6:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8015a68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 80159aa:	f8db 0000 	ldr.w	r0, [fp]
 80159ae:	6803      	ldr	r3, [r0, #0]
 80159b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80159b2:	4798      	blx	r3
 80159b4:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 80159b8:	465a      	mov	r2, fp
 80159ba:	d006      	beq.n	80159ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80159bc:	f1b8 0f04 	cmp.w	r8, #4
 80159c0:	d140      	bne.n	8015a44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 80159c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80159c4:	3300      	adds	r3, #0
 80159c6:	bf18      	it	ne
 80159c8:	2301      	movne	r3, #1
 80159ca:	0580      	lsls	r0, r0, #22
 80159cc:	d56e      	bpl.n	8015aac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80159ce:	f1b8 0f08 	cmp.w	r8, #8
 80159d2:	d16b      	bne.n	8015aac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80159d4:	2b00      	cmp	r3, #0
 80159d6:	bf0c      	ite	eq
 80159d8:	f44f 7100 	moveq.w	r1, #512	; 0x200
 80159dc:	f44f 7180 	movne.w	r1, #256	; 0x100
 80159e0:	2d00      	cmp	r5, #0
 80159e2:	f47f aee8 	bne.w	80157b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80159e6:	2e00      	cmp	r6, #0
 80159e8:	f47f aee5 	bne.w	80157b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80159ec:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80159ee:	19e3      	adds	r3, r4, r7
 80159f0:	4283      	cmp	r3, r0
 80159f2:	f73f aee0 	bgt.w	80157b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80159f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80159f8:	980d      	ldr	r0, [sp, #52]	; 0x34
 80159fa:	444b      	add	r3, r9
 80159fc:	4283      	cmp	r3, r0
 80159fe:	f73f aeda 	bgt.w	80157b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015a02:	6810      	ldr	r0, [r2, #0]
 8015a04:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8015a08:	6804      	ldr	r4, [r0, #0]
 8015a0a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8015a0e:	b2bf      	uxth	r7, r7
 8015a10:	f1b8 0f08 	cmp.w	r8, #8
 8015a14:	f04f 0500 	mov.w	r5, #0
 8015a18:	bf18      	it	ne
 8015a1a:	3701      	addne	r7, #1
 8015a1c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8015a20:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015a22:	9104      	str	r1, [sp, #16]
 8015a24:	bf18      	it	ne
 8015a26:	f027 0701 	bicne.w	r7, r7, #1
 8015a2a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015a2c:	bf18      	it	ne
 8015a2e:	b2bf      	uxthne	r7, r7
 8015a30:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8015a34:	e9cd 7900 	strd	r7, r9, [sp]
 8015a38:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8015a3a:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8015a3c:	47a0      	blx	r4
 8015a3e:	b019      	add	sp, #100	; 0x64
 8015a40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015a44:	2300      	movs	r3, #0
 8015a46:	e7c0      	b.n	80159ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8015a48:	2208      	movs	r2, #8
 8015a4a:	fb92 f3f8 	sdiv	r3, r2, r8
 8015a4e:	1e5a      	subs	r2, r3, #1
 8015a50:	443a      	add	r2, r7
 8015a52:	fb92 f2f3 	sdiv	r2, r2, r3
 8015a56:	fb12 f203 	smulbb	r2, r2, r3
 8015a5a:	b292      	uxth	r2, r2
 8015a5c:	e6b0      	b.n	80157c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8015a5e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8015a60:	e6ec      	b.n	801583c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8015a62:	bf00      	nop
 8015a64:	2001263c 	.word	0x2001263c
 8015a68:	20012644 	.word	0x20012644
 8015a6c:	2001263e 	.word	0x2001263e
 8015a70:	00fff800 	.word	0x00fff800
 8015a74:	9810      	ldr	r0, [sp, #64]	; 0x40
 8015a76:	e779      	b.n	801596c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8015a78:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015a7a:	b153      	cbz	r3, 8015a92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8015a7c:	441e      	add	r6, r3
 8015a7e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015a80:	b2b6      	uxth	r6, r6
 8015a82:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8015a86:	f006 0607 	and.w	r6, r6, #7
 8015a8a:	781a      	ldrb	r2, [r3, #0]
 8015a8c:	9328      	str	r3, [sp, #160]	; 0xa0
 8015a8e:	4132      	asrs	r2, r6
 8015a90:	b2d2      	uxtb	r2, r2
 8015a92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015a94:	445b      	add	r3, fp
 8015a96:	930a      	str	r3, [sp, #40]	; 0x28
 8015a98:	e706      	b.n	80158a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8015a9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015a9c:	2b00      	cmp	r3, #0
 8015a9e:	d1ce      	bne.n	8015a3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015aa0:	4b05      	ldr	r3, [pc, #20]	; (8015ab8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8015aa2:	6818      	ldr	r0, [r3, #0]
 8015aa4:	6803      	ldr	r3, [r0, #0]
 8015aa6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015aa8:	4798      	blx	r3
 8015aaa:	e7c8      	b.n	8015a3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015aac:	2b00      	cmp	r3, #0
 8015aae:	f43f ae82 	beq.w	80157b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015ab2:	f44f 7180 	mov.w	r1, #256	; 0x100
 8015ab6:	e793      	b.n	80159e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8015ab8:	20012644 	.word	0x20012644

08015abc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8015abc:	b538      	push	{r3, r4, r5, lr}
 8015abe:	4c15      	ldr	r4, [pc, #84]	; (8015b14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8015ac0:	7823      	ldrb	r3, [r4, #0]
 8015ac2:	f3bf 8f5b 	dmb	ish
 8015ac6:	07da      	lsls	r2, r3, #31
 8015ac8:	4605      	mov	r5, r0
 8015aca:	d40b      	bmi.n	8015ae4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8015acc:	4620      	mov	r0, r4
 8015ace:	f007 feb6 	bl	801d83e <__cxa_guard_acquire>
 8015ad2:	b138      	cbz	r0, 8015ae4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8015ad4:	4620      	mov	r0, r4
 8015ad6:	f007 febe 	bl	801d856 <__cxa_guard_release>
 8015ada:	4a0f      	ldr	r2, [pc, #60]	; (8015b18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8015adc:	490f      	ldr	r1, [pc, #60]	; (8015b1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8015ade:	4810      	ldr	r0, [pc, #64]	; (8015b20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8015ae0:	f007 fea6 	bl	801d830 <__aeabi_atexit>
 8015ae4:	4c0f      	ldr	r4, [pc, #60]	; (8015b24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8015ae6:	7823      	ldrb	r3, [r4, #0]
 8015ae8:	f3bf 8f5b 	dmb	ish
 8015aec:	07db      	lsls	r3, r3, #31
 8015aee:	d40b      	bmi.n	8015b08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8015af0:	4620      	mov	r0, r4
 8015af2:	f007 fea4 	bl	801d83e <__cxa_guard_acquire>
 8015af6:	b138      	cbz	r0, 8015b08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8015af8:	4620      	mov	r0, r4
 8015afa:	f007 feac 	bl	801d856 <__cxa_guard_release>
 8015afe:	4a06      	ldr	r2, [pc, #24]	; (8015b18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8015b00:	4909      	ldr	r1, [pc, #36]	; (8015b28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8015b02:	480a      	ldr	r0, [pc, #40]	; (8015b2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8015b04:	f007 fe94 	bl	801d830 <__aeabi_atexit>
 8015b08:	4b05      	ldr	r3, [pc, #20]	; (8015b20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8015b0a:	612b      	str	r3, [r5, #16]
 8015b0c:	4b07      	ldr	r3, [pc, #28]	; (8015b2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8015b0e:	616b      	str	r3, [r5, #20]
 8015b10:	bd38      	pop	{r3, r4, r5, pc}
 8015b12:	bf00      	nop
 8015b14:	2001271c 	.word	0x2001271c
 8015b18:	20000000 	.word	0x20000000
 8015b1c:	080128bf 	.word	0x080128bf
 8015b20:	200000d0 	.word	0x200000d0
 8015b24:	20012720 	.word	0x20012720
 8015b28:	080128bd 	.word	0x080128bd
 8015b2c:	200000d4 	.word	0x200000d4

08015b30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8015b30:	b538      	push	{r3, r4, r5, lr}
 8015b32:	4c15      	ldr	r4, [pc, #84]	; (8015b88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8015b34:	7823      	ldrb	r3, [r4, #0]
 8015b36:	f3bf 8f5b 	dmb	ish
 8015b3a:	07da      	lsls	r2, r3, #31
 8015b3c:	4605      	mov	r5, r0
 8015b3e:	d40b      	bmi.n	8015b58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8015b40:	4620      	mov	r0, r4
 8015b42:	f007 fe7c 	bl	801d83e <__cxa_guard_acquire>
 8015b46:	b138      	cbz	r0, 8015b58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8015b48:	4620      	mov	r0, r4
 8015b4a:	f007 fe84 	bl	801d856 <__cxa_guard_release>
 8015b4e:	4a0f      	ldr	r2, [pc, #60]	; (8015b8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8015b50:	490f      	ldr	r1, [pc, #60]	; (8015b90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8015b52:	4810      	ldr	r0, [pc, #64]	; (8015b94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8015b54:	f007 fe6c 	bl	801d830 <__aeabi_atexit>
 8015b58:	4c0f      	ldr	r4, [pc, #60]	; (8015b98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8015b5a:	7823      	ldrb	r3, [r4, #0]
 8015b5c:	f3bf 8f5b 	dmb	ish
 8015b60:	07db      	lsls	r3, r3, #31
 8015b62:	d40b      	bmi.n	8015b7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8015b64:	4620      	mov	r0, r4
 8015b66:	f007 fe6a 	bl	801d83e <__cxa_guard_acquire>
 8015b6a:	b138      	cbz	r0, 8015b7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8015b6c:	4620      	mov	r0, r4
 8015b6e:	f007 fe72 	bl	801d856 <__cxa_guard_release>
 8015b72:	4a06      	ldr	r2, [pc, #24]	; (8015b8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8015b74:	4909      	ldr	r1, [pc, #36]	; (8015b9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8015b76:	480a      	ldr	r0, [pc, #40]	; (8015ba0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8015b78:	f007 fe5a 	bl	801d830 <__aeabi_atexit>
 8015b7c:	4b05      	ldr	r3, [pc, #20]	; (8015b94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8015b7e:	60ab      	str	r3, [r5, #8]
 8015b80:	4b07      	ldr	r3, [pc, #28]	; (8015ba0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8015b82:	60eb      	str	r3, [r5, #12]
 8015b84:	bd38      	pop	{r3, r4, r5, pc}
 8015b86:	bf00      	nop
 8015b88:	200126f4 	.word	0x200126f4
 8015b8c:	20000000 	.word	0x20000000
 8015b90:	080128c3 	.word	0x080128c3
 8015b94:	200000a8 	.word	0x200000a8
 8015b98:	200126f8 	.word	0x200126f8
 8015b9c:	080128c1 	.word	0x080128c1
 8015ba0:	200000ac 	.word	0x200000ac

08015ba4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8015ba4:	b510      	push	{r4, lr}
 8015ba6:	4604      	mov	r4, r0
 8015ba8:	f7ff ff88 	bl	8015abc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8015bac:	4620      	mov	r0, r4
 8015bae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015bb2:	f7ff bfbd 	b.w	8015b30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08015bb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8015bb8:	b538      	push	{r3, r4, r5, lr}
 8015bba:	4c15      	ldr	r4, [pc, #84]	; (8015c10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8015bbc:	7823      	ldrb	r3, [r4, #0]
 8015bbe:	f3bf 8f5b 	dmb	ish
 8015bc2:	07da      	lsls	r2, r3, #31
 8015bc4:	4605      	mov	r5, r0
 8015bc6:	d40b      	bmi.n	8015be0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8015bc8:	4620      	mov	r0, r4
 8015bca:	f007 fe38 	bl	801d83e <__cxa_guard_acquire>
 8015bce:	b138      	cbz	r0, 8015be0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8015bd0:	4620      	mov	r0, r4
 8015bd2:	f007 fe40 	bl	801d856 <__cxa_guard_release>
 8015bd6:	4a0f      	ldr	r2, [pc, #60]	; (8015c14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8015bd8:	490f      	ldr	r1, [pc, #60]	; (8015c18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8015bda:	4810      	ldr	r0, [pc, #64]	; (8015c1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8015bdc:	f007 fe28 	bl	801d830 <__aeabi_atexit>
 8015be0:	4c0f      	ldr	r4, [pc, #60]	; (8015c20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8015be2:	7823      	ldrb	r3, [r4, #0]
 8015be4:	f3bf 8f5b 	dmb	ish
 8015be8:	07db      	lsls	r3, r3, #31
 8015bea:	d40b      	bmi.n	8015c04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8015bec:	4620      	mov	r0, r4
 8015bee:	f007 fe26 	bl	801d83e <__cxa_guard_acquire>
 8015bf2:	b138      	cbz	r0, 8015c04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8015bf4:	4620      	mov	r0, r4
 8015bf6:	f007 fe2e 	bl	801d856 <__cxa_guard_release>
 8015bfa:	4a06      	ldr	r2, [pc, #24]	; (8015c14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8015bfc:	4909      	ldr	r1, [pc, #36]	; (8015c24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8015bfe:	480a      	ldr	r0, [pc, #40]	; (8015c28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8015c00:	f007 fe16 	bl	801d830 <__aeabi_atexit>
 8015c04:	4b05      	ldr	r3, [pc, #20]	; (8015c1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8015c06:	622b      	str	r3, [r5, #32]
 8015c08:	4b07      	ldr	r3, [pc, #28]	; (8015c28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8015c0a:	626b      	str	r3, [r5, #36]	; 0x24
 8015c0c:	bd38      	pop	{r3, r4, r5, pc}
 8015c0e:	bf00      	nop
 8015c10:	20012724 	.word	0x20012724
 8015c14:	20000000 	.word	0x20000000
 8015c18:	080128b7 	.word	0x080128b7
 8015c1c:	200000d8 	.word	0x200000d8
 8015c20:	20012728 	.word	0x20012728
 8015c24:	080128b5 	.word	0x080128b5
 8015c28:	200000dc 	.word	0x200000dc

08015c2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8015c2c:	b538      	push	{r3, r4, r5, lr}
 8015c2e:	4c15      	ldr	r4, [pc, #84]	; (8015c84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8015c30:	7823      	ldrb	r3, [r4, #0]
 8015c32:	f3bf 8f5b 	dmb	ish
 8015c36:	07da      	lsls	r2, r3, #31
 8015c38:	4605      	mov	r5, r0
 8015c3a:	d40b      	bmi.n	8015c54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8015c3c:	4620      	mov	r0, r4
 8015c3e:	f007 fdfe 	bl	801d83e <__cxa_guard_acquire>
 8015c42:	b138      	cbz	r0, 8015c54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8015c44:	4620      	mov	r0, r4
 8015c46:	f007 fe06 	bl	801d856 <__cxa_guard_release>
 8015c4a:	4a0f      	ldr	r2, [pc, #60]	; (8015c88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8015c4c:	490f      	ldr	r1, [pc, #60]	; (8015c8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8015c4e:	4810      	ldr	r0, [pc, #64]	; (8015c90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8015c50:	f007 fdee 	bl	801d830 <__aeabi_atexit>
 8015c54:	4c0f      	ldr	r4, [pc, #60]	; (8015c94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8015c56:	7823      	ldrb	r3, [r4, #0]
 8015c58:	f3bf 8f5b 	dmb	ish
 8015c5c:	07db      	lsls	r3, r3, #31
 8015c5e:	d40b      	bmi.n	8015c78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8015c60:	4620      	mov	r0, r4
 8015c62:	f007 fdec 	bl	801d83e <__cxa_guard_acquire>
 8015c66:	b138      	cbz	r0, 8015c78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8015c68:	4620      	mov	r0, r4
 8015c6a:	f007 fdf4 	bl	801d856 <__cxa_guard_release>
 8015c6e:	4a06      	ldr	r2, [pc, #24]	; (8015c88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8015c70:	4909      	ldr	r1, [pc, #36]	; (8015c98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8015c72:	480a      	ldr	r0, [pc, #40]	; (8015c9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8015c74:	f007 fddc 	bl	801d830 <__aeabi_atexit>
 8015c78:	4b05      	ldr	r3, [pc, #20]	; (8015c90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8015c7a:	61ab      	str	r3, [r5, #24]
 8015c7c:	4b07      	ldr	r3, [pc, #28]	; (8015c9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8015c7e:	61eb      	str	r3, [r5, #28]
 8015c80:	bd38      	pop	{r3, r4, r5, pc}
 8015c82:	bf00      	nop
 8015c84:	200126fc 	.word	0x200126fc
 8015c88:	20000000 	.word	0x20000000
 8015c8c:	080128bb 	.word	0x080128bb
 8015c90:	200000b0 	.word	0x200000b0
 8015c94:	20012700 	.word	0x20012700
 8015c98:	080128b9 	.word	0x080128b9
 8015c9c:	200000b4 	.word	0x200000b4

08015ca0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8015ca0:	b510      	push	{r4, lr}
 8015ca2:	4604      	mov	r4, r0
 8015ca4:	f7ff ff88 	bl	8015bb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8015ca8:	4620      	mov	r0, r4
 8015caa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015cae:	f7ff bfbd 	b.w	8015c2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08015cb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8015cb4:	b538      	push	{r3, r4, r5, lr}
 8015cb6:	4c15      	ldr	r4, [pc, #84]	; (8015d0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8015cb8:	7823      	ldrb	r3, [r4, #0]
 8015cba:	f3bf 8f5b 	dmb	ish
 8015cbe:	07da      	lsls	r2, r3, #31
 8015cc0:	4605      	mov	r5, r0
 8015cc2:	d40b      	bmi.n	8015cdc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8015cc4:	4620      	mov	r0, r4
 8015cc6:	f007 fdba 	bl	801d83e <__cxa_guard_acquire>
 8015cca:	b138      	cbz	r0, 8015cdc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8015ccc:	4620      	mov	r0, r4
 8015cce:	f007 fdc2 	bl	801d856 <__cxa_guard_release>
 8015cd2:	4a0f      	ldr	r2, [pc, #60]	; (8015d10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8015cd4:	490f      	ldr	r1, [pc, #60]	; (8015d14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8015cd6:	4810      	ldr	r0, [pc, #64]	; (8015d18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8015cd8:	f007 fdaa 	bl	801d830 <__aeabi_atexit>
 8015cdc:	4c0f      	ldr	r4, [pc, #60]	; (8015d1c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8015cde:	7823      	ldrb	r3, [r4, #0]
 8015ce0:	f3bf 8f5b 	dmb	ish
 8015ce4:	07db      	lsls	r3, r3, #31
 8015ce6:	d40b      	bmi.n	8015d00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015ce8:	4620      	mov	r0, r4
 8015cea:	f007 fda8 	bl	801d83e <__cxa_guard_acquire>
 8015cee:	b138      	cbz	r0, 8015d00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015cf0:	4620      	mov	r0, r4
 8015cf2:	f007 fdb0 	bl	801d856 <__cxa_guard_release>
 8015cf6:	4a06      	ldr	r2, [pc, #24]	; (8015d10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8015cf8:	4909      	ldr	r1, [pc, #36]	; (8015d20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8015cfa:	480a      	ldr	r0, [pc, #40]	; (8015d24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8015cfc:	f007 fd98 	bl	801d830 <__aeabi_atexit>
 8015d00:	4b05      	ldr	r3, [pc, #20]	; (8015d18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8015d02:	632b      	str	r3, [r5, #48]	; 0x30
 8015d04:	4b07      	ldr	r3, [pc, #28]	; (8015d24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8015d06:	636b      	str	r3, [r5, #52]	; 0x34
 8015d08:	bd38      	pop	{r3, r4, r5, pc}
 8015d0a:	bf00      	nop
 8015d0c:	20012734 	.word	0x20012734
 8015d10:	20000000 	.word	0x20000000
 8015d14:	080128af 	.word	0x080128af
 8015d18:	200000e8 	.word	0x200000e8
 8015d1c:	20012738 	.word	0x20012738
 8015d20:	080128ad 	.word	0x080128ad
 8015d24:	200000ec 	.word	0x200000ec

08015d28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8015d28:	b538      	push	{r3, r4, r5, lr}
 8015d2a:	4c15      	ldr	r4, [pc, #84]	; (8015d80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8015d2c:	7823      	ldrb	r3, [r4, #0]
 8015d2e:	f3bf 8f5b 	dmb	ish
 8015d32:	07da      	lsls	r2, r3, #31
 8015d34:	4605      	mov	r5, r0
 8015d36:	d40b      	bmi.n	8015d50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8015d38:	4620      	mov	r0, r4
 8015d3a:	f007 fd80 	bl	801d83e <__cxa_guard_acquire>
 8015d3e:	b138      	cbz	r0, 8015d50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8015d40:	4620      	mov	r0, r4
 8015d42:	f007 fd88 	bl	801d856 <__cxa_guard_release>
 8015d46:	4a0f      	ldr	r2, [pc, #60]	; (8015d84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8015d48:	490f      	ldr	r1, [pc, #60]	; (8015d88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8015d4a:	4810      	ldr	r0, [pc, #64]	; (8015d8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8015d4c:	f007 fd70 	bl	801d830 <__aeabi_atexit>
 8015d50:	4c0f      	ldr	r4, [pc, #60]	; (8015d90 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8015d52:	7823      	ldrb	r3, [r4, #0]
 8015d54:	f3bf 8f5b 	dmb	ish
 8015d58:	07db      	lsls	r3, r3, #31
 8015d5a:	d40b      	bmi.n	8015d74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8015d5c:	4620      	mov	r0, r4
 8015d5e:	f007 fd6e 	bl	801d83e <__cxa_guard_acquire>
 8015d62:	b138      	cbz	r0, 8015d74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8015d64:	4620      	mov	r0, r4
 8015d66:	f007 fd76 	bl	801d856 <__cxa_guard_release>
 8015d6a:	4a06      	ldr	r2, [pc, #24]	; (8015d84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8015d6c:	4909      	ldr	r1, [pc, #36]	; (8015d94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8015d6e:	480a      	ldr	r0, [pc, #40]	; (8015d98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8015d70:	f007 fd5e 	bl	801d830 <__aeabi_atexit>
 8015d74:	4b05      	ldr	r3, [pc, #20]	; (8015d8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8015d76:	62ab      	str	r3, [r5, #40]	; 0x28
 8015d78:	4b07      	ldr	r3, [pc, #28]	; (8015d98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8015d7a:	62eb      	str	r3, [r5, #44]	; 0x2c
 8015d7c:	bd38      	pop	{r3, r4, r5, pc}
 8015d7e:	bf00      	nop
 8015d80:	20012704 	.word	0x20012704
 8015d84:	20000000 	.word	0x20000000
 8015d88:	080128b3 	.word	0x080128b3
 8015d8c:	200000b8 	.word	0x200000b8
 8015d90:	20012708 	.word	0x20012708
 8015d94:	080128b1 	.word	0x080128b1
 8015d98:	200000bc 	.word	0x200000bc

08015d9c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8015d9c:	b510      	push	{r4, lr}
 8015d9e:	4604      	mov	r4, r0
 8015da0:	f7ff ff88 	bl	8015cb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8015da4:	4620      	mov	r0, r4
 8015da6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015daa:	f7ff bfbd 	b.w	8015d28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08015db0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8015db0:	b538      	push	{r3, r4, r5, lr}
 8015db2:	4c15      	ldr	r4, [pc, #84]	; (8015e08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8015db4:	7823      	ldrb	r3, [r4, #0]
 8015db6:	f3bf 8f5b 	dmb	ish
 8015dba:	07da      	lsls	r2, r3, #31
 8015dbc:	4605      	mov	r5, r0
 8015dbe:	d40b      	bmi.n	8015dd8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8015dc0:	4620      	mov	r0, r4
 8015dc2:	f007 fd3c 	bl	801d83e <__cxa_guard_acquire>
 8015dc6:	b138      	cbz	r0, 8015dd8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8015dc8:	4620      	mov	r0, r4
 8015dca:	f007 fd44 	bl	801d856 <__cxa_guard_release>
 8015dce:	4a0f      	ldr	r2, [pc, #60]	; (8015e0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8015dd0:	490f      	ldr	r1, [pc, #60]	; (8015e10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8015dd2:	4810      	ldr	r0, [pc, #64]	; (8015e14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8015dd4:	f007 fd2c 	bl	801d830 <__aeabi_atexit>
 8015dd8:	4c0f      	ldr	r4, [pc, #60]	; (8015e18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8015dda:	7823      	ldrb	r3, [r4, #0]
 8015ddc:	f3bf 8f5b 	dmb	ish
 8015de0:	07db      	lsls	r3, r3, #31
 8015de2:	d40b      	bmi.n	8015dfc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8015de4:	4620      	mov	r0, r4
 8015de6:	f007 fd2a 	bl	801d83e <__cxa_guard_acquire>
 8015dea:	b138      	cbz	r0, 8015dfc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8015dec:	4620      	mov	r0, r4
 8015dee:	f007 fd32 	bl	801d856 <__cxa_guard_release>
 8015df2:	4a06      	ldr	r2, [pc, #24]	; (8015e0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8015df4:	4909      	ldr	r1, [pc, #36]	; (8015e1c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8015df6:	480a      	ldr	r0, [pc, #40]	; (8015e20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8015df8:	f007 fd1a 	bl	801d830 <__aeabi_atexit>
 8015dfc:	4b05      	ldr	r3, [pc, #20]	; (8015e14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8015dfe:	652b      	str	r3, [r5, #80]	; 0x50
 8015e00:	4b07      	ldr	r3, [pc, #28]	; (8015e20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8015e02:	656b      	str	r3, [r5, #84]	; 0x54
 8015e04:	bd38      	pop	{r3, r4, r5, pc}
 8015e06:	bf00      	nop
 8015e08:	2001273c 	.word	0x2001273c
 8015e0c:	20000000 	.word	0x20000000
 8015e10:	0801289f 	.word	0x0801289f
 8015e14:	200000f0 	.word	0x200000f0
 8015e18:	20012740 	.word	0x20012740
 8015e1c:	0801289d 	.word	0x0801289d
 8015e20:	200000f4 	.word	0x200000f4

08015e24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8015e24:	b538      	push	{r3, r4, r5, lr}
 8015e26:	4c15      	ldr	r4, [pc, #84]	; (8015e7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8015e28:	7823      	ldrb	r3, [r4, #0]
 8015e2a:	f3bf 8f5b 	dmb	ish
 8015e2e:	07da      	lsls	r2, r3, #31
 8015e30:	4605      	mov	r5, r0
 8015e32:	d40b      	bmi.n	8015e4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8015e34:	4620      	mov	r0, r4
 8015e36:	f007 fd02 	bl	801d83e <__cxa_guard_acquire>
 8015e3a:	b138      	cbz	r0, 8015e4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8015e3c:	4620      	mov	r0, r4
 8015e3e:	f007 fd0a 	bl	801d856 <__cxa_guard_release>
 8015e42:	4a0f      	ldr	r2, [pc, #60]	; (8015e80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8015e44:	490f      	ldr	r1, [pc, #60]	; (8015e84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8015e46:	4810      	ldr	r0, [pc, #64]	; (8015e88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8015e48:	f007 fcf2 	bl	801d830 <__aeabi_atexit>
 8015e4c:	4c0f      	ldr	r4, [pc, #60]	; (8015e8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8015e4e:	7823      	ldrb	r3, [r4, #0]
 8015e50:	f3bf 8f5b 	dmb	ish
 8015e54:	07db      	lsls	r3, r3, #31
 8015e56:	d40b      	bmi.n	8015e70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8015e58:	4620      	mov	r0, r4
 8015e5a:	f007 fcf0 	bl	801d83e <__cxa_guard_acquire>
 8015e5e:	b138      	cbz	r0, 8015e70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8015e60:	4620      	mov	r0, r4
 8015e62:	f007 fcf8 	bl	801d856 <__cxa_guard_release>
 8015e66:	4a06      	ldr	r2, [pc, #24]	; (8015e80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8015e68:	4909      	ldr	r1, [pc, #36]	; (8015e90 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8015e6a:	480a      	ldr	r0, [pc, #40]	; (8015e94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8015e6c:	f007 fce0 	bl	801d830 <__aeabi_atexit>
 8015e70:	4b05      	ldr	r3, [pc, #20]	; (8015e88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8015e72:	64ab      	str	r3, [r5, #72]	; 0x48
 8015e74:	4b07      	ldr	r3, [pc, #28]	; (8015e94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8015e76:	64eb      	str	r3, [r5, #76]	; 0x4c
 8015e78:	bd38      	pop	{r3, r4, r5, pc}
 8015e7a:	bf00      	nop
 8015e7c:	20012744 	.word	0x20012744
 8015e80:	20000000 	.word	0x20000000
 8015e84:	080128a3 	.word	0x080128a3
 8015e88:	200000f8 	.word	0x200000f8
 8015e8c:	20012748 	.word	0x20012748
 8015e90:	080128a1 	.word	0x080128a1
 8015e94:	200000fc 	.word	0x200000fc

08015e98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8015e98:	b538      	push	{r3, r4, r5, lr}
 8015e9a:	4c15      	ldr	r4, [pc, #84]	; (8015ef0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8015e9c:	7823      	ldrb	r3, [r4, #0]
 8015e9e:	f3bf 8f5b 	dmb	ish
 8015ea2:	07da      	lsls	r2, r3, #31
 8015ea4:	4605      	mov	r5, r0
 8015ea6:	d40b      	bmi.n	8015ec0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8015ea8:	4620      	mov	r0, r4
 8015eaa:	f007 fcc8 	bl	801d83e <__cxa_guard_acquire>
 8015eae:	b138      	cbz	r0, 8015ec0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8015eb0:	4620      	mov	r0, r4
 8015eb2:	f007 fcd0 	bl	801d856 <__cxa_guard_release>
 8015eb6:	4a0f      	ldr	r2, [pc, #60]	; (8015ef4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8015eb8:	490f      	ldr	r1, [pc, #60]	; (8015ef8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8015eba:	4810      	ldr	r0, [pc, #64]	; (8015efc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8015ebc:	f007 fcb8 	bl	801d830 <__aeabi_atexit>
 8015ec0:	4c0f      	ldr	r4, [pc, #60]	; (8015f00 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8015ec2:	7823      	ldrb	r3, [r4, #0]
 8015ec4:	f3bf 8f5b 	dmb	ish
 8015ec8:	07db      	lsls	r3, r3, #31
 8015eca:	d40b      	bmi.n	8015ee4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8015ecc:	4620      	mov	r0, r4
 8015ece:	f007 fcb6 	bl	801d83e <__cxa_guard_acquire>
 8015ed2:	b138      	cbz	r0, 8015ee4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8015ed4:	4620      	mov	r0, r4
 8015ed6:	f007 fcbe 	bl	801d856 <__cxa_guard_release>
 8015eda:	4a06      	ldr	r2, [pc, #24]	; (8015ef4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8015edc:	4909      	ldr	r1, [pc, #36]	; (8015f04 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8015ede:	480a      	ldr	r0, [pc, #40]	; (8015f08 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8015ee0:	f007 fca6 	bl	801d830 <__aeabi_atexit>
 8015ee4:	4b05      	ldr	r3, [pc, #20]	; (8015efc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8015ee6:	642b      	str	r3, [r5, #64]	; 0x40
 8015ee8:	4b07      	ldr	r3, [pc, #28]	; (8015f08 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8015eea:	646b      	str	r3, [r5, #68]	; 0x44
 8015eec:	bd38      	pop	{r3, r4, r5, pc}
 8015eee:	bf00      	nop
 8015ef0:	2001270c 	.word	0x2001270c
 8015ef4:	20000000 	.word	0x20000000
 8015ef8:	080128a7 	.word	0x080128a7
 8015efc:	200000c0 	.word	0x200000c0
 8015f00:	20012710 	.word	0x20012710
 8015f04:	080128a5 	.word	0x080128a5
 8015f08:	200000c4 	.word	0x200000c4

08015f0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8015f0c:	b538      	push	{r3, r4, r5, lr}
 8015f0e:	4c15      	ldr	r4, [pc, #84]	; (8015f64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8015f10:	7823      	ldrb	r3, [r4, #0]
 8015f12:	f3bf 8f5b 	dmb	ish
 8015f16:	07da      	lsls	r2, r3, #31
 8015f18:	4605      	mov	r5, r0
 8015f1a:	d40b      	bmi.n	8015f34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8015f1c:	4620      	mov	r0, r4
 8015f1e:	f007 fc8e 	bl	801d83e <__cxa_guard_acquire>
 8015f22:	b138      	cbz	r0, 8015f34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8015f24:	4620      	mov	r0, r4
 8015f26:	f007 fc96 	bl	801d856 <__cxa_guard_release>
 8015f2a:	4a0f      	ldr	r2, [pc, #60]	; (8015f68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8015f2c:	490f      	ldr	r1, [pc, #60]	; (8015f6c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8015f2e:	4810      	ldr	r0, [pc, #64]	; (8015f70 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8015f30:	f007 fc7e 	bl	801d830 <__aeabi_atexit>
 8015f34:	4c0f      	ldr	r4, [pc, #60]	; (8015f74 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8015f36:	7823      	ldrb	r3, [r4, #0]
 8015f38:	f3bf 8f5b 	dmb	ish
 8015f3c:	07db      	lsls	r3, r3, #31
 8015f3e:	d40b      	bmi.n	8015f58 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8015f40:	4620      	mov	r0, r4
 8015f42:	f007 fc7c 	bl	801d83e <__cxa_guard_acquire>
 8015f46:	b138      	cbz	r0, 8015f58 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8015f48:	4620      	mov	r0, r4
 8015f4a:	f007 fc84 	bl	801d856 <__cxa_guard_release>
 8015f4e:	4a06      	ldr	r2, [pc, #24]	; (8015f68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8015f50:	4909      	ldr	r1, [pc, #36]	; (8015f78 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8015f52:	480a      	ldr	r0, [pc, #40]	; (8015f7c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8015f54:	f007 fc6c 	bl	801d830 <__aeabi_atexit>
 8015f58:	4b05      	ldr	r3, [pc, #20]	; (8015f70 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8015f5a:	63ab      	str	r3, [r5, #56]	; 0x38
 8015f5c:	4b07      	ldr	r3, [pc, #28]	; (8015f7c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8015f5e:	63eb      	str	r3, [r5, #60]	; 0x3c
 8015f60:	bd38      	pop	{r3, r4, r5, pc}
 8015f62:	bf00      	nop
 8015f64:	2001272c 	.word	0x2001272c
 8015f68:	20000000 	.word	0x20000000
 8015f6c:	080128ab 	.word	0x080128ab
 8015f70:	200000e0 	.word	0x200000e0
 8015f74:	20012730 	.word	0x20012730
 8015f78:	080128a9 	.word	0x080128a9
 8015f7c:	200000e4 	.word	0x200000e4

08015f80 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8015f80:	b510      	push	{r4, lr}
 8015f82:	4604      	mov	r4, r0
 8015f84:	f7ff ff14 	bl	8015db0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8015f88:	4620      	mov	r0, r4
 8015f8a:	f7ff ff85 	bl	8015e98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8015f8e:	4620      	mov	r0, r4
 8015f90:	f7ff ff48 	bl	8015e24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8015f94:	4620      	mov	r0, r4
 8015f96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015f9a:	f7ff bfb7 	b.w	8015f0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08015fa0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8015fa0:	b538      	push	{r3, r4, r5, lr}
 8015fa2:	4c15      	ldr	r4, [pc, #84]	; (8015ff8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8015fa4:	7823      	ldrb	r3, [r4, #0]
 8015fa6:	f3bf 8f5b 	dmb	ish
 8015faa:	07da      	lsls	r2, r3, #31
 8015fac:	4605      	mov	r5, r0
 8015fae:	d40b      	bmi.n	8015fc8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8015fb0:	4620      	mov	r0, r4
 8015fb2:	f007 fc44 	bl	801d83e <__cxa_guard_acquire>
 8015fb6:	b138      	cbz	r0, 8015fc8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8015fb8:	4620      	mov	r0, r4
 8015fba:	f007 fc4c 	bl	801d856 <__cxa_guard_release>
 8015fbe:	4a0f      	ldr	r2, [pc, #60]	; (8015ffc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8015fc0:	490f      	ldr	r1, [pc, #60]	; (8016000 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8015fc2:	4810      	ldr	r0, [pc, #64]	; (8016004 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8015fc4:	f007 fc34 	bl	801d830 <__aeabi_atexit>
 8015fc8:	4c0f      	ldr	r4, [pc, #60]	; (8016008 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8015fca:	7823      	ldrb	r3, [r4, #0]
 8015fcc:	f3bf 8f5b 	dmb	ish
 8015fd0:	07db      	lsls	r3, r3, #31
 8015fd2:	d40b      	bmi.n	8015fec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8015fd4:	4620      	mov	r0, r4
 8015fd6:	f007 fc32 	bl	801d83e <__cxa_guard_acquire>
 8015fda:	b138      	cbz	r0, 8015fec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8015fdc:	4620      	mov	r0, r4
 8015fde:	f007 fc3a 	bl	801d856 <__cxa_guard_release>
 8015fe2:	4a06      	ldr	r2, [pc, #24]	; (8015ffc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8015fe4:	4909      	ldr	r1, [pc, #36]	; (801600c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8015fe6:	480a      	ldr	r0, [pc, #40]	; (8016010 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8015fe8:	f007 fc22 	bl	801d830 <__aeabi_atexit>
 8015fec:	4b05      	ldr	r3, [pc, #20]	; (8016004 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8015fee:	662b      	str	r3, [r5, #96]	; 0x60
 8015ff0:	4b07      	ldr	r3, [pc, #28]	; (8016010 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8015ff2:	666b      	str	r3, [r5, #100]	; 0x64
 8015ff4:	bd38      	pop	{r3, r4, r5, pc}
 8015ff6:	bf00      	nop
 8015ff8:	20012714 	.word	0x20012714
 8015ffc:	20000000 	.word	0x20000000
 8016000:	08012897 	.word	0x08012897
 8016004:	200000c8 	.word	0x200000c8
 8016008:	20012718 	.word	0x20012718
 801600c:	08012895 	.word	0x08012895
 8016010:	200000cc 	.word	0x200000cc

08016014 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8016014:	b538      	push	{r3, r4, r5, lr}
 8016016:	4c15      	ldr	r4, [pc, #84]	; (801606c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8016018:	7823      	ldrb	r3, [r4, #0]
 801601a:	f3bf 8f5b 	dmb	ish
 801601e:	07da      	lsls	r2, r3, #31
 8016020:	4605      	mov	r5, r0
 8016022:	d40b      	bmi.n	801603c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8016024:	4620      	mov	r0, r4
 8016026:	f007 fc0a 	bl	801d83e <__cxa_guard_acquire>
 801602a:	b138      	cbz	r0, 801603c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801602c:	4620      	mov	r0, r4
 801602e:	f007 fc12 	bl	801d856 <__cxa_guard_release>
 8016032:	4a0f      	ldr	r2, [pc, #60]	; (8016070 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8016034:	490f      	ldr	r1, [pc, #60]	; (8016074 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8016036:	4810      	ldr	r0, [pc, #64]	; (8016078 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8016038:	f007 fbfa 	bl	801d830 <__aeabi_atexit>
 801603c:	4c0f      	ldr	r4, [pc, #60]	; (801607c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801603e:	7823      	ldrb	r3, [r4, #0]
 8016040:	f3bf 8f5b 	dmb	ish
 8016044:	07db      	lsls	r3, r3, #31
 8016046:	d40b      	bmi.n	8016060 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8016048:	4620      	mov	r0, r4
 801604a:	f007 fbf8 	bl	801d83e <__cxa_guard_acquire>
 801604e:	b138      	cbz	r0, 8016060 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8016050:	4620      	mov	r0, r4
 8016052:	f007 fc00 	bl	801d856 <__cxa_guard_release>
 8016056:	4a06      	ldr	r2, [pc, #24]	; (8016070 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8016058:	4909      	ldr	r1, [pc, #36]	; (8016080 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801605a:	480a      	ldr	r0, [pc, #40]	; (8016084 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801605c:	f007 fbe8 	bl	801d830 <__aeabi_atexit>
 8016060:	4b05      	ldr	r3, [pc, #20]	; (8016078 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8016062:	65ab      	str	r3, [r5, #88]	; 0x58
 8016064:	4b07      	ldr	r3, [pc, #28]	; (8016084 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8016066:	65eb      	str	r3, [r5, #92]	; 0x5c
 8016068:	bd38      	pop	{r3, r4, r5, pc}
 801606a:	bf00      	nop
 801606c:	200126ec 	.word	0x200126ec
 8016070:	20000000 	.word	0x20000000
 8016074:	0801289b 	.word	0x0801289b
 8016078:	200000a0 	.word	0x200000a0
 801607c:	200126f0 	.word	0x200126f0
 8016080:	08012899 	.word	0x08012899
 8016084:	200000a4 	.word	0x200000a4

08016088 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8016088:	b510      	push	{r4, lr}
 801608a:	4604      	mov	r4, r0
 801608c:	f7ff ff88 	bl	8015fa0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8016090:	4620      	mov	r0, r4
 8016092:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016096:	f7ff bfbd 	b.w	8016014 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801609c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801609c:	b538      	push	{r3, r4, r5, lr}
 801609e:	4c15      	ldr	r4, [pc, #84]	; (80160f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80160a0:	7823      	ldrb	r3, [r4, #0]
 80160a2:	f3bf 8f5b 	dmb	ish
 80160a6:	07da      	lsls	r2, r3, #31
 80160a8:	4605      	mov	r5, r0
 80160aa:	d40b      	bmi.n	80160c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80160ac:	4620      	mov	r0, r4
 80160ae:	f007 fbc6 	bl	801d83e <__cxa_guard_acquire>
 80160b2:	b138      	cbz	r0, 80160c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80160b4:	4620      	mov	r0, r4
 80160b6:	f007 fbce 	bl	801d856 <__cxa_guard_release>
 80160ba:	4a0f      	ldr	r2, [pc, #60]	; (80160f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80160bc:	490f      	ldr	r1, [pc, #60]	; (80160fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80160be:	4810      	ldr	r0, [pc, #64]	; (8016100 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80160c0:	f007 fbb6 	bl	801d830 <__aeabi_atexit>
 80160c4:	4c0f      	ldr	r4, [pc, #60]	; (8016104 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80160c6:	7823      	ldrb	r3, [r4, #0]
 80160c8:	f3bf 8f5b 	dmb	ish
 80160cc:	07db      	lsls	r3, r3, #31
 80160ce:	d40b      	bmi.n	80160e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80160d0:	4620      	mov	r0, r4
 80160d2:	f007 fbb4 	bl	801d83e <__cxa_guard_acquire>
 80160d6:	b138      	cbz	r0, 80160e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80160d8:	4620      	mov	r0, r4
 80160da:	f007 fbbc 	bl	801d856 <__cxa_guard_release>
 80160de:	4a06      	ldr	r2, [pc, #24]	; (80160f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80160e0:	4909      	ldr	r1, [pc, #36]	; (8016108 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80160e2:	480a      	ldr	r0, [pc, #40]	; (801610c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80160e4:	f007 fba4 	bl	801d830 <__aeabi_atexit>
 80160e8:	4b05      	ldr	r3, [pc, #20]	; (8016100 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80160ea:	672b      	str	r3, [r5, #112]	; 0x70
 80160ec:	4b07      	ldr	r3, [pc, #28]	; (801610c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80160ee:	676b      	str	r3, [r5, #116]	; 0x74
 80160f0:	bd38      	pop	{r3, r4, r5, pc}
 80160f2:	bf00      	nop
 80160f4:	200126e4 	.word	0x200126e4
 80160f8:	20000000 	.word	0x20000000
 80160fc:	0801288f 	.word	0x0801288f
 8016100:	20000098 	.word	0x20000098
 8016104:	200126e8 	.word	0x200126e8
 8016108:	0801288d 	.word	0x0801288d
 801610c:	2000009c 	.word	0x2000009c

08016110 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8016110:	b538      	push	{r3, r4, r5, lr}
 8016112:	4c15      	ldr	r4, [pc, #84]	; (8016168 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8016114:	7823      	ldrb	r3, [r4, #0]
 8016116:	f3bf 8f5b 	dmb	ish
 801611a:	07da      	lsls	r2, r3, #31
 801611c:	4605      	mov	r5, r0
 801611e:	d40b      	bmi.n	8016138 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8016120:	4620      	mov	r0, r4
 8016122:	f007 fb8c 	bl	801d83e <__cxa_guard_acquire>
 8016126:	b138      	cbz	r0, 8016138 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8016128:	4620      	mov	r0, r4
 801612a:	f007 fb94 	bl	801d856 <__cxa_guard_release>
 801612e:	4a0f      	ldr	r2, [pc, #60]	; (801616c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8016130:	490f      	ldr	r1, [pc, #60]	; (8016170 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8016132:	4810      	ldr	r0, [pc, #64]	; (8016174 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8016134:	f007 fb7c 	bl	801d830 <__aeabi_atexit>
 8016138:	4c0f      	ldr	r4, [pc, #60]	; (8016178 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801613a:	7823      	ldrb	r3, [r4, #0]
 801613c:	f3bf 8f5b 	dmb	ish
 8016140:	07db      	lsls	r3, r3, #31
 8016142:	d40b      	bmi.n	801615c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8016144:	4620      	mov	r0, r4
 8016146:	f007 fb7a 	bl	801d83e <__cxa_guard_acquire>
 801614a:	b138      	cbz	r0, 801615c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801614c:	4620      	mov	r0, r4
 801614e:	f007 fb82 	bl	801d856 <__cxa_guard_release>
 8016152:	4a06      	ldr	r2, [pc, #24]	; (801616c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8016154:	4909      	ldr	r1, [pc, #36]	; (801617c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8016156:	480a      	ldr	r0, [pc, #40]	; (8016180 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8016158:	f007 fb6a 	bl	801d830 <__aeabi_atexit>
 801615c:	4b05      	ldr	r3, [pc, #20]	; (8016174 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801615e:	66ab      	str	r3, [r5, #104]	; 0x68
 8016160:	4b07      	ldr	r3, [pc, #28]	; (8016180 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8016162:	66eb      	str	r3, [r5, #108]	; 0x6c
 8016164:	bd38      	pop	{r3, r4, r5, pc}
 8016166:	bf00      	nop
 8016168:	200126dc 	.word	0x200126dc
 801616c:	20000000 	.word	0x20000000
 8016170:	08012893 	.word	0x08012893
 8016174:	20000090 	.word	0x20000090
 8016178:	200126e0 	.word	0x200126e0
 801617c:	08012891 	.word	0x08012891
 8016180:	20000094 	.word	0x20000094

08016184 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8016184:	b510      	push	{r4, lr}
 8016186:	4604      	mov	r4, r0
 8016188:	f7ff ff88 	bl	801609c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801618c:	4620      	mov	r0, r4
 801618e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016192:	f7ff bfbd 	b.w	8016110 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08016196 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8016196:	b510      	push	{r4, lr}
 8016198:	4604      	mov	r4, r0
 801619a:	f7ff fff3 	bl	8016184 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801619e:	4620      	mov	r0, r4
 80161a0:	f7ff ff72 	bl	8016088 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80161a4:	4620      	mov	r0, r4
 80161a6:	f7ff fdf9 	bl	8015d9c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80161aa:	4620      	mov	r0, r4
 80161ac:	f7ff fcfa 	bl	8015ba4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80161b0:	4620      	mov	r0, r4
 80161b2:	f7ff fd75 	bl	8015ca0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80161b6:	4620      	mov	r0, r4
 80161b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80161bc:	f7ff bee0 	b.w	8015f80 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080161c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 80161c0:	b538      	push	{r3, r4, r5, lr}
 80161c2:	4c0b      	ldr	r4, [pc, #44]	; (80161f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 80161c4:	7823      	ldrb	r3, [r4, #0]
 80161c6:	f3bf 8f5b 	dmb	ish
 80161ca:	07db      	lsls	r3, r3, #31
 80161cc:	4605      	mov	r5, r0
 80161ce:	d40b      	bmi.n	80161e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80161d0:	4620      	mov	r0, r4
 80161d2:	f007 fb34 	bl	801d83e <__cxa_guard_acquire>
 80161d6:	b138      	cbz	r0, 80161e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80161d8:	4620      	mov	r0, r4
 80161da:	f007 fb3c 	bl	801d856 <__cxa_guard_release>
 80161de:	4a05      	ldr	r2, [pc, #20]	; (80161f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 80161e0:	4905      	ldr	r1, [pc, #20]	; (80161f8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 80161e2:	4806      	ldr	r0, [pc, #24]	; (80161fc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80161e4:	f007 fb24 	bl	801d830 <__aeabi_atexit>
 80161e8:	4b04      	ldr	r3, [pc, #16]	; (80161fc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80161ea:	67ab      	str	r3, [r5, #120]	; 0x78
 80161ec:	bd38      	pop	{r3, r4, r5, pc}
 80161ee:	bf00      	nop
 80161f0:	200126d0 	.word	0x200126d0
 80161f4:	20000000 	.word	0x20000000
 80161f8:	0801288b 	.word	0x0801288b
 80161fc:	20000088 	.word	0x20000088

08016200 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8016200:	b538      	push	{r3, r4, r5, lr}
 8016202:	4c0b      	ldr	r4, [pc, #44]	; (8016230 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8016204:	7823      	ldrb	r3, [r4, #0]
 8016206:	f3bf 8f5b 	dmb	ish
 801620a:	07db      	lsls	r3, r3, #31
 801620c:	4605      	mov	r5, r0
 801620e:	d40b      	bmi.n	8016228 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8016210:	4620      	mov	r0, r4
 8016212:	f007 fb14 	bl	801d83e <__cxa_guard_acquire>
 8016216:	b138      	cbz	r0, 8016228 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8016218:	4620      	mov	r0, r4
 801621a:	f007 fb1c 	bl	801d856 <__cxa_guard_release>
 801621e:	4a05      	ldr	r2, [pc, #20]	; (8016234 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8016220:	4905      	ldr	r1, [pc, #20]	; (8016238 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8016222:	4806      	ldr	r0, [pc, #24]	; (801623c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8016224:	f007 fb04 	bl	801d830 <__aeabi_atexit>
 8016228:	4b04      	ldr	r3, [pc, #16]	; (801623c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801622a:	67eb      	str	r3, [r5, #124]	; 0x7c
 801622c:	bd38      	pop	{r3, r4, r5, pc}
 801622e:	bf00      	nop
 8016230:	200126d4 	.word	0x200126d4
 8016234:	20000000 	.word	0x20000000
 8016238:	08012889 	.word	0x08012889
 801623c:	2000008c 	.word	0x2000008c

08016240 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8016240:	b570      	push	{r4, r5, r6, lr}
 8016242:	4d0d      	ldr	r5, [pc, #52]	; (8016278 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8016244:	4c0d      	ldr	r4, [pc, #52]	; (801627c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8016246:	782b      	ldrb	r3, [r5, #0]
 8016248:	f3bf 8f5b 	dmb	ish
 801624c:	f013 0f01 	tst.w	r3, #1
 8016250:	4606      	mov	r6, r0
 8016252:	d10d      	bne.n	8016270 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8016254:	4628      	mov	r0, r5
 8016256:	f007 faf2 	bl	801d83e <__cxa_guard_acquire>
 801625a:	b148      	cbz	r0, 8016270 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801625c:	4b08      	ldr	r3, [pc, #32]	; (8016280 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801625e:	6023      	str	r3, [r4, #0]
 8016260:	4628      	mov	r0, r5
 8016262:	f007 faf8 	bl	801d856 <__cxa_guard_release>
 8016266:	4a07      	ldr	r2, [pc, #28]	; (8016284 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8016268:	4907      	ldr	r1, [pc, #28]	; (8016288 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801626a:	4620      	mov	r0, r4
 801626c:	f007 fae0 	bl	801d830 <__aeabi_atexit>
 8016270:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 8016274:	bd70      	pop	{r4, r5, r6, pc}
 8016276:	bf00      	nop
 8016278:	200126d8 	.word	0x200126d8
 801627c:	2001274c 	.word	0x2001274c
 8016280:	080207c0 	.word	0x080207c0
 8016284:	20000000 	.word	0x20000000
 8016288:	08012887 	.word	0x08012887

0801628c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801628c:	b510      	push	{r4, lr}
 801628e:	4604      	mov	r4, r0
 8016290:	f7ff ff96 	bl	80161c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8016294:	4620      	mov	r0, r4
 8016296:	f7ff ffb3 	bl	8016200 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801629a:	4620      	mov	r0, r4
 801629c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80162a0:	f7ff bfce 	b.w	8016240 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

080162a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80162a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162a8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80162ac:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80162b0:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80162b4:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80162b8:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 80162bc:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 80162c0:	8808      	ldrh	r0, [r1, #0]
 80162c2:	fb05 4c0e 	mla	ip, r5, lr, r4
 80162c6:	2d00      	cmp	r5, #0
 80162c8:	eb02 0a0c 	add.w	sl, r2, ip
 80162cc:	f2c0 80b0 	blt.w	8016430 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80162d0:	45ab      	cmp	fp, r5
 80162d2:	f340 80ad 	ble.w	8016430 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80162d6:	2c00      	cmp	r4, #0
 80162d8:	f2c0 80a8 	blt.w	801642c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80162dc:	45a6      	cmp	lr, r4
 80162de:	f340 80a5 	ble.w	801642c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80162e2:	f812 200c 	ldrb.w	r2, [r2, ip]
 80162e6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80162ea:	1c62      	adds	r2, r4, #1
 80162ec:	f100 80a3 	bmi.w	8016436 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80162f0:	4596      	cmp	lr, r2
 80162f2:	f340 80a0 	ble.w	8016436 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80162f6:	f1b9 0f00 	cmp.w	r9, #0
 80162fa:	f000 809c 	beq.w	8016436 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80162fe:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8016302:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8016306:	3501      	adds	r5, #1
 8016308:	f100 8099 	bmi.w	801643e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801630c:	45ab      	cmp	fp, r5
 801630e:	f340 8096 	ble.w	801643e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8016312:	2f00      	cmp	r7, #0
 8016314:	f000 8093 	beq.w	801643e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8016318:	2c00      	cmp	r4, #0
 801631a:	f2c0 808e 	blt.w	801643a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801631e:	45a6      	cmp	lr, r4
 8016320:	f340 808b 	ble.w	801643a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8016324:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8016328:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801632c:	3401      	adds	r4, #1
 801632e:	f100 8089 	bmi.w	8016444 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8016332:	45a6      	cmp	lr, r4
 8016334:	f340 8086 	ble.w	8016444 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8016338:	f1b9 0f00 	cmp.w	r9, #0
 801633c:	f000 8082 	beq.w	8016444 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8016340:	44d6      	add	lr, sl
 8016342:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8016346:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801634a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801634e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8016352:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8016356:	fb19 fe07 	smulbb	lr, r9, r7
 801635a:	ea44 0808 	orr.w	r8, r4, r8
 801635e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8016362:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8016366:	f1c7 0210 	rsb	r2, r7, #16
 801636a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801636e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016372:	ea44 0c0c 	orr.w	ip, r4, ip
 8016376:	eba2 0209 	sub.w	r2, r2, r9
 801637a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801637e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8016382:	fb04 f40c 	mul.w	r4, r4, ip
 8016386:	fb02 4808 	mla	r8, r2, r8, r4
 801638a:	041a      	lsls	r2, r3, #16
 801638c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016390:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016394:	4313      	orrs	r3, r2
 8016396:	042a      	lsls	r2, r5, #16
 8016398:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801639c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80163a0:	fb0e 8303 	mla	r3, lr, r3, r8
 80163a4:	432a      	orrs	r2, r5
 80163a6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80163aa:	fb07 3202 	mla	r2, r7, r2, r3
 80163ae:	0d53      	lsrs	r3, r2, #21
 80163b0:	0952      	lsrs	r2, r2, #5
 80163b2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80163b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80163ba:	431a      	orrs	r2, r3
 80163bc:	b293      	uxth	r3, r2
 80163be:	b2b4      	uxth	r4, r6
 80163c0:	1202      	asrs	r2, r0, #8
 80163c2:	43f6      	mvns	r6, r6
 80163c4:	b2f6      	uxtb	r6, r6
 80163c6:	121d      	asrs	r5, r3, #8
 80163c8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80163cc:	fb12 f206 	smulbb	r2, r2, r6
 80163d0:	10c7      	asrs	r7, r0, #3
 80163d2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80163d6:	00c0      	lsls	r0, r0, #3
 80163d8:	fb05 2504 	mla	r5, r5, r4, r2
 80163dc:	b2c0      	uxtb	r0, r0
 80163de:	10da      	asrs	r2, r3, #3
 80163e0:	00db      	lsls	r3, r3, #3
 80163e2:	b2db      	uxtb	r3, r3
 80163e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80163e8:	fb10 f006 	smulbb	r0, r0, r6
 80163ec:	b2ad      	uxth	r5, r5
 80163ee:	fb03 0004 	mla	r0, r3, r4, r0
 80163f2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80163f6:	fb17 f706 	smulbb	r7, r7, r6
 80163fa:	b280      	uxth	r0, r0
 80163fc:	1c6b      	adds	r3, r5, #1
 80163fe:	fb02 7204 	mla	r2, r2, r4, r7
 8016402:	b292      	uxth	r2, r2
 8016404:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8016408:	1c43      	adds	r3, r0, #1
 801640a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801640e:	1c50      	adds	r0, r2, #1
 8016410:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8016414:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8016418:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801641c:	0952      	lsrs	r2, r2, #5
 801641e:	432b      	orrs	r3, r5
 8016420:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016424:	4313      	orrs	r3, r2
 8016426:	800b      	strh	r3, [r1, #0]
 8016428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801642c:	4680      	mov	r8, r0
 801642e:	e75c      	b.n	80162ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8016430:	4684      	mov	ip, r0
 8016432:	4680      	mov	r8, r0
 8016434:	e767      	b.n	8016306 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8016436:	4684      	mov	ip, r0
 8016438:	e765      	b.n	8016306 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801643a:	4605      	mov	r5, r0
 801643c:	e776      	b.n	801632c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801643e:	4603      	mov	r3, r0
 8016440:	4605      	mov	r5, r0
 8016442:	e782      	b.n	801634a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8016444:	4603      	mov	r3, r0
 8016446:	e780      	b.n	801634a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08016448 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801644c:	b099      	sub	sp, #100	; 0x64
 801644e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8016452:	9215      	str	r2, [sp, #84]	; 0x54
 8016454:	9309      	str	r3, [sp, #36]	; 0x24
 8016456:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8016458:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801645c:	930d      	str	r3, [sp, #52]	; 0x34
 801645e:	910c      	str	r1, [sp, #48]	; 0x30
 8016460:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8016464:	9016      	str	r0, [sp, #88]	; 0x58
 8016466:	6850      	ldr	r0, [r2, #4]
 8016468:	6812      	ldr	r2, [r2, #0]
 801646a:	fb00 1303 	mla	r3, r0, r3, r1
 801646e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8016472:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016474:	681b      	ldr	r3, [r3, #0]
 8016476:	930b      	str	r3, [sp, #44]	; 0x2c
 8016478:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801647a:	685e      	ldr	r6, [r3, #4]
 801647c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801647e:	43db      	mvns	r3, r3
 8016480:	b2db      	uxtb	r3, r3
 8016482:	3604      	adds	r6, #4
 8016484:	930a      	str	r3, [sp, #40]	; 0x28
 8016486:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016488:	2b00      	cmp	r3, #0
 801648a:	dc03      	bgt.n	8016494 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801648c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801648e:	2b00      	cmp	r3, #0
 8016490:	f340 8225 	ble.w	80168de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8016494:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016496:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801649a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801649e:	1e48      	subs	r0, r1, #1
 80164a0:	1e57      	subs	r7, r2, #1
 80164a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80164a4:	2b00      	cmp	r3, #0
 80164a6:	f340 80e3 	ble.w	8016670 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80164aa:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80164ae:	ea4f 4325 	mov.w	r3, r5, asr #16
 80164b2:	d406      	bmi.n	80164c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80164b4:	4584      	cmp	ip, r0
 80164b6:	da04      	bge.n	80164c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80164b8:	2b00      	cmp	r3, #0
 80164ba:	db02      	blt.n	80164c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80164bc:	42bb      	cmp	r3, r7
 80164be:	f2c0 80d8 	blt.w	8016672 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80164c2:	f11c 0c01 	adds.w	ip, ip, #1
 80164c6:	f100 80c9 	bmi.w	801665c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80164ca:	4561      	cmp	r1, ip
 80164cc:	f2c0 80c6 	blt.w	801665c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80164d0:	3301      	adds	r3, #1
 80164d2:	f100 80c3 	bmi.w	801665c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80164d6:	429a      	cmp	r2, r3
 80164d8:	f2c0 80c0 	blt.w	801665c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80164dc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80164e0:	4647      	mov	r7, r8
 80164e2:	f1bb 0f00 	cmp.w	fp, #0
 80164e6:	f340 80e3 	ble.w	80166b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80164ea:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80164ec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80164ee:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80164f2:	689b      	ldr	r3, [r3, #8]
 80164f4:	ea5f 422a 	movs.w	r2, sl, asr #16
 80164f8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80164fc:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8016500:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016504:	f100 8121 	bmi.w	801674a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8016508:	f103 39ff 	add.w	r9, r3, #4294967295
 801650c:	454a      	cmp	r2, r9
 801650e:	f280 811c 	bge.w	801674a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8016512:	f1bc 0f00 	cmp.w	ip, #0
 8016516:	f2c0 8118 	blt.w	801674a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801651a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801651e:	45cc      	cmp	ip, r9
 8016520:	f280 8113 	bge.w	801674a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8016524:	b21b      	sxth	r3, r3
 8016526:	fb0c 2203 	mla	r2, ip, r3, r2
 801652a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801652c:	eb04 0902 	add.w	r9, r4, r2
 8016530:	5ca2      	ldrb	r2, [r4, r2]
 8016532:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8016536:	2800      	cmp	r0, #0
 8016538:	f000 80fe 	beq.w	8016738 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801653c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8016540:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8016544:	9211      	str	r2, [sp, #68]	; 0x44
 8016546:	b151      	cbz	r1, 801655e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016548:	eb09 0203 	add.w	r2, r9, r3
 801654c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8016550:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016554:	930f      	str	r3, [sp, #60]	; 0x3c
 8016556:	7853      	ldrb	r3, [r2, #1]
 8016558:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801655c:	9312      	str	r3, [sp, #72]	; 0x48
 801655e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016560:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016562:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016566:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801656a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801656e:	ea4c 0c03 	orr.w	ip, ip, r3
 8016572:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016574:	041b      	lsls	r3, r3, #16
 8016576:	fb10 f201 	smulbb	r2, r0, r1
 801657a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801657e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016582:	10d2      	asrs	r2, r2, #3
 8016584:	4323      	orrs	r3, r4
 8016586:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801658a:	4353      	muls	r3, r2
 801658c:	fb09 330c 	mla	r3, r9, ip, r3
 8016590:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8016594:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016598:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801659c:	ea4c 0e0e 	orr.w	lr, ip, lr
 80165a0:	f1c1 0c10 	rsb	ip, r1, #16
 80165a4:	ebac 0c00 	sub.w	ip, ip, r0
 80165a8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80165ac:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80165b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80165b2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80165b4:	0418      	lsls	r0, r3, #16
 80165b6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80165ba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80165be:	4318      	orrs	r0, r3
 80165c0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80165c4:	fb02 c200 	mla	r2, r2, r0, ip
 80165c8:	0d53      	lsrs	r3, r2, #21
 80165ca:	0952      	lsrs	r2, r2, #5
 80165cc:	8838      	ldrh	r0, [r7, #0]
 80165ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80165d2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80165d6:	431a      	orrs	r2, r3
 80165d8:	b292      	uxth	r2, r2
 80165da:	1201      	asrs	r1, r0, #8
 80165dc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80165e0:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80165e4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80165e8:	fb11 f104 	smulbb	r1, r1, r4
 80165ec:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80165f0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80165f4:	00c0      	lsls	r0, r0, #3
 80165f6:	fb0c 1c03 	mla	ip, ip, r3, r1
 80165fa:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80165fe:	10d1      	asrs	r1, r2, #3
 8016600:	b2c0      	uxtb	r0, r0
 8016602:	00d2      	lsls	r2, r2, #3
 8016604:	b2d2      	uxtb	r2, r2
 8016606:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801660a:	fb1e fe04 	smulbb	lr, lr, r4
 801660e:	fb10 f004 	smulbb	r0, r0, r4
 8016612:	fa1f fc8c 	uxth.w	ip, ip
 8016616:	fb01 e103 	mla	r1, r1, r3, lr
 801661a:	fb02 0303 	mla	r3, r2, r3, r0
 801661e:	b29a      	uxth	r2, r3
 8016620:	f10c 0301 	add.w	r3, ip, #1
 8016624:	b289      	uxth	r1, r1
 8016626:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801662a:	1c53      	adds	r3, r2, #1
 801662c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016630:	1c4a      	adds	r2, r1, #1
 8016632:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016636:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801663a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801663e:	0949      	lsrs	r1, r1, #5
 8016640:	ea43 030c 	orr.w	r3, r3, ip
 8016644:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016648:	430b      	orrs	r3, r1
 801664a:	803b      	strh	r3, [r7, #0]
 801664c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801664e:	449a      	add	sl, r3
 8016650:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016652:	3702      	adds	r7, #2
 8016654:	441d      	add	r5, r3
 8016656:	f10b 3bff 	add.w	fp, fp, #4294967295
 801665a:	e742      	b.n	80164e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801665c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801665e:	449a      	add	sl, r3
 8016660:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016662:	441d      	add	r5, r3
 8016664:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016666:	3b01      	subs	r3, #1
 8016668:	9309      	str	r3, [sp, #36]	; 0x24
 801666a:	f108 0802 	add.w	r8, r8, #2
 801666e:	e718      	b.n	80164a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8016670:	d023      	beq.n	80166ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8016672:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016674:	9825      	ldr	r0, [sp, #148]	; 0x94
 8016676:	3b01      	subs	r3, #1
 8016678:	fb00 a003 	mla	r0, r0, r3, sl
 801667c:	1400      	asrs	r0, r0, #16
 801667e:	f53f af2d 	bmi.w	80164dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8016682:	3901      	subs	r1, #1
 8016684:	4288      	cmp	r0, r1
 8016686:	f6bf af29 	bge.w	80164dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801668a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801668c:	fb01 5303 	mla	r3, r1, r3, r5
 8016690:	141b      	asrs	r3, r3, #16
 8016692:	f53f af23 	bmi.w	80164dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8016696:	3a01      	subs	r2, #1
 8016698:	4293      	cmp	r3, r2
 801669a:	f6bf af1f 	bge.w	80164dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801669e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80166a2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80166a6:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80166aa:	f1be 0f00 	cmp.w	lr, #0
 80166ae:	dc6c      	bgt.n	801678a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80166b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80166b2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80166b6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80166ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80166bc:	2b00      	cmp	r3, #0
 80166be:	f340 810e 	ble.w	80168de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80166c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80166c6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80166ca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80166ce:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80166d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80166d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80166d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80166dc:	eef0 6a62 	vmov.f32	s13, s5
 80166e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80166e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80166e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80166ec:	ee16 aa90 	vmov	sl, s13
 80166f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80166f4:	eef0 6a43 	vmov.f32	s13, s6
 80166f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80166fc:	ee12 2a90 	vmov	r2, s5
 8016700:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016704:	fb92 f3f3 	sdiv	r3, r2, r3
 8016708:	ee13 2a10 	vmov	r2, s6
 801670c:	9325      	str	r3, [sp, #148]	; 0x94
 801670e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8016710:	fb92 f3f3 	sdiv	r3, r2, r3
 8016714:	9326      	str	r3, [sp, #152]	; 0x98
 8016716:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016718:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801671a:	3b01      	subs	r3, #1
 801671c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016720:	930c      	str	r3, [sp, #48]	; 0x30
 8016722:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8016724:	bf08      	it	eq
 8016726:	4613      	moveq	r3, r2
 8016728:	ee16 5a90 	vmov	r5, s13
 801672c:	9309      	str	r3, [sp, #36]	; 0x24
 801672e:	eeb0 3a67 	vmov.f32	s6, s15
 8016732:	eef0 2a47 	vmov.f32	s5, s14
 8016736:	e6a6      	b.n	8016486 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8016738:	2900      	cmp	r1, #0
 801673a:	f43f af10 	beq.w	801655e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801673e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8016742:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016746:	930f      	str	r3, [sp, #60]	; 0x3c
 8016748:	e709      	b.n	801655e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801674a:	f112 0901 	adds.w	r9, r2, #1
 801674e:	f53f af7d 	bmi.w	801664c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016752:	454b      	cmp	r3, r9
 8016754:	f6ff af7a 	blt.w	801664c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016758:	f11c 0901 	adds.w	r9, ip, #1
 801675c:	f53f af76 	bmi.w	801664c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016760:	45ce      	cmp	lr, r9
 8016762:	f6ff af73 	blt.w	801664c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016766:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016768:	9202      	str	r2, [sp, #8]
 801676a:	b21b      	sxth	r3, r3
 801676c:	fa0f f28e 	sxth.w	r2, lr
 8016770:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8016774:	e9cd c003 	strd	ip, r0, [sp, #12]
 8016778:	9201      	str	r2, [sp, #4]
 801677a:	9300      	str	r3, [sp, #0]
 801677c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801677e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8016780:	4633      	mov	r3, r6
 8016782:	4639      	mov	r1, r7
 8016784:	f7ff fd8e 	bl	80162a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8016788:	e760      	b.n	801664c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801678a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801678c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801678e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016792:	ea4f 422a 	mov.w	r2, sl, asr #16
 8016796:	1429      	asrs	r1, r5, #16
 8016798:	fb03 2101 	mla	r1, r3, r1, r2
 801679c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801679e:	440a      	add	r2, r1
 80167a0:	5c61      	ldrb	r1, [r4, r1]
 80167a2:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80167a6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80167aa:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80167ae:	f1bc 0f00 	cmp.w	ip, #0
 80167b2:	f000 808c 	beq.w	80168ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 80167b6:	7857      	ldrb	r7, [r2, #1]
 80167b8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80167bc:	9413      	str	r4, [sp, #76]	; 0x4c
 80167be:	b140      	cbz	r0, 80167d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80167c0:	18d7      	adds	r7, r2, r3
 80167c2:	5cd3      	ldrb	r3, [r2, r3]
 80167c4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80167c8:	9310      	str	r3, [sp, #64]	; 0x40
 80167ca:	787b      	ldrb	r3, [r7, #1]
 80167cc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80167d0:	9314      	str	r3, [sp, #80]	; 0x50
 80167d2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80167d4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80167d6:	fb1c f200 	smulbb	r2, ip, r0
 80167da:	041f      	lsls	r7, r3, #16
 80167dc:	10d2      	asrs	r2, r2, #3
 80167de:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80167e2:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80167e6:	431f      	orrs	r7, r3
 80167e8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80167ec:	9317      	str	r3, [sp, #92]	; 0x5c
 80167ee:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80167f0:	041b      	lsls	r3, r3, #16
 80167f2:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80167f6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80167fa:	ea43 030b 	orr.w	r3, r3, fp
 80167fe:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016800:	4353      	muls	r3, r2
 8016802:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016806:	fb04 3707 	mla	r7, r4, r7, r3
 801680a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801680e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8016812:	ea43 0b01 	orr.w	fp, r3, r1
 8016816:	f1c0 0110 	rsb	r1, r0, #16
 801681a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801681c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801681e:	eba1 0c0c 	sub.w	ip, r1, ip
 8016822:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016826:	fb0c 770b 	mla	r7, ip, fp, r7
 801682a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801682e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8016832:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016836:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801683a:	ea4c 0c0b 	orr.w	ip, ip, fp
 801683e:	fb02 770c 	mla	r7, r2, ip, r7
 8016842:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016844:	0d79      	lsrs	r1, r7, #21
 8016846:	097f      	lsrs	r7, r7, #5
 8016848:	8812      	ldrh	r2, [r2, #0]
 801684a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801684e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016852:	430f      	orrs	r7, r1
 8016854:	b2bb      	uxth	r3, r7
 8016856:	1211      	asrs	r1, r2, #8
 8016858:	1218      	asrs	r0, r3, #8
 801685a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801685e:	fb11 f104 	smulbb	r1, r1, r4
 8016862:	10d7      	asrs	r7, r2, #3
 8016864:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016868:	00d2      	lsls	r2, r2, #3
 801686a:	fb00 1009 	mla	r0, r0, r9, r1
 801686e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016872:	10d9      	asrs	r1, r3, #3
 8016874:	b2d2      	uxtb	r2, r2
 8016876:	00db      	lsls	r3, r3, #3
 8016878:	fb17 f704 	smulbb	r7, r7, r4
 801687c:	fb12 f204 	smulbb	r2, r2, r4
 8016880:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016884:	b2db      	uxtb	r3, r3
 8016886:	b280      	uxth	r0, r0
 8016888:	fb01 7109 	mla	r1, r1, r9, r7
 801688c:	fb03 2309 	mla	r3, r3, r9, r2
 8016890:	b29b      	uxth	r3, r3
 8016892:	b289      	uxth	r1, r1
 8016894:	1c42      	adds	r2, r0, #1
 8016896:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801689a:	1c4f      	adds	r7, r1, #1
 801689c:	1c5a      	adds	r2, r3, #1
 801689e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80168a2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80168a6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80168aa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80168ae:	0949      	lsrs	r1, r1, #5
 80168b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80168b2:	4310      	orrs	r0, r2
 80168b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80168b8:	4308      	orrs	r0, r1
 80168ba:	f823 0b02 	strh.w	r0, [r3], #2
 80168be:	930e      	str	r3, [sp, #56]	; 0x38
 80168c0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80168c2:	449a      	add	sl, r3
 80168c4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80168c6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80168ca:	441d      	add	r5, r3
 80168cc:	e6ed      	b.n	80166aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80168ce:	2800      	cmp	r0, #0
 80168d0:	f43f af7f 	beq.w	80167d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80168d4:	5cd3      	ldrb	r3, [r2, r3]
 80168d6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80168da:	9310      	str	r3, [sp, #64]	; 0x40
 80168dc:	e779      	b.n	80167d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80168de:	b019      	add	sp, #100	; 0x64
 80168e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080168e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80168e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80168e8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 80168ec:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80168f0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 80168f4:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80168f8:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80168fc:	8808      	ldrh	r0, [r1, #0]
 80168fe:	fb08 470e 	mla	r7, r8, lr, r4
 8016902:	f1b8 0f00 	cmp.w	r8, #0
 8016906:	eb02 0907 	add.w	r9, r2, r7
 801690a:	db67      	blt.n	80169dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801690c:	45c2      	cmp	sl, r8
 801690e:	dd65      	ble.n	80169dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8016910:	2c00      	cmp	r4, #0
 8016912:	db61      	blt.n	80169d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8016914:	45a6      	cmp	lr, r4
 8016916:	dd5f      	ble.n	80169d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8016918:	5dd2      	ldrb	r2, [r2, r7]
 801691a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801691e:	1c62      	adds	r2, r4, #1
 8016920:	d45f      	bmi.n	80169e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8016922:	4596      	cmp	lr, r2
 8016924:	dd5d      	ble.n	80169e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8016926:	2d00      	cmp	r5, #0
 8016928:	d05b      	beq.n	80169e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801692a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801692e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8016932:	f118 0801 	adds.w	r8, r8, #1
 8016936:	d458      	bmi.n	80169ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8016938:	45c2      	cmp	sl, r8
 801693a:	dd56      	ble.n	80169ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801693c:	2e00      	cmp	r6, #0
 801693e:	d054      	beq.n	80169ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8016940:	2c00      	cmp	r4, #0
 8016942:	db50      	blt.n	80169e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8016944:	45a6      	cmp	lr, r4
 8016946:	dd4e      	ble.n	80169e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8016948:	f819 200e 	ldrb.w	r2, [r9, lr]
 801694c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8016950:	3401      	adds	r4, #1
 8016952:	d407      	bmi.n	8016964 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8016954:	45a6      	cmp	lr, r4
 8016956:	dd05      	ble.n	8016964 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8016958:	b125      	cbz	r5, 8016964 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801695a:	44ce      	add	lr, r9
 801695c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8016960:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8016964:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8016968:	fb15 f406 	smulbb	r4, r5, r6
 801696c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016970:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8016974:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016978:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801697c:	ea43 0c0c 	orr.w	ip, r3, ip
 8016980:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016984:	f1c6 0310 	rsb	r3, r6, #16
 8016988:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801698c:	1b5b      	subs	r3, r3, r5
 801698e:	ea4e 0707 	orr.w	r7, lr, r7
 8016992:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8016996:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801699a:	437d      	muls	r5, r7
 801699c:	fb03 5c0c 	mla	ip, r3, ip, r5
 80169a0:	0403      	lsls	r3, r0, #16
 80169a2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80169a6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80169aa:	4318      	orrs	r0, r3
 80169ac:	0413      	lsls	r3, r2, #16
 80169ae:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80169b2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80169b6:	4313      	orrs	r3, r2
 80169b8:	fb04 c000 	mla	r0, r4, r0, ip
 80169bc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80169c0:	fb06 0003 	mla	r0, r6, r3, r0
 80169c4:	0d43      	lsrs	r3, r0, #21
 80169c6:	0940      	lsrs	r0, r0, #5
 80169c8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80169cc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80169d0:	4318      	orrs	r0, r3
 80169d2:	8008      	strh	r0, [r1, #0]
 80169d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80169d8:	4684      	mov	ip, r0
 80169da:	e7a0      	b.n	801691e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80169dc:	4607      	mov	r7, r0
 80169de:	4684      	mov	ip, r0
 80169e0:	e7a7      	b.n	8016932 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80169e2:	4607      	mov	r7, r0
 80169e4:	e7a5      	b.n	8016932 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80169e6:	4602      	mov	r2, r0
 80169e8:	e7b2      	b.n	8016950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80169ea:	4602      	mov	r2, r0
 80169ec:	e7ba      	b.n	8016964 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080169ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80169ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80169f2:	b093      	sub	sp, #76	; 0x4c
 80169f4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80169f8:	920f      	str	r2, [sp, #60]	; 0x3c
 80169fa:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80169fc:	9108      	str	r1, [sp, #32]
 80169fe:	9306      	str	r3, [sp, #24]
 8016a00:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8016a04:	9010      	str	r0, [sp, #64]	; 0x40
 8016a06:	6850      	ldr	r0, [r2, #4]
 8016a08:	6812      	ldr	r2, [r2, #0]
 8016a0a:	fb00 1303 	mla	r3, r0, r3, r1
 8016a0e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8016a12:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016a14:	681b      	ldr	r3, [r3, #0]
 8016a16:	9307      	str	r3, [sp, #28]
 8016a18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016a1a:	685f      	ldr	r7, [r3, #4]
 8016a1c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016a20:	3704      	adds	r7, #4
 8016a22:	9b08      	ldr	r3, [sp, #32]
 8016a24:	2b00      	cmp	r3, #0
 8016a26:	dc03      	bgt.n	8016a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8016a28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016a2a:	2b00      	cmp	r3, #0
 8016a2c:	f340 81b2 	ble.w	8016d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8016a30:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016a32:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016a36:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016a3a:	1e48      	subs	r0, r1, #1
 8016a3c:	f102 3cff 	add.w	ip, r2, #4294967295
 8016a40:	9b06      	ldr	r3, [sp, #24]
 8016a42:	2b00      	cmp	r3, #0
 8016a44:	f340 80a9 	ble.w	8016b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8016a48:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8016a4c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8016a50:	d406      	bmi.n	8016a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016a52:	4586      	cmp	lr, r0
 8016a54:	da04      	bge.n	8016a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016a56:	2b00      	cmp	r3, #0
 8016a58:	db02      	blt.n	8016a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016a5a:	4563      	cmp	r3, ip
 8016a5c:	f2c0 809e 	blt.w	8016b9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8016a60:	f11e 0e01 	adds.w	lr, lr, #1
 8016a64:	f100 808f 	bmi.w	8016b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016a68:	4571      	cmp	r1, lr
 8016a6a:	f2c0 808c 	blt.w	8016b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016a6e:	3301      	adds	r3, #1
 8016a70:	f100 8089 	bmi.w	8016b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016a74:	429a      	cmp	r2, r3
 8016a76:	f2c0 8086 	blt.w	8016b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016a7a:	f8dd b018 	ldr.w	fp, [sp, #24]
 8016a7e:	46c8      	mov	r8, r9
 8016a80:	f1bb 0f00 	cmp.w	fp, #0
 8016a84:	f340 80a6 	ble.w	8016bd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8016a88:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8016a8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016a8c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8016a90:	689b      	ldr	r3, [r3, #8]
 8016a92:	1422      	asrs	r2, r4, #16
 8016a94:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8016a98:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8016a9c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8016aa0:	f100 80e3 	bmi.w	8016c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016aa4:	f103 3aff 	add.w	sl, r3, #4294967295
 8016aa8:	4552      	cmp	r2, sl
 8016aaa:	f280 80de 	bge.w	8016c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016aae:	f1bc 0f00 	cmp.w	ip, #0
 8016ab2:	f2c0 80da 	blt.w	8016c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016ab6:	f10e 3aff 	add.w	sl, lr, #4294967295
 8016aba:	45d4      	cmp	ip, sl
 8016abc:	f280 80d5 	bge.w	8016c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016ac0:	b21b      	sxth	r3, r3
 8016ac2:	fb0c 2203 	mla	r2, ip, r3, r2
 8016ac6:	9d07      	ldr	r5, [sp, #28]
 8016ac8:	eb05 0a02 	add.w	sl, r5, r2
 8016acc:	5caa      	ldrb	r2, [r5, r2]
 8016ace:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8016ad2:	2800      	cmp	r0, #0
 8016ad4:	f000 80c0 	beq.w	8016c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8016ad8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8016adc:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8016ae0:	920b      	str	r2, [sp, #44]	; 0x2c
 8016ae2:	b151      	cbz	r1, 8016afa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8016ae4:	eb0a 0203 	add.w	r2, sl, r3
 8016ae8:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8016aec:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016af0:	9309      	str	r3, [sp, #36]	; 0x24
 8016af2:	7853      	ldrb	r3, [r2, #1]
 8016af4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016af8:	930c      	str	r3, [sp, #48]	; 0x30
 8016afa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016afc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8016afe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016b02:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016b06:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016b0a:	ea4c 0c03 	orr.w	ip, ip, r3
 8016b0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016b10:	041b      	lsls	r3, r3, #16
 8016b12:	fb10 f201 	smulbb	r2, r0, r1
 8016b16:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016b1a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8016b1e:	10d2      	asrs	r2, r2, #3
 8016b20:	432b      	orrs	r3, r5
 8016b22:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8016b26:	4353      	muls	r3, r2
 8016b28:	fb0a 330c 	mla	r3, sl, ip, r3
 8016b2c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8016b30:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016b34:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016b38:	ea4c 0e0e 	orr.w	lr, ip, lr
 8016b3c:	f1c1 0c10 	rsb	ip, r1, #16
 8016b40:	ebac 0c00 	sub.w	ip, ip, r0
 8016b44:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016b48:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8016b4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016b4e:	0418      	lsls	r0, r3, #16
 8016b50:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016b54:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016b58:	4318      	orrs	r0, r3
 8016b5a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8016b5e:	fb02 c200 	mla	r2, r2, r0, ip
 8016b62:	0d53      	lsrs	r3, r2, #21
 8016b64:	0952      	lsrs	r2, r2, #5
 8016b66:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016b6a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016b6e:	431a      	orrs	r2, r3
 8016b70:	f8a8 2000 	strh.w	r2, [r8]
 8016b74:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8016b76:	441c      	add	r4, r3
 8016b78:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016b7a:	f108 0802 	add.w	r8, r8, #2
 8016b7e:	441e      	add	r6, r3
 8016b80:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016b84:	e77c      	b.n	8016a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016b86:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8016b88:	441c      	add	r4, r3
 8016b8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016b8c:	441e      	add	r6, r3
 8016b8e:	9b06      	ldr	r3, [sp, #24]
 8016b90:	3b01      	subs	r3, #1
 8016b92:	9306      	str	r3, [sp, #24]
 8016b94:	f109 0902 	add.w	r9, r9, #2
 8016b98:	e752      	b.n	8016a40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016b9a:	d020      	beq.n	8016bde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016b9c:	9b06      	ldr	r3, [sp, #24]
 8016b9e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8016ba0:	3b01      	subs	r3, #1
 8016ba2:	fb00 4003 	mla	r0, r0, r3, r4
 8016ba6:	1400      	asrs	r0, r0, #16
 8016ba8:	f53f af67 	bmi.w	8016a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016bac:	3901      	subs	r1, #1
 8016bae:	4288      	cmp	r0, r1
 8016bb0:	f6bf af63 	bge.w	8016a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016bb4:	9920      	ldr	r1, [sp, #128]	; 0x80
 8016bb6:	fb01 6303 	mla	r3, r1, r3, r6
 8016bba:	141b      	asrs	r3, r3, #16
 8016bbc:	f53f af5d 	bmi.w	8016a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016bc0:	3a01      	subs	r2, #1
 8016bc2:	4293      	cmp	r3, r2
 8016bc4:	f6bf af59 	bge.w	8016a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016bc8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8016bcc:	46ca      	mov	sl, r9
 8016bce:	f1b8 0f00 	cmp.w	r8, #0
 8016bd2:	dc67      	bgt.n	8016ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8016bd4:	9b06      	ldr	r3, [sp, #24]
 8016bd6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8016bda:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8016bde:	9b08      	ldr	r3, [sp, #32]
 8016be0:	2b00      	cmp	r3, #0
 8016be2:	f340 80d7 	ble.w	8016d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8016be6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016bea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016bee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016bf2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016bf4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016bf8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016bfc:	eeb0 6a62 	vmov.f32	s12, s5
 8016c00:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016c04:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016c08:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016c0c:	ee16 4a10 	vmov	r4, s12
 8016c10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016c14:	eeb0 6a43 	vmov.f32	s12, s6
 8016c18:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016c1c:	ee12 2a90 	vmov	r2, s5
 8016c20:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016c24:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c28:	ee13 2a10 	vmov	r2, s6
 8016c2c:	931f      	str	r3, [sp, #124]	; 0x7c
 8016c2e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016c30:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c34:	9320      	str	r3, [sp, #128]	; 0x80
 8016c36:	9b08      	ldr	r3, [sp, #32]
 8016c38:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016c3a:	3b01      	subs	r3, #1
 8016c3c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016c40:	9308      	str	r3, [sp, #32]
 8016c42:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016c44:	bf08      	it	eq
 8016c46:	4613      	moveq	r3, r2
 8016c48:	ee16 6a10 	vmov	r6, s12
 8016c4c:	9306      	str	r3, [sp, #24]
 8016c4e:	eeb0 3a67 	vmov.f32	s6, s15
 8016c52:	eef0 2a47 	vmov.f32	s5, s14
 8016c56:	e6e4      	b.n	8016a22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8016c58:	2900      	cmp	r1, #0
 8016c5a:	f43f af4e 	beq.w	8016afa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8016c5e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8016c62:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016c66:	9309      	str	r3, [sp, #36]	; 0x24
 8016c68:	e747      	b.n	8016afa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8016c6a:	f112 0a01 	adds.w	sl, r2, #1
 8016c6e:	d481      	bmi.n	8016b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016c70:	4553      	cmp	r3, sl
 8016c72:	f6ff af7f 	blt.w	8016b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016c76:	f11c 0a01 	adds.w	sl, ip, #1
 8016c7a:	f53f af7b 	bmi.w	8016b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016c7e:	45d6      	cmp	lr, sl
 8016c80:	f6ff af78 	blt.w	8016b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016c84:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8016c88:	b21b      	sxth	r3, r3
 8016c8a:	fa0f f28e 	sxth.w	r2, lr
 8016c8e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8016c92:	9201      	str	r2, [sp, #4]
 8016c94:	9300      	str	r3, [sp, #0]
 8016c96:	9a07      	ldr	r2, [sp, #28]
 8016c98:	9810      	ldr	r0, [sp, #64]	; 0x40
 8016c9a:	463b      	mov	r3, r7
 8016c9c:	4641      	mov	r1, r8
 8016c9e:	f7ff fe21 	bl	80168e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8016ca2:	e767      	b.n	8016b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016ca4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016ca6:	9d07      	ldr	r5, [sp, #28]
 8016ca8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016cac:	1422      	asrs	r2, r4, #16
 8016cae:	1431      	asrs	r1, r6, #16
 8016cb0:	fb03 2101 	mla	r1, r3, r1, r2
 8016cb4:	9a07      	ldr	r2, [sp, #28]
 8016cb6:	440a      	add	r2, r1
 8016cb8:	5c69      	ldrb	r1, [r5, r1]
 8016cba:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8016cbe:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8016cc2:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8016cc6:	f1be 0f00 	cmp.w	lr, #0
 8016cca:	d05c      	beq.n	8016d86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8016ccc:	f892 c001 	ldrb.w	ip, [r2, #1]
 8016cd0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8016cd4:	950d      	str	r5, [sp, #52]	; 0x34
 8016cd6:	b150      	cbz	r0, 8016cee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8016cd8:	eb02 0c03 	add.w	ip, r2, r3
 8016cdc:	5cd3      	ldrb	r3, [r2, r3]
 8016cde:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016ce2:	930a      	str	r3, [sp, #40]	; 0x28
 8016ce4:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8016ce8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016cec:	930e      	str	r3, [sp, #56]	; 0x38
 8016cee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016cf0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8016cf2:	fb1e f200 	smulbb	r2, lr, r0
 8016cf6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016cfa:	10d2      	asrs	r2, r2, #3
 8016cfc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016d00:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016d04:	ea4c 0c03 	orr.w	ip, ip, r3
 8016d08:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8016d0c:	9311      	str	r3, [sp, #68]	; 0x44
 8016d0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016d10:	041b      	lsls	r3, r3, #16
 8016d12:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8016d16:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016d1a:	ea43 030b 	orr.w	r3, r3, fp
 8016d1e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016d20:	4353      	muls	r3, r2
 8016d22:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016d26:	fb05 3c0c 	mla	ip, r5, ip, r3
 8016d2a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016d2e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8016d32:	ea43 0b01 	orr.w	fp, r3, r1
 8016d36:	f1c0 0110 	rsb	r1, r0, #16
 8016d3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016d3c:	eba1 0e0e 	sub.w	lr, r1, lr
 8016d40:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8016d44:	fb0e cc0b 	mla	ip, lr, fp, ip
 8016d48:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016d4c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8016d50:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016d54:	ea4b 0e0e 	orr.w	lr, fp, lr
 8016d58:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8016d5c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016d60:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8016d64:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8016d68:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016d6c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016d70:	ea43 0c0c 	orr.w	ip, r3, ip
 8016d74:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8016d76:	f82a cb02 	strh.w	ip, [sl], #2
 8016d7a:	441c      	add	r4, r3
 8016d7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016d7e:	f108 38ff 	add.w	r8, r8, #4294967295
 8016d82:	441e      	add	r6, r3
 8016d84:	e723      	b.n	8016bce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8016d86:	2800      	cmp	r0, #0
 8016d88:	d0b1      	beq.n	8016cee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8016d8a:	5cd3      	ldrb	r3, [r2, r3]
 8016d8c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016d90:	930a      	str	r3, [sp, #40]	; 0x28
 8016d92:	e7ac      	b.n	8016cee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8016d94:	b013      	add	sp, #76	; 0x4c
 8016d96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016d9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8016d9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d9e:	880d      	ldrh	r5, [r1, #0]
 8016da0:	b087      	sub	sp, #28
 8016da2:	10ef      	asrs	r7, r5, #3
 8016da4:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8016da8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016dac:	00ed      	lsls	r5, r5, #3
 8016dae:	9701      	str	r7, [sp, #4]
 8016db0:	b2ed      	uxtb	r5, r5
 8016db2:	9502      	str	r5, [sp, #8]
 8016db4:	9d01      	ldr	r5, [sp, #4]
 8016db6:	9103      	str	r1, [sp, #12]
 8016db8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8016dbc:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8016dc0:	9902      	ldr	r1, [sp, #8]
 8016dc2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8016dc6:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8016dca:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8016dce:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8016dd2:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8016dd6:	022d      	lsls	r5, r5, #8
 8016dd8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8016ddc:	fb06 0709 	mla	r7, r6, r9, r0
 8016de0:	430d      	orrs	r5, r1
 8016de2:	2e00      	cmp	r6, #0
 8016de4:	eb02 0c07 	add.w	ip, r2, r7
 8016de8:	9505      	str	r5, [sp, #20]
 8016dea:	f2c0 80b6 	blt.w	8016f5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8016dee:	45b3      	cmp	fp, r6
 8016df0:	f340 80b3 	ble.w	8016f5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8016df4:	2800      	cmp	r0, #0
 8016df6:	f2c0 80ae 	blt.w	8016f56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8016dfa:	4581      	cmp	r9, r0
 8016dfc:	f340 80ab 	ble.w	8016f56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8016e00:	5dd7      	ldrb	r7, [r2, r7]
 8016e02:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016e06:	441f      	add	r7, r3
 8016e08:	1c42      	adds	r2, r0, #1
 8016e0a:	f100 80a9 	bmi.w	8016f60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8016e0e:	4591      	cmp	r9, r2
 8016e10:	f340 80a6 	ble.w	8016f60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8016e14:	2c00      	cmp	r4, #0
 8016e16:	f000 80a3 	beq.w	8016f60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8016e1a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8016e1e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016e22:	441d      	add	r5, r3
 8016e24:	3601      	adds	r6, #1
 8016e26:	f100 809f 	bmi.w	8016f68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8016e2a:	45b3      	cmp	fp, r6
 8016e2c:	f340 809c 	ble.w	8016f68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8016e30:	f1be 0f00 	cmp.w	lr, #0
 8016e34:	f000 8098 	beq.w	8016f68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8016e38:	2800      	cmp	r0, #0
 8016e3a:	f2c0 8093 	blt.w	8016f64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8016e3e:	4581      	cmp	r9, r0
 8016e40:	f340 8090 	ble.w	8016f64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8016e44:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8016e48:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016e4c:	441e      	add	r6, r3
 8016e4e:	3001      	adds	r0, #1
 8016e50:	f100 808d 	bmi.w	8016f6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8016e54:	4581      	cmp	r9, r0
 8016e56:	f340 808a 	ble.w	8016f6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8016e5a:	2c00      	cmp	r4, #0
 8016e5c:	f000 8087 	beq.w	8016f6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8016e60:	44e1      	add	r9, ip
 8016e62:	f899 2001 	ldrb.w	r2, [r9, #1]
 8016e66:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016e6a:	4413      	add	r3, r2
 8016e6c:	b2a4      	uxth	r4, r4
 8016e6e:	fa1f fe8e 	uxth.w	lr, lr
 8016e72:	fb04 fb0e 	mul.w	fp, r4, lr
 8016e76:	0124      	lsls	r4, r4, #4
 8016e78:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8016e7c:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8016e80:	eba4 040b 	sub.w	r4, r4, fp
 8016e84:	fa1f f08e 	uxth.w	r0, lr
 8016e88:	b2a2      	uxth	r2, r4
 8016e8a:	78ac      	ldrb	r4, [r5, #2]
 8016e8c:	f897 c002 	ldrb.w	ip, [r7, #2]
 8016e90:	9901      	ldr	r1, [sp, #4]
 8016e92:	eba9 0900 	sub.w	r9, r9, r0
 8016e96:	fa1f f989 	uxth.w	r9, r9
 8016e9a:	4354      	muls	r4, r2
 8016e9c:	fb09 440c 	mla	r4, r9, ip, r4
 8016ea0:	f896 c002 	ldrb.w	ip, [r6, #2]
 8016ea4:	fb00 440c 	mla	r4, r0, ip, r4
 8016ea8:	f893 c002 	ldrb.w	ip, [r3, #2]
 8016eac:	fa1f fe88 	uxth.w	lr, r8
 8016eb0:	ea6f 0808 	mvn.w	r8, r8
 8016eb4:	fa5f f888 	uxtb.w	r8, r8
 8016eb8:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8016ebc:	fb1a fa08 	smulbb	sl, sl, r8
 8016ec0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8016ec4:	fb0c ac0e 	mla	ip, ip, lr, sl
 8016ec8:	f895 a001 	ldrb.w	sl, [r5, #1]
 8016ecc:	787c      	ldrb	r4, [r7, #1]
 8016ece:	782d      	ldrb	r5, [r5, #0]
 8016ed0:	783f      	ldrb	r7, [r7, #0]
 8016ed2:	fb02 fa0a 	mul.w	sl, r2, sl
 8016ed6:	fb09 aa04 	mla	sl, r9, r4, sl
 8016eda:	7874      	ldrb	r4, [r6, #1]
 8016edc:	436a      	muls	r2, r5
 8016ede:	7835      	ldrb	r5, [r6, #0]
 8016ee0:	fb00 aa04 	mla	sl, r0, r4, sl
 8016ee4:	fb09 2207 	mla	r2, r9, r7, r2
 8016ee8:	785c      	ldrb	r4, [r3, #1]
 8016eea:	781b      	ldrb	r3, [r3, #0]
 8016eec:	fb00 2005 	mla	r0, r0, r5, r2
 8016ef0:	fb0b a404 	mla	r4, fp, r4, sl
 8016ef4:	fb0b 0b03 	mla	fp, fp, r3, r0
 8016ef8:	9b02      	ldr	r3, [sp, #8]
 8016efa:	fb11 fa08 	smulbb	sl, r1, r8
 8016efe:	fa1f fc8c 	uxth.w	ip, ip
 8016f02:	fb13 f808 	smulbb	r8, r3, r8
 8016f06:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8016f0a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8016f0e:	fb04 a40e 	mla	r4, r4, lr, sl
 8016f12:	f10c 0301 	add.w	r3, ip, #1
 8016f16:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8016f1a:	fa1f fe8e 	uxth.w	lr, lr
 8016f1e:	b2a4      	uxth	r4, r4
 8016f20:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8016f24:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8016f28:	f104 0a01 	add.w	sl, r4, #1
 8016f2c:	f10e 0c01 	add.w	ip, lr, #1
 8016f30:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8016f34:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8016f38:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016f3c:	0964      	lsrs	r4, r4, #5
 8016f3e:	ea4c 0c03 	orr.w	ip, ip, r3
 8016f42:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8016f46:	9b03      	ldr	r3, [sp, #12]
 8016f48:	ea4c 0c04 	orr.w	ip, ip, r4
 8016f4c:	f8a3 c000 	strh.w	ip, [r3]
 8016f50:	b007      	add	sp, #28
 8016f52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f56:	af05      	add	r7, sp, #20
 8016f58:	e756      	b.n	8016e08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8016f5a:	ad05      	add	r5, sp, #20
 8016f5c:	462f      	mov	r7, r5
 8016f5e:	e761      	b.n	8016e24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8016f60:	ad05      	add	r5, sp, #20
 8016f62:	e75f      	b.n	8016e24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8016f64:	ae05      	add	r6, sp, #20
 8016f66:	e772      	b.n	8016e4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8016f68:	ab05      	add	r3, sp, #20
 8016f6a:	461e      	mov	r6, r3
 8016f6c:	e77e      	b.n	8016e6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8016f6e:	ab05      	add	r3, sp, #20
 8016f70:	e77c      	b.n	8016e6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08016f72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016f72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f76:	b095      	sub	sp, #84	; 0x54
 8016f78:	9212      	str	r2, [sp, #72]	; 0x48
 8016f7a:	9309      	str	r3, [sp, #36]	; 0x24
 8016f7c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8016f7e:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8016f82:	930f      	str	r3, [sp, #60]	; 0x3c
 8016f84:	910e      	str	r1, [sp, #56]	; 0x38
 8016f86:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8016f8a:	9013      	str	r0, [sp, #76]	; 0x4c
 8016f8c:	6850      	ldr	r0, [r2, #4]
 8016f8e:	6812      	ldr	r2, [r2, #0]
 8016f90:	fb00 1303 	mla	r3, r0, r3, r1
 8016f94:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016f98:	930a      	str	r3, [sp, #40]	; 0x28
 8016f9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016f9c:	681b      	ldr	r3, [r3, #0]
 8016f9e:	930d      	str	r3, [sp, #52]	; 0x34
 8016fa0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016fa2:	685c      	ldr	r4, [r3, #4]
 8016fa4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016fa6:	43db      	mvns	r3, r3
 8016fa8:	b2db      	uxtb	r3, r3
 8016faa:	3404      	adds	r4, #4
 8016fac:	930b      	str	r3, [sp, #44]	; 0x2c
 8016fae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016fb0:	2b00      	cmp	r3, #0
 8016fb2:	dc03      	bgt.n	8016fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8016fb4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016fb6:	2b00      	cmp	r3, #0
 8016fb8:	f340 8255 	ble.w	8017466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8016fbc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016fbe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016fc2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016fc6:	1e48      	subs	r0, r1, #1
 8016fc8:	1e55      	subs	r5, r2, #1
 8016fca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016fcc:	2b00      	cmp	r3, #0
 8016fce:	f340 80f9 	ble.w	80171c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8016fd2:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8016fd4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016fd6:	1436      	asrs	r6, r6, #16
 8016fd8:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016fdc:	d406      	bmi.n	8016fec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016fde:	4286      	cmp	r6, r0
 8016fe0:	da04      	bge.n	8016fec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016fe2:	2b00      	cmp	r3, #0
 8016fe4:	db02      	blt.n	8016fec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016fe6:	42ab      	cmp	r3, r5
 8016fe8:	f2c0 80ed 	blt.w	80171c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8016fec:	3601      	adds	r6, #1
 8016fee:	f100 80da 	bmi.w	80171a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016ff2:	42b1      	cmp	r1, r6
 8016ff4:	f2c0 80d7 	blt.w	80171a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016ff8:	3301      	adds	r3, #1
 8016ffa:	f100 80d4 	bmi.w	80171a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016ffe:	429a      	cmp	r2, r3
 8017000:	f2c0 80d1 	blt.w	80171a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8017004:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017006:	9311      	str	r3, [sp, #68]	; 0x44
 8017008:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801700a:	930c      	str	r3, [sp, #48]	; 0x30
 801700c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801700e:	2b00      	cmp	r3, #0
 8017010:	f340 80fa 	ble.w	8017208 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8017014:	9826      	ldr	r0, [sp, #152]	; 0x98
 8017016:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017018:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801701a:	68c6      	ldr	r6, [r0, #12]
 801701c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801701e:	141d      	asrs	r5, r3, #16
 8017020:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8017024:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8017026:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8017028:	1400      	asrs	r0, r0, #16
 801702a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801702e:	6892      	ldr	r2, [r2, #8]
 8017030:	f100 813e 	bmi.w	80172b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8017034:	1e57      	subs	r7, r2, #1
 8017036:	42b8      	cmp	r0, r7
 8017038:	f280 813a 	bge.w	80172b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801703c:	2d00      	cmp	r5, #0
 801703e:	f2c0 8137 	blt.w	80172b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8017042:	1e77      	subs	r7, r6, #1
 8017044:	42bd      	cmp	r5, r7
 8017046:	f280 8133 	bge.w	80172b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801704a:	b212      	sxth	r2, r2
 801704c:	fb05 0002 	mla	r0, r5, r2, r0
 8017050:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8017052:	f815 a000 	ldrb.w	sl, [r5, r0]
 8017056:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801705a:	182e      	adds	r6, r5, r0
 801705c:	eb04 050a 	add.w	r5, r4, sl
 8017060:	2b00      	cmp	r3, #0
 8017062:	f000 8117 	beq.w	8017294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8017066:	f896 c001 	ldrb.w	ip, [r6, #1]
 801706a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801706e:	44a4      	add	ip, r4
 8017070:	2900      	cmp	r1, #0
 8017072:	f000 8117 	beq.w	80172a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8017076:	18b0      	adds	r0, r6, r2
 8017078:	5cb2      	ldrb	r2, [r6, r2]
 801707a:	7840      	ldrb	r0, [r0, #1]
 801707c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017080:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8017084:	4422      	add	r2, r4
 8017086:	4420      	add	r0, r4
 8017088:	b29b      	uxth	r3, r3
 801708a:	b289      	uxth	r1, r1
 801708c:	fb03 f901 	mul.w	r9, r3, r1
 8017090:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017094:	011b      	lsls	r3, r3, #4
 8017096:	b289      	uxth	r1, r1
 8017098:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801709c:	f895 b002 	ldrb.w	fp, [r5, #2]
 80170a0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80170a2:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80170a6:	f8b6 e000 	ldrh.w	lr, [r6]
 80170aa:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80170ae:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80170b2:	eba3 0309 	sub.w	r3, r3, r9
 80170b6:	b29b      	uxth	r3, r3
 80170b8:	eba8 0801 	sub.w	r8, r8, r1
 80170bc:	fa1f f888 	uxth.w	r8, r8
 80170c0:	435f      	muls	r7, r3
 80170c2:	fb08 770b 	mla	r7, r8, fp, r7
 80170c6:	f892 b002 	ldrb.w	fp, [r2, #2]
 80170ca:	9310      	str	r3, [sp, #64]	; 0x40
 80170cc:	fb01 770b 	mla	r7, r1, fp, r7
 80170d0:	f890 b002 	ldrb.w	fp, [r0, #2]
 80170d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80170d6:	fb09 770b 	mla	r7, r9, fp, r7
 80170da:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80170de:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80170e2:	fb1b fb03 	smulbb	fp, fp, r3
 80170e6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80170ea:	fb07 b706 	mla	r7, r7, r6, fp
 80170ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80170f0:	f895 b001 	ldrb.w	fp, [r5, #1]
 80170f4:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80170f8:	f89c c000 	ldrb.w	ip, [ip]
 80170fc:	435d      	muls	r5, r3
 80170fe:	fb08 550b 	mla	r5, r8, fp, r5
 8017102:	f892 b001 	ldrb.w	fp, [r2, #1]
 8017106:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017108:	fb01 550b 	mla	r5, r1, fp, r5
 801710c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8017110:	fb09 550b 	mla	r5, r9, fp, r5
 8017114:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8017118:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801711c:	fb1b fb03 	smulbb	fp, fp, r3
 8017120:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017122:	fb03 f30c 	mul.w	r3, r3, ip
 8017126:	f892 c000 	ldrb.w	ip, [r2]
 801712a:	fb08 330a 	mla	r3, r8, sl, r3
 801712e:	fb01 330c 	mla	r3, r1, ip, r3
 8017132:	f890 c000 	ldrb.w	ip, [r0]
 8017136:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801713a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801713e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017140:	fa5f fe8e 	uxtb.w	lr, lr
 8017144:	b2bf      	uxth	r7, r7
 8017146:	fb1e fe03 	smulbb	lr, lr, r3
 801714a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801714e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8017152:	fb05 b506 	mla	r5, r5, r6, fp
 8017156:	1c7b      	adds	r3, r7, #1
 8017158:	fb0c e606 	mla	r6, ip, r6, lr
 801715c:	b2ad      	uxth	r5, r5
 801715e:	b2b6      	uxth	r6, r6
 8017160:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8017164:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8017168:	f105 0b01 	add.w	fp, r5, #1
 801716c:	1c77      	adds	r7, r6, #1
 801716e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8017172:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8017176:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801717a:	096d      	lsrs	r5, r5, #5
 801717c:	431f      	orrs	r7, r3
 801717e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017182:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017184:	433d      	orrs	r5, r7
 8017186:	801d      	strh	r5, [r3, #0]
 8017188:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801718a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801718c:	3302      	adds	r3, #2
 801718e:	930c      	str	r3, [sp, #48]	; 0x30
 8017190:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8017192:	4413      	add	r3, r2
 8017194:	931f      	str	r3, [sp, #124]	; 0x7c
 8017196:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8017198:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801719a:	4413      	add	r3, r2
 801719c:	9320      	str	r3, [sp, #128]	; 0x80
 801719e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80171a0:	3b01      	subs	r3, #1
 80171a2:	9311      	str	r3, [sp, #68]	; 0x44
 80171a4:	e732      	b.n	801700c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80171a6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80171a8:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80171aa:	4433      	add	r3, r6
 80171ac:	931f      	str	r3, [sp, #124]	; 0x7c
 80171ae:	9e22      	ldr	r6, [sp, #136]	; 0x88
 80171b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80171b2:	4433      	add	r3, r6
 80171b4:	9320      	str	r3, [sp, #128]	; 0x80
 80171b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80171b8:	3b01      	subs	r3, #1
 80171ba:	9309      	str	r3, [sp, #36]	; 0x24
 80171bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80171be:	3302      	adds	r3, #2
 80171c0:	930a      	str	r3, [sp, #40]	; 0x28
 80171c2:	e702      	b.n	8016fca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80171c4:	d027      	beq.n	8017216 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80171c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80171c8:	9821      	ldr	r0, [sp, #132]	; 0x84
 80171ca:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80171cc:	3b01      	subs	r3, #1
 80171ce:	fb00 5003 	mla	r0, r0, r3, r5
 80171d2:	1400      	asrs	r0, r0, #16
 80171d4:	f53f af16 	bmi.w	8017004 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80171d8:	3901      	subs	r1, #1
 80171da:	4288      	cmp	r0, r1
 80171dc:	f6bf af12 	bge.w	8017004 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80171e0:	9922      	ldr	r1, [sp, #136]	; 0x88
 80171e2:	9820      	ldr	r0, [sp, #128]	; 0x80
 80171e4:	fb01 0303 	mla	r3, r1, r3, r0
 80171e8:	141b      	asrs	r3, r3, #16
 80171ea:	f53f af0b 	bmi.w	8017004 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80171ee:	3a01      	subs	r2, #1
 80171f0:	4293      	cmp	r3, r2
 80171f2:	f6bf af07 	bge.w	8017004 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80171f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80171f8:	9311      	str	r3, [sp, #68]	; 0x44
 80171fa:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80171fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017200:	930c      	str	r3, [sp, #48]	; 0x30
 8017202:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017204:	2b00      	cmp	r3, #0
 8017206:	dc70      	bgt.n	80172ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8017208:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801720a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801720c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017210:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017214:	930a      	str	r3, [sp, #40]	; 0x28
 8017216:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017218:	2b00      	cmp	r3, #0
 801721a:	f340 8124 	ble.w	8017466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801721e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017222:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017226:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801722a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801722c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017230:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017234:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017238:	eef0 6a62 	vmov.f32	s13, s5
 801723c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017240:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017244:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017248:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801724c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017250:	eef0 6a43 	vmov.f32	s13, s6
 8017254:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017258:	ee12 2a90 	vmov	r2, s5
 801725c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017260:	fb92 f3f3 	sdiv	r3, r2, r3
 8017264:	ee13 2a10 	vmov	r2, s6
 8017268:	9321      	str	r3, [sp, #132]	; 0x84
 801726a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801726c:	fb92 f3f3 	sdiv	r3, r2, r3
 8017270:	9322      	str	r3, [sp, #136]	; 0x88
 8017272:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017274:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017276:	3b01      	subs	r3, #1
 8017278:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801727c:	930e      	str	r3, [sp, #56]	; 0x38
 801727e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8017280:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8017284:	bf08      	it	eq
 8017286:	4613      	moveq	r3, r2
 8017288:	9309      	str	r3, [sp, #36]	; 0x24
 801728a:	eeb0 3a67 	vmov.f32	s6, s15
 801728e:	eef0 2a47 	vmov.f32	s5, s14
 8017292:	e68c      	b.n	8016fae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017294:	b149      	cbz	r1, 80172aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8017296:	5cb2      	ldrb	r2, [r6, r2]
 8017298:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801729c:	4422      	add	r2, r4
 801729e:	4628      	mov	r0, r5
 80172a0:	46ac      	mov	ip, r5
 80172a2:	e6f1      	b.n	8017088 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80172a4:	4628      	mov	r0, r5
 80172a6:	462a      	mov	r2, r5
 80172a8:	e6ee      	b.n	8017088 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80172aa:	4628      	mov	r0, r5
 80172ac:	462a      	mov	r2, r5
 80172ae:	e7f7      	b.n	80172a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80172b0:	1c47      	adds	r7, r0, #1
 80172b2:	f53f af69 	bmi.w	8017188 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80172b6:	42ba      	cmp	r2, r7
 80172b8:	f6ff af66 	blt.w	8017188 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80172bc:	1c6f      	adds	r7, r5, #1
 80172be:	f53f af63 	bmi.w	8017188 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80172c2:	42be      	cmp	r6, r7
 80172c4:	f6ff af60 	blt.w	8017188 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80172c8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80172ca:	9002      	str	r0, [sp, #8]
 80172cc:	b236      	sxth	r6, r6
 80172ce:	b212      	sxth	r2, r2
 80172d0:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80172d4:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80172d8:	9200      	str	r2, [sp, #0]
 80172da:	9601      	str	r6, [sp, #4]
 80172dc:	4623      	mov	r3, r4
 80172de:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80172e2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80172e4:	f7ff fd59 	bl	8016d9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80172e8:	e74e      	b.n	8017188 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80172ea:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80172ec:	9820      	ldr	r0, [sp, #128]	; 0x80
 80172ee:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80172f0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80172f2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80172f6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80172f8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80172fc:	142d      	asrs	r5, r5, #16
 80172fe:	1400      	asrs	r0, r0, #16
 8017300:	fb02 5000 	mla	r0, r2, r0, r5
 8017304:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8017306:	f815 9000 	ldrb.w	r9, [r5, r0]
 801730a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801730e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8017312:	182e      	adds	r6, r5, r0
 8017314:	eb04 0509 	add.w	r5, r4, r9
 8017318:	2b00      	cmp	r3, #0
 801731a:	f000 8096 	beq.w	801744a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801731e:	7877      	ldrb	r7, [r6, #1]
 8017320:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8017324:	4427      	add	r7, r4
 8017326:	2900      	cmp	r1, #0
 8017328:	f000 8097 	beq.w	801745a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801732c:	18b0      	adds	r0, r6, r2
 801732e:	5cb2      	ldrb	r2, [r6, r2]
 8017330:	7840      	ldrb	r0, [r0, #1]
 8017332:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017336:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801733a:	4422      	add	r2, r4
 801733c:	4420      	add	r0, r4
 801733e:	b29b      	uxth	r3, r3
 8017340:	b289      	uxth	r1, r1
 8017342:	fb03 f801 	mul.w	r8, r3, r1
 8017346:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8017348:	f895 b002 	ldrb.w	fp, [r5, #2]
 801734c:	f8b6 c000 	ldrh.w	ip, [r6]
 8017350:	78be      	ldrb	r6, [r7, #2]
 8017352:	f814 9009 	ldrb.w	r9, [r4, r9]
 8017356:	011b      	lsls	r3, r3, #4
 8017358:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801735c:	b289      	uxth	r1, r1
 801735e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8017362:	eba3 0308 	sub.w	r3, r3, r8
 8017366:	b29b      	uxth	r3, r3
 8017368:	ebae 0e01 	sub.w	lr, lr, r1
 801736c:	fa1f fe8e 	uxth.w	lr, lr
 8017370:	435e      	muls	r6, r3
 8017372:	fb0e 660b 	mla	r6, lr, fp, r6
 8017376:	f892 b002 	ldrb.w	fp, [r2, #2]
 801737a:	9310      	str	r3, [sp, #64]	; 0x40
 801737c:	fb01 660b 	mla	r6, r1, fp, r6
 8017380:	f890 b002 	ldrb.w	fp, [r0, #2]
 8017384:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017386:	fb08 660b 	mla	r6, r8, fp, r6
 801738a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801738e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8017392:	fb1b fb03 	smulbb	fp, fp, r3
 8017396:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801739a:	fb06 b60a 	mla	r6, r6, sl, fp
 801739e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80173a0:	f895 b001 	ldrb.w	fp, [r5, #1]
 80173a4:	787d      	ldrb	r5, [r7, #1]
 80173a6:	783f      	ldrb	r7, [r7, #0]
 80173a8:	435d      	muls	r5, r3
 80173aa:	fb0e 550b 	mla	r5, lr, fp, r5
 80173ae:	f892 b001 	ldrb.w	fp, [r2, #1]
 80173b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80173b4:	fb01 550b 	mla	r5, r1, fp, r5
 80173b8:	f890 b001 	ldrb.w	fp, [r0, #1]
 80173bc:	fb08 550b 	mla	r5, r8, fp, r5
 80173c0:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80173c4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80173c8:	fb1b fb03 	smulbb	fp, fp, r3
 80173cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80173ce:	437b      	muls	r3, r7
 80173d0:	7817      	ldrb	r7, [r2, #0]
 80173d2:	fb0e 3309 	mla	r3, lr, r9, r3
 80173d6:	fb01 3307 	mla	r3, r1, r7, r3
 80173da:	7807      	ldrb	r7, [r0, #0]
 80173dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80173e0:	fb08 3707 	mla	r7, r8, r7, r3
 80173e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80173e6:	fa5f fc8c 	uxtb.w	ip, ip
 80173ea:	fb1c fc03 	smulbb	ip, ip, r3
 80173ee:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80173f2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80173f6:	fb05 b50a 	mla	r5, r5, sl, fp
 80173fa:	fb07 c70a 	mla	r7, r7, sl, ip
 80173fe:	b2b6      	uxth	r6, r6
 8017400:	b2ad      	uxth	r5, r5
 8017402:	b2bf      	uxth	r7, r7
 8017404:	1c73      	adds	r3, r6, #1
 8017406:	1c7a      	adds	r2, r7, #1
 8017408:	f105 0b01 	add.w	fp, r5, #1
 801740c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8017410:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8017414:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8017418:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801741c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8017420:	096d      	lsrs	r5, r5, #5
 8017422:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017424:	4316      	orrs	r6, r2
 8017426:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801742a:	432e      	orrs	r6, r5
 801742c:	f823 6b02 	strh.w	r6, [r3], #2
 8017430:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8017432:	930c      	str	r3, [sp, #48]	; 0x30
 8017434:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8017436:	4413      	add	r3, r2
 8017438:	931f      	str	r3, [sp, #124]	; 0x7c
 801743a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801743c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801743e:	4413      	add	r3, r2
 8017440:	9320      	str	r3, [sp, #128]	; 0x80
 8017442:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017444:	3b01      	subs	r3, #1
 8017446:	9311      	str	r3, [sp, #68]	; 0x44
 8017448:	e6db      	b.n	8017202 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801744a:	b149      	cbz	r1, 8017460 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801744c:	5cb2      	ldrb	r2, [r6, r2]
 801744e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017452:	4422      	add	r2, r4
 8017454:	4628      	mov	r0, r5
 8017456:	462f      	mov	r7, r5
 8017458:	e771      	b.n	801733e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801745a:	4628      	mov	r0, r5
 801745c:	462a      	mov	r2, r5
 801745e:	e76e      	b.n	801733e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8017460:	4628      	mov	r0, r5
 8017462:	462a      	mov	r2, r5
 8017464:	e7f7      	b.n	8017456 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8017466:	b015      	add	sp, #84	; 0x54
 8017468:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801746c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801746c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017470:	880f      	ldrh	r7, [r1, #0]
 8017472:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8017476:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801747a:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801747e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8017482:	023c      	lsls	r4, r7, #8
 8017484:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8017488:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801748c:	017c      	lsls	r4, r7, #5
 801748e:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8017492:	00ff      	lsls	r7, r7, #3
 8017494:	ea4b 0404 	orr.w	r4, fp, r4
 8017498:	b2ff      	uxtb	r7, r7
 801749a:	fb05 ca0e 	mla	sl, r5, lr, ip
 801749e:	4327      	orrs	r7, r4
 80174a0:	2d00      	cmp	r5, #0
 80174a2:	eb02 080a 	add.w	r8, r2, sl
 80174a6:	9701      	str	r7, [sp, #4]
 80174a8:	db7e      	blt.n	80175a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80174aa:	45a9      	cmp	r9, r5
 80174ac:	dd7c      	ble.n	80175a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80174ae:	f1bc 0f00 	cmp.w	ip, #0
 80174b2:	db77      	blt.n	80175a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80174b4:	45e6      	cmp	lr, ip
 80174b6:	dd75      	ble.n	80175a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80174b8:	f812 700a 	ldrb.w	r7, [r2, sl]
 80174bc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80174c0:	441f      	add	r7, r3
 80174c2:	f11c 0201 	adds.w	r2, ip, #1
 80174c6:	d472      	bmi.n	80175ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80174c8:	4596      	cmp	lr, r2
 80174ca:	dd70      	ble.n	80175ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80174cc:	2800      	cmp	r0, #0
 80174ce:	d06e      	beq.n	80175ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80174d0:	f898 4001 	ldrb.w	r4, [r8, #1]
 80174d4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80174d8:	441c      	add	r4, r3
 80174da:	3501      	adds	r5, #1
 80174dc:	d46b      	bmi.n	80175b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80174de:	45a9      	cmp	r9, r5
 80174e0:	dd69      	ble.n	80175b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80174e2:	2e00      	cmp	r6, #0
 80174e4:	d067      	beq.n	80175b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80174e6:	f1bc 0f00 	cmp.w	ip, #0
 80174ea:	db62      	blt.n	80175b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80174ec:	45e6      	cmp	lr, ip
 80174ee:	dd60      	ble.n	80175b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80174f0:	f818 500e 	ldrb.w	r5, [r8, lr]
 80174f4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80174f8:	441d      	add	r5, r3
 80174fa:	f11c 0201 	adds.w	r2, ip, #1
 80174fe:	d45d      	bmi.n	80175bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8017500:	4596      	cmp	lr, r2
 8017502:	dd5b      	ble.n	80175bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8017504:	2800      	cmp	r0, #0
 8017506:	d059      	beq.n	80175bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8017508:	44c6      	add	lr, r8
 801750a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801750e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017512:	4413      	add	r3, r2
 8017514:	b280      	uxth	r0, r0
 8017516:	b2b2      	uxth	r2, r6
 8017518:	fb00 f602 	mul.w	r6, r0, r2
 801751c:	0100      	lsls	r0, r0, #4
 801751e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8017522:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8017526:	1b80      	subs	r0, r0, r6
 8017528:	fa1f fc82 	uxth.w	ip, r2
 801752c:	b282      	uxth	r2, r0
 801752e:	78a0      	ldrb	r0, [r4, #2]
 8017530:	f897 e002 	ldrb.w	lr, [r7, #2]
 8017534:	f897 9000 	ldrb.w	r9, [r7]
 8017538:	787f      	ldrb	r7, [r7, #1]
 801753a:	eba8 080c 	sub.w	r8, r8, ip
 801753e:	fa1f f888 	uxth.w	r8, r8
 8017542:	4350      	muls	r0, r2
 8017544:	fb08 0e0e 	mla	lr, r8, lr, r0
 8017548:	78a8      	ldrb	r0, [r5, #2]
 801754a:	fb0c e000 	mla	r0, ip, r0, lr
 801754e:	f893 e002 	ldrb.w	lr, [r3, #2]
 8017552:	fb06 0e0e 	mla	lr, r6, lr, r0
 8017556:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801755a:	f894 e000 	ldrb.w	lr, [r4]
 801755e:	fb02 fe0e 	mul.w	lr, r2, lr
 8017562:	fb08 e909 	mla	r9, r8, r9, lr
 8017566:	f895 e000 	ldrb.w	lr, [r5]
 801756a:	fb0c 990e 	mla	r9, ip, lr, r9
 801756e:	f893 e000 	ldrb.w	lr, [r3]
 8017572:	785b      	ldrb	r3, [r3, #1]
 8017574:	fb06 9e0e 	mla	lr, r6, lr, r9
 8017578:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801757c:	ea4e 0e00 	orr.w	lr, lr, r0
 8017580:	7860      	ldrb	r0, [r4, #1]
 8017582:	4350      	muls	r0, r2
 8017584:	786a      	ldrb	r2, [r5, #1]
 8017586:	fb08 0007 	mla	r0, r8, r7, r0
 801758a:	fb0c 0202 	mla	r2, ip, r2, r0
 801758e:	fb06 2303 	mla	r3, r6, r3, r2
 8017592:	095b      	lsrs	r3, r3, #5
 8017594:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017598:	ea4e 0303 	orr.w	r3, lr, r3
 801759c:	800b      	strh	r3, [r1, #0]
 801759e:	b003      	add	sp, #12
 80175a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175a4:	af01      	add	r7, sp, #4
 80175a6:	e78c      	b.n	80174c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 80175a8:	ac01      	add	r4, sp, #4
 80175aa:	4627      	mov	r7, r4
 80175ac:	e795      	b.n	80174da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80175ae:	ac01      	add	r4, sp, #4
 80175b0:	e793      	b.n	80174da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80175b2:	ad01      	add	r5, sp, #4
 80175b4:	e7a1      	b.n	80174fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 80175b6:	ab01      	add	r3, sp, #4
 80175b8:	461d      	mov	r5, r3
 80175ba:	e7ab      	b.n	8017514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 80175bc:	ab01      	add	r3, sp, #4
 80175be:	e7a9      	b.n	8017514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

080175c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80175c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80175c4:	b08f      	sub	sp, #60	; 0x3c
 80175c6:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 80175ca:	920c      	str	r2, [sp, #48]	; 0x30
 80175cc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80175ce:	910a      	str	r1, [sp, #40]	; 0x28
 80175d0:	9306      	str	r3, [sp, #24]
 80175d2:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 80175d6:	900d      	str	r0, [sp, #52]	; 0x34
 80175d8:	6850      	ldr	r0, [r2, #4]
 80175da:	6812      	ldr	r2, [r2, #0]
 80175dc:	fb00 1303 	mla	r3, r0, r3, r1
 80175e0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80175e4:	9307      	str	r3, [sp, #28]
 80175e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80175e8:	681b      	ldr	r3, [r3, #0]
 80175ea:	9308      	str	r3, [sp, #32]
 80175ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80175ee:	685c      	ldr	r4, [r3, #4]
 80175f0:	3404      	adds	r4, #4
 80175f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80175f4:	2b00      	cmp	r3, #0
 80175f6:	dc03      	bgt.n	8017600 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80175f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80175fa:	2b00      	cmp	r3, #0
 80175fc:	f340 81d6 	ble.w	80179ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8017600:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017602:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017606:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801760a:	1e48      	subs	r0, r1, #1
 801760c:	1e56      	subs	r6, r2, #1
 801760e:	9b06      	ldr	r3, [sp, #24]
 8017610:	2b00      	cmp	r3, #0
 8017612:	f340 80b7 	ble.w	8017784 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8017616:	ea5f 472b 	movs.w	r7, fp, asr #16
 801761a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801761e:	d406      	bmi.n	801762e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017620:	4287      	cmp	r7, r0
 8017622:	da04      	bge.n	801762e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017624:	2b00      	cmp	r3, #0
 8017626:	db02      	blt.n	801762e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017628:	42b3      	cmp	r3, r6
 801762a:	f2c0 80ac 	blt.w	8017786 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801762e:	3701      	adds	r7, #1
 8017630:	f100 809d 	bmi.w	801776e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8017634:	42b9      	cmp	r1, r7
 8017636:	f2c0 809a 	blt.w	801776e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801763a:	3301      	adds	r3, #1
 801763c:	f100 8097 	bmi.w	801776e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8017640:	429a      	cmp	r2, r3
 8017642:	f2c0 8094 	blt.w	801776e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8017646:	9b06      	ldr	r3, [sp, #24]
 8017648:	930b      	str	r3, [sp, #44]	; 0x2c
 801764a:	9b07      	ldr	r3, [sp, #28]
 801764c:	9309      	str	r3, [sp, #36]	; 0x24
 801764e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017650:	2b00      	cmp	r3, #0
 8017652:	f340 80b5 	ble.w	80177c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8017656:	9820      	ldr	r0, [sp, #128]	; 0x80
 8017658:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801765a:	68c7      	ldr	r7, [r0, #12]
 801765c:	6892      	ldr	r2, [r2, #8]
 801765e:	ea5f 402b 	movs.w	r0, fp, asr #16
 8017662:	ea4f 4625 	mov.w	r6, r5, asr #16
 8017666:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801766a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801766e:	f100 80fb 	bmi.w	8017868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8017672:	f102 3cff 	add.w	ip, r2, #4294967295
 8017676:	4560      	cmp	r0, ip
 8017678:	f280 80f6 	bge.w	8017868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801767c:	2e00      	cmp	r6, #0
 801767e:	f2c0 80f3 	blt.w	8017868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8017682:	f107 3cff 	add.w	ip, r7, #4294967295
 8017686:	4566      	cmp	r6, ip
 8017688:	f280 80ee 	bge.w	8017868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801768c:	b212      	sxth	r2, r2
 801768e:	fb06 0002 	mla	r0, r6, r2, r0
 8017692:	9e08      	ldr	r6, [sp, #32]
 8017694:	1837      	adds	r7, r6, r0
 8017696:	5c30      	ldrb	r0, [r6, r0]
 8017698:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801769c:	eb04 0c08 	add.w	ip, r4, r8
 80176a0:	2b00      	cmp	r3, #0
 80176a2:	f000 80d3 	beq.w	801784c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80176a6:	787e      	ldrb	r6, [r7, #1]
 80176a8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80176ac:	4426      	add	r6, r4
 80176ae:	2900      	cmp	r1, #0
 80176b0:	f000 80d4 	beq.w	801785c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 80176b4:	18b8      	adds	r0, r7, r2
 80176b6:	5cba      	ldrb	r2, [r7, r2]
 80176b8:	7840      	ldrb	r0, [r0, #1]
 80176ba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80176be:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80176c2:	4422      	add	r2, r4
 80176c4:	4420      	add	r0, r4
 80176c6:	b29b      	uxth	r3, r3
 80176c8:	b289      	uxth	r1, r1
 80176ca:	fb03 f901 	mul.w	r9, r3, r1
 80176ce:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80176d2:	011b      	lsls	r3, r3, #4
 80176d4:	b289      	uxth	r1, r1
 80176d6:	78b7      	ldrb	r7, [r6, #2]
 80176d8:	f89c a002 	ldrb.w	sl, [ip, #2]
 80176dc:	f89c c001 	ldrb.w	ip, [ip, #1]
 80176e0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80176e4:	eba3 0309 	sub.w	r3, r3, r9
 80176e8:	b29b      	uxth	r3, r3
 80176ea:	ebae 0e01 	sub.w	lr, lr, r1
 80176ee:	fa1f fe8e 	uxth.w	lr, lr
 80176f2:	435f      	muls	r7, r3
 80176f4:	fb0e 770a 	mla	r7, lr, sl, r7
 80176f8:	f892 a002 	ldrb.w	sl, [r2, #2]
 80176fc:	fb01 770a 	mla	r7, r1, sl, r7
 8017700:	f890 a002 	ldrb.w	sl, [r0, #2]
 8017704:	fb09 7a0a 	mla	sl, r9, sl, r7
 8017708:	f814 7008 	ldrb.w	r7, [r4, r8]
 801770c:	f896 8000 	ldrb.w	r8, [r6]
 8017710:	7876      	ldrb	r6, [r6, #1]
 8017712:	fb03 f808 	mul.w	r8, r3, r8
 8017716:	fb0e 8807 	mla	r8, lr, r7, r8
 801771a:	7817      	ldrb	r7, [r2, #0]
 801771c:	fb01 8807 	mla	r8, r1, r7, r8
 8017720:	7807      	ldrb	r7, [r0, #0]
 8017722:	fb09 8707 	mla	r7, r9, r7, r8
 8017726:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801772a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801772e:	ea47 070a 	orr.w	r7, r7, sl
 8017732:	4373      	muls	r3, r6
 8017734:	f892 a001 	ldrb.w	sl, [r2, #1]
 8017738:	fb0e 330c 	mla	r3, lr, ip, r3
 801773c:	fb01 310a 	mla	r1, r1, sl, r3
 8017740:	f890 a001 	ldrb.w	sl, [r0, #1]
 8017744:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017746:	fb09 1a0a 	mla	sl, r9, sl, r1
 801774a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801774e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017752:	ea47 070a 	orr.w	r7, r7, sl
 8017756:	801f      	strh	r7, [r3, #0]
 8017758:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801775a:	3302      	adds	r3, #2
 801775c:	9309      	str	r3, [sp, #36]	; 0x24
 801775e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8017760:	449b      	add	fp, r3
 8017762:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017764:	441d      	add	r5, r3
 8017766:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017768:	3b01      	subs	r3, #1
 801776a:	930b      	str	r3, [sp, #44]	; 0x2c
 801776c:	e76f      	b.n	801764e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801776e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8017770:	449b      	add	fp, r3
 8017772:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017774:	441d      	add	r5, r3
 8017776:	9b06      	ldr	r3, [sp, #24]
 8017778:	3b01      	subs	r3, #1
 801777a:	9306      	str	r3, [sp, #24]
 801777c:	9b07      	ldr	r3, [sp, #28]
 801777e:	3302      	adds	r3, #2
 8017780:	9307      	str	r3, [sp, #28]
 8017782:	e744      	b.n	801760e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8017784:	d023      	beq.n	80177ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8017786:	9b06      	ldr	r3, [sp, #24]
 8017788:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801778a:	3b01      	subs	r3, #1
 801778c:	fb00 b003 	mla	r0, r0, r3, fp
 8017790:	1400      	asrs	r0, r0, #16
 8017792:	f53f af58 	bmi.w	8017646 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8017796:	3901      	subs	r1, #1
 8017798:	4288      	cmp	r0, r1
 801779a:	f6bf af54 	bge.w	8017646 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801779e:	991c      	ldr	r1, [sp, #112]	; 0x70
 80177a0:	fb01 5303 	mla	r3, r1, r3, r5
 80177a4:	141b      	asrs	r3, r3, #16
 80177a6:	f53f af4e 	bmi.w	8017646 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80177aa:	3a01      	subs	r2, #1
 80177ac:	4293      	cmp	r3, r2
 80177ae:	f6bf af4a 	bge.w	8017646 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80177b2:	9b06      	ldr	r3, [sp, #24]
 80177b4:	9309      	str	r3, [sp, #36]	; 0x24
 80177b6:	9b07      	ldr	r3, [sp, #28]
 80177b8:	930b      	str	r3, [sp, #44]	; 0x2c
 80177ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80177bc:	2b00      	cmp	r3, #0
 80177be:	dc70      	bgt.n	80178a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 80177c0:	9b06      	ldr	r3, [sp, #24]
 80177c2:	9a07      	ldr	r2, [sp, #28]
 80177c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80177c8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80177cc:	9307      	str	r3, [sp, #28]
 80177ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80177d0:	2b00      	cmp	r3, #0
 80177d2:	f340 80eb 	ble.w	80179ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80177d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80177da:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80177de:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80177e2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80177e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80177e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80177ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80177f0:	eef0 6a62 	vmov.f32	s13, s5
 80177f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80177f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80177fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017800:	ee16 ba90 	vmov	fp, s13
 8017804:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017808:	eef0 6a43 	vmov.f32	s13, s6
 801780c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017810:	ee12 2a90 	vmov	r2, s5
 8017814:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017818:	fb92 f3f3 	sdiv	r3, r2, r3
 801781c:	ee13 2a10 	vmov	r2, s6
 8017820:	931b      	str	r3, [sp, #108]	; 0x6c
 8017822:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017824:	fb92 f3f3 	sdiv	r3, r2, r3
 8017828:	931c      	str	r3, [sp, #112]	; 0x70
 801782a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801782c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801782e:	3b01      	subs	r3, #1
 8017830:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017834:	930a      	str	r3, [sp, #40]	; 0x28
 8017836:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017838:	bf08      	it	eq
 801783a:	4613      	moveq	r3, r2
 801783c:	ee16 5a90 	vmov	r5, s13
 8017840:	9306      	str	r3, [sp, #24]
 8017842:	eeb0 3a67 	vmov.f32	s6, s15
 8017846:	eef0 2a47 	vmov.f32	s5, s14
 801784a:	e6d2      	b.n	80175f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801784c:	b149      	cbz	r1, 8017862 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801784e:	5cba      	ldrb	r2, [r7, r2]
 8017850:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017854:	4422      	add	r2, r4
 8017856:	4660      	mov	r0, ip
 8017858:	4666      	mov	r6, ip
 801785a:	e734      	b.n	80176c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801785c:	4660      	mov	r0, ip
 801785e:	4662      	mov	r2, ip
 8017860:	e731      	b.n	80176c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8017862:	4660      	mov	r0, ip
 8017864:	4662      	mov	r2, ip
 8017866:	e7f7      	b.n	8017858 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8017868:	f110 0c01 	adds.w	ip, r0, #1
 801786c:	f53f af74 	bmi.w	8017758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017870:	4562      	cmp	r2, ip
 8017872:	f6ff af71 	blt.w	8017758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017876:	f116 0c01 	adds.w	ip, r6, #1
 801787a:	f53f af6d 	bmi.w	8017758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801787e:	4567      	cmp	r7, ip
 8017880:	f6ff af6a 	blt.w	8017758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017884:	b23f      	sxth	r7, r7
 8017886:	b212      	sxth	r2, r2
 8017888:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801788c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8017890:	9200      	str	r2, [sp, #0]
 8017892:	9701      	str	r7, [sp, #4]
 8017894:	4623      	mov	r3, r4
 8017896:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801789a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801789c:	f7ff fde6 	bl	801746c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80178a0:	e75a      	b.n	8017758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80178a2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80178a4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80178a8:	ea4f 462b 	mov.w	r6, fp, asr #16
 80178ac:	1428      	asrs	r0, r5, #16
 80178ae:	fb02 6000 	mla	r0, r2, r0, r6
 80178b2:	9e08      	ldr	r6, [sp, #32]
 80178b4:	f816 8000 	ldrb.w	r8, [r6, r0]
 80178b8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80178bc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80178c0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80178c4:	1837      	adds	r7, r6, r0
 80178c6:	eb04 0c08 	add.w	ip, r4, r8
 80178ca:	2b00      	cmp	r3, #0
 80178cc:	d060      	beq.n	8017990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80178ce:	787e      	ldrb	r6, [r7, #1]
 80178d0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80178d4:	4426      	add	r6, r4
 80178d6:	2900      	cmp	r1, #0
 80178d8:	d062      	beq.n	80179a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 80178da:	18b8      	adds	r0, r7, r2
 80178dc:	5cba      	ldrb	r2, [r7, r2]
 80178de:	7840      	ldrb	r0, [r0, #1]
 80178e0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80178e4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80178e8:	4422      	add	r2, r4
 80178ea:	4420      	add	r0, r4
 80178ec:	b29b      	uxth	r3, r3
 80178ee:	b289      	uxth	r1, r1
 80178f0:	fb03 f901 	mul.w	r9, r3, r1
 80178f4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80178f8:	011b      	lsls	r3, r3, #4
 80178fa:	b289      	uxth	r1, r1
 80178fc:	78b7      	ldrb	r7, [r6, #2]
 80178fe:	f89c a002 	ldrb.w	sl, [ip, #2]
 8017902:	f89c c001 	ldrb.w	ip, [ip, #1]
 8017906:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801790a:	eba3 0309 	sub.w	r3, r3, r9
 801790e:	b29b      	uxth	r3, r3
 8017910:	ebae 0e01 	sub.w	lr, lr, r1
 8017914:	fa1f fe8e 	uxth.w	lr, lr
 8017918:	435f      	muls	r7, r3
 801791a:	fb0e 770a 	mla	r7, lr, sl, r7
 801791e:	f892 a002 	ldrb.w	sl, [r2, #2]
 8017922:	fb01 770a 	mla	r7, r1, sl, r7
 8017926:	f890 a002 	ldrb.w	sl, [r0, #2]
 801792a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801792e:	f814 7008 	ldrb.w	r7, [r4, r8]
 8017932:	f896 8000 	ldrb.w	r8, [r6]
 8017936:	7876      	ldrb	r6, [r6, #1]
 8017938:	fb03 f808 	mul.w	r8, r3, r8
 801793c:	fb0e 8807 	mla	r8, lr, r7, r8
 8017940:	7817      	ldrb	r7, [r2, #0]
 8017942:	fb01 8807 	mla	r8, r1, r7, r8
 8017946:	7807      	ldrb	r7, [r0, #0]
 8017948:	fb09 8707 	mla	r7, r9, r7, r8
 801794c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8017950:	4373      	muls	r3, r6
 8017952:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017956:	7856      	ldrb	r6, [r2, #1]
 8017958:	ea47 070a 	orr.w	r7, r7, sl
 801795c:	fb0e 330c 	mla	r3, lr, ip, r3
 8017960:	f890 a001 	ldrb.w	sl, [r0, #1]
 8017964:	fb01 3306 	mla	r3, r1, r6, r3
 8017968:	fb09 3a0a 	mla	sl, r9, sl, r3
 801796c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017970:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017972:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017976:	ea47 070a 	orr.w	r7, r7, sl
 801797a:	f823 7b02 	strh.w	r7, [r3], #2
 801797e:	930b      	str	r3, [sp, #44]	; 0x2c
 8017980:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8017982:	449b      	add	fp, r3
 8017984:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017986:	441d      	add	r5, r3
 8017988:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801798a:	3b01      	subs	r3, #1
 801798c:	9309      	str	r3, [sp, #36]	; 0x24
 801798e:	e714      	b.n	80177ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8017990:	b149      	cbz	r1, 80179a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8017992:	5cba      	ldrb	r2, [r7, r2]
 8017994:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017998:	4422      	add	r2, r4
 801799a:	4660      	mov	r0, ip
 801799c:	4666      	mov	r6, ip
 801799e:	e7a5      	b.n	80178ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80179a0:	4660      	mov	r0, ip
 80179a2:	4662      	mov	r2, ip
 80179a4:	e7a2      	b.n	80178ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80179a6:	4660      	mov	r0, ip
 80179a8:	4662      	mov	r2, ip
 80179aa:	e7f7      	b.n	801799c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 80179ac:	b00f      	add	sp, #60	; 0x3c
 80179ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080179b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80179b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179b6:	b085      	sub	sp, #20
 80179b8:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 80179bc:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80179c0:	9102      	str	r1, [sp, #8]
 80179c2:	2c00      	cmp	r4, #0
 80179c4:	fb04 710c 	mla	r1, r4, ip, r7
 80179c8:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80179cc:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80179d0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80179d4:	eb02 0e01 	add.w	lr, r2, r1
 80179d8:	f2c0 8122 	blt.w	8017c20 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80179dc:	45a0      	cmp	r8, r4
 80179de:	f340 811f 	ble.w	8017c20 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80179e2:	2f00      	cmp	r7, #0
 80179e4:	f2c0 811a 	blt.w	8017c1c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80179e8:	45bc      	cmp	ip, r7
 80179ea:	f340 8117 	ble.w	8017c1c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80179ee:	5c52      	ldrb	r2, [r2, r1]
 80179f0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80179f4:	1c7a      	adds	r2, r7, #1
 80179f6:	f100 8116 	bmi.w	8017c26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80179fa:	4594      	cmp	ip, r2
 80179fc:	f340 8113 	ble.w	8017c26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8017a00:	2e00      	cmp	r6, #0
 8017a02:	f000 8112 	beq.w	8017c2a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8017a06:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8017a0a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8017a0e:	3401      	adds	r4, #1
 8017a10:	f100 810f 	bmi.w	8017c32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8017a14:	45a0      	cmp	r8, r4
 8017a16:	f340 810c 	ble.w	8017c32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8017a1a:	2800      	cmp	r0, #0
 8017a1c:	f000 810c 	beq.w	8017c38 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8017a20:	2f00      	cmp	r7, #0
 8017a22:	f2c0 8104 	blt.w	8017c2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8017a26:	45bc      	cmp	ip, r7
 8017a28:	f340 8101 	ble.w	8017c2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8017a2c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8017a30:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8017a34:	3701      	adds	r7, #1
 8017a36:	f100 8102 	bmi.w	8017c3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8017a3a:	45bc      	cmp	ip, r7
 8017a3c:	f340 80ff 	ble.w	8017c3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8017a40:	2e00      	cmp	r6, #0
 8017a42:	f000 80fe 	beq.w	8017c42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8017a46:	44f4      	add	ip, lr
 8017a48:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8017a4c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8017a50:	b2b6      	uxth	r6, r6
 8017a52:	b280      	uxth	r0, r0
 8017a54:	fb00 fe06 	mul.w	lr, r0, r6
 8017a58:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8017a5c:	0136      	lsls	r6, r6, #4
 8017a5e:	eba6 070e 	sub.w	r7, r6, lr
 8017a62:	b280      	uxth	r0, r0
 8017a64:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8017a68:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8017a6c:	b2bf      	uxth	r7, r7
 8017a6e:	1a1b      	subs	r3, r3, r0
 8017a70:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8017a74:	b29b      	uxth	r3, r3
 8017a76:	fb0a f607 	mul.w	r6, sl, r7
 8017a7a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8017a7e:	fb0b 6603 	mla	r6, fp, r3, r6
 8017a82:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8017a86:	fb00 6609 	mla	r6, r0, r9, r6
 8017a8a:	fb0e 6608 	mla	r6, lr, r8, r6
 8017a8e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8017a92:	9600      	str	r6, [sp, #0]
 8017a94:	2e00      	cmp	r6, #0
 8017a96:	f000 80be 	beq.w	8017c16 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8017a9a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8017a9e:	fb0b fc0c 	mul.w	ip, fp, ip
 8017aa2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8017aa6:	fb0b f505 	mul.w	r5, fp, r5
 8017aaa:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8017aae:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8017ab2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017ab6:	44dc      	add	ip, fp
 8017ab8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017abc:	9501      	str	r5, [sp, #4]
 8017abe:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8017ac2:	9503      	str	r5, [sp, #12]
 8017ac4:	9d01      	ldr	r5, [sp, #4]
 8017ac6:	9e02      	ldr	r6, [sp, #8]
 8017ac8:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8017acc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017ad0:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8017ad4:	fb0a fc0c 	mul.w	ip, sl, ip
 8017ad8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8017adc:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8017ae0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017ae4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017ae8:	4465      	add	r5, ip
 8017aea:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017aee:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017af2:	fb09 fc0c 	mul.w	ip, r9, ip
 8017af6:	fb09 f904 	mul.w	r9, r9, r4
 8017afa:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8017afe:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8017b02:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8017b06:	fb08 f404 	mul.w	r4, r8, r4
 8017b0a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8017b0e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017b12:	fb08 f802 	mul.w	r8, r8, r2
 8017b16:	fb0a fa01 	mul.w	sl, sl, r1
 8017b1a:	0a22      	lsrs	r2, r4, #8
 8017b1c:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8017b20:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017b24:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8017b28:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8017b2c:	4414      	add	r4, r2
 8017b2e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8017b32:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8017b36:	0a2d      	lsrs	r5, r5, #8
 8017b38:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8017b3c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017b40:	9a03      	ldr	r2, [sp, #12]
 8017b42:	8836      	ldrh	r6, [r6, #0]
 8017b44:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8017b48:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017b4c:	437d      	muls	r5, r7
 8017b4e:	4461      	add	r1, ip
 8017b50:	0a24      	lsrs	r4, r4, #8
 8017b52:	fb02 5503 	mla	r5, r2, r3, r5
 8017b56:	0a09      	lsrs	r1, r1, #8
 8017b58:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017b5c:	fb04 540e 	mla	r4, r4, lr, r5
 8017b60:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8017b64:	fb01 4100 	mla	r1, r1, r0, r4
 8017b68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017b6c:	0a09      	lsrs	r1, r1, #8
 8017b6e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017b72:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8017b76:	fb07 f70a 	mul.w	r7, r7, sl
 8017b7a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017b7e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8017b82:	fb03 7101 	mla	r1, r3, r1, r7
 8017b86:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017b8a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8017b8e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8017b92:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8017b96:	fb00 e101 	mla	r1, r0, r1, lr
 8017b9a:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8017b9e:	9a00      	ldr	r2, [sp, #0]
 8017ba0:	b287      	uxth	r7, r0
 8017ba2:	437a      	muls	r2, r7
 8017ba4:	0a09      	lsrs	r1, r1, #8
 8017ba6:	1c53      	adds	r3, r2, #1
 8017ba8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8017bac:	4321      	orrs	r1, r4
 8017bae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017bb2:	1235      	asrs	r5, r6, #8
 8017bb4:	0c0a      	lsrs	r2, r1, #16
 8017bb6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8017bba:	b2db      	uxtb	r3, r3
 8017bbc:	fb12 f207 	smulbb	r2, r2, r7
 8017bc0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017bc4:	fb05 2503 	mla	r5, r5, r3, r2
 8017bc8:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8017bcc:	10f2      	asrs	r2, r6, #3
 8017bce:	b2c8      	uxtb	r0, r1
 8017bd0:	00f6      	lsls	r6, r6, #3
 8017bd2:	fb14 f407 	smulbb	r4, r4, r7
 8017bd6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017bda:	b2f6      	uxtb	r6, r6
 8017bdc:	fb10 f007 	smulbb	r0, r0, r7
 8017be0:	fb02 4203 	mla	r2, r2, r3, r4
 8017be4:	b2ad      	uxth	r5, r5
 8017be6:	fb06 0303 	mla	r3, r6, r3, r0
 8017bea:	b299      	uxth	r1, r3
 8017bec:	b294      	uxth	r4, r2
 8017bee:	1c6b      	adds	r3, r5, #1
 8017bf0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017bf4:	1c62      	adds	r2, r4, #1
 8017bf6:	1c4b      	adds	r3, r1, #1
 8017bf8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8017bfc:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8017c00:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017c04:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017c08:	0952      	lsrs	r2, r2, #5
 8017c0a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017c0e:	432b      	orrs	r3, r5
 8017c10:	4313      	orrs	r3, r2
 8017c12:	9a02      	ldr	r2, [sp, #8]
 8017c14:	8013      	strh	r3, [r2, #0]
 8017c16:	b005      	add	sp, #20
 8017c18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c1c:	2500      	movs	r5, #0
 8017c1e:	e6e9      	b.n	80179f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8017c20:	2100      	movs	r1, #0
 8017c22:	460d      	mov	r5, r1
 8017c24:	e6f3      	b.n	8017a0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8017c26:	2100      	movs	r1, #0
 8017c28:	e6f1      	b.n	8017a0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8017c2a:	4631      	mov	r1, r6
 8017c2c:	e6ef      	b.n	8017a0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8017c2e:	2400      	movs	r4, #0
 8017c30:	e700      	b.n	8017a34 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8017c32:	2200      	movs	r2, #0
 8017c34:	4614      	mov	r4, r2
 8017c36:	e70b      	b.n	8017a50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8017c38:	4602      	mov	r2, r0
 8017c3a:	4604      	mov	r4, r0
 8017c3c:	e708      	b.n	8017a50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8017c3e:	2200      	movs	r2, #0
 8017c40:	e706      	b.n	8017a50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8017c42:	4632      	mov	r2, r6
 8017c44:	e704      	b.n	8017a50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08017c46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017c46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c4a:	b09f      	sub	sp, #124	; 0x7c
 8017c4c:	921b      	str	r2, [sp, #108]	; 0x6c
 8017c4e:	9309      	str	r3, [sp, #36]	; 0x24
 8017c50:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017c52:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8017c56:	931c      	str	r3, [sp, #112]	; 0x70
 8017c58:	9119      	str	r1, [sp, #100]	; 0x64
 8017c5a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8017c5e:	901d      	str	r0, [sp, #116]	; 0x74
 8017c60:	6850      	ldr	r0, [r2, #4]
 8017c62:	6812      	ldr	r2, [r2, #0]
 8017c64:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8017c66:	fb00 1303 	mla	r3, r0, r3, r1
 8017c6a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017c6e:	930c      	str	r3, [sp, #48]	; 0x30
 8017c70:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017c72:	681b      	ldr	r3, [r3, #0]
 8017c74:	9312      	str	r3, [sp, #72]	; 0x48
 8017c76:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017c78:	685e      	ldr	r6, [r3, #4]
 8017c7a:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8017c7e:	930d      	str	r3, [sp, #52]	; 0x34
 8017c80:	3604      	adds	r6, #4
 8017c82:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017c84:	2b00      	cmp	r3, #0
 8017c86:	dc03      	bgt.n	8017c90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017c88:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8017c8a:	2b00      	cmp	r3, #0
 8017c8c:	f340 8388 	ble.w	80183a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8017c90:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017c92:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017c96:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017c9a:	1e48      	subs	r0, r1, #1
 8017c9c:	1e57      	subs	r7, r2, #1
 8017c9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017ca0:	2b00      	cmp	r3, #0
 8017ca2:	f340 8195 	ble.w	8017fd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017ca6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8017ca8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8017cac:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017cb0:	d406      	bmi.n	8017cc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017cb2:	4584      	cmp	ip, r0
 8017cb4:	da04      	bge.n	8017cc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017cb6:	2b00      	cmp	r3, #0
 8017cb8:	db02      	blt.n	8017cc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017cba:	42bb      	cmp	r3, r7
 8017cbc:	f2c0 8189 	blt.w	8017fd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8017cc0:	f11c 0c01 	adds.w	ip, ip, #1
 8017cc4:	f100 8177 	bmi.w	8017fb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017cc8:	4561      	cmp	r1, ip
 8017cca:	f2c0 8174 	blt.w	8017fb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017cce:	3301      	adds	r3, #1
 8017cd0:	f100 8171 	bmi.w	8017fb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017cd4:	429a      	cmp	r2, r3
 8017cd6:	f2c0 816e 	blt.w	8017fb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017cda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017cdc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8017cde:	931a      	str	r3, [sp, #104]	; 0x68
 8017ce0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8017ce2:	2b00      	cmp	r3, #0
 8017ce4:	f340 8193 	ble.w	801800e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8017ce8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017cea:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017cee:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017cf0:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8017cf4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017cf6:	141b      	asrs	r3, r3, #16
 8017cf8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8017cfc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017d00:	f100 81d6 	bmi.w	80180b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017d04:	f100 38ff 	add.w	r8, r0, #4294967295
 8017d08:	4543      	cmp	r3, r8
 8017d0a:	f280 81d1 	bge.w	80180b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017d0e:	f1bc 0f00 	cmp.w	ip, #0
 8017d12:	f2c0 81cd 	blt.w	80180b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017d16:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017d1a:	45c4      	cmp	ip, r8
 8017d1c:	f280 81c8 	bge.w	80180b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017d20:	b200      	sxth	r0, r0
 8017d22:	fb0c 3300 	mla	r3, ip, r0, r3
 8017d26:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017d28:	eb04 0803 	add.w	r8, r4, r3
 8017d2c:	5ce3      	ldrb	r3, [r4, r3]
 8017d2e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8017d32:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8017d36:	2a00      	cmp	r2, #0
 8017d38:	f000 81af 	beq.w	801809a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8017d3c:	f898 c001 	ldrb.w	ip, [r8, #1]
 8017d40:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8017d44:	940e      	str	r4, [sp, #56]	; 0x38
 8017d46:	0e24      	lsrs	r4, r4, #24
 8017d48:	9415      	str	r4, [sp, #84]	; 0x54
 8017d4a:	b179      	cbz	r1, 8017d6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8017d4c:	eb08 0c00 	add.w	ip, r8, r0
 8017d50:	f818 0000 	ldrb.w	r0, [r8, r0]
 8017d54:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8017d58:	900a      	str	r0, [sp, #40]	; 0x28
 8017d5a:	0e00      	lsrs	r0, r0, #24
 8017d5c:	9013      	str	r0, [sp, #76]	; 0x4c
 8017d5e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8017d62:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8017d66:	900f      	str	r0, [sp, #60]	; 0x3c
 8017d68:	0e00      	lsrs	r0, r0, #24
 8017d6a:	9016      	str	r0, [sp, #88]	; 0x58
 8017d6c:	b292      	uxth	r2, r2
 8017d6e:	b289      	uxth	r1, r1
 8017d70:	fb02 f901 	mul.w	r9, r2, r1
 8017d74:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017d78:	0112      	lsls	r2, r2, #4
 8017d7a:	eba2 0809 	sub.w	r8, r2, r9
 8017d7e:	b289      	uxth	r1, r1
 8017d80:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8017d84:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017d86:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017d88:	fa1f f888 	uxth.w	r8, r8
 8017d8c:	1a52      	subs	r2, r2, r1
 8017d8e:	b292      	uxth	r2, r2
 8017d90:	fb08 f000 	mul.w	r0, r8, r0
 8017d94:	fb02 000e 	mla	r0, r2, lr, r0
 8017d98:	fb01 0004 	mla	r0, r1, r4, r0
 8017d9c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017d9e:	fb09 0004 	mla	r0, r9, r4, r0
 8017da2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017da6:	2800      	cmp	r0, #0
 8017da8:	f000 80fa 	beq.w	8017fa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017dac:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8017db0:	d01b      	beq.n	8017dea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8017db2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017db6:	fb0e fa0a 	mul.w	sl, lr, sl
 8017dba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017dbe:	fb0e fe03 	mul.w	lr, lr, r3
 8017dc2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017dc6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017dca:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017dce:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8017dd2:	4453      	add	r3, sl
 8017dd4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8017dd8:	0a1b      	lsrs	r3, r3, #8
 8017dda:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017dde:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017de2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017de6:	ea43 030c 	orr.w	r3, r3, ip
 8017dea:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017dec:	2cff      	cmp	r4, #255	; 0xff
 8017dee:	d021      	beq.n	8017e34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8017df0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017df2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017df6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017df8:	fb04 fb0b 	mul.w	fp, r4, fp
 8017dfc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017dfe:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017e02:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017e04:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017e08:	fb04 fa0a 	mul.w	sl, r4, sl
 8017e0c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e10:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017e14:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017e18:	44de      	add	lr, fp
 8017e1a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017e1e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017e22:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017e26:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e2a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017e2e:	ea4e 040a 	orr.w	r4, lr, sl
 8017e32:	940e      	str	r4, [sp, #56]	; 0x38
 8017e34:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017e36:	2cff      	cmp	r4, #255	; 0xff
 8017e38:	d021      	beq.n	8017e7e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8017e3a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017e3c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017e40:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017e42:	fb04 fb0b 	mul.w	fp, r4, fp
 8017e46:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017e48:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017e4c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017e4e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017e52:	fb04 fa0a 	mul.w	sl, r4, sl
 8017e56:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e5a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017e5e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017e62:	44de      	add	lr, fp
 8017e64:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017e68:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017e6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017e70:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e74:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017e78:	ea4e 040a 	orr.w	r4, lr, sl
 8017e7c:	940a      	str	r4, [sp, #40]	; 0x28
 8017e7e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017e80:	2cff      	cmp	r4, #255	; 0xff
 8017e82:	d021      	beq.n	8017ec8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8017e84:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017e86:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017e8a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017e8c:	fb04 fb0b 	mul.w	fp, r4, fp
 8017e90:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017e92:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017e96:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017e98:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017e9c:	fb04 fa0a 	mul.w	sl, r4, sl
 8017ea0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017ea4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017ea8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017eac:	44de      	add	lr, fp
 8017eae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017eb2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017eb6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017eba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017ebe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017ec2:	ea4e 040a 	orr.w	r4, lr, sl
 8017ec6:	940f      	str	r4, [sp, #60]	; 0x3c
 8017ec8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017eca:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017ece:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017ed0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8017ed4:	fb08 fc0c 	mul.w	ip, r8, ip
 8017ed8:	fb02 cc0e 	mla	ip, r2, lr, ip
 8017edc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017ee0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017ee2:	fb01 cc0e 	mla	ip, r1, lr, ip
 8017ee6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017eea:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017eec:	fb09 cc0e 	mla	ip, r9, lr, ip
 8017ef0:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8017ef4:	fb08 f80e 	mul.w	r8, r8, lr
 8017ef8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017efc:	fb02 8303 	mla	r3, r2, r3, r8
 8017f00:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017f02:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017f04:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8017f08:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017f0a:	fb01 330a 	mla	r3, r1, sl, r3
 8017f0e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8017f12:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017f14:	fb09 3901 	mla	r9, r9, r1, r3
 8017f18:	4342      	muls	r2, r0
 8017f1a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017f1e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017f22:	883b      	ldrh	r3, [r7, #0]
 8017f24:	1c50      	adds	r0, r2, #1
 8017f26:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017f2a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8017f2e:	ea4c 0c09 	orr.w	ip, ip, r9
 8017f32:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017f36:	1219      	asrs	r1, r3, #8
 8017f38:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8017f3c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8017f40:	b2c0      	uxtb	r0, r0
 8017f42:	fb12 f204 	smulbb	r2, r2, r4
 8017f46:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017f4a:	fb01 2100 	mla	r1, r1, r0, r2
 8017f4e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8017f52:	10da      	asrs	r2, r3, #3
 8017f54:	fa5f fc8c 	uxtb.w	ip, ip
 8017f58:	00db      	lsls	r3, r3, #3
 8017f5a:	fb1c fc04 	smulbb	ip, ip, r4
 8017f5e:	b2db      	uxtb	r3, r3
 8017f60:	b289      	uxth	r1, r1
 8017f62:	fb03 c300 	mla	r3, r3, r0, ip
 8017f66:	fa1f fc83 	uxth.w	ip, r3
 8017f6a:	1c4b      	adds	r3, r1, #1
 8017f6c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017f70:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017f74:	fb1e fe04 	smulbb	lr, lr, r4
 8017f78:	f10c 0301 	add.w	r3, ip, #1
 8017f7c:	fb02 e200 	mla	r2, r2, r0, lr
 8017f80:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8017f84:	b292      	uxth	r2, r2
 8017f86:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8017f8a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017f8e:	430b      	orrs	r3, r1
 8017f90:	1c51      	adds	r1, r2, #1
 8017f92:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017f96:	0952      	lsrs	r2, r2, #5
 8017f98:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017f9c:	4313      	orrs	r3, r2
 8017f9e:	803b      	strh	r3, [r7, #0]
 8017fa0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017fa2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017fa4:	441a      	add	r2, r3
 8017fa6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017fa8:	9229      	str	r2, [sp, #164]	; 0xa4
 8017faa:	441d      	add	r5, r3
 8017fac:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8017fae:	3b01      	subs	r3, #1
 8017fb0:	3702      	adds	r7, #2
 8017fb2:	931a      	str	r3, [sp, #104]	; 0x68
 8017fb4:	e694      	b.n	8017ce0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017fb6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017fb8:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8017fba:	441c      	add	r4, r3
 8017fbc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017fbe:	9429      	str	r4, [sp, #164]	; 0xa4
 8017fc0:	441d      	add	r5, r3
 8017fc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017fc4:	3b01      	subs	r3, #1
 8017fc6:	9309      	str	r3, [sp, #36]	; 0x24
 8017fc8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017fca:	3302      	adds	r3, #2
 8017fcc:	930c      	str	r3, [sp, #48]	; 0x30
 8017fce:	e666      	b.n	8017c9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8017fd0:	d024      	beq.n	801801c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8017fd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017fd4:	982b      	ldr	r0, [sp, #172]	; 0xac
 8017fd6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8017fd8:	3b01      	subs	r3, #1
 8017fda:	fb00 4003 	mla	r0, r0, r3, r4
 8017fde:	1400      	asrs	r0, r0, #16
 8017fe0:	f53f ae7b 	bmi.w	8017cda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8017fe4:	3901      	subs	r1, #1
 8017fe6:	4288      	cmp	r0, r1
 8017fe8:	f6bf ae77 	bge.w	8017cda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8017fec:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8017fee:	fb01 5303 	mla	r3, r1, r3, r5
 8017ff2:	141b      	asrs	r3, r3, #16
 8017ff4:	f53f ae71 	bmi.w	8017cda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8017ff8:	3a01      	subs	r2, #1
 8017ffa:	4293      	cmp	r3, r2
 8017ffc:	f6bf ae6d 	bge.w	8017cda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018000:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8018004:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8018008:	f1bb 0f00 	cmp.w	fp, #0
 801800c:	dc70      	bgt.n	80180f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801800e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018010:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018014:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018016:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801801a:	930c      	str	r3, [sp, #48]	; 0x30
 801801c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801801e:	2b00      	cmp	r3, #0
 8018020:	f340 81be 	ble.w	80183a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8018024:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018028:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801802c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018030:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018032:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018036:	ee31 1a05 	vadd.f32	s2, s2, s10
 801803a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801803e:	eef0 6a62 	vmov.f32	s13, s5
 8018042:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018046:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801804a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801804e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8018052:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018056:	eef0 6a43 	vmov.f32	s13, s6
 801805a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801805e:	ee12 2a90 	vmov	r2, s5
 8018062:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018066:	fb92 f3f3 	sdiv	r3, r2, r3
 801806a:	ee13 2a10 	vmov	r2, s6
 801806e:	932b      	str	r3, [sp, #172]	; 0xac
 8018070:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018072:	fb92 f3f3 	sdiv	r3, r2, r3
 8018076:	932c      	str	r3, [sp, #176]	; 0xb0
 8018078:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801807a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801807c:	3b01      	subs	r3, #1
 801807e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018082:	9319      	str	r3, [sp, #100]	; 0x64
 8018084:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018086:	bf08      	it	eq
 8018088:	4613      	moveq	r3, r2
 801808a:	ee16 5a90 	vmov	r5, s13
 801808e:	9309      	str	r3, [sp, #36]	; 0x24
 8018090:	eeb0 3a67 	vmov.f32	s6, s15
 8018094:	eef0 2a47 	vmov.f32	s5, s14
 8018098:	e5f3      	b.n	8017c82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801809a:	2900      	cmp	r1, #0
 801809c:	f43f ae66 	beq.w	8017d6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80180a0:	f818 0000 	ldrb.w	r0, [r8, r0]
 80180a4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80180a8:	900a      	str	r0, [sp, #40]	; 0x28
 80180aa:	0e00      	lsrs	r0, r0, #24
 80180ac:	9013      	str	r0, [sp, #76]	; 0x4c
 80180ae:	e65d      	b.n	8017d6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80180b0:	f113 0801 	adds.w	r8, r3, #1
 80180b4:	f53f af74 	bmi.w	8017fa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80180b8:	4540      	cmp	r0, r8
 80180ba:	f6ff af71 	blt.w	8017fa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80180be:	f11c 0801 	adds.w	r8, ip, #1
 80180c2:	f53f af6d 	bmi.w	8017fa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80180c6:	45c6      	cmp	lr, r8
 80180c8:	f6ff af6a 	blt.w	8017fa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80180cc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80180ce:	9302      	str	r3, [sp, #8]
 80180d0:	b200      	sxth	r0, r0
 80180d2:	fa0f f38e 	sxth.w	r3, lr
 80180d6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80180da:	e9cd c203 	strd	ip, r2, [sp, #12]
 80180de:	9301      	str	r3, [sp, #4]
 80180e0:	9000      	str	r0, [sp, #0]
 80180e2:	4633      	mov	r3, r6
 80180e4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80180e6:	981d      	ldr	r0, [sp, #116]	; 0x74
 80180e8:	4639      	mov	r1, r7
 80180ea:	f7ff fc62 	bl	80179b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80180ee:	e757      	b.n	8017fa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80180f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80180f2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80180f4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80180f8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80180fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80180fe:	1427      	asrs	r7, r4, #16
 8018100:	142b      	asrs	r3, r5, #16
 8018102:	fb01 7303 	mla	r3, r1, r3, r7
 8018106:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018108:	18e7      	adds	r7, r4, r3
 801810a:	5ce3      	ldrb	r3, [r4, r3]
 801810c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018110:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018114:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018118:	2a00      	cmp	r2, #0
 801811a:	f000 8137 	beq.w	801838c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801811e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8018122:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8018126:	9410      	str	r4, [sp, #64]	; 0x40
 8018128:	0e24      	lsrs	r4, r4, #24
 801812a:	9417      	str	r4, [sp, #92]	; 0x5c
 801812c:	b170      	cbz	r0, 801814c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801812e:	eb07 0e01 	add.w	lr, r7, r1
 8018132:	5c79      	ldrb	r1, [r7, r1]
 8018134:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018138:	910b      	str	r1, [sp, #44]	; 0x2c
 801813a:	0e09      	lsrs	r1, r1, #24
 801813c:	9114      	str	r1, [sp, #80]	; 0x50
 801813e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8018142:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018146:	9111      	str	r1, [sp, #68]	; 0x44
 8018148:	0e09      	lsrs	r1, r1, #24
 801814a:	9118      	str	r1, [sp, #96]	; 0x60
 801814c:	b292      	uxth	r2, r2
 801814e:	b280      	uxth	r0, r0
 8018150:	fb02 f800 	mul.w	r8, r2, r0
 8018154:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8018158:	0112      	lsls	r2, r2, #4
 801815a:	eba2 0e08 	sub.w	lr, r2, r8
 801815e:	b280      	uxth	r0, r0
 8018160:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8018164:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8018166:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018168:	fa1f fe8e 	uxth.w	lr, lr
 801816c:	1a12      	subs	r2, r2, r0
 801816e:	b292      	uxth	r2, r2
 8018170:	fb0e f101 	mul.w	r1, lr, r1
 8018174:	fb02 110c 	mla	r1, r2, ip, r1
 8018178:	fb00 1104 	mla	r1, r0, r4, r1
 801817c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801817e:	fb08 1104 	mla	r1, r8, r4, r1
 8018182:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018186:	2900      	cmp	r1, #0
 8018188:	f000 80f5 	beq.w	8018376 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801818c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018190:	d019      	beq.n	80181c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8018192:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8018196:	fb0c fa0a 	mul.w	sl, ip, sl
 801819a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801819e:	fb0c fc03 	mul.w	ip, ip, r3
 80181a2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80181a6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80181aa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80181ae:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80181b2:	4453      	add	r3, sl
 80181b4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80181b8:	0a1b      	lsrs	r3, r3, #8
 80181ba:	0a3f      	lsrs	r7, r7, #8
 80181bc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80181c0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80181c4:	433b      	orrs	r3, r7
 80181c6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80181c8:	2cff      	cmp	r4, #255	; 0xff
 80181ca:	d020      	beq.n	801820e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80181cc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80181ce:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80181d2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80181d4:	4367      	muls	r7, r4
 80181d6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80181d8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80181dc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80181de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80181e2:	fb04 fa0a 	mul.w	sl, r4, sl
 80181e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80181ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80181ee:	44bc      	add	ip, r7
 80181f0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80181f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80181f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80181fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018200:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018204:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018208:	ea4c 040a 	orr.w	r4, ip, sl
 801820c:	9410      	str	r4, [sp, #64]	; 0x40
 801820e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018210:	2cff      	cmp	r4, #255	; 0xff
 8018212:	d020      	beq.n	8018256 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8018214:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018216:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801821a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801821c:	4367      	muls	r7, r4
 801821e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018220:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018224:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018226:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801822a:	fb04 fa0a 	mul.w	sl, r4, sl
 801822e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018232:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018236:	44bc      	add	ip, r7
 8018238:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801823c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018240:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018244:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018248:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801824c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018250:	ea4c 040a 	orr.w	r4, ip, sl
 8018254:	940b      	str	r4, [sp, #44]	; 0x2c
 8018256:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8018258:	2cff      	cmp	r4, #255	; 0xff
 801825a:	d020      	beq.n	801829e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801825c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801825e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018262:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8018264:	4367      	muls	r7, r4
 8018266:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018268:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801826c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801826e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018272:	fb04 fa0a 	mul.w	sl, r4, sl
 8018276:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801827a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801827e:	44bc      	add	ip, r7
 8018280:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018284:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018288:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801828c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018290:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018294:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018298:	ea4c 040a 	orr.w	r4, ip, sl
 801829c:	9411      	str	r4, [sp, #68]	; 0x44
 801829e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80182a0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80182a4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80182a6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80182aa:	fb0e f707 	mul.w	r7, lr, r7
 80182ae:	fb02 770c 	mla	r7, r2, ip, r7
 80182b2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80182b6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80182b8:	fb00 770c 	mla	r7, r0, ip, r7
 80182bc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80182c0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80182c2:	fb08 770c 	mla	r7, r8, ip, r7
 80182c6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80182ca:	fb0e fe0c 	mul.w	lr, lr, ip
 80182ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80182d2:	fb02 e303 	mla	r3, r2, r3, lr
 80182d6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80182d8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80182da:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80182de:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80182e0:	fb00 330a 	mla	r3, r0, sl, r3
 80182e4:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80182e8:	fb08 3c0c 	mla	ip, r8, ip, r3
 80182ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80182ee:	f8b9 0000 	ldrh.w	r0, [r9]
 80182f2:	434b      	muls	r3, r1
 80182f4:	0a3f      	lsrs	r7, r7, #8
 80182f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80182fa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80182fe:	1c59      	adds	r1, r3, #1
 8018300:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018304:	ea47 070c 	orr.w	r7, r7, ip
 8018308:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801830c:	1202      	asrs	r2, r0, #8
 801830e:	0c3b      	lsrs	r3, r7, #16
 8018310:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8018314:	b2c9      	uxtb	r1, r1
 8018316:	fb13 f304 	smulbb	r3, r3, r4
 801831a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801831e:	fb02 3201 	mla	r2, r2, r1, r3
 8018322:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8018326:	10c3      	asrs	r3, r0, #3
 8018328:	b2ff      	uxtb	r7, r7
 801832a:	00c0      	lsls	r0, r0, #3
 801832c:	b292      	uxth	r2, r2
 801832e:	fb1c fc04 	smulbb	ip, ip, r4
 8018332:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8018336:	b2c0      	uxtb	r0, r0
 8018338:	fb17 f704 	smulbb	r7, r7, r4
 801833c:	fb03 c301 	mla	r3, r3, r1, ip
 8018340:	fb00 7001 	mla	r0, r0, r1, r7
 8018344:	f102 0c01 	add.w	ip, r2, #1
 8018348:	b280      	uxth	r0, r0
 801834a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801834e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8018352:	1c42      	adds	r2, r0, #1
 8018354:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8018358:	b29b      	uxth	r3, r3
 801835a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801835e:	ea42 020c 	orr.w	r2, r2, ip
 8018362:	f103 0c01 	add.w	ip, r3, #1
 8018366:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801836a:	095b      	lsrs	r3, r3, #5
 801836c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018370:	431a      	orrs	r2, r3
 8018372:	f8a9 2000 	strh.w	r2, [r9]
 8018376:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018378:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801837a:	441a      	add	r2, r3
 801837c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801837e:	9229      	str	r2, [sp, #164]	; 0xa4
 8018380:	f109 0902 	add.w	r9, r9, #2
 8018384:	441d      	add	r5, r3
 8018386:	f10b 3bff 	add.w	fp, fp, #4294967295
 801838a:	e63d      	b.n	8018008 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801838c:	2800      	cmp	r0, #0
 801838e:	f43f aedd 	beq.w	801814c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8018392:	5c79      	ldrb	r1, [r7, r1]
 8018394:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018398:	910b      	str	r1, [sp, #44]	; 0x2c
 801839a:	0e09      	lsrs	r1, r1, #24
 801839c:	9114      	str	r1, [sp, #80]	; 0x50
 801839e:	e6d5      	b.n	801814c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80183a0:	b01f      	add	sp, #124	; 0x7c
 80183a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080183a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80183a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183aa:	b089      	sub	sp, #36	; 0x24
 80183ac:	9101      	str	r1, [sp, #4]
 80183ae:	9801      	ldr	r0, [sp, #4]
 80183b0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 80183b4:	8800      	ldrh	r0, [r0, #0]
 80183b6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 80183ba:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80183be:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 80183c2:	1206      	asrs	r6, r0, #8
 80183c4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 80183c8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80183cc:	9602      	str	r6, [sp, #8]
 80183ce:	10c6      	asrs	r6, r0, #3
 80183d0:	00c0      	lsls	r0, r0, #3
 80183d2:	b2c0      	uxtb	r0, r0
 80183d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80183d8:	9004      	str	r0, [sp, #16]
 80183da:	2f00      	cmp	r7, #0
 80183dc:	fb07 100c 	mla	r0, r7, ip, r1
 80183e0:	9603      	str	r6, [sp, #12]
 80183e2:	eb02 0e00 	add.w	lr, r2, r0
 80183e6:	f2c0 810a 	blt.w	80185fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80183ea:	45b8      	cmp	r8, r7
 80183ec:	f340 8107 	ble.w	80185fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80183f0:	2900      	cmp	r1, #0
 80183f2:	f2c0 8102 	blt.w	80185fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80183f6:	458c      	cmp	ip, r1
 80183f8:	f340 80ff 	ble.w	80185fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80183fc:	5c12      	ldrb	r2, [r2, r0]
 80183fe:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8018402:	1c4a      	adds	r2, r1, #1
 8018404:	f100 80fe 	bmi.w	8018604 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8018408:	4594      	cmp	ip, r2
 801840a:	f340 80fb 	ble.w	8018604 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801840e:	2d00      	cmp	r5, #0
 8018410:	f000 80fa 	beq.w	8018608 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8018414:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8018418:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801841c:	3701      	adds	r7, #1
 801841e:	f100 80f7 	bmi.w	8018610 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8018422:	45b8      	cmp	r8, r7
 8018424:	f340 80f4 	ble.w	8018610 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8018428:	2c00      	cmp	r4, #0
 801842a:	f000 80f4 	beq.w	8018616 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801842e:	2900      	cmp	r1, #0
 8018430:	eb0e 020c 	add.w	r2, lr, ip
 8018434:	f2c0 80ea 	blt.w	801860c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8018438:	458c      	cmp	ip, r1
 801843a:	f340 80e7 	ble.w	801860c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801843e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8018442:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8018446:	3101      	adds	r1, #1
 8018448:	f100 80e8 	bmi.w	801861c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801844c:	458c      	cmp	ip, r1
 801844e:	f340 80e5 	ble.w	801861c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8018452:	2d00      	cmp	r5, #0
 8018454:	f000 80e4 	beq.w	8018620 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8018458:	7852      	ldrb	r2, [r2, #1]
 801845a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801845e:	0e0b      	lsrs	r3, r1, #24
 8018460:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8018464:	9300      	str	r3, [sp, #0]
 8018466:	b2a4      	uxth	r4, r4
 8018468:	b2ab      	uxth	r3, r5
 801846a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801846e:	fb03 f904 	mul.w	r9, r3, r4
 8018472:	fb0a f505 	mul.w	r5, sl, r5
 8018476:	011b      	lsls	r3, r3, #4
 8018478:	eba3 0e09 	sub.w	lr, r3, r9
 801847c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8018480:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8018484:	0a28      	lsrs	r0, r5, #8
 8018486:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801848a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801848e:	4405      	add	r5, r0
 8018490:	0a2d      	lsrs	r5, r5, #8
 8018492:	fb0a f303 	mul.w	r3, sl, r3
 8018496:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801849a:	9005      	str	r0, [sp, #20]
 801849c:	f503 7080 	add.w	r0, r3, #256	; 0x100
 80184a0:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80184a4:	0a1b      	lsrs	r3, r3, #8
 80184a6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80184aa:	9306      	str	r3, [sp, #24]
 80184ac:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 80184b0:	fb0b f303 	mul.w	r3, fp, r3
 80184b4:	0a1d      	lsrs	r5, r3, #8
 80184b6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80184ba:	ea4f 6817 	mov.w	r8, r7, lsr #24
 80184be:	fb0b f606 	mul.w	r6, fp, r6
 80184c2:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80184c6:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80184ca:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80184ce:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80184d2:	fb08 f707 	mul.w	r7, r8, r7
 80184d6:	441d      	add	r5, r3
 80184d8:	f506 7380 	add.w	r3, r6, #256	; 0x100
 80184dc:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80184e0:	f507 7380 	add.w	r3, r7, #256	; 0x100
 80184e4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80184e8:	fb08 fc0c 	mul.w	ip, r8, ip
 80184ec:	0a1b      	lsrs	r3, r3, #8
 80184ee:	9307      	str	r3, [sp, #28]
 80184f0:	ea4f 201c 	mov.w	r0, ip, lsr #8
 80184f4:	0e0b      	lsrs	r3, r1, #24
 80184f6:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 80184fa:	435f      	muls	r7, r3
 80184fc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018500:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018504:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8018508:	4460      	add	r0, ip
 801850a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801850e:	b2a4      	uxth	r4, r4
 8018510:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018514:	0a2d      	lsrs	r5, r5, #8
 8018516:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801851a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801851e:	fa1f fe8e 	uxth.w	lr, lr
 8018522:	4359      	muls	r1, r3
 8018524:	1b12      	subs	r2, r2, r4
 8018526:	9b05      	ldr	r3, [sp, #20]
 8018528:	44bc      	add	ip, r7
 801852a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801852e:	b292      	uxth	r2, r2
 8018530:	fb05 f50e 	mul.w	r5, r5, lr
 8018534:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018538:	fb03 5502 	mla	r5, r3, r2, r5
 801853c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018540:	9b06      	ldr	r3, [sp, #24]
 8018542:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8018546:	0a36      	lsrs	r6, r6, #8
 8018548:	0a00      	lsrs	r0, r0, #8
 801854a:	fb0c 5509 	mla	r5, ip, r9, r5
 801854e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018552:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8018556:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801855a:	fb00 5504 	mla	r5, r0, r4, r5
 801855e:	fb0e f606 	mul.w	r6, lr, r6
 8018562:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8018566:	0a09      	lsrs	r1, r1, #8
 8018568:	9b07      	ldr	r3, [sp, #28]
 801856a:	fb02 6000 	mla	r0, r2, r0, r6
 801856e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8018572:	fb09 0001 	mla	r0, r9, r1, r0
 8018576:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801857a:	fb0e fe0b 	mul.w	lr, lr, fp
 801857e:	fb04 0003 	mla	r0, r4, r3, r0
 8018582:	fb02 e20a 	mla	r2, r2, sl, lr
 8018586:	9b00      	ldr	r3, [sp, #0]
 8018588:	fb04 2408 	mla	r4, r4, r8, r2
 801858c:	fb09 4903 	mla	r9, r9, r3, r4
 8018590:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8018594:	9b02      	ldr	r3, [sp, #8]
 8018596:	9a04      	ldr	r2, [sp, #16]
 8018598:	fa5f f989 	uxtb.w	r9, r9
 801859c:	fb03 f109 	mul.w	r1, r3, r9
 80185a0:	9b03      	ldr	r3, [sp, #12]
 80185a2:	0a2d      	lsrs	r5, r5, #8
 80185a4:	0a00      	lsrs	r0, r0, #8
 80185a6:	fb03 f309 	mul.w	r3, r3, r9
 80185aa:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80185ae:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80185b2:	4305      	orrs	r5, r0
 80185b4:	fb02 f909 	mul.w	r9, r2, r9
 80185b8:	1c58      	adds	r0, r3, #1
 80185ba:	1c4a      	adds	r2, r1, #1
 80185bc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80185c0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80185c4:	0a2b      	lsrs	r3, r5, #8
 80185c6:	0c2a      	lsrs	r2, r5, #16
 80185c8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80185cc:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80185d0:	00db      	lsls	r3, r3, #3
 80185d2:	0212      	lsls	r2, r2, #8
 80185d4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80185d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80185dc:	4313      	orrs	r3, r2
 80185de:	f109 0201 	add.w	r2, r9, #1
 80185e2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80185e6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80185ea:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80185ee:	431d      	orrs	r5, r3
 80185f0:	9b01      	ldr	r3, [sp, #4]
 80185f2:	801d      	strh	r5, [r3, #0]
 80185f4:	b009      	add	sp, #36	; 0x24
 80185f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80185fa:	2000      	movs	r0, #0
 80185fc:	e701      	b.n	8018402 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 80185fe:	2600      	movs	r6, #0
 8018600:	4630      	mov	r0, r6
 8018602:	e70b      	b.n	801841c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8018604:	2600      	movs	r6, #0
 8018606:	e709      	b.n	801841c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8018608:	462e      	mov	r6, r5
 801860a:	e707      	b.n	801841c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801860c:	2700      	movs	r7, #0
 801860e:	e71a      	b.n	8018446 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8018610:	2100      	movs	r1, #0
 8018612:	460f      	mov	r7, r1
 8018614:	e723      	b.n	801845e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8018616:	4621      	mov	r1, r4
 8018618:	4627      	mov	r7, r4
 801861a:	e720      	b.n	801845e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801861c:	2100      	movs	r1, #0
 801861e:	e71e      	b.n	801845e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8018620:	4629      	mov	r1, r5
 8018622:	e71c      	b.n	801845e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08018624 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018628:	b09b      	sub	sp, #108	; 0x6c
 801862a:	9218      	str	r2, [sp, #96]	; 0x60
 801862c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801862e:	9116      	str	r1, [sp, #88]	; 0x58
 8018630:	9307      	str	r3, [sp, #28]
 8018632:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8018636:	9019      	str	r0, [sp, #100]	; 0x64
 8018638:	6850      	ldr	r0, [r2, #4]
 801863a:	6812      	ldr	r2, [r2, #0]
 801863c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801863e:	fb00 1303 	mla	r3, r0, r3, r1
 8018642:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018646:	930a      	str	r3, [sp, #40]	; 0x28
 8018648:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801864a:	681b      	ldr	r3, [r3, #0]
 801864c:	930f      	str	r3, [sp, #60]	; 0x3c
 801864e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018650:	685e      	ldr	r6, [r3, #4]
 8018652:	3604      	adds	r6, #4
 8018654:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018656:	2b00      	cmp	r3, #0
 8018658:	dc03      	bgt.n	8018662 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801865a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801865c:	2b00      	cmp	r3, #0
 801865e:	f340 8373 	ble.w	8018d48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8018662:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018664:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018668:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801866c:	1e48      	subs	r0, r1, #1
 801866e:	1e57      	subs	r7, r2, #1
 8018670:	9b07      	ldr	r3, [sp, #28]
 8018672:	2b00      	cmp	r3, #0
 8018674:	f340 8190 	ble.w	8018998 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018678:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801867a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801867e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8018682:	d406      	bmi.n	8018692 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018684:	4584      	cmp	ip, r0
 8018686:	da04      	bge.n	8018692 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018688:	2b00      	cmp	r3, #0
 801868a:	db02      	blt.n	8018692 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801868c:	42bb      	cmp	r3, r7
 801868e:	f2c0 8184 	blt.w	801899a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8018692:	f11c 0c01 	adds.w	ip, ip, #1
 8018696:	f100 8172 	bmi.w	801897e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801869a:	4561      	cmp	r1, ip
 801869c:	f2c0 816f 	blt.w	801897e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80186a0:	3301      	adds	r3, #1
 80186a2:	f100 816c 	bmi.w	801897e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80186a6:	429a      	cmp	r2, r3
 80186a8:	f2c0 8169 	blt.w	801897e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80186ac:	9b07      	ldr	r3, [sp, #28]
 80186ae:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80186b0:	9317      	str	r3, [sp, #92]	; 0x5c
 80186b2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80186b4:	2b00      	cmp	r3, #0
 80186b6:	f340 818e 	ble.w	80189d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 80186ba:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80186bc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80186c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80186c2:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80186c6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80186c8:	141b      	asrs	r3, r3, #16
 80186ca:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80186ce:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80186d2:	f100 81d1 	bmi.w	8018a78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80186d6:	f101 38ff 	add.w	r8, r1, #4294967295
 80186da:	4543      	cmp	r3, r8
 80186dc:	f280 81cc 	bge.w	8018a78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80186e0:	f1bc 0f00 	cmp.w	ip, #0
 80186e4:	f2c0 81c8 	blt.w	8018a78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80186e8:	f10e 38ff 	add.w	r8, lr, #4294967295
 80186ec:	45c4      	cmp	ip, r8
 80186ee:	f280 81c3 	bge.w	8018a78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80186f2:	b209      	sxth	r1, r1
 80186f4:	fb0c 3301 	mla	r3, ip, r1, r3
 80186f8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80186fa:	eb04 0803 	add.w	r8, r4, r3
 80186fe:	5ce3      	ldrb	r3, [r4, r3]
 8018700:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018704:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8018708:	2a00      	cmp	r2, #0
 801870a:	f000 81aa 	beq.w	8018a62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801870e:	f898 c001 	ldrb.w	ip, [r8, #1]
 8018712:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8018716:	940b      	str	r4, [sp, #44]	; 0x2c
 8018718:	0e24      	lsrs	r4, r4, #24
 801871a:	9412      	str	r4, [sp, #72]	; 0x48
 801871c:	b178      	cbz	r0, 801873e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801871e:	eb08 0c01 	add.w	ip, r8, r1
 8018722:	f818 1001 	ldrb.w	r1, [r8, r1]
 8018726:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801872a:	9108      	str	r1, [sp, #32]
 801872c:	0e09      	lsrs	r1, r1, #24
 801872e:	9110      	str	r1, [sp, #64]	; 0x40
 8018730:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8018734:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018738:	910c      	str	r1, [sp, #48]	; 0x30
 801873a:	0e09      	lsrs	r1, r1, #24
 801873c:	9113      	str	r1, [sp, #76]	; 0x4c
 801873e:	b292      	uxth	r2, r2
 8018740:	b280      	uxth	r0, r0
 8018742:	fb02 f900 	mul.w	r9, r2, r0
 8018746:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801874a:	0112      	lsls	r2, r2, #4
 801874c:	eba2 0809 	sub.w	r8, r2, r9
 8018750:	b280      	uxth	r0, r0
 8018752:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8018756:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018758:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801875a:	fa1f f888 	uxth.w	r8, r8
 801875e:	1a12      	subs	r2, r2, r0
 8018760:	b292      	uxth	r2, r2
 8018762:	fb08 f101 	mul.w	r1, r8, r1
 8018766:	fb02 110e 	mla	r1, r2, lr, r1
 801876a:	fb00 1104 	mla	r1, r0, r4, r1
 801876e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018770:	fb09 1104 	mla	r1, r9, r4, r1
 8018774:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018778:	2900      	cmp	r1, #0
 801877a:	f000 80f5 	beq.w	8018968 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801877e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8018782:	d01b      	beq.n	80187bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8018784:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8018788:	fb0e fa0a 	mul.w	sl, lr, sl
 801878c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018790:	fb0e fe03 	mul.w	lr, lr, r3
 8018794:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018798:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801879c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80187a0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80187a4:	4453      	add	r3, sl
 80187a6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80187aa:	0a1b      	lsrs	r3, r3, #8
 80187ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80187b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80187b4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80187b8:	ea43 030c 	orr.w	r3, r3, ip
 80187bc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80187be:	2cff      	cmp	r4, #255	; 0xff
 80187c0:	d021      	beq.n	8018806 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 80187c2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80187c4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80187c8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80187ca:	fb04 fb0b 	mul.w	fp, r4, fp
 80187ce:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80187d0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80187d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80187d6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80187da:	fb04 fa0a 	mul.w	sl, r4, sl
 80187de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80187e2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80187e6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80187ea:	44de      	add	lr, fp
 80187ec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80187f0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80187f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80187f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80187fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018800:	ea4e 040a 	orr.w	r4, lr, sl
 8018804:	940b      	str	r4, [sp, #44]	; 0x2c
 8018806:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018808:	2cff      	cmp	r4, #255	; 0xff
 801880a:	d021      	beq.n	8018850 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801880c:	9c08      	ldr	r4, [sp, #32]
 801880e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8018812:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018814:	fb04 fb0b 	mul.w	fp, r4, fp
 8018818:	9c08      	ldr	r4, [sp, #32]
 801881a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801881e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018820:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018824:	fb04 fa0a 	mul.w	sl, r4, sl
 8018828:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801882c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018830:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018834:	44de      	add	lr, fp
 8018836:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801883a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801883e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018842:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018846:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801884a:	ea4e 040a 	orr.w	r4, lr, sl
 801884e:	9408      	str	r4, [sp, #32]
 8018850:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018852:	2cff      	cmp	r4, #255	; 0xff
 8018854:	d021      	beq.n	801889a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8018856:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018858:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801885c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801885e:	fb04 fb0b 	mul.w	fp, r4, fp
 8018862:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018864:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018868:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801886a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801886e:	fb04 fa0a 	mul.w	sl, r4, sl
 8018872:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018876:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801887a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801887e:	44de      	add	lr, fp
 8018880:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018884:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018888:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801888c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018890:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018894:	ea4e 040a 	orr.w	r4, lr, sl
 8018898:	940c      	str	r4, [sp, #48]	; 0x30
 801889a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801889c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80188a0:	9c08      	ldr	r4, [sp, #32]
 80188a2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80188a6:	fb08 fc0c 	mul.w	ip, r8, ip
 80188aa:	fb02 cc0e 	mla	ip, r2, lr, ip
 80188ae:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80188b2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80188b4:	fb00 cc0e 	mla	ip, r0, lr, ip
 80188b8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80188bc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80188be:	fb09 cc0e 	mla	ip, r9, lr, ip
 80188c2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80188c6:	fb08 f80e 	mul.w	r8, r8, lr
 80188ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80188ce:	fb02 8303 	mla	r3, r2, r3, r8
 80188d2:	9a08      	ldr	r2, [sp, #32]
 80188d4:	f8b7 8000 	ldrh.w	r8, [r7]
 80188d8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80188dc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80188de:	fb00 330a 	mla	r3, r0, sl, r3
 80188e2:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80188e6:	fb09 3900 	mla	r9, r9, r0, r3
 80188ea:	43c9      	mvns	r1, r1
 80188ec:	ea4f 2228 	mov.w	r2, r8, asr #8
 80188f0:	fa5f fe81 	uxtb.w	lr, r1
 80188f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80188f8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80188fc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018900:	fb02 f20e 	mul.w	r2, r2, lr
 8018904:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018908:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801890c:	ea4c 0c09 	orr.w	ip, ip, r9
 8018910:	1c53      	adds	r3, r2, #1
 8018912:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8018916:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801891a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801891e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018922:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018926:	4a63      	ldr	r2, [pc, #396]	; (8018ab4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8018928:	fb00 f00e 	mul.w	r0, r0, lr
 801892c:	b2db      	uxtb	r3, r3
 801892e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8018932:	1c43      	adds	r3, r0, #1
 8018934:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018938:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801893c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8018940:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018944:	b2c9      	uxtb	r1, r1
 8018946:	00db      	lsls	r3, r3, #3
 8018948:	fb01 f10e 	mul.w	r1, r1, lr
 801894c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018950:	4313      	orrs	r3, r2
 8018952:	1c4a      	adds	r2, r1, #1
 8018954:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018958:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801895c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8018960:	ea4c 0c03 	orr.w	ip, ip, r3
 8018964:	f8a7 c000 	strh.w	ip, [r7]
 8018968:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801896a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801896c:	441a      	add	r2, r3
 801896e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018970:	9225      	str	r2, [sp, #148]	; 0x94
 8018972:	441d      	add	r5, r3
 8018974:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018976:	3b01      	subs	r3, #1
 8018978:	3702      	adds	r7, #2
 801897a:	9317      	str	r3, [sp, #92]	; 0x5c
 801897c:	e699      	b.n	80186b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801897e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018980:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8018982:	441c      	add	r4, r3
 8018984:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018986:	9425      	str	r4, [sp, #148]	; 0x94
 8018988:	441d      	add	r5, r3
 801898a:	9b07      	ldr	r3, [sp, #28]
 801898c:	3b01      	subs	r3, #1
 801898e:	9307      	str	r3, [sp, #28]
 8018990:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018992:	3302      	adds	r3, #2
 8018994:	930a      	str	r3, [sp, #40]	; 0x28
 8018996:	e66b      	b.n	8018670 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8018998:	d024      	beq.n	80189e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801899a:	9b07      	ldr	r3, [sp, #28]
 801899c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801899e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80189a0:	3b01      	subs	r3, #1
 80189a2:	fb00 4003 	mla	r0, r0, r3, r4
 80189a6:	1400      	asrs	r0, r0, #16
 80189a8:	f53f ae80 	bmi.w	80186ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80189ac:	3901      	subs	r1, #1
 80189ae:	4288      	cmp	r0, r1
 80189b0:	f6bf ae7c 	bge.w	80186ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80189b4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80189b6:	fb01 5303 	mla	r3, r1, r3, r5
 80189ba:	141b      	asrs	r3, r3, #16
 80189bc:	f53f ae76 	bmi.w	80186ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80189c0:	3a01      	subs	r2, #1
 80189c2:	4293      	cmp	r3, r2
 80189c4:	f6bf ae72 	bge.w	80186ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80189c8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80189cc:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80189d0:	f1bb 0f00 	cmp.w	fp, #0
 80189d4:	dc70      	bgt.n	8018ab8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80189d6:	9b07      	ldr	r3, [sp, #28]
 80189d8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80189dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80189de:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80189e2:	930a      	str	r3, [sp, #40]	; 0x28
 80189e4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80189e6:	2b00      	cmp	r3, #0
 80189e8:	f340 81ae 	ble.w	8018d48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80189ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 80189f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80189f4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80189f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80189fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80189fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018a02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018a06:	eef0 6a62 	vmov.f32	s13, s5
 8018a0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018a0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018a12:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018a16:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8018a1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018a1e:	eef0 6a43 	vmov.f32	s13, s6
 8018a22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018a26:	ee12 2a90 	vmov	r2, s5
 8018a2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018a2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a32:	ee13 2a10 	vmov	r2, s6
 8018a36:	9327      	str	r3, [sp, #156]	; 0x9c
 8018a38:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018a3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a3e:	9328      	str	r3, [sp, #160]	; 0xa0
 8018a40:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018a42:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8018a44:	3b01      	subs	r3, #1
 8018a46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018a4a:	9316      	str	r3, [sp, #88]	; 0x58
 8018a4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018a4e:	bf08      	it	eq
 8018a50:	4613      	moveq	r3, r2
 8018a52:	ee16 5a90 	vmov	r5, s13
 8018a56:	9307      	str	r3, [sp, #28]
 8018a58:	eeb0 3a67 	vmov.f32	s6, s15
 8018a5c:	eef0 2a47 	vmov.f32	s5, s14
 8018a60:	e5f8      	b.n	8018654 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018a62:	2800      	cmp	r0, #0
 8018a64:	f43f ae6b 	beq.w	801873e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8018a68:	f818 1001 	ldrb.w	r1, [r8, r1]
 8018a6c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018a70:	9108      	str	r1, [sp, #32]
 8018a72:	0e09      	lsrs	r1, r1, #24
 8018a74:	9110      	str	r1, [sp, #64]	; 0x40
 8018a76:	e662      	b.n	801873e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8018a78:	f113 0801 	adds.w	r8, r3, #1
 8018a7c:	f53f af74 	bmi.w	8018968 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018a80:	4541      	cmp	r1, r8
 8018a82:	f6ff af71 	blt.w	8018968 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018a86:	f11c 0801 	adds.w	r8, ip, #1
 8018a8a:	f53f af6d 	bmi.w	8018968 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018a8e:	45c6      	cmp	lr, r8
 8018a90:	f6ff af6a 	blt.w	8018968 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018a94:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8018a98:	b209      	sxth	r1, r1
 8018a9a:	fa0f f38e 	sxth.w	r3, lr
 8018a9e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8018aa2:	9301      	str	r3, [sp, #4]
 8018aa4:	9100      	str	r1, [sp, #0]
 8018aa6:	4633      	mov	r3, r6
 8018aa8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018aaa:	9819      	ldr	r0, [sp, #100]	; 0x64
 8018aac:	4639      	mov	r1, r7
 8018aae:	f7ff fc7a 	bl	80183a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8018ab2:	e759      	b.n	8018968 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018ab4:	fffff800 	.word	0xfffff800
 8018ab8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018aba:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8018abc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018ac0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018ac2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018ac6:	1427      	asrs	r7, r4, #16
 8018ac8:	142b      	asrs	r3, r5, #16
 8018aca:	fb01 7303 	mla	r3, r1, r3, r7
 8018ace:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018ad0:	18e7      	adds	r7, r4, r3
 8018ad2:	5ce3      	ldrb	r3, [r4, r3]
 8018ad4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018ad8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018adc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018ae0:	2a00      	cmp	r2, #0
 8018ae2:	f000 8127 	beq.w	8018d34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8018ae6:	f897 e001 	ldrb.w	lr, [r7, #1]
 8018aea:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8018aee:	940d      	str	r4, [sp, #52]	; 0x34
 8018af0:	0e24      	lsrs	r4, r4, #24
 8018af2:	9414      	str	r4, [sp, #80]	; 0x50
 8018af4:	b170      	cbz	r0, 8018b14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8018af6:	eb07 0e01 	add.w	lr, r7, r1
 8018afa:	5c79      	ldrb	r1, [r7, r1]
 8018afc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018b00:	9109      	str	r1, [sp, #36]	; 0x24
 8018b02:	0e09      	lsrs	r1, r1, #24
 8018b04:	9111      	str	r1, [sp, #68]	; 0x44
 8018b06:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8018b0a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018b0e:	910e      	str	r1, [sp, #56]	; 0x38
 8018b10:	0e09      	lsrs	r1, r1, #24
 8018b12:	9115      	str	r1, [sp, #84]	; 0x54
 8018b14:	b292      	uxth	r2, r2
 8018b16:	b280      	uxth	r0, r0
 8018b18:	fb02 f800 	mul.w	r8, r2, r0
 8018b1c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8018b20:	0112      	lsls	r2, r2, #4
 8018b22:	eba2 0e08 	sub.w	lr, r2, r8
 8018b26:	b280      	uxth	r0, r0
 8018b28:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8018b2c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018b2e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018b30:	fa1f fe8e 	uxth.w	lr, lr
 8018b34:	1a09      	subs	r1, r1, r0
 8018b36:	b289      	uxth	r1, r1
 8018b38:	fb0e f202 	mul.w	r2, lr, r2
 8018b3c:	fb01 220c 	mla	r2, r1, ip, r2
 8018b40:	fb00 2204 	mla	r2, r0, r4, r2
 8018b44:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018b46:	fb08 2204 	mla	r2, r8, r4, r2
 8018b4a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8018b4e:	2a00      	cmp	r2, #0
 8018b50:	f000 80e5 	beq.w	8018d1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8018b54:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018b58:	d019      	beq.n	8018b8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8018b5a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8018b5e:	fb0c fa0a 	mul.w	sl, ip, sl
 8018b62:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018b66:	fb0c fc03 	mul.w	ip, ip, r3
 8018b6a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018b6e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018b72:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018b76:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8018b7a:	4453      	add	r3, sl
 8018b7c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018b80:	0a1b      	lsrs	r3, r3, #8
 8018b82:	0a3f      	lsrs	r7, r7, #8
 8018b84:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018b88:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8018b8c:	433b      	orrs	r3, r7
 8018b8e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018b90:	2cff      	cmp	r4, #255	; 0xff
 8018b92:	d020      	beq.n	8018bd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8018b94:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018b96:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018b9a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018b9c:	4367      	muls	r7, r4
 8018b9e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018ba0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018ba4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018ba6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018baa:	fb04 fa0a 	mul.w	sl, r4, sl
 8018bae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018bb2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018bb6:	44bc      	add	ip, r7
 8018bb8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018bbc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018bc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018bc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018bc8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018bcc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018bd0:	ea4c 040a 	orr.w	r4, ip, sl
 8018bd4:	940d      	str	r4, [sp, #52]	; 0x34
 8018bd6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018bd8:	2cff      	cmp	r4, #255	; 0xff
 8018bda:	d020      	beq.n	8018c1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8018bdc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018bde:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018be2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018be4:	4367      	muls	r7, r4
 8018be6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018be8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018bec:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018bee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018bf2:	fb04 fa0a 	mul.w	sl, r4, sl
 8018bf6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018bfa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018bfe:	44bc      	add	ip, r7
 8018c00:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018c04:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018c08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018c0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018c10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018c14:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018c18:	ea4c 040a 	orr.w	r4, ip, sl
 8018c1c:	9409      	str	r4, [sp, #36]	; 0x24
 8018c1e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018c20:	2cff      	cmp	r4, #255	; 0xff
 8018c22:	d020      	beq.n	8018c66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8018c24:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018c26:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018c2a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018c2c:	4367      	muls	r7, r4
 8018c2e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018c30:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018c34:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018c36:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018c3a:	fb04 fa0a 	mul.w	sl, r4, sl
 8018c3e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018c42:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018c46:	44bc      	add	ip, r7
 8018c48:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018c4c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018c50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018c54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018c58:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018c5c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018c60:	ea4c 040a 	orr.w	r4, ip, sl
 8018c64:	940e      	str	r4, [sp, #56]	; 0x38
 8018c66:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018c68:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018c6c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018c6e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018c72:	fb0e f707 	mul.w	r7, lr, r7
 8018c76:	fb01 770c 	mla	r7, r1, ip, r7
 8018c7a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018c7e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018c80:	fb00 770c 	mla	r7, r0, ip, r7
 8018c84:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018c88:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018c8a:	fb08 770c 	mla	r7, r8, ip, r7
 8018c8e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8018c92:	fb0e fe0c 	mul.w	lr, lr, ip
 8018c96:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018c9a:	fb01 e303 	mla	r3, r1, r3, lr
 8018c9e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018ca0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8018ca4:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018ca6:	fb00 330a 	mla	r3, r0, sl, r3
 8018caa:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8018cae:	fb08 3c0c 	mla	ip, r8, ip, r3
 8018cb2:	f8b9 3000 	ldrh.w	r3, [r9]
 8018cb6:	43d2      	mvns	r2, r2
 8018cb8:	1218      	asrs	r0, r3, #8
 8018cba:	b2d2      	uxtb	r2, r2
 8018cbc:	10d9      	asrs	r1, r3, #3
 8018cbe:	0a3f      	lsrs	r7, r7, #8
 8018cc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018cc4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018cc8:	00db      	lsls	r3, r3, #3
 8018cca:	4350      	muls	r0, r2
 8018ccc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018cd0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018cd4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018cd8:	b2db      	uxtb	r3, r3
 8018cda:	ea47 070c 	orr.w	r7, r7, ip
 8018cde:	4351      	muls	r1, r2
 8018ce0:	4353      	muls	r3, r2
 8018ce2:	1c42      	adds	r2, r0, #1
 8018ce4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018ce8:	0c3a      	lsrs	r2, r7, #16
 8018cea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018cee:	4a18      	ldr	r2, [pc, #96]	; (8018d50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8018cf0:	b2c0      	uxtb	r0, r0
 8018cf2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8018cf6:	1c4a      	adds	r2, r1, #1
 8018cf8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018cfc:	0a3a      	lsrs	r2, r7, #8
 8018cfe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018d02:	00c9      	lsls	r1, r1, #3
 8018d04:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018d08:	4301      	orrs	r1, r0
 8018d0a:	1c58      	adds	r0, r3, #1
 8018d0c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018d10:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8018d14:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8018d18:	4308      	orrs	r0, r1
 8018d1a:	f8a9 0000 	strh.w	r0, [r9]
 8018d1e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018d20:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8018d22:	441a      	add	r2, r3
 8018d24:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018d26:	9225      	str	r2, [sp, #148]	; 0x94
 8018d28:	f109 0902 	add.w	r9, r9, #2
 8018d2c:	441d      	add	r5, r3
 8018d2e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018d32:	e64d      	b.n	80189d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8018d34:	2800      	cmp	r0, #0
 8018d36:	f43f aeed 	beq.w	8018b14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8018d3a:	5c79      	ldrb	r1, [r7, r1]
 8018d3c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018d40:	9109      	str	r1, [sp, #36]	; 0x24
 8018d42:	0e09      	lsrs	r1, r1, #24
 8018d44:	9111      	str	r1, [sp, #68]	; 0x44
 8018d46:	e6e5      	b.n	8018b14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8018d48:	b01b      	add	sp, #108	; 0x6c
 8018d4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d4e:	bf00      	nop
 8018d50:	fffff800 	.word	0xfffff800

08018d54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8018d54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d58:	b085      	sub	sp, #20
 8018d5a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8018d5e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8018d62:	9103      	str	r1, [sp, #12]
 8018d64:	fb00 7406 	mla	r4, r0, r6, r7
 8018d68:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8018d6c:	2800      	cmp	r0, #0
 8018d6e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8018d72:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8018d76:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8018d7a:	9501      	str	r5, [sp, #4]
 8018d7c:	eb03 0904 	add.w	r9, r3, r4
 8018d80:	f2c0 8150 	blt.w	8019024 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8018d84:	4583      	cmp	fp, r0
 8018d86:	f340 814d 	ble.w	8019024 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8018d8a:	2f00      	cmp	r7, #0
 8018d8c:	f2c0 8146 	blt.w	801901c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8018d90:	42be      	cmp	r6, r7
 8018d92:	f340 8143 	ble.w	801901c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8018d96:	f813 c004 	ldrb.w	ip, [r3, r4]
 8018d9a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8018d9e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018da2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8018da6:	4355      	muls	r5, r2
 8018da8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018dac:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8018db0:	fb0c f203 	mul.w	r2, ip, r3
 8018db4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8018db8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8018dbc:	441d      	add	r5, r3
 8018dbe:	f102 0320 	add.w	r3, r2, #32
 8018dc2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018dc6:	0a1b      	lsrs	r3, r3, #8
 8018dc8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8018dcc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018dd0:	431c      	orrs	r4, r3
 8018dd2:	1c7b      	adds	r3, r7, #1
 8018dd4:	f100 812b 	bmi.w	801902e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8018dd8:	429e      	cmp	r6, r3
 8018dda:	f340 8128 	ble.w	801902e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8018dde:	2900      	cmp	r1, #0
 8018de0:	f000 8128 	beq.w	8019034 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8018de4:	9a01      	ldr	r2, [sp, #4]
 8018de6:	f899 3001 	ldrb.w	r3, [r9, #1]
 8018dea:	8855      	ldrh	r5, [r2, #2]
 8018dec:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8018df0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8018df4:	fb08 f802 	mul.w	r8, r8, r2
 8018df8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018dfc:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8018e00:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8018e04:	435d      	muls	r5, r3
 8018e06:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018e0a:	44d0      	add	r8, sl
 8018e0c:	f105 0a20 	add.w	sl, r5, #32
 8018e10:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8018e14:	0a2d      	lsrs	r5, r5, #8
 8018e16:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8018e1a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018e1e:	432a      	orrs	r2, r5
 8018e20:	3001      	adds	r0, #1
 8018e22:	f100 810d 	bmi.w	8019040 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8018e26:	4583      	cmp	fp, r0
 8018e28:	f340 810a 	ble.w	8019040 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8018e2c:	f1be 0f00 	cmp.w	lr, #0
 8018e30:	f000 810b 	beq.w	801904a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8018e34:	2f00      	cmp	r7, #0
 8018e36:	f2c0 8100 	blt.w	801903a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8018e3a:	42be      	cmp	r6, r7
 8018e3c:	f340 80fd 	ble.w	801903a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8018e40:	9801      	ldr	r0, [sp, #4]
 8018e42:	f819 5006 	ldrb.w	r5, [r9, r6]
 8018e46:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8018e4a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018e4e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8018e52:	fb0a fa00 	mul.w	sl, sl, r0
 8018e56:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8018e5a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018e5e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8018e62:	fb05 f808 	mul.w	r8, r5, r8
 8018e66:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8018e6a:	4482      	add	sl, r0
 8018e6c:	f108 0020 	add.w	r0, r8, #32
 8018e70:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8018e74:	0a00      	lsrs	r0, r0, #8
 8018e76:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8018e7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018e7e:	ea4b 0b00 	orr.w	fp, fp, r0
 8018e82:	3701      	adds	r7, #1
 8018e84:	f100 80e6 	bmi.w	8019054 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8018e88:	42be      	cmp	r6, r7
 8018e8a:	f340 80e3 	ble.w	8019054 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8018e8e:	2900      	cmp	r1, #0
 8018e90:	f000 80e3 	beq.w	801905a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8018e94:	3601      	adds	r6, #1
 8018e96:	9801      	ldr	r0, [sp, #4]
 8018e98:	f819 7006 	ldrb.w	r7, [r9, r6]
 8018e9c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8018ea0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8018ea4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8018ea8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018eac:	fb09 f906 	mul.w	r9, r9, r6
 8018eb0:	fb07 f800 	mul.w	r8, r7, r0
 8018eb4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8018eb8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8018ebc:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8018ec0:	44d1      	add	r9, sl
 8018ec2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8018ec6:	f108 0020 	add.w	r0, r8, #32
 8018eca:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8018ece:	0a00      	lsrs	r0, r0, #8
 8018ed0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018ed4:	4330      	orrs	r0, r6
 8018ed6:	b28e      	uxth	r6, r1
 8018ed8:	fa1f f98e 	uxth.w	r9, lr
 8018edc:	fb06 f809 	mul.w	r8, r6, r9
 8018ee0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8018ee4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8018ee8:	0136      	lsls	r6, r6, #4
 8018eea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018eee:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8018ef2:	9601      	str	r6, [sp, #4]
 8018ef4:	ea4a 0404 	orr.w	r4, sl, r4
 8018ef8:	fa1f f689 	uxth.w	r6, r9
 8018efc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8018f00:	fb11 f90e 	smulbb	r9, r1, lr
 8018f04:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8018f08:	9602      	str	r6, [sp, #8]
 8018f0a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018f0e:	4626      	mov	r6, r4
 8018f10:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018f14:	f1ce 0410 	rsb	r4, lr, #16
 8018f18:	1a64      	subs	r4, r4, r1
 8018f1a:	ea4a 0202 	orr.w	r2, sl, r2
 8018f1e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8018f22:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8018f26:	434a      	muls	r2, r1
 8018f28:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8018f2c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018f30:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018f34:	fb04 2406 	mla	r4, r4, r6, r2
 8018f38:	ea4a 0000 	orr.w	r0, sl, r0
 8018f3c:	fb09 4200 	mla	r2, r9, r0, r4
 8018f40:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8018f44:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018f48:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8018f4c:	ea44 0b0b 	orr.w	fp, r4, fp
 8018f50:	9c01      	ldr	r4, [sp, #4]
 8018f52:	9e02      	ldr	r6, [sp, #8]
 8018f54:	9903      	ldr	r1, [sp, #12]
 8018f56:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8018f5a:	1ba4      	subs	r4, r4, r6
 8018f5c:	9e01      	ldr	r6, [sp, #4]
 8018f5e:	8808      	ldrh	r0, [r1, #0]
 8018f60:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8018f64:	eba6 0608 	sub.w	r6, r6, r8
 8018f68:	b2b6      	uxth	r6, r6
 8018f6a:	b2a4      	uxth	r4, r4
 8018f6c:	4373      	muls	r3, r6
 8018f6e:	fb0c 3304 	mla	r3, ip, r4, r3
 8018f72:	9c02      	ldr	r4, [sp, #8]
 8018f74:	fb04 3505 	mla	r5, r4, r5, r3
 8018f78:	fb08 5707 	mla	r7, r8, r7, r5
 8018f7c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8018f80:	b289      	uxth	r1, r1
 8018f82:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8018f86:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8018f8a:	434f      	muls	r7, r1
 8018f8c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8018f90:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018f94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018f98:	1c7b      	adds	r3, r7, #1
 8018f9a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018f9e:	ea42 0e0e 	orr.w	lr, r2, lr
 8018fa2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8018fa6:	fa1f f28e 	uxth.w	r2, lr
 8018faa:	1203      	asrs	r3, r0, #8
 8018fac:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8018fb0:	b2ff      	uxtb	r7, r7
 8018fb2:	1215      	asrs	r5, r2, #8
 8018fb4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8018fb8:	fb13 f307 	smulbb	r3, r3, r7
 8018fbc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018fc0:	fb05 3501 	mla	r5, r5, r1, r3
 8018fc4:	10c3      	asrs	r3, r0, #3
 8018fc6:	10d4      	asrs	r4, r2, #3
 8018fc8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8018fcc:	fb13 f307 	smulbb	r3, r3, r7
 8018fd0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8018fd4:	fb04 3401 	mla	r4, r4, r1, r3
 8018fd8:	00c3      	lsls	r3, r0, #3
 8018fda:	00d2      	lsls	r2, r2, #3
 8018fdc:	b2db      	uxtb	r3, r3
 8018fde:	fb13 f307 	smulbb	r3, r3, r7
 8018fe2:	b2d2      	uxtb	r2, r2
 8018fe4:	fb02 3101 	mla	r1, r2, r1, r3
 8018fe8:	b2ad      	uxth	r5, r5
 8018fea:	b289      	uxth	r1, r1
 8018fec:	b2a4      	uxth	r4, r4
 8018fee:	1c6b      	adds	r3, r5, #1
 8018ff0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018ff4:	1c62      	adds	r2, r4, #1
 8018ff6:	1c4b      	adds	r3, r1, #1
 8018ff8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8018ffc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8019000:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019004:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019008:	0964      	lsrs	r4, r4, #5
 801900a:	432b      	orrs	r3, r5
 801900c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8019010:	9a03      	ldr	r2, [sp, #12]
 8019012:	4323      	orrs	r3, r4
 8019014:	8013      	strh	r3, [r2, #0]
 8019016:	b005      	add	sp, #20
 8019018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801901c:	f04f 0c00 	mov.w	ip, #0
 8019020:	4664      	mov	r4, ip
 8019022:	e6d6      	b.n	8018dd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8019024:	2300      	movs	r3, #0
 8019026:	469c      	mov	ip, r3
 8019028:	461a      	mov	r2, r3
 801902a:	461c      	mov	r4, r3
 801902c:	e6f8      	b.n	8018e20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801902e:	2300      	movs	r3, #0
 8019030:	461a      	mov	r2, r3
 8019032:	e6f5      	b.n	8018e20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8019034:	460b      	mov	r3, r1
 8019036:	460a      	mov	r2, r1
 8019038:	e6f2      	b.n	8018e20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801903a:	2500      	movs	r5, #0
 801903c:	46ab      	mov	fp, r5
 801903e:	e720      	b.n	8018e82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8019040:	2700      	movs	r7, #0
 8019042:	463d      	mov	r5, r7
 8019044:	4638      	mov	r0, r7
 8019046:	46bb      	mov	fp, r7
 8019048:	e745      	b.n	8018ed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801904a:	4677      	mov	r7, lr
 801904c:	4675      	mov	r5, lr
 801904e:	4670      	mov	r0, lr
 8019050:	46f3      	mov	fp, lr
 8019052:	e740      	b.n	8018ed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8019054:	2700      	movs	r7, #0
 8019056:	4638      	mov	r0, r7
 8019058:	e73d      	b.n	8018ed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801905a:	460f      	mov	r7, r1
 801905c:	4608      	mov	r0, r1
 801905e:	e73a      	b.n	8018ed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08019060 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019064:	b097      	sub	sp, #92	; 0x5c
 8019066:	9214      	str	r2, [sp, #80]	; 0x50
 8019068:	9308      	str	r3, [sp, #32]
 801906a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801906c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8019070:	9312      	str	r3, [sp, #72]	; 0x48
 8019072:	9111      	str	r1, [sp, #68]	; 0x44
 8019074:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8019078:	9015      	str	r0, [sp, #84]	; 0x54
 801907a:	6850      	ldr	r0, [r2, #4]
 801907c:	6812      	ldr	r2, [r2, #0]
 801907e:	fb00 1303 	mla	r3, r0, r3, r1
 8019082:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019086:	9309      	str	r3, [sp, #36]	; 0x24
 8019088:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801908a:	681b      	ldr	r3, [r3, #0]
 801908c:	930b      	str	r3, [sp, #44]	; 0x2c
 801908e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019090:	685b      	ldr	r3, [r3, #4]
 8019092:	930c      	str	r3, [sp, #48]	; 0x30
 8019094:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8019098:	930a      	str	r3, [sp, #40]	; 0x28
 801909a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801909c:	2b00      	cmp	r3, #0
 801909e:	dc03      	bgt.n	80190a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80190a0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80190a2:	2b00      	cmp	r3, #0
 80190a4:	f340 83cb 	ble.w	801983e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80190a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80190aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80190ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80190b2:	1e48      	subs	r0, r1, #1
 80190b4:	1e55      	subs	r5, r2, #1
 80190b6:	9b08      	ldr	r3, [sp, #32]
 80190b8:	2b00      	cmp	r3, #0
 80190ba:	f340 81a3 	ble.w	8019404 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80190be:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80190c0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80190c2:	1436      	asrs	r6, r6, #16
 80190c4:	ea4f 4323 	mov.w	r3, r3, asr #16
 80190c8:	d406      	bmi.n	80190d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80190ca:	4286      	cmp	r6, r0
 80190cc:	da04      	bge.n	80190d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80190ce:	2b00      	cmp	r3, #0
 80190d0:	db02      	blt.n	80190d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80190d2:	42ab      	cmp	r3, r5
 80190d4:	f2c0 8197 	blt.w	8019406 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80190d8:	3601      	adds	r6, #1
 80190da:	f100 8184 	bmi.w	80193e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80190de:	42b1      	cmp	r1, r6
 80190e0:	f2c0 8181 	blt.w	80193e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80190e4:	3301      	adds	r3, #1
 80190e6:	f100 817e 	bmi.w	80193e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80190ea:	429a      	cmp	r2, r3
 80190ec:	f2c0 817b 	blt.w	80193e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80190f0:	9b08      	ldr	r3, [sp, #32]
 80190f2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80190f4:	9313      	str	r3, [sp, #76]	; 0x4c
 80190f6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80190fa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80190fc:	2b00      	cmp	r3, #0
 80190fe:	f340 81a4 	ble.w	801944a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8019102:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019104:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8019106:	1418      	asrs	r0, r3, #16
 8019108:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801910a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801910e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019110:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8019114:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019116:	142d      	asrs	r5, r5, #16
 8019118:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801911c:	f100 81f8 	bmi.w	8019510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8019120:	f102 3eff 	add.w	lr, r2, #4294967295
 8019124:	4575      	cmp	r5, lr
 8019126:	f280 81f3 	bge.w	8019510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801912a:	2800      	cmp	r0, #0
 801912c:	f2c0 81f0 	blt.w	8019510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8019130:	f103 3eff 	add.w	lr, r3, #4294967295
 8019134:	4570      	cmp	r0, lr
 8019136:	f280 81eb 	bge.w	8019510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801913a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801913c:	b212      	sxth	r2, r2
 801913e:	fb00 5002 	mla	r0, r0, r2, r5
 8019142:	fa1f fe81 	uxth.w	lr, r1
 8019146:	eb03 0a00 	add.w	sl, r3, r0
 801914a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801914e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8019152:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019156:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801915a:	b29b      	uxth	r3, r3
 801915c:	f1bc 0f00 	cmp.w	ip, #0
 8019160:	f000 81b9 	beq.w	80194d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019164:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8019168:	940d      	str	r4, [sp, #52]	; 0x34
 801916a:	eb0a 0b02 	add.w	fp, sl, r2
 801916e:	fa1f fa8c 	uxth.w	sl, ip
 8019172:	fb0a fe0e 	mul.w	lr, sl, lr
 8019176:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801917a:	fa1f fa8a 	uxth.w	sl, sl
 801917e:	eba5 050e 	sub.w	r5, r5, lr
 8019182:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019186:	940e      	str	r4, [sp, #56]	; 0x38
 8019188:	eba3 030a 	sub.w	r3, r3, sl
 801918c:	b2ad      	uxth	r5, r5
 801918e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019190:	b29b      	uxth	r3, r3
 8019192:	fb08 f505 	mul.w	r5, r8, r5
 8019196:	fb09 5303 	mla	r3, r9, r3, r5
 801919a:	fb0a 3304 	mla	r3, sl, r4, r3
 801919e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80191a0:	fb0e 3304 	mla	r3, lr, r4, r3
 80191a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80191a8:	2b00      	cmp	r3, #0
 80191aa:	f000 810f 	beq.w	80193cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80191ae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80191b0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80191b4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80191b8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80191bc:	f000 8190 	beq.w	80194e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80191c0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80191c4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80191c8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80191cc:	fb09 f000 	mul.w	r0, r9, r0
 80191d0:	fb0a fe0e 	mul.w	lr, sl, lr
 80191d4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80191d8:	f100 0b20 	add.w	fp, r0, #32
 80191dc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80191e0:	44ce      	add	lr, r9
 80191e2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80191e6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80191ea:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80191ee:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80191f2:	ea4e 0909 	orr.w	r9, lr, r9
 80191f6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80191fa:	8868      	ldrh	r0, [r5, #2]
 80191fc:	d019      	beq.n	8019232 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80191fe:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8019202:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019206:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801920a:	fb08 f800 	mul.w	r8, r8, r0
 801920e:	fb0a fe0e 	mul.w	lr, sl, lr
 8019212:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8019216:	f108 0b20 	add.w	fp, r8, #32
 801921a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801921e:	4486      	add	lr, r0
 8019220:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8019224:	0a00      	lsrs	r0, r0, #8
 8019226:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801922a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801922e:	ea4e 0000 	orr.w	r0, lr, r0
 8019232:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8019236:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801923a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801923e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019242:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019246:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801924a:	ea4e 0909 	orr.w	r9, lr, r9
 801924e:	ea4a 0000 	orr.w	r0, sl, r0
 8019252:	f1bc 0f00 	cmp.w	ip, #0
 8019256:	f000 8145 	beq.w	80194e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801925a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801925e:	3a01      	subs	r2, #1
 8019260:	0052      	lsls	r2, r2, #1
 8019262:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019264:	3202      	adds	r2, #2
 8019266:	2cff      	cmp	r4, #255	; 0xff
 8019268:	eb05 0e02 	add.w	lr, r5, r2
 801926c:	5aaa      	ldrh	r2, [r5, r2]
 801926e:	d018      	beq.n	80192a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8019270:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8019274:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019278:	fb04 fa02 	mul.w	sl, r4, r2
 801927c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019280:	fb08 f805 	mul.w	r8, r8, r5
 8019284:	f10a 0520 	add.w	r5, sl, #32
 8019288:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801928c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8019290:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019294:	4442      	add	r2, r8
 8019296:	0a2d      	lsrs	r5, r5, #8
 8019298:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801929c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80192a0:	432a      	orrs	r2, r5
 80192a2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80192a4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80192a8:	2cff      	cmp	r4, #255	; 0xff
 80192aa:	d01a      	beq.n	80192e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80192ac:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80192b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80192b4:	fb04 fa05 	mul.w	sl, r4, r5
 80192b8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80192bc:	fb08 f80e 	mul.w	r8, r8, lr
 80192c0:	f10a 0e20 	add.w	lr, sl, #32
 80192c4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80192c8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80192cc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80192d0:	4445      	add	r5, r8
 80192d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80192d6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80192da:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80192de:	ea45 050e 	orr.w	r5, r5, lr
 80192e2:	fb1c fe01 	smulbb	lr, ip, r1
 80192e6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80192ea:	f1cc 0810 	rsb	r8, ip, #16
 80192ee:	eba8 0801 	sub.w	r8, r8, r1
 80192f2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80192f6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80192fa:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80192fe:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8019302:	4341      	muls	r1, r0
 8019304:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019308:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801930c:	ea4a 0202 	orr.w	r2, sl, r2
 8019310:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8019314:	fb09 1108 	mla	r1, r9, r8, r1
 8019318:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801931c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019320:	fb0c 1102 	mla	r1, ip, r2, r1
 8019324:	ea4b 0505 	orr.w	r5, fp, r5
 8019328:	fb0e 1e05 	mla	lr, lr, r5, r1
 801932c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019330:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019334:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019338:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801933c:	ea42 0e0e 	orr.w	lr, r2, lr
 8019340:	fa1f f28e 	uxth.w	r2, lr
 8019344:	2bff      	cmp	r3, #255	; 0xff
 8019346:	d103      	bne.n	8019350 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019348:	9912      	ldr	r1, [sp, #72]	; 0x48
 801934a:	29ff      	cmp	r1, #255	; 0xff
 801934c:	f000 80de 	beq.w	801950c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8019350:	990a      	ldr	r1, [sp, #40]	; 0x28
 8019352:	8838      	ldrh	r0, [r7, #0]
 8019354:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019356:	434b      	muls	r3, r1
 8019358:	f103 0c01 	add.w	ip, r3, #1
 801935c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8019360:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8019364:	fa5f fc83 	uxtb.w	ip, r3
 8019368:	1203      	asrs	r3, r0, #8
 801936a:	1215      	asrs	r5, r2, #8
 801936c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8019370:	fb13 f30c 	smulbb	r3, r3, ip
 8019374:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019378:	fb05 3501 	mla	r5, r5, r1, r3
 801937c:	10c3      	asrs	r3, r0, #3
 801937e:	10d1      	asrs	r1, r2, #3
 8019380:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8019384:	fb13 f30c 	smulbb	r3, r3, ip
 8019388:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801938c:	fb01 3104 	mla	r1, r1, r4, r3
 8019390:	00c3      	lsls	r3, r0, #3
 8019392:	00d2      	lsls	r2, r2, #3
 8019394:	b2db      	uxtb	r3, r3
 8019396:	b2d2      	uxtb	r2, r2
 8019398:	fb13 f30c 	smulbb	r3, r3, ip
 801939c:	b2ad      	uxth	r5, r5
 801939e:	fb02 3304 	mla	r3, r2, r4, r3
 80193a2:	b29a      	uxth	r2, r3
 80193a4:	1c6b      	adds	r3, r5, #1
 80193a6:	b289      	uxth	r1, r1
 80193a8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80193ac:	1c53      	adds	r3, r2, #1
 80193ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80193b2:	1c4a      	adds	r2, r1, #1
 80193b4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80193b8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80193bc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80193c0:	0949      	lsrs	r1, r1, #5
 80193c2:	432b      	orrs	r3, r5
 80193c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80193c8:	430b      	orrs	r3, r1
 80193ca:	803b      	strh	r3, [r7, #0]
 80193cc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80193ce:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80193d0:	4413      	add	r3, r2
 80193d2:	9321      	str	r3, [sp, #132]	; 0x84
 80193d4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80193d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80193d8:	441a      	add	r2, r3
 80193da:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80193dc:	9222      	str	r2, [sp, #136]	; 0x88
 80193de:	3b01      	subs	r3, #1
 80193e0:	3702      	adds	r7, #2
 80193e2:	9313      	str	r3, [sp, #76]	; 0x4c
 80193e4:	e689      	b.n	80190fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80193e6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80193e8:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80193ea:	9c22      	ldr	r4, [sp, #136]	; 0x88
 80193ec:	4433      	add	r3, r6
 80193ee:	9321      	str	r3, [sp, #132]	; 0x84
 80193f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80193f2:	441c      	add	r4, r3
 80193f4:	9b08      	ldr	r3, [sp, #32]
 80193f6:	9422      	str	r4, [sp, #136]	; 0x88
 80193f8:	3b01      	subs	r3, #1
 80193fa:	9308      	str	r3, [sp, #32]
 80193fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80193fe:	3302      	adds	r3, #2
 8019400:	9309      	str	r3, [sp, #36]	; 0x24
 8019402:	e658      	b.n	80190b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8019404:	d028      	beq.n	8019458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8019406:	9b08      	ldr	r3, [sp, #32]
 8019408:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801940a:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801940c:	3b01      	subs	r3, #1
 801940e:	fb00 5003 	mla	r0, r0, r3, r5
 8019412:	1400      	asrs	r0, r0, #16
 8019414:	f53f ae6c 	bmi.w	80190f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019418:	3901      	subs	r1, #1
 801941a:	4288      	cmp	r0, r1
 801941c:	f6bf ae68 	bge.w	80190f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019420:	9924      	ldr	r1, [sp, #144]	; 0x90
 8019422:	9822      	ldr	r0, [sp, #136]	; 0x88
 8019424:	fb01 0303 	mla	r3, r1, r3, r0
 8019428:	141b      	asrs	r3, r3, #16
 801942a:	f53f ae61 	bmi.w	80190f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801942e:	3a01      	subs	r2, #1
 8019430:	4293      	cmp	r3, r2
 8019432:	f6bf ae5d 	bge.w	80190f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019436:	9b08      	ldr	r3, [sp, #32]
 8019438:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801943c:	9313      	str	r3, [sp, #76]	; 0x4c
 801943e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8019442:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019444:	2b00      	cmp	r3, #0
 8019446:	f300 8082 	bgt.w	801954e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801944a:	9b08      	ldr	r3, [sp, #32]
 801944c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019450:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019452:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019456:	9309      	str	r3, [sp, #36]	; 0x24
 8019458:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801945a:	2b00      	cmp	r3, #0
 801945c:	f340 81ef 	ble.w	801983e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8019460:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019464:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019468:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801946c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801946e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019472:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019476:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801947a:	eef0 6a62 	vmov.f32	s13, s5
 801947e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019482:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019486:	ee77 2a62 	vsub.f32	s5, s14, s5
 801948a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801948e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019492:	eef0 6a43 	vmov.f32	s13, s6
 8019496:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801949a:	ee12 2a90 	vmov	r2, s5
 801949e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80194a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80194a6:	ee13 2a10 	vmov	r2, s6
 80194aa:	9323      	str	r3, [sp, #140]	; 0x8c
 80194ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80194ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80194b2:	9324      	str	r3, [sp, #144]	; 0x90
 80194b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80194b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80194b8:	3b01      	subs	r3, #1
 80194ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80194be:	9311      	str	r3, [sp, #68]	; 0x44
 80194c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80194c2:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 80194c6:	bf08      	it	eq
 80194c8:	4613      	moveq	r3, r2
 80194ca:	9308      	str	r3, [sp, #32]
 80194cc:	eeb0 3a67 	vmov.f32	s6, s15
 80194d0:	eef0 2a47 	vmov.f32	s5, s14
 80194d4:	e5e1      	b.n	801909a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80194d6:	fb08 f505 	mul.w	r5, r8, r5
 80194da:	fb09 5303 	mla	r3, r9, r3, r5
 80194de:	e661      	b.n	80191a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80194e0:	4681      	mov	r9, r0
 80194e2:	e688      	b.n	80191f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80194e4:	f1c1 0210 	rsb	r2, r1, #16
 80194e8:	4341      	muls	r1, r0
 80194ea:	fb09 1902 	mla	r9, r9, r2, r1
 80194ee:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80194f2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80194f6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80194fa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80194fe:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019502:	ea42 0909 	orr.w	r9, r2, r9
 8019506:	fa1f f289 	uxth.w	r2, r9
 801950a:	e71b      	b.n	8019344 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801950c:	803a      	strh	r2, [r7, #0]
 801950e:	e75d      	b.n	80193cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8019510:	f115 0e01 	adds.w	lr, r5, #1
 8019514:	f53f af5a 	bmi.w	80193cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8019518:	4572      	cmp	r2, lr
 801951a:	f6ff af57 	blt.w	80193cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801951e:	f110 0e01 	adds.w	lr, r0, #1
 8019522:	f53f af53 	bmi.w	80193cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8019526:	4573      	cmp	r3, lr
 8019528:	f6ff af50 	blt.w	80193cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801952c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801952e:	9502      	str	r5, [sp, #8]
 8019530:	b21b      	sxth	r3, r3
 8019532:	b212      	sxth	r2, r2
 8019534:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8019538:	9301      	str	r3, [sp, #4]
 801953a:	9200      	str	r2, [sp, #0]
 801953c:	e9cd c405 	strd	ip, r4, [sp, #20]
 8019540:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8019544:	4639      	mov	r1, r7
 8019546:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019548:	f7ff fc04 	bl	8018d54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801954c:	e73e      	b.n	80193cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801954e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8019550:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019554:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019556:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801955a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801955c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019560:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019562:	141f      	asrs	r7, r3, #16
 8019564:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8019566:	141b      	asrs	r3, r3, #16
 8019568:	fb01 3707 	mla	r7, r1, r7, r3
 801956c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801956e:	fa1f fc82 	uxth.w	ip, r2
 8019572:	eb03 0a07 	add.w	sl, r3, r7
 8019576:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801957a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801957e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019582:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019586:	b29b      	uxth	r3, r3
 8019588:	2d00      	cmp	r5, #0
 801958a:	f000 813d 	beq.w	8019808 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801958e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8019592:	940f      	str	r4, [sp, #60]	; 0x3c
 8019594:	eb0a 0b01 	add.w	fp, sl, r1
 8019598:	fa1f fa85 	uxth.w	sl, r5
 801959c:	fb0a fc0c 	mul.w	ip, sl, ip
 80195a0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80195a4:	fa1f fa8a 	uxth.w	sl, sl
 80195a8:	eba0 000c 	sub.w	r0, r0, ip
 80195ac:	eba3 030a 	sub.w	r3, r3, sl
 80195b0:	b280      	uxth	r0, r0
 80195b2:	fb08 f000 	mul.w	r0, r8, r0
 80195b6:	b29b      	uxth	r3, r3
 80195b8:	fb09 0303 	mla	r3, r9, r3, r0
 80195bc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80195be:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80195c2:	9410      	str	r4, [sp, #64]	; 0x40
 80195c4:	fb0a 3300 	mla	r3, sl, r0, r3
 80195c8:	fb0c 3304 	mla	r3, ip, r4, r3
 80195cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80195d0:	2b00      	cmp	r3, #0
 80195d2:	f000 810b 	beq.w	80197ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80195d6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80195d8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80195da:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80195de:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80195e2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80195e6:	f000 8114 	beq.w	8019812 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 80195ea:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80195ee:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80195f2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80195f6:	fb09 f707 	mul.w	r7, r9, r7
 80195fa:	fb0a fc0c 	mul.w	ip, sl, ip
 80195fe:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8019602:	f107 0b20 	add.w	fp, r7, #32
 8019606:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801960a:	44cc      	add	ip, r9
 801960c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8019610:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019614:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019618:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801961c:	ea4c 0909 	orr.w	r9, ip, r9
 8019620:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019624:	8847      	ldrh	r7, [r0, #2]
 8019626:	d019      	beq.n	801965c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8019628:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801962c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019630:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019634:	fb08 f807 	mul.w	r8, r8, r7
 8019638:	fb0a fc0c 	mul.w	ip, sl, ip
 801963c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8019640:	f108 0b20 	add.w	fp, r8, #32
 8019644:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8019648:	44bc      	add	ip, r7
 801964a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801964e:	0a3f      	lsrs	r7, r7, #8
 8019650:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019654:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019658:	ea4c 0707 	orr.w	r7, ip, r7
 801965c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8019660:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8019664:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019668:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801966c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019670:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019674:	ea4c 0909 	orr.w	r9, ip, r9
 8019678:	ea4a 0707 	orr.w	r7, sl, r7
 801967c:	2d00      	cmp	r5, #0
 801967e:	f000 80ca 	beq.w	8019816 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8019682:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8019686:	3901      	subs	r1, #1
 8019688:	0049      	lsls	r1, r1, #1
 801968a:	3102      	adds	r1, #2
 801968c:	eb00 0c01 	add.w	ip, r0, r1
 8019690:	5a41      	ldrh	r1, [r0, r1]
 8019692:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019694:	28ff      	cmp	r0, #255	; 0xff
 8019696:	d019      	beq.n	80196cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8019698:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801969a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801969e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80196a2:	fb04 fa01 	mul.w	sl, r4, r1
 80196a6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80196aa:	fb08 f800 	mul.w	r8, r8, r0
 80196ae:	f10a 0020 	add.w	r0, sl, #32
 80196b2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80196b6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80196ba:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80196be:	4441      	add	r1, r8
 80196c0:	0a00      	lsrs	r0, r0, #8
 80196c2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80196c6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80196ca:	4301      	orrs	r1, r0
 80196cc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80196ce:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80196d2:	2cff      	cmp	r4, #255	; 0xff
 80196d4:	d01a      	beq.n	801970c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 80196d6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80196da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80196de:	fb04 fa00 	mul.w	sl, r4, r0
 80196e2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80196e6:	fb08 f80c 	mul.w	r8, r8, ip
 80196ea:	f10a 0c20 	add.w	ip, sl, #32
 80196ee:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80196f2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80196f6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80196fa:	4440      	add	r0, r8
 80196fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019700:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8019704:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8019708:	ea40 000c 	orr.w	r0, r0, ip
 801970c:	fb15 fc02 	smulbb	ip, r5, r2
 8019710:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8019714:	f1c5 0810 	rsb	r8, r5, #16
 8019718:	eba8 0802 	sub.w	r8, r8, r2
 801971c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019720:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8019724:	437a      	muls	r2, r7
 8019726:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801972a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801972e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019732:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019736:	fb09 2208 	mla	r2, r9, r8, r2
 801973a:	ea4a 0101 	orr.w	r1, sl, r1
 801973e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8019742:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019746:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801974a:	fb05 2201 	mla	r2, r5, r1, r2
 801974e:	ea4b 0000 	orr.w	r0, fp, r0
 8019752:	fb0c 2200 	mla	r2, ip, r0, r2
 8019756:	0d57      	lsrs	r7, r2, #21
 8019758:	0952      	lsrs	r2, r2, #5
 801975a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801975e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019762:	433a      	orrs	r2, r7
 8019764:	2bff      	cmp	r3, #255	; 0xff
 8019766:	b292      	uxth	r2, r2
 8019768:	d102      	bne.n	8019770 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801976a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801976c:	29ff      	cmp	r1, #255	; 0xff
 801976e:	d063      	beq.n	8019838 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8019770:	980a      	ldr	r0, [sp, #40]	; 0x28
 8019772:	f8be 1000 	ldrh.w	r1, [lr]
 8019776:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019778:	4343      	muls	r3, r0
 801977a:	1c58      	adds	r0, r3, #1
 801977c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8019780:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8019784:	1208      	asrs	r0, r1, #8
 8019786:	b2db      	uxtb	r3, r3
 8019788:	1215      	asrs	r5, r2, #8
 801978a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801978e:	fb10 f003 	smulbb	r0, r0, r3
 8019792:	10cf      	asrs	r7, r1, #3
 8019794:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019798:	00c9      	lsls	r1, r1, #3
 801979a:	fb05 0504 	mla	r5, r5, r4, r0
 801979e:	b2c9      	uxtb	r1, r1
 80197a0:	10d0      	asrs	r0, r2, #3
 80197a2:	00d2      	lsls	r2, r2, #3
 80197a4:	fb11 f103 	smulbb	r1, r1, r3
 80197a8:	b2d2      	uxtb	r2, r2
 80197aa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80197ae:	fb02 1204 	mla	r2, r2, r4, r1
 80197b2:	fb17 f703 	smulbb	r7, r7, r3
 80197b6:	b2ad      	uxth	r5, r5
 80197b8:	b292      	uxth	r2, r2
 80197ba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80197be:	fb00 7004 	mla	r0, r0, r4, r7
 80197c2:	1c6b      	adds	r3, r5, #1
 80197c4:	1c57      	adds	r7, r2, #1
 80197c6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80197ca:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80197ce:	b280      	uxth	r0, r0
 80197d0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80197d4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80197d8:	433d      	orrs	r5, r7
 80197da:	1c47      	adds	r7, r0, #1
 80197dc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80197e0:	097f      	lsrs	r7, r7, #5
 80197e2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80197e6:	433d      	orrs	r5, r7
 80197e8:	f8ae 5000 	strh.w	r5, [lr]
 80197ec:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80197ee:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80197f0:	4413      	add	r3, r2
 80197f2:	9321      	str	r3, [sp, #132]	; 0x84
 80197f4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80197f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80197f8:	441a      	add	r2, r3
 80197fa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80197fc:	9222      	str	r2, [sp, #136]	; 0x88
 80197fe:	3b01      	subs	r3, #1
 8019800:	f10e 0e02 	add.w	lr, lr, #2
 8019804:	9313      	str	r3, [sp, #76]	; 0x4c
 8019806:	e61c      	b.n	8019442 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8019808:	fb08 f000 	mul.w	r0, r8, r0
 801980c:	fb09 0303 	mla	r3, r9, r3, r0
 8019810:	e6dc      	b.n	80195cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8019812:	46b9      	mov	r9, r7
 8019814:	e704      	b.n	8019620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8019816:	f1c2 0110 	rsb	r1, r2, #16
 801981a:	437a      	muls	r2, r7
 801981c:	fb09 2901 	mla	r9, r9, r1, r2
 8019820:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019824:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8019828:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801982c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019830:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019834:	4302      	orrs	r2, r0
 8019836:	e795      	b.n	8019764 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8019838:	f8ae 2000 	strh.w	r2, [lr]
 801983c:	e7d6      	b.n	80197ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801983e:	b017      	add	sp, #92	; 0x5c
 8019840:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019848:	b085      	sub	sp, #20
 801984a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801984e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8019852:	9103      	str	r1, [sp, #12]
 8019854:	fb00 7406 	mla	r4, r0, r6, r7
 8019858:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801985c:	2800      	cmp	r0, #0
 801985e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8019862:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8019866:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801986a:	9501      	str	r5, [sp, #4]
 801986c:	eb02 0904 	add.w	r9, r2, r4
 8019870:	f2c0 8141 	blt.w	8019af6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8019874:	4583      	cmp	fp, r0
 8019876:	f340 813e 	ble.w	8019af6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801987a:	2f00      	cmp	r7, #0
 801987c:	f2c0 8137 	blt.w	8019aee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8019880:	42be      	cmp	r6, r7
 8019882:	f340 8134 	ble.w	8019aee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8019886:	f812 c004 	ldrb.w	ip, [r2, r4]
 801988a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801988e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8019892:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8019896:	4355      	muls	r5, r2
 8019898:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801989c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80198a0:	fb0c f203 	mul.w	r2, ip, r3
 80198a4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80198a8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80198ac:	441d      	add	r5, r3
 80198ae:	f102 0320 	add.w	r3, r2, #32
 80198b2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80198b6:	0a1b      	lsrs	r3, r3, #8
 80198b8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80198bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80198c0:	431c      	orrs	r4, r3
 80198c2:	1c7b      	adds	r3, r7, #1
 80198c4:	f100 811c 	bmi.w	8019b00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80198c8:	429e      	cmp	r6, r3
 80198ca:	f340 8119 	ble.w	8019b00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80198ce:	2900      	cmp	r1, #0
 80198d0:	f000 8119 	beq.w	8019b06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 80198d4:	9a01      	ldr	r2, [sp, #4]
 80198d6:	f899 3001 	ldrb.w	r3, [r9, #1]
 80198da:	8855      	ldrh	r5, [r2, #2]
 80198dc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80198e0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80198e4:	fb08 f802 	mul.w	r8, r8, r2
 80198e8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80198ec:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80198f0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80198f4:	435d      	muls	r5, r3
 80198f6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80198fa:	44d0      	add	r8, sl
 80198fc:	f105 0a20 	add.w	sl, r5, #32
 8019900:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8019904:	0a2d      	lsrs	r5, r5, #8
 8019906:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801990a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801990e:	432a      	orrs	r2, r5
 8019910:	3001      	adds	r0, #1
 8019912:	f100 80fe 	bmi.w	8019b12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8019916:	4583      	cmp	fp, r0
 8019918:	f340 80fb 	ble.w	8019b12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801991c:	f1be 0f00 	cmp.w	lr, #0
 8019920:	f000 80fc 	beq.w	8019b1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8019924:	2f00      	cmp	r7, #0
 8019926:	f2c0 80f1 	blt.w	8019b0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801992a:	42be      	cmp	r6, r7
 801992c:	f340 80ee 	ble.w	8019b0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8019930:	9801      	ldr	r0, [sp, #4]
 8019932:	f819 5006 	ldrb.w	r5, [r9, r6]
 8019936:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801993a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801993e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8019942:	fb0a fa00 	mul.w	sl, sl, r0
 8019946:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801994a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801994e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8019952:	fb05 f808 	mul.w	r8, r5, r8
 8019956:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801995a:	4482      	add	sl, r0
 801995c:	f108 0020 	add.w	r0, r8, #32
 8019960:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019964:	0a00      	lsrs	r0, r0, #8
 8019966:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801996a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801996e:	ea4b 0b00 	orr.w	fp, fp, r0
 8019972:	3701      	adds	r7, #1
 8019974:	f100 80d7 	bmi.w	8019b26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8019978:	42be      	cmp	r6, r7
 801997a:	f340 80d4 	ble.w	8019b26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801997e:	2900      	cmp	r1, #0
 8019980:	f000 80d4 	beq.w	8019b2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8019984:	3601      	adds	r6, #1
 8019986:	9801      	ldr	r0, [sp, #4]
 8019988:	f819 7006 	ldrb.w	r7, [r9, r6]
 801998c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8019990:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8019994:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8019998:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801999c:	fb09 f906 	mul.w	r9, r9, r6
 80199a0:	fb07 f800 	mul.w	r8, r7, r0
 80199a4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80199a8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80199ac:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80199b0:	44d1      	add	r9, sl
 80199b2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80199b6:	f108 0020 	add.w	r0, r8, #32
 80199ba:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80199be:	0a00      	lsrs	r0, r0, #8
 80199c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80199c4:	4330      	orrs	r0, r6
 80199c6:	b28e      	uxth	r6, r1
 80199c8:	fa1f f98e 	uxth.w	r9, lr
 80199cc:	fb06 f809 	mul.w	r8, r6, r9
 80199d0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80199d4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80199d8:	0136      	lsls	r6, r6, #4
 80199da:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80199de:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80199e2:	9601      	str	r6, [sp, #4]
 80199e4:	ea4a 0404 	orr.w	r4, sl, r4
 80199e8:	fa1f f689 	uxth.w	r6, r9
 80199ec:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80199f0:	fb11 f90e 	smulbb	r9, r1, lr
 80199f4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80199f8:	9602      	str	r6, [sp, #8]
 80199fa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80199fe:	4626      	mov	r6, r4
 8019a00:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019a04:	f1ce 0410 	rsb	r4, lr, #16
 8019a08:	1a64      	subs	r4, r4, r1
 8019a0a:	ea4a 0202 	orr.w	r2, sl, r2
 8019a0e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8019a12:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8019a16:	434a      	muls	r2, r1
 8019a18:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8019a1c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019a20:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019a24:	fb04 2406 	mla	r4, r4, r6, r2
 8019a28:	ea4a 0000 	orr.w	r0, sl, r0
 8019a2c:	fb09 4200 	mla	r2, r9, r0, r4
 8019a30:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8019a34:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019a38:	9801      	ldr	r0, [sp, #4]
 8019a3a:	9903      	ldr	r1, [sp, #12]
 8019a3c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8019a40:	ea44 0b0b 	orr.w	fp, r4, fp
 8019a44:	9c02      	ldr	r4, [sp, #8]
 8019a46:	8809      	ldrh	r1, [r1, #0]
 8019a48:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8019a4c:	1b00      	subs	r0, r0, r4
 8019a4e:	9c01      	ldr	r4, [sp, #4]
 8019a50:	eba4 0608 	sub.w	r6, r4, r8
 8019a54:	b2b6      	uxth	r6, r6
 8019a56:	b280      	uxth	r0, r0
 8019a58:	4373      	muls	r3, r6
 8019a5a:	fb0c 3300 	mla	r3, ip, r0, r3
 8019a5e:	9802      	ldr	r0, [sp, #8]
 8019a60:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8019a64:	fb00 3505 	mla	r5, r0, r5, r3
 8019a68:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8019a6c:	fb08 5707 	mla	r7, r8, r7, r5
 8019a70:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019a74:	120b      	asrs	r3, r1, #8
 8019a76:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019a7a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8019a7e:	b2ff      	uxtb	r7, r7
 8019a80:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019a84:	10c8      	asrs	r0, r1, #3
 8019a86:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019a8a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8019a8e:	00c9      	lsls	r1, r1, #3
 8019a90:	437b      	muls	r3, r7
 8019a92:	ea42 0e0e 	orr.w	lr, r2, lr
 8019a96:	b2c9      	uxtb	r1, r1
 8019a98:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019a9c:	fa1f f28e 	uxth.w	r2, lr
 8019aa0:	4378      	muls	r0, r7
 8019aa2:	434f      	muls	r7, r1
 8019aa4:	1c59      	adds	r1, r3, #1
 8019aa6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8019aaa:	1213      	asrs	r3, r2, #8
 8019aac:	f023 0307 	bic.w	r3, r3, #7
 8019ab0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8019ab4:	1c41      	adds	r1, r0, #1
 8019ab6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8019aba:	10d1      	asrs	r1, r2, #3
 8019abc:	f021 0103 	bic.w	r1, r1, #3
 8019ac0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8019ac4:	021b      	lsls	r3, r3, #8
 8019ac6:	00c9      	lsls	r1, r1, #3
 8019ac8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019acc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8019ad0:	430b      	orrs	r3, r1
 8019ad2:	1c79      	adds	r1, r7, #1
 8019ad4:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8019ad8:	00d2      	lsls	r2, r2, #3
 8019ada:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8019ade:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019ae2:	431a      	orrs	r2, r3
 8019ae4:	9b03      	ldr	r3, [sp, #12]
 8019ae6:	801a      	strh	r2, [r3, #0]
 8019ae8:	b005      	add	sp, #20
 8019aea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019aee:	f04f 0c00 	mov.w	ip, #0
 8019af2:	4664      	mov	r4, ip
 8019af4:	e6e5      	b.n	80198c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8019af6:	2300      	movs	r3, #0
 8019af8:	469c      	mov	ip, r3
 8019afa:	461a      	mov	r2, r3
 8019afc:	461c      	mov	r4, r3
 8019afe:	e707      	b.n	8019910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8019b00:	2300      	movs	r3, #0
 8019b02:	461a      	mov	r2, r3
 8019b04:	e704      	b.n	8019910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8019b06:	460b      	mov	r3, r1
 8019b08:	460a      	mov	r2, r1
 8019b0a:	e701      	b.n	8019910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8019b0c:	2500      	movs	r5, #0
 8019b0e:	46ab      	mov	fp, r5
 8019b10:	e72f      	b.n	8019972 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8019b12:	2700      	movs	r7, #0
 8019b14:	463d      	mov	r5, r7
 8019b16:	4638      	mov	r0, r7
 8019b18:	46bb      	mov	fp, r7
 8019b1a:	e754      	b.n	80199c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8019b1c:	4677      	mov	r7, lr
 8019b1e:	4675      	mov	r5, lr
 8019b20:	4670      	mov	r0, lr
 8019b22:	46f3      	mov	fp, lr
 8019b24:	e74f      	b.n	80199c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8019b26:	2700      	movs	r7, #0
 8019b28:	4638      	mov	r0, r7
 8019b2a:	e74c      	b.n	80199c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8019b2c:	460f      	mov	r7, r1
 8019b2e:	4608      	mov	r0, r1
 8019b30:	e749      	b.n	80199c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08019b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019b34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b38:	b093      	sub	sp, #76	; 0x4c
 8019b3a:	9210      	str	r2, [sp, #64]	; 0x40
 8019b3c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019b3e:	910e      	str	r1, [sp, #56]	; 0x38
 8019b40:	9306      	str	r3, [sp, #24]
 8019b42:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8019b46:	9011      	str	r0, [sp, #68]	; 0x44
 8019b48:	6850      	ldr	r0, [r2, #4]
 8019b4a:	6812      	ldr	r2, [r2, #0]
 8019b4c:	fb00 1303 	mla	r3, r0, r3, r1
 8019b50:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019b54:	9307      	str	r3, [sp, #28]
 8019b56:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019b58:	681b      	ldr	r3, [r3, #0]
 8019b5a:	9308      	str	r3, [sp, #32]
 8019b5c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019b5e:	685b      	ldr	r3, [r3, #4]
 8019b60:	9309      	str	r3, [sp, #36]	; 0x24
 8019b62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019b64:	2b00      	cmp	r3, #0
 8019b66:	dc03      	bgt.n	8019b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019b68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019b6a:	2b00      	cmp	r3, #0
 8019b6c:	f340 83b4 	ble.w	801a2d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8019b70:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019b72:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019b76:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019b7a:	1e48      	subs	r0, r1, #1
 8019b7c:	1e55      	subs	r5, r2, #1
 8019b7e:	9b06      	ldr	r3, [sp, #24]
 8019b80:	2b00      	cmp	r3, #0
 8019b82:	f340 8163 	ble.w	8019e4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8019b86:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8019b88:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019b8a:	1436      	asrs	r6, r6, #16
 8019b8c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019b90:	d406      	bmi.n	8019ba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019b92:	4286      	cmp	r6, r0
 8019b94:	da04      	bge.n	8019ba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019b96:	2b00      	cmp	r3, #0
 8019b98:	db02      	blt.n	8019ba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019b9a:	42ab      	cmp	r3, r5
 8019b9c:	f2c0 8157 	blt.w	8019e4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8019ba0:	3601      	adds	r6, #1
 8019ba2:	f100 8144 	bmi.w	8019e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8019ba6:	42b1      	cmp	r1, r6
 8019ba8:	f2c0 8141 	blt.w	8019e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8019bac:	3301      	adds	r3, #1
 8019bae:	f100 813e 	bmi.w	8019e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8019bb2:	429a      	cmp	r2, r3
 8019bb4:	f2c0 813b 	blt.w	8019e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8019bb8:	9b06      	ldr	r3, [sp, #24]
 8019bba:	9f07      	ldr	r7, [sp, #28]
 8019bbc:	930f      	str	r3, [sp, #60]	; 0x3c
 8019bbe:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8019bc2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019bc4:	2b00      	cmp	r3, #0
 8019bc6:	f340 8164 	ble.w	8019e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8019bca:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019bcc:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8019bce:	1418      	asrs	r0, r3, #16
 8019bd0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8019bd2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8019bd6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019bd8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8019bdc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019bde:	142d      	asrs	r5, r5, #16
 8019be0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8019be4:	f100 81ee 	bmi.w	8019fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019be8:	f102 3eff 	add.w	lr, r2, #4294967295
 8019bec:	4575      	cmp	r5, lr
 8019bee:	f280 81e9 	bge.w	8019fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019bf2:	2800      	cmp	r0, #0
 8019bf4:	f2c0 81e6 	blt.w	8019fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019bf8:	f103 3eff 	add.w	lr, r3, #4294967295
 8019bfc:	4570      	cmp	r0, lr
 8019bfe:	f280 81e1 	bge.w	8019fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019c02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019c04:	b212      	sxth	r2, r2
 8019c06:	fb00 5002 	mla	r0, r0, r2, r5
 8019c0a:	fa1f fe81 	uxth.w	lr, r1
 8019c0e:	eb03 0a00 	add.w	sl, r3, r0
 8019c12:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8019c16:	f813 9000 	ldrb.w	r9, [r3, r0]
 8019c1a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019c1e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8019c22:	b29b      	uxth	r3, r3
 8019c24:	f1bc 0f00 	cmp.w	ip, #0
 8019c28:	f000 8179 	beq.w	8019f1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8019c2c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8019c30:	940a      	str	r4, [sp, #40]	; 0x28
 8019c32:	eb0a 0b02 	add.w	fp, sl, r2
 8019c36:	fa1f fa8c 	uxth.w	sl, ip
 8019c3a:	fb0a fe0e 	mul.w	lr, sl, lr
 8019c3e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8019c42:	fa1f fa8a 	uxth.w	sl, sl
 8019c46:	eba5 050e 	sub.w	r5, r5, lr
 8019c4a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019c4e:	940b      	str	r4, [sp, #44]	; 0x2c
 8019c50:	eba3 030a 	sub.w	r3, r3, sl
 8019c54:	b2ad      	uxth	r5, r5
 8019c56:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019c58:	b29b      	uxth	r3, r3
 8019c5a:	fb08 f505 	mul.w	r5, r8, r5
 8019c5e:	fb09 5303 	mla	r3, r9, r3, r5
 8019c62:	fb0a 3304 	mla	r3, sl, r4, r3
 8019c66:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019c68:	fb0e 3304 	mla	r3, lr, r4, r3
 8019c6c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019c70:	2b00      	cmp	r3, #0
 8019c72:	f000 80cf 	beq.w	8019e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019c76:	9c08      	ldr	r4, [sp, #32]
 8019c78:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019c7c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8019c80:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8019c84:	f000 8150 	beq.w	8019f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8019c88:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8019c8c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8019c90:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019c94:	fb09 f000 	mul.w	r0, r9, r0
 8019c98:	fb0a fe0e 	mul.w	lr, sl, lr
 8019c9c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8019ca0:	f100 0b20 	add.w	fp, r0, #32
 8019ca4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8019ca8:	44ce      	add	lr, r9
 8019caa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8019cae:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019cb2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019cb6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019cba:	ea4e 0909 	orr.w	r9, lr, r9
 8019cbe:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019cc2:	8868      	ldrh	r0, [r5, #2]
 8019cc4:	d019      	beq.n	8019cfa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8019cc6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8019cca:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019cce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019cd2:	fb08 f800 	mul.w	r8, r8, r0
 8019cd6:	fb0a fe0e 	mul.w	lr, sl, lr
 8019cda:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8019cde:	f108 0b20 	add.w	fp, r8, #32
 8019ce2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8019ce6:	4486      	add	lr, r0
 8019ce8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8019cec:	0a00      	lsrs	r0, r0, #8
 8019cee:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019cf2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019cf6:	ea4e 0000 	orr.w	r0, lr, r0
 8019cfa:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8019cfe:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8019d02:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019d06:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019d0a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019d0e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019d12:	ea4e 0909 	orr.w	r9, lr, r9
 8019d16:	ea4a 0000 	orr.w	r0, sl, r0
 8019d1a:	f1bc 0f00 	cmp.w	ip, #0
 8019d1e:	f000 8105 	beq.w	8019f2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8019d22:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8019d26:	3a01      	subs	r2, #1
 8019d28:	0052      	lsls	r2, r2, #1
 8019d2a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019d2c:	3202      	adds	r2, #2
 8019d2e:	2cff      	cmp	r4, #255	; 0xff
 8019d30:	eb05 0e02 	add.w	lr, r5, r2
 8019d34:	5aaa      	ldrh	r2, [r5, r2]
 8019d36:	d018      	beq.n	8019d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019d38:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8019d3c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019d40:	fb04 fa02 	mul.w	sl, r4, r2
 8019d44:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019d48:	fb08 f805 	mul.w	r8, r8, r5
 8019d4c:	f10a 0520 	add.w	r5, sl, #32
 8019d50:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8019d54:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8019d58:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019d5c:	4442      	add	r2, r8
 8019d5e:	0a2d      	lsrs	r5, r5, #8
 8019d60:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8019d64:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019d68:	432a      	orrs	r2, r5
 8019d6a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019d6c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8019d70:	2cff      	cmp	r4, #255	; 0xff
 8019d72:	d01a      	beq.n	8019daa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8019d74:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8019d78:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019d7c:	fb04 fa05 	mul.w	sl, r4, r5
 8019d80:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019d84:	fb08 f80e 	mul.w	r8, r8, lr
 8019d88:	f10a 0e20 	add.w	lr, sl, #32
 8019d8c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8019d90:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8019d94:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019d98:	4445      	add	r5, r8
 8019d9a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019d9e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8019da2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8019da6:	ea45 050e 	orr.w	r5, r5, lr
 8019daa:	fb1c fe01 	smulbb	lr, ip, r1
 8019dae:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8019db2:	f1cc 0810 	rsb	r8, ip, #16
 8019db6:	eba8 0801 	sub.w	r8, r8, r1
 8019dba:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8019dbe:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8019dc2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8019dc6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8019dca:	4341      	muls	r1, r0
 8019dcc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019dd0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019dd4:	ea4a 0202 	orr.w	r2, sl, r2
 8019dd8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8019ddc:	fb09 1108 	mla	r1, r9, r8, r1
 8019de0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019de4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019de8:	fb0c 1102 	mla	r1, ip, r2, r1
 8019dec:	ea4b 0505 	orr.w	r5, fp, r5
 8019df0:	fb0e 1e05 	mla	lr, lr, r5, r1
 8019df4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019df8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019dfc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019e00:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019e04:	ea42 0e0e 	orr.w	lr, r2, lr
 8019e08:	fa1f f28e 	uxth.w	r2, lr
 8019e0c:	2bff      	cmp	r3, #255	; 0xff
 8019e0e:	f040 80a1 	bne.w	8019f54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8019e12:	803a      	strh	r2, [r7, #0]
 8019e14:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8019e16:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8019e18:	4413      	add	r3, r2
 8019e1a:	931d      	str	r3, [sp, #116]	; 0x74
 8019e1c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8019e1e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019e20:	441a      	add	r2, r3
 8019e22:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019e24:	921e      	str	r2, [sp, #120]	; 0x78
 8019e26:	3b01      	subs	r3, #1
 8019e28:	3702      	adds	r7, #2
 8019e2a:	930f      	str	r3, [sp, #60]	; 0x3c
 8019e2c:	e6c9      	b.n	8019bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019e2e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8019e30:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8019e32:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8019e34:	4433      	add	r3, r6
 8019e36:	931d      	str	r3, [sp, #116]	; 0x74
 8019e38:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019e3a:	441c      	add	r4, r3
 8019e3c:	9b06      	ldr	r3, [sp, #24]
 8019e3e:	941e      	str	r4, [sp, #120]	; 0x78
 8019e40:	3b01      	subs	r3, #1
 8019e42:	9306      	str	r3, [sp, #24]
 8019e44:	9b07      	ldr	r3, [sp, #28]
 8019e46:	3302      	adds	r3, #2
 8019e48:	9307      	str	r3, [sp, #28]
 8019e4a:	e698      	b.n	8019b7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019e4c:	d028      	beq.n	8019ea0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8019e4e:	9b06      	ldr	r3, [sp, #24]
 8019e50:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019e52:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8019e54:	3b01      	subs	r3, #1
 8019e56:	fb00 5003 	mla	r0, r0, r3, r5
 8019e5a:	1400      	asrs	r0, r0, #16
 8019e5c:	f53f aeac 	bmi.w	8019bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019e60:	3901      	subs	r1, #1
 8019e62:	4288      	cmp	r0, r1
 8019e64:	f6bf aea8 	bge.w	8019bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019e68:	9920      	ldr	r1, [sp, #128]	; 0x80
 8019e6a:	981e      	ldr	r0, [sp, #120]	; 0x78
 8019e6c:	fb01 0303 	mla	r3, r1, r3, r0
 8019e70:	141b      	asrs	r3, r3, #16
 8019e72:	f53f aea1 	bmi.w	8019bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019e76:	3a01      	subs	r2, #1
 8019e78:	4293      	cmp	r3, r2
 8019e7a:	f6bf ae9d 	bge.w	8019bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019e7e:	9b06      	ldr	r3, [sp, #24]
 8019e80:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8019e84:	930f      	str	r3, [sp, #60]	; 0x3c
 8019e86:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8019e8a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019e8c:	2b00      	cmp	r3, #0
 8019e8e:	f300 80b6 	bgt.w	8019ffe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8019e92:	9b06      	ldr	r3, [sp, #24]
 8019e94:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019e98:	9b07      	ldr	r3, [sp, #28]
 8019e9a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019e9e:	9307      	str	r3, [sp, #28]
 8019ea0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019ea2:	2b00      	cmp	r3, #0
 8019ea4:	f340 8218 	ble.w	801a2d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8019ea8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019eac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019eb0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019eb4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019eb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019eba:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019ebe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019ec2:	eef0 6a62 	vmov.f32	s13, s5
 8019ec6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019eca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019ece:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019ed2:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8019ed6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019eda:	eef0 6a43 	vmov.f32	s13, s6
 8019ede:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019ee2:	ee12 2a90 	vmov	r2, s5
 8019ee6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019eea:	fb92 f3f3 	sdiv	r3, r2, r3
 8019eee:	ee13 2a10 	vmov	r2, s6
 8019ef2:	931f      	str	r3, [sp, #124]	; 0x7c
 8019ef4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019ef6:	fb92 f3f3 	sdiv	r3, r2, r3
 8019efa:	9320      	str	r3, [sp, #128]	; 0x80
 8019efc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019efe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019f00:	3b01      	subs	r3, #1
 8019f02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019f06:	930e      	str	r3, [sp, #56]	; 0x38
 8019f08:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019f0a:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8019f0e:	bf08      	it	eq
 8019f10:	4613      	moveq	r3, r2
 8019f12:	9306      	str	r3, [sp, #24]
 8019f14:	eeb0 3a67 	vmov.f32	s6, s15
 8019f18:	eef0 2a47 	vmov.f32	s5, s14
 8019f1c:	e621      	b.n	8019b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8019f1e:	fb08 f505 	mul.w	r5, r8, r5
 8019f22:	fb09 5303 	mla	r3, r9, r3, r5
 8019f26:	e6a1      	b.n	8019c6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8019f28:	4681      	mov	r9, r0
 8019f2a:	e6c8      	b.n	8019cbe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8019f2c:	f1c1 0210 	rsb	r2, r1, #16
 8019f30:	4341      	muls	r1, r0
 8019f32:	fb09 1902 	mla	r9, r9, r2, r1
 8019f36:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019f3a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8019f3e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019f42:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019f46:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019f4a:	ea42 0909 	orr.w	r9, r2, r9
 8019f4e:	fa1f f289 	uxth.w	r2, r9
 8019f52:	e75b      	b.n	8019e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8019f54:	f8b7 c000 	ldrh.w	ip, [r7]
 8019f58:	43db      	mvns	r3, r3
 8019f5a:	ea4f 202c 	mov.w	r0, ip, asr #8
 8019f5e:	fa5f fe83 	uxtb.w	lr, r3
 8019f62:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019f66:	fb00 f00e 	mul.w	r0, r0, lr
 8019f6a:	1c41      	adds	r1, r0, #1
 8019f6c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8019f70:	1211      	asrs	r1, r2, #8
 8019f72:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019f76:	f021 0107 	bic.w	r1, r1, #7
 8019f7a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8019f7e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019f82:	48d7      	ldr	r0, [pc, #860]	; (801a2e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8019f84:	fb05 f50e 	mul.w	r5, r5, lr
 8019f88:	b2c9      	uxtb	r1, r1
 8019f8a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8019f8e:	1c69      	adds	r1, r5, #1
 8019f90:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8019f94:	10d1      	asrs	r1, r2, #3
 8019f96:	f021 0103 	bic.w	r1, r1, #3
 8019f9a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8019f9e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8019fa2:	b2db      	uxtb	r3, r3
 8019fa4:	00c9      	lsls	r1, r1, #3
 8019fa6:	fb03 f30e 	mul.w	r3, r3, lr
 8019faa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019fae:	4301      	orrs	r1, r0
 8019fb0:	1c58      	adds	r0, r3, #1
 8019fb2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8019fb6:	00d2      	lsls	r2, r2, #3
 8019fb8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019fbc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019fc0:	430a      	orrs	r2, r1
 8019fc2:	e726      	b.n	8019e12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8019fc4:	f115 0e01 	adds.w	lr, r5, #1
 8019fc8:	f53f af24 	bmi.w	8019e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019fcc:	4572      	cmp	r2, lr
 8019fce:	f6ff af21 	blt.w	8019e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019fd2:	f110 0e01 	adds.w	lr, r0, #1
 8019fd6:	f53f af1d 	bmi.w	8019e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019fda:	4573      	cmp	r3, lr
 8019fdc:	f6ff af1a 	blt.w	8019e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019fe0:	b21b      	sxth	r3, r3
 8019fe2:	b212      	sxth	r2, r2
 8019fe4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8019fe8:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8019fec:	9301      	str	r3, [sp, #4]
 8019fee:	9200      	str	r2, [sp, #0]
 8019ff0:	4639      	mov	r1, r7
 8019ff2:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8019ff6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019ff8:	f7ff fc24 	bl	8019844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019ffc:	e70a      	b.n	8019e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019ffe:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801a000:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a004:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a006:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801a00a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a00c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a010:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a012:	141f      	asrs	r7, r3, #16
 801a014:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801a016:	141b      	asrs	r3, r3, #16
 801a018:	fb01 3707 	mla	r7, r1, r7, r3
 801a01c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a01e:	fa1f fc82 	uxth.w	ip, r2
 801a022:	eb03 0a07 	add.w	sl, r3, r7
 801a026:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801a02a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801a02e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801a032:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801a036:	b29b      	uxth	r3, r3
 801a038:	2d00      	cmp	r5, #0
 801a03a:	f000 80fe 	beq.w	801a23a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801a03e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801a042:	940c      	str	r4, [sp, #48]	; 0x30
 801a044:	eb0a 0b01 	add.w	fp, sl, r1
 801a048:	fa1f fa85 	uxth.w	sl, r5
 801a04c:	fb0a fc0c 	mul.w	ip, sl, ip
 801a050:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801a054:	fa1f fa8a 	uxth.w	sl, sl
 801a058:	eba0 000c 	sub.w	r0, r0, ip
 801a05c:	eba3 030a 	sub.w	r3, r3, sl
 801a060:	b280      	uxth	r0, r0
 801a062:	fb08 f000 	mul.w	r0, r8, r0
 801a066:	b29b      	uxth	r3, r3
 801a068:	fb09 0303 	mla	r3, r9, r3, r0
 801a06c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801a06e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801a072:	940d      	str	r4, [sp, #52]	; 0x34
 801a074:	fb0a 3300 	mla	r3, sl, r0, r3
 801a078:	fb0c 3304 	mla	r3, ip, r4, r3
 801a07c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a080:	2b00      	cmp	r3, #0
 801a082:	f000 80cc 	beq.w	801a21e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801a086:	9808      	ldr	r0, [sp, #32]
 801a088:	9c08      	ldr	r4, [sp, #32]
 801a08a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a08e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801a092:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801a096:	f000 80d5 	beq.w	801a244 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801a09a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801a09e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801a0a2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a0a6:	fb09 f707 	mul.w	r7, r9, r7
 801a0aa:	fb0a fc0c 	mul.w	ip, sl, ip
 801a0ae:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801a0b2:	f107 0b20 	add.w	fp, r7, #32
 801a0b6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801a0ba:	44cc      	add	ip, r9
 801a0bc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801a0c0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a0c4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801a0c8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a0cc:	ea4c 0909 	orr.w	r9, ip, r9
 801a0d0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a0d4:	8847      	ldrh	r7, [r0, #2]
 801a0d6:	d019      	beq.n	801a10c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801a0d8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801a0dc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801a0e0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a0e4:	fb08 f807 	mul.w	r8, r8, r7
 801a0e8:	fb0a fc0c 	mul.w	ip, sl, ip
 801a0ec:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801a0f0:	f108 0b20 	add.w	fp, r8, #32
 801a0f4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801a0f8:	44bc      	add	ip, r7
 801a0fa:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801a0fe:	0a3f      	lsrs	r7, r7, #8
 801a100:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801a104:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a108:	ea4c 0707 	orr.w	r7, ip, r7
 801a10c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801a110:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801a114:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a118:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801a11c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a120:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801a124:	ea4c 0909 	orr.w	r9, ip, r9
 801a128:	ea4a 0707 	orr.w	r7, sl, r7
 801a12c:	2d00      	cmp	r5, #0
 801a12e:	f000 808b 	beq.w	801a248 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801a132:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801a136:	3901      	subs	r1, #1
 801a138:	0049      	lsls	r1, r1, #1
 801a13a:	3102      	adds	r1, #2
 801a13c:	eb00 0c01 	add.w	ip, r0, r1
 801a140:	5a41      	ldrh	r1, [r0, r1]
 801a142:	980c      	ldr	r0, [sp, #48]	; 0x30
 801a144:	28ff      	cmp	r0, #255	; 0xff
 801a146:	d019      	beq.n	801a17c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801a148:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a14a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801a14e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a152:	fb04 fa01 	mul.w	sl, r4, r1
 801a156:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a15a:	fb08 f800 	mul.w	r8, r8, r0
 801a15e:	f10a 0020 	add.w	r0, sl, #32
 801a162:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801a166:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801a16a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801a16e:	4441      	add	r1, r8
 801a170:	0a00      	lsrs	r0, r0, #8
 801a172:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801a176:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a17a:	4301      	orrs	r1, r0
 801a17c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a17e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801a182:	2cff      	cmp	r4, #255	; 0xff
 801a184:	d01a      	beq.n	801a1bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801a186:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801a18a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a18e:	fb04 fa00 	mul.w	sl, r4, r0
 801a192:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a196:	fb08 f80c 	mul.w	r8, r8, ip
 801a19a:	f10a 0c20 	add.w	ip, sl, #32
 801a19e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801a1a2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801a1a6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801a1aa:	4440      	add	r0, r8
 801a1ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a1b0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801a1b4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a1b8:	ea40 000c 	orr.w	r0, r0, ip
 801a1bc:	fb15 fc02 	smulbb	ip, r5, r2
 801a1c0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801a1c4:	f1c5 0810 	rsb	r8, r5, #16
 801a1c8:	eba8 0802 	sub.w	r8, r8, r2
 801a1cc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801a1d0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801a1d4:	437a      	muls	r2, r7
 801a1d6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801a1da:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801a1de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a1e2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a1e6:	fb09 2208 	mla	r2, r9, r8, r2
 801a1ea:	ea4a 0101 	orr.w	r1, sl, r1
 801a1ee:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801a1f2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a1f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a1fa:	fb05 2201 	mla	r2, r5, r1, r2
 801a1fe:	ea4b 0000 	orr.w	r0, fp, r0
 801a202:	fb0c 2200 	mla	r2, ip, r0, r2
 801a206:	0d57      	lsrs	r7, r2, #21
 801a208:	0952      	lsrs	r2, r2, #5
 801a20a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a20e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a212:	433a      	orrs	r2, r7
 801a214:	2bff      	cmp	r3, #255	; 0xff
 801a216:	b292      	uxth	r2, r2
 801a218:	d127      	bne.n	801a26a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801a21a:	f8ae 2000 	strh.w	r2, [lr]
 801a21e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801a220:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801a222:	4413      	add	r3, r2
 801a224:	931d      	str	r3, [sp, #116]	; 0x74
 801a226:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801a228:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a22a:	441a      	add	r2, r3
 801a22c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a22e:	921e      	str	r2, [sp, #120]	; 0x78
 801a230:	3b01      	subs	r3, #1
 801a232:	f10e 0e02 	add.w	lr, lr, #2
 801a236:	930f      	str	r3, [sp, #60]	; 0x3c
 801a238:	e627      	b.n	8019e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801a23a:	fb08 f000 	mul.w	r0, r8, r0
 801a23e:	fb09 0303 	mla	r3, r9, r3, r0
 801a242:	e71b      	b.n	801a07c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801a244:	46b9      	mov	r9, r7
 801a246:	e743      	b.n	801a0d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801a248:	f1c2 0110 	rsb	r1, r2, #16
 801a24c:	437a      	muls	r2, r7
 801a24e:	fb09 2901 	mla	r9, r9, r1, r2
 801a252:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a256:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801a25a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801a25e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a262:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a266:	4302      	orrs	r2, r0
 801a268:	e7d4      	b.n	801a214 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801a26a:	f8be 7000 	ldrh.w	r7, [lr]
 801a26e:	4c1c      	ldr	r4, [pc, #112]	; (801a2e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801a270:	43db      	mvns	r3, r3
 801a272:	1238      	asrs	r0, r7, #8
 801a274:	fa5f fc83 	uxtb.w	ip, r3
 801a278:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a27c:	10fd      	asrs	r5, r7, #3
 801a27e:	fb00 f00c 	mul.w	r0, r0, ip
 801a282:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a286:	fb05 f10c 	mul.w	r1, r5, ip
 801a28a:	1c45      	adds	r5, r0, #1
 801a28c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801a290:	1215      	asrs	r5, r2, #8
 801a292:	f025 0507 	bic.w	r5, r5, #7
 801a296:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801a29a:	1c4d      	adds	r5, r1, #1
 801a29c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801a2a0:	10d1      	asrs	r1, r2, #3
 801a2a2:	f021 0103 	bic.w	r1, r1, #3
 801a2a6:	00fb      	lsls	r3, r7, #3
 801a2a8:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801a2ac:	b2db      	uxtb	r3, r3
 801a2ae:	b2c0      	uxtb	r0, r0
 801a2b0:	00c9      	lsls	r1, r1, #3
 801a2b2:	fb03 f30c 	mul.w	r3, r3, ip
 801a2b6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a2ba:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801a2be:	4308      	orrs	r0, r1
 801a2c0:	1c59      	adds	r1, r3, #1
 801a2c2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a2c6:	00d2      	lsls	r2, r2, #3
 801a2c8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801a2cc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801a2d0:	4318      	orrs	r0, r3
 801a2d2:	f8ae 0000 	strh.w	r0, [lr]
 801a2d6:	e7a2      	b.n	801a21e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801a2d8:	b013      	add	sp, #76	; 0x4c
 801a2da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a2de:	bf00      	nop
 801a2e0:	fffff800 	.word	0xfffff800

0801a2e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801a2e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a2e8:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801a2ec:	fb05 4c03 	mla	ip, r5, r3, r4
 801a2f0:	2d00      	cmp	r5, #0
 801a2f2:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801a2f6:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801a2fa:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801a2fe:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801a302:	8808      	ldrh	r0, [r1, #0]
 801a304:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801a308:	f2c0 80a7 	blt.w	801a45a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801a30c:	45aa      	cmp	sl, r5
 801a30e:	f340 80a4 	ble.w	801a45a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801a312:	2c00      	cmp	r4, #0
 801a314:	f2c0 809f 	blt.w	801a456 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801a318:	42a3      	cmp	r3, r4
 801a31a:	f340 809c 	ble.w	801a456 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801a31e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801a322:	1c62      	adds	r2, r4, #1
 801a324:	f100 809c 	bmi.w	801a460 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801a328:	4293      	cmp	r3, r2
 801a32a:	f340 8099 	ble.w	801a460 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801a32e:	f1b9 0f00 	cmp.w	r9, #0
 801a332:	f000 8095 	beq.w	801a460 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801a336:	f8be c002 	ldrh.w	ip, [lr, #2]
 801a33a:	3501      	adds	r5, #1
 801a33c:	f100 8094 	bmi.w	801a468 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801a340:	45aa      	cmp	sl, r5
 801a342:	f340 8091 	ble.w	801a468 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801a346:	2f00      	cmp	r7, #0
 801a348:	f000 808e 	beq.w	801a468 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801a34c:	2c00      	cmp	r4, #0
 801a34e:	f2c0 8089 	blt.w	801a464 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801a352:	42a3      	cmp	r3, r4
 801a354:	f340 8086 	ble.w	801a464 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801a358:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801a35c:	3401      	adds	r4, #1
 801a35e:	f100 8086 	bmi.w	801a46e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801a362:	42a3      	cmp	r3, r4
 801a364:	f340 8083 	ble.w	801a46e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801a368:	f1b9 0f00 	cmp.w	r9, #0
 801a36c:	d07f      	beq.n	801a46e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801a36e:	3301      	adds	r3, #1
 801a370:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801a374:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801a378:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801a37c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801a380:	fb19 fe07 	smulbb	lr, r9, r7
 801a384:	ea44 0808 	orr.w	r8, r4, r8
 801a388:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801a38c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801a390:	f1c7 0210 	rsb	r2, r7, #16
 801a394:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801a398:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a39c:	ea44 0c0c 	orr.w	ip, r4, ip
 801a3a0:	eba2 0209 	sub.w	r2, r2, r9
 801a3a4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801a3a8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801a3ac:	fb04 f40c 	mul.w	r4, r4, ip
 801a3b0:	fb02 4808 	mla	r8, r2, r8, r4
 801a3b4:	041a      	lsls	r2, r3, #16
 801a3b6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a3ba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a3be:	4313      	orrs	r3, r2
 801a3c0:	042a      	lsls	r2, r5, #16
 801a3c2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a3c6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801a3ca:	fb0e 8303 	mla	r3, lr, r3, r8
 801a3ce:	432a      	orrs	r2, r5
 801a3d0:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801a3d4:	fb07 3202 	mla	r2, r7, r2, r3
 801a3d8:	0d53      	lsrs	r3, r2, #21
 801a3da:	0952      	lsrs	r2, r2, #5
 801a3dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a3e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a3e4:	431a      	orrs	r2, r3
 801a3e6:	b293      	uxth	r3, r2
 801a3e8:	b2b4      	uxth	r4, r6
 801a3ea:	1202      	asrs	r2, r0, #8
 801a3ec:	43f6      	mvns	r6, r6
 801a3ee:	b2f6      	uxtb	r6, r6
 801a3f0:	121d      	asrs	r5, r3, #8
 801a3f2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a3f6:	fb12 f206 	smulbb	r2, r2, r6
 801a3fa:	10c7      	asrs	r7, r0, #3
 801a3fc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a400:	00c0      	lsls	r0, r0, #3
 801a402:	fb05 2504 	mla	r5, r5, r4, r2
 801a406:	b2c0      	uxtb	r0, r0
 801a408:	10da      	asrs	r2, r3, #3
 801a40a:	00db      	lsls	r3, r3, #3
 801a40c:	b2db      	uxtb	r3, r3
 801a40e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a412:	fb10 f006 	smulbb	r0, r0, r6
 801a416:	b2ad      	uxth	r5, r5
 801a418:	fb03 0004 	mla	r0, r3, r4, r0
 801a41c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a420:	fb17 f706 	smulbb	r7, r7, r6
 801a424:	b280      	uxth	r0, r0
 801a426:	1c6b      	adds	r3, r5, #1
 801a428:	fb02 7204 	mla	r2, r2, r4, r7
 801a42c:	b292      	uxth	r2, r2
 801a42e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a432:	1c43      	adds	r3, r0, #1
 801a434:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a438:	1c50      	adds	r0, r2, #1
 801a43a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801a43e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801a442:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a446:	0952      	lsrs	r2, r2, #5
 801a448:	432b      	orrs	r3, r5
 801a44a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a44e:	4313      	orrs	r3, r2
 801a450:	800b      	strh	r3, [r1, #0]
 801a452:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a456:	4680      	mov	r8, r0
 801a458:	e763      	b.n	801a322 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801a45a:	4684      	mov	ip, r0
 801a45c:	4680      	mov	r8, r0
 801a45e:	e76c      	b.n	801a33a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801a460:	4684      	mov	ip, r0
 801a462:	e76a      	b.n	801a33a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801a464:	4605      	mov	r5, r0
 801a466:	e779      	b.n	801a35c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801a468:	4603      	mov	r3, r0
 801a46a:	4605      	mov	r5, r0
 801a46c:	e782      	b.n	801a374 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801a46e:	4603      	mov	r3, r0
 801a470:	e780      	b.n	801a374 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801a472 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a472:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a476:	b093      	sub	sp, #76	; 0x4c
 801a478:	461d      	mov	r5, r3
 801a47a:	9210      	str	r2, [sp, #64]	; 0x40
 801a47c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801a47e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801a482:	920b      	str	r2, [sp, #44]	; 0x2c
 801a484:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801a488:	910a      	str	r1, [sp, #40]	; 0x28
 801a48a:	6859      	ldr	r1, [r3, #4]
 801a48c:	681b      	ldr	r3, [r3, #0]
 801a48e:	9011      	str	r0, [sp, #68]	; 0x44
 801a490:	fb01 2707 	mla	r7, r1, r7, r2
 801a494:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801a498:	9307      	str	r3, [sp, #28]
 801a49a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a49c:	681b      	ldr	r3, [r3, #0]
 801a49e:	9309      	str	r3, [sp, #36]	; 0x24
 801a4a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a4a2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801a4a6:	43db      	mvns	r3, r3
 801a4a8:	b2db      	uxtb	r3, r3
 801a4aa:	9308      	str	r3, [sp, #32]
 801a4ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a4ae:	2b00      	cmp	r3, #0
 801a4b0:	dc03      	bgt.n	801a4ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a4b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a4b4:	2b00      	cmp	r3, #0
 801a4b6:	f340 8203 	ble.w	801a8c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801a4ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a4bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a4c0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a4c4:	1e48      	subs	r0, r1, #1
 801a4c6:	f102 3cff 	add.w	ip, r2, #4294967295
 801a4ca:	2d00      	cmp	r5, #0
 801a4cc:	f340 80da 	ble.w	801a684 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801a4d0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a4d4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a4d8:	d406      	bmi.n	801a4e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a4da:	4586      	cmp	lr, r0
 801a4dc:	da04      	bge.n	801a4e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a4de:	2b00      	cmp	r3, #0
 801a4e0:	db02      	blt.n	801a4e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a4e2:	4563      	cmp	r3, ip
 801a4e4:	f2c0 80cf 	blt.w	801a686 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a4e8:	f11e 0e01 	adds.w	lr, lr, #1
 801a4ec:	f100 80c1 	bmi.w	801a672 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a4f0:	4571      	cmp	r1, lr
 801a4f2:	f2c0 80be 	blt.w	801a672 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a4f6:	3301      	adds	r3, #1
 801a4f8:	f100 80bb 	bmi.w	801a672 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a4fc:	429a      	cmp	r2, r3
 801a4fe:	f2c0 80b8 	blt.w	801a672 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a502:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801a506:	46a9      	mov	r9, r5
 801a508:	f1b9 0f00 	cmp.w	r9, #0
 801a50c:	f340 80d8 	ble.w	801a6c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801a510:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a512:	1421      	asrs	r1, r4, #16
 801a514:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a518:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a51c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a520:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801a524:	f100 8111 	bmi.w	801a74a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a528:	f10e 3aff 	add.w	sl, lr, #4294967295
 801a52c:	4551      	cmp	r1, sl
 801a52e:	f280 810c 	bge.w	801a74a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a532:	2800      	cmp	r0, #0
 801a534:	f2c0 8109 	blt.w	801a74a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a538:	f103 3aff 	add.w	sl, r3, #4294967295
 801a53c:	4550      	cmp	r0, sl
 801a53e:	f280 8104 	bge.w	801a74a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a542:	fa0f f38e 	sxth.w	r3, lr
 801a546:	fb00 1103 	mla	r1, r0, r3, r1
 801a54a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801a54c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801a550:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801a554:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801a558:	f1bc 0f00 	cmp.w	ip, #0
 801a55c:	d007      	beq.n	801a56e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801a55e:	005b      	lsls	r3, r3, #1
 801a560:	eb0a 0003 	add.w	r0, sl, r3
 801a564:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801a568:	930c      	str	r3, [sp, #48]	; 0x30
 801a56a:	8843      	ldrh	r3, [r0, #2]
 801a56c:	930d      	str	r3, [sp, #52]	; 0x34
 801a56e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801a572:	fb12 f30c 	smulbb	r3, r2, ip
 801a576:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801a57a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801a57e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a582:	10db      	asrs	r3, r3, #3
 801a584:	ea40 000e 	orr.w	r0, r0, lr
 801a588:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a58c:	f1cc 0e10 	rsb	lr, ip, #16
 801a590:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a594:	ebae 0e02 	sub.w	lr, lr, r2
 801a598:	ea4a 0101 	orr.w	r1, sl, r1
 801a59c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a5a0:	4351      	muls	r1, r2
 801a5a2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a5a4:	9f08      	ldr	r7, [sp, #32]
 801a5a6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801a5aa:	fb0e 1e00 	mla	lr, lr, r0, r1
 801a5ae:	0410      	lsls	r0, r2, #16
 801a5b0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a5b4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a5b8:	4310      	orrs	r0, r2
 801a5ba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a5bc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a5be:	0412      	lsls	r2, r2, #16
 801a5c0:	fb03 e000 	mla	r0, r3, r0, lr
 801a5c4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a5c8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801a5cc:	ea42 020e 	orr.w	r2, r2, lr
 801a5d0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801a5d4:	fb03 0302 	mla	r3, r3, r2, r0
 801a5d8:	0d5a      	lsrs	r2, r3, #21
 801a5da:	095b      	lsrs	r3, r3, #5
 801a5dc:	f8b8 0000 	ldrh.w	r0, [r8]
 801a5e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a5e4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a5e8:	4313      	orrs	r3, r2
 801a5ea:	b29b      	uxth	r3, r3
 801a5ec:	1201      	asrs	r1, r0, #8
 801a5ee:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801a5f2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801a5f6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a5fa:	fb11 f107 	smulbb	r1, r1, r7
 801a5fe:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a602:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a606:	00c0      	lsls	r0, r0, #3
 801a608:	fb0c 1c02 	mla	ip, ip, r2, r1
 801a60c:	b2c0      	uxtb	r0, r0
 801a60e:	10d9      	asrs	r1, r3, #3
 801a610:	00db      	lsls	r3, r3, #3
 801a612:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a616:	b2db      	uxtb	r3, r3
 801a618:	fb10 f007 	smulbb	r0, r0, r7
 801a61c:	fa1f fc8c 	uxth.w	ip, ip
 801a620:	fb03 0302 	mla	r3, r3, r2, r0
 801a624:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a628:	fb1e fe07 	smulbb	lr, lr, r7
 801a62c:	fb01 e102 	mla	r1, r1, r2, lr
 801a630:	b29a      	uxth	r2, r3
 801a632:	f10c 0301 	add.w	r3, ip, #1
 801a636:	b289      	uxth	r1, r1
 801a638:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a63c:	1c53      	adds	r3, r2, #1
 801a63e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a642:	1c4a      	adds	r2, r1, #1
 801a644:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a648:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a64c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a650:	0949      	lsrs	r1, r1, #5
 801a652:	ea43 030c 	orr.w	r3, r3, ip
 801a656:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a65a:	430b      	orrs	r3, r1
 801a65c:	f8a8 3000 	strh.w	r3, [r8]
 801a660:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a662:	441c      	add	r4, r3
 801a664:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a666:	f108 0802 	add.w	r8, r8, #2
 801a66a:	441e      	add	r6, r3
 801a66c:	f109 39ff 	add.w	r9, r9, #4294967295
 801a670:	e74a      	b.n	801a508 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a672:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a674:	441c      	add	r4, r3
 801a676:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a678:	441e      	add	r6, r3
 801a67a:	9b07      	ldr	r3, [sp, #28]
 801a67c:	3302      	adds	r3, #2
 801a67e:	3d01      	subs	r5, #1
 801a680:	9307      	str	r3, [sp, #28]
 801a682:	e722      	b.n	801a4ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a684:	d022      	beq.n	801a6cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801a686:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a688:	1e6b      	subs	r3, r5, #1
 801a68a:	fb00 4003 	mla	r0, r0, r3, r4
 801a68e:	1400      	asrs	r0, r0, #16
 801a690:	f53f af37 	bmi.w	801a502 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a694:	3901      	subs	r1, #1
 801a696:	4288      	cmp	r0, r1
 801a698:	f6bf af33 	bge.w	801a502 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a69c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801a69e:	fb01 6303 	mla	r3, r1, r3, r6
 801a6a2:	141b      	asrs	r3, r3, #16
 801a6a4:	f53f af2d 	bmi.w	801a502 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a6a8:	3a01      	subs	r2, #1
 801a6aa:	4293      	cmp	r3, r2
 801a6ac:	f6bf af29 	bge.w	801a502 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a6b0:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801a6b4:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801a6b8:	46a8      	mov	r8, r5
 801a6ba:	f1b8 0f00 	cmp.w	r8, #0
 801a6be:	dc5e      	bgt.n	801a77e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a6c0:	9b07      	ldr	r3, [sp, #28]
 801a6c2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801a6c6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a6ca:	9307      	str	r3, [sp, #28]
 801a6cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a6ce:	2b00      	cmp	r3, #0
 801a6d0:	f340 80f6 	ble.w	801a8c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801a6d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a6d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a6dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a6e0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a6e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a6e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a6ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a6ee:	eef0 6a62 	vmov.f32	s13, s5
 801a6f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a6f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a6fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a6fe:	ee16 4a90 	vmov	r4, s13
 801a702:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a706:	eef0 6a43 	vmov.f32	s13, s6
 801a70a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a70e:	ee12 2a90 	vmov	r2, s5
 801a712:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a716:	fb92 f3f3 	sdiv	r3, r2, r3
 801a71a:	ee13 2a10 	vmov	r2, s6
 801a71e:	931f      	str	r3, [sp, #124]	; 0x7c
 801a720:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a722:	fb92 f3f3 	sdiv	r3, r2, r3
 801a726:	9320      	str	r3, [sp, #128]	; 0x80
 801a728:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a72a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a72c:	3b01      	subs	r3, #1
 801a72e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a732:	930a      	str	r3, [sp, #40]	; 0x28
 801a734:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a736:	ee16 6a90 	vmov	r6, s13
 801a73a:	bf14      	ite	ne
 801a73c:	461d      	movne	r5, r3
 801a73e:	4615      	moveq	r5, r2
 801a740:	eeb0 3a67 	vmov.f32	s6, s15
 801a744:	eef0 2a47 	vmov.f32	s5, s14
 801a748:	e6b0      	b.n	801a4ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a74a:	f111 0a01 	adds.w	sl, r1, #1
 801a74e:	d487      	bmi.n	801a660 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a750:	45d6      	cmp	lr, sl
 801a752:	db85      	blt.n	801a660 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a754:	f110 0a01 	adds.w	sl, r0, #1
 801a758:	d482      	bmi.n	801a660 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a75a:	4553      	cmp	r3, sl
 801a75c:	db80      	blt.n	801a660 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a75e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801a760:	9101      	str	r1, [sp, #4]
 801a762:	b21b      	sxth	r3, r3
 801a764:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801a768:	9300      	str	r3, [sp, #0]
 801a76a:	e9cd c704 	strd	ip, r7, [sp, #16]
 801a76e:	fa0f f38e 	sxth.w	r3, lr
 801a772:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a774:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a776:	4641      	mov	r1, r8
 801a778:	f7ff fdb4 	bl	801a2e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801a77c:	e770      	b.n	801a660 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a77e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a780:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801a782:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a786:	1430      	asrs	r0, r6, #16
 801a788:	1423      	asrs	r3, r4, #16
 801a78a:	fb01 3000 	mla	r0, r1, r0, r3
 801a78e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a790:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801a794:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801a798:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801a79c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a7a0:	8858      	ldrh	r0, [r3, #2]
 801a7a2:	f1be 0f00 	cmp.w	lr, #0
 801a7a6:	d00b      	beq.n	801a7c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801a7a8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801a7ac:	3901      	subs	r1, #1
 801a7ae:	0049      	lsls	r1, r1, #1
 801a7b0:	3102      	adds	r1, #2
 801a7b2:	eb03 0b01 	add.w	fp, r3, r1
 801a7b6:	5a5b      	ldrh	r3, [r3, r1]
 801a7b8:	930e      	str	r3, [sp, #56]	; 0x38
 801a7ba:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a7be:	930f      	str	r3, [sp, #60]	; 0x3c
 801a7c0:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801a7c4:	fb12 f30e 	smulbb	r3, r2, lr
 801a7c8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a7cc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801a7d0:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801a7d4:	10db      	asrs	r3, r3, #3
 801a7d6:	ea41 010c 	orr.w	r1, r1, ip
 801a7da:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a7de:	f1ce 0c10 	rsb	ip, lr, #16
 801a7e2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a7e6:	ebac 0c02 	sub.w	ip, ip, r2
 801a7ea:	ea4b 0000 	orr.w	r0, fp, r0
 801a7ee:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a7f2:	4350      	muls	r0, r2
 801a7f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a7f6:	9f08      	ldr	r7, [sp, #32]
 801a7f8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801a7fc:	fb0c 0c01 	mla	ip, ip, r1, r0
 801a800:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801a804:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801a808:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a80a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801a80c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a810:	0412      	lsls	r2, r2, #16
 801a812:	ea4b 0101 	orr.w	r1, fp, r1
 801a816:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a81a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a81e:	fb03 c101 	mla	r1, r3, r1, ip
 801a822:	4302      	orrs	r2, r0
 801a824:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801a828:	fb03 1202 	mla	r2, r3, r2, r1
 801a82c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801a830:	0952      	lsrs	r2, r2, #5
 801a832:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801a836:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a83a:	f8b9 2000 	ldrh.w	r2, [r9]
 801a83e:	ea4b 0303 	orr.w	r3, fp, r3
 801a842:	b29b      	uxth	r3, r3
 801a844:	1211      	asrs	r1, r2, #8
 801a846:	1218      	asrs	r0, r3, #8
 801a848:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a84c:	fb11 f107 	smulbb	r1, r1, r7
 801a850:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801a854:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a858:	00d2      	lsls	r2, r2, #3
 801a85a:	fb00 100a 	mla	r0, r0, sl, r1
 801a85e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a862:	10d9      	asrs	r1, r3, #3
 801a864:	b2d2      	uxtb	r2, r2
 801a866:	00db      	lsls	r3, r3, #3
 801a868:	fb1c fc07 	smulbb	ip, ip, r7
 801a86c:	fb12 f207 	smulbb	r2, r2, r7
 801a870:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a874:	b2db      	uxtb	r3, r3
 801a876:	b280      	uxth	r0, r0
 801a878:	fb01 c10a 	mla	r1, r1, sl, ip
 801a87c:	fb03 230a 	mla	r3, r3, sl, r2
 801a880:	b29b      	uxth	r3, r3
 801a882:	b289      	uxth	r1, r1
 801a884:	1c42      	adds	r2, r0, #1
 801a886:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a88a:	f101 0c01 	add.w	ip, r1, #1
 801a88e:	1c5a      	adds	r2, r3, #1
 801a890:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a894:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801a898:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a89a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a89e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a8a2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a8a6:	4310      	orrs	r0, r2
 801a8a8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a8ac:	441c      	add	r4, r3
 801a8ae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a8b0:	ea40 000c 	orr.w	r0, r0, ip
 801a8b4:	f829 0b02 	strh.w	r0, [r9], #2
 801a8b8:	441e      	add	r6, r3
 801a8ba:	f108 38ff 	add.w	r8, r8, #4294967295
 801a8be:	e6fc      	b.n	801a6ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801a8c0:	b013      	add	sp, #76	; 0x4c
 801a8c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a8c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801a8c6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a8ca:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801a8ce:	fb0e 4703 	mla	r7, lr, r3, r4
 801a8d2:	f1be 0f00 	cmp.w	lr, #0
 801a8d6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801a8da:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801a8de:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801a8e2:	8808      	ldrh	r0, [r1, #0]
 801a8e4:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801a8e8:	db60      	blt.n	801a9ac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801a8ea:	45f1      	cmp	r9, lr
 801a8ec:	dd5e      	ble.n	801a9ac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801a8ee:	2c00      	cmp	r4, #0
 801a8f0:	db5a      	blt.n	801a9a8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801a8f2:	42a3      	cmp	r3, r4
 801a8f4:	dd58      	ble.n	801a9a8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801a8f6:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801a8fa:	1c62      	adds	r2, r4, #1
 801a8fc:	d459      	bmi.n	801a9b2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801a8fe:	4293      	cmp	r3, r2
 801a900:	dd57      	ble.n	801a9b2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801a902:	2d00      	cmp	r5, #0
 801a904:	d055      	beq.n	801a9b2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801a906:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801a90a:	f11e 0e01 	adds.w	lr, lr, #1
 801a90e:	d454      	bmi.n	801a9ba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801a910:	45f1      	cmp	r9, lr
 801a912:	dd52      	ble.n	801a9ba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801a914:	2e00      	cmp	r6, #0
 801a916:	d050      	beq.n	801a9ba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801a918:	2c00      	cmp	r4, #0
 801a91a:	db4c      	blt.n	801a9b6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801a91c:	42a3      	cmp	r3, r4
 801a91e:	dd4a      	ble.n	801a9b6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801a920:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801a924:	3401      	adds	r4, #1
 801a926:	d405      	bmi.n	801a934 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801a928:	42a3      	cmp	r3, r4
 801a92a:	dd03      	ble.n	801a934 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801a92c:	b115      	cbz	r5, 801a934 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801a92e:	3301      	adds	r3, #1
 801a930:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801a934:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801a938:	fb15 f406 	smulbb	r4, r5, r6
 801a93c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a940:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801a944:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a948:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801a94c:	ea43 0c0c 	orr.w	ip, r3, ip
 801a950:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801a954:	f1c6 0310 	rsb	r3, r6, #16
 801a958:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801a95c:	1b5b      	subs	r3, r3, r5
 801a95e:	ea4e 0707 	orr.w	r7, lr, r7
 801a962:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801a966:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a96a:	437d      	muls	r5, r7
 801a96c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801a970:	0403      	lsls	r3, r0, #16
 801a972:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a976:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a97a:	4318      	orrs	r0, r3
 801a97c:	0413      	lsls	r3, r2, #16
 801a97e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a982:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a986:	4313      	orrs	r3, r2
 801a988:	fb04 c000 	mla	r0, r4, r0, ip
 801a98c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801a990:	fb06 0003 	mla	r0, r6, r3, r0
 801a994:	0d43      	lsrs	r3, r0, #21
 801a996:	0940      	lsrs	r0, r0, #5
 801a998:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a99c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a9a0:	4318      	orrs	r0, r3
 801a9a2:	8008      	strh	r0, [r1, #0]
 801a9a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a9a8:	4684      	mov	ip, r0
 801a9aa:	e7a6      	b.n	801a8fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801a9ac:	4607      	mov	r7, r0
 801a9ae:	4684      	mov	ip, r0
 801a9b0:	e7ab      	b.n	801a90a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801a9b2:	4607      	mov	r7, r0
 801a9b4:	e7a9      	b.n	801a90a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801a9b6:	4602      	mov	r2, r0
 801a9b8:	e7b4      	b.n	801a924 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801a9ba:	4602      	mov	r2, r0
 801a9bc:	e7ba      	b.n	801a934 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801a9be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a9be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9c2:	b08f      	sub	sp, #60	; 0x3c
 801a9c4:	461d      	mov	r5, r3
 801a9c6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801a9c8:	920c      	str	r2, [sp, #48]	; 0x30
 801a9ca:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801a9ce:	9107      	str	r1, [sp, #28]
 801a9d0:	6859      	ldr	r1, [r3, #4]
 801a9d2:	681b      	ldr	r3, [r3, #0]
 801a9d4:	900d      	str	r0, [sp, #52]	; 0x34
 801a9d6:	fb01 2707 	mla	r7, r1, r7, r2
 801a9da:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801a9de:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a9e0:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801a9e4:	f8d3 8000 	ldr.w	r8, [r3]
 801a9e8:	9b07      	ldr	r3, [sp, #28]
 801a9ea:	2b00      	cmp	r3, #0
 801a9ec:	dc03      	bgt.n	801a9f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a9ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a9f0:	2b00      	cmp	r3, #0
 801a9f2:	f340 8181 	ble.w	801acf8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801a9f6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a9f8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a9fc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801aa00:	1e48      	subs	r0, r1, #1
 801aa02:	f102 3cff 	add.w	ip, r2, #4294967295
 801aa06:	2d00      	cmp	r5, #0
 801aa08:	f340 809b 	ble.w	801ab42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801aa0c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801aa10:	ea4f 4326 	mov.w	r3, r6, asr #16
 801aa14:	d406      	bmi.n	801aa24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801aa16:	4586      	cmp	lr, r0
 801aa18:	da04      	bge.n	801aa24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801aa1a:	2b00      	cmp	r3, #0
 801aa1c:	db02      	blt.n	801aa24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801aa1e:	4563      	cmp	r3, ip
 801aa20:	f2c0 8090 	blt.w	801ab44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aa24:	f11e 0e01 	adds.w	lr, lr, #1
 801aa28:	f100 8084 	bmi.w	801ab34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801aa2c:	4571      	cmp	r1, lr
 801aa2e:	f2c0 8081 	blt.w	801ab34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801aa32:	3301      	adds	r3, #1
 801aa34:	d47e      	bmi.n	801ab34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801aa36:	429a      	cmp	r2, r3
 801aa38:	db7c      	blt.n	801ab34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801aa3a:	46aa      	mov	sl, r5
 801aa3c:	46b9      	mov	r9, r7
 801aa3e:	f1ba 0f00 	cmp.w	sl, #0
 801aa42:	f340 8099 	ble.w	801ab78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801aa46:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801aa48:	1421      	asrs	r1, r4, #16
 801aa4a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801aa4e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801aa52:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801aa56:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801aa5a:	f100 80d0 	bmi.w	801abfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801aa5e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801aa62:	4559      	cmp	r1, fp
 801aa64:	f280 80cb 	bge.w	801abfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801aa68:	2800      	cmp	r0, #0
 801aa6a:	f2c0 80c8 	blt.w	801abfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801aa6e:	f103 3bff 	add.w	fp, r3, #4294967295
 801aa72:	4558      	cmp	r0, fp
 801aa74:	f280 80c3 	bge.w	801abfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801aa78:	fa0f fe8e 	sxth.w	lr, lr
 801aa7c:	fb00 110e 	mla	r1, r0, lr, r1
 801aa80:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801aa84:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801aa88:	8841      	ldrh	r1, [r0, #2]
 801aa8a:	f1bc 0f00 	cmp.w	ip, #0
 801aa8e:	d00b      	beq.n	801aaa8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801aa90:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801aa94:	3b01      	subs	r3, #1
 801aa96:	005b      	lsls	r3, r3, #1
 801aa98:	3302      	adds	r3, #2
 801aa9a:	eb00 0e03 	add.w	lr, r0, r3
 801aa9e:	5ac3      	ldrh	r3, [r0, r3]
 801aaa0:	9308      	str	r3, [sp, #32]
 801aaa2:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801aaa6:	9309      	str	r3, [sp, #36]	; 0x24
 801aaa8:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801aaac:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801aab0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801aab4:	ea40 000b 	orr.w	r0, r0, fp
 801aab8:	fb12 f30c 	smulbb	r3, r2, ip
 801aabc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801aac0:	10db      	asrs	r3, r3, #3
 801aac2:	f1cc 0e10 	rsb	lr, ip, #16
 801aac6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801aaca:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801aace:	ebae 0e02 	sub.w	lr, lr, r2
 801aad2:	ea4b 0101 	orr.w	r1, fp, r1
 801aad6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801aada:	4351      	muls	r1, r2
 801aadc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801aade:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801aae2:	fb0e 1e00 	mla	lr, lr, r0, r1
 801aae6:	0410      	lsls	r0, r2, #16
 801aae8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801aaec:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801aaf0:	4310      	orrs	r0, r2
 801aaf2:	9a08      	ldr	r2, [sp, #32]
 801aaf4:	9908      	ldr	r1, [sp, #32]
 801aaf6:	0412      	lsls	r2, r2, #16
 801aaf8:	fb03 e000 	mla	r0, r3, r0, lr
 801aafc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ab00:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801ab04:	ea42 020e 	orr.w	r2, r2, lr
 801ab08:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801ab0c:	fb03 0302 	mla	r3, r3, r2, r0
 801ab10:	0d5a      	lsrs	r2, r3, #21
 801ab12:	095b      	lsrs	r3, r3, #5
 801ab14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ab18:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ab1c:	4313      	orrs	r3, r2
 801ab1e:	f8a9 3000 	strh.w	r3, [r9]
 801ab22:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ab24:	441c      	add	r4, r3
 801ab26:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ab28:	f109 0902 	add.w	r9, r9, #2
 801ab2c:	441e      	add	r6, r3
 801ab2e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801ab32:	e784      	b.n	801aa3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ab34:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ab36:	441c      	add	r4, r3
 801ab38:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ab3a:	3d01      	subs	r5, #1
 801ab3c:	441e      	add	r6, r3
 801ab3e:	3702      	adds	r7, #2
 801ab40:	e761      	b.n	801aa06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ab42:	d01d      	beq.n	801ab80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801ab44:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801ab46:	1e6b      	subs	r3, r5, #1
 801ab48:	fb00 4003 	mla	r0, r0, r3, r4
 801ab4c:	1400      	asrs	r0, r0, #16
 801ab4e:	f53f af74 	bmi.w	801aa3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ab52:	3901      	subs	r1, #1
 801ab54:	4288      	cmp	r0, r1
 801ab56:	f6bf af70 	bge.w	801aa3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ab5a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801ab5c:	fb01 6303 	mla	r3, r1, r3, r6
 801ab60:	141b      	asrs	r3, r3, #16
 801ab62:	f53f af6a 	bmi.w	801aa3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ab66:	3a01      	subs	r2, #1
 801ab68:	4293      	cmp	r3, r2
 801ab6a:	f6bf af66 	bge.w	801aa3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ab6e:	46a9      	mov	r9, r5
 801ab70:	46ba      	mov	sl, r7
 801ab72:	f1b9 0f00 	cmp.w	r9, #0
 801ab76:	dc5a      	bgt.n	801ac2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801ab78:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ab7c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801ab80:	9b07      	ldr	r3, [sp, #28]
 801ab82:	2b00      	cmp	r3, #0
 801ab84:	f340 80b8 	ble.w	801acf8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801ab88:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ab8c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ab90:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ab94:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ab96:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ab9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ab9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aba2:	eef0 6a62 	vmov.f32	s13, s5
 801aba6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801abaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801abae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801abb2:	ee16 4a90 	vmov	r4, s13
 801abb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801abba:	eef0 6a43 	vmov.f32	s13, s6
 801abbe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801abc2:	ee12 2a90 	vmov	r2, s5
 801abc6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801abca:	fb92 f3f3 	sdiv	r3, r2, r3
 801abce:	ee13 2a10 	vmov	r2, s6
 801abd2:	931b      	str	r3, [sp, #108]	; 0x6c
 801abd4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801abd6:	fb92 f3f3 	sdiv	r3, r2, r3
 801abda:	931c      	str	r3, [sp, #112]	; 0x70
 801abdc:	9b07      	ldr	r3, [sp, #28]
 801abde:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801abe0:	3b01      	subs	r3, #1
 801abe2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801abe6:	9307      	str	r3, [sp, #28]
 801abe8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801abea:	ee16 6a90 	vmov	r6, s13
 801abee:	bf14      	ite	ne
 801abf0:	461d      	movne	r5, r3
 801abf2:	4615      	moveq	r5, r2
 801abf4:	eeb0 3a67 	vmov.f32	s6, s15
 801abf8:	eef0 2a47 	vmov.f32	s5, s14
 801abfc:	e6f4      	b.n	801a9e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801abfe:	f111 0b01 	adds.w	fp, r1, #1
 801ac02:	d48e      	bmi.n	801ab22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ac04:	45de      	cmp	lr, fp
 801ac06:	db8c      	blt.n	801ab22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ac08:	f110 0b01 	adds.w	fp, r0, #1
 801ac0c:	d489      	bmi.n	801ab22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ac0e:	455b      	cmp	r3, fp
 801ac10:	db87      	blt.n	801ab22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ac12:	b21b      	sxth	r3, r3
 801ac14:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801ac18:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801ac1c:	9300      	str	r3, [sp, #0]
 801ac1e:	4642      	mov	r2, r8
 801ac20:	fa0f f38e 	sxth.w	r3, lr
 801ac24:	4649      	mov	r1, r9
 801ac26:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ac28:	f7ff fe4d 	bl	801a8c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801ac2c:	e779      	b.n	801ab22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ac2e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ac30:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ac34:	1420      	asrs	r0, r4, #16
 801ac36:	1431      	asrs	r1, r6, #16
 801ac38:	fb03 0101 	mla	r1, r3, r1, r0
 801ac3c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801ac40:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801ac44:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801ac48:	8841      	ldrh	r1, [r0, #2]
 801ac4a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ac4e:	f1be 0f00 	cmp.w	lr, #0
 801ac52:	d00b      	beq.n	801ac6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801ac54:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801ac58:	3b01      	subs	r3, #1
 801ac5a:	005b      	lsls	r3, r3, #1
 801ac5c:	3302      	adds	r3, #2
 801ac5e:	eb00 0b03 	add.w	fp, r0, r3
 801ac62:	5ac3      	ldrh	r3, [r0, r3]
 801ac64:	930a      	str	r3, [sp, #40]	; 0x28
 801ac66:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801ac6a:	930b      	str	r3, [sp, #44]	; 0x2c
 801ac6c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801ac70:	fb12 f30e 	smulbb	r3, r2, lr
 801ac74:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ac78:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ac7c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ac80:	10db      	asrs	r3, r3, #3
 801ac82:	ea40 000c 	orr.w	r0, r0, ip
 801ac86:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ac8a:	f1ce 0c10 	rsb	ip, lr, #16
 801ac8e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ac92:	ebac 0c02 	sub.w	ip, ip, r2
 801ac96:	ea4b 0101 	orr.w	r1, fp, r1
 801ac9a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ac9e:	4351      	muls	r1, r2
 801aca0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801aca2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801aca6:	fb0c 1c00 	mla	ip, ip, r0, r1
 801acaa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801acae:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801acb2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801acb4:	990a      	ldr	r1, [sp, #40]	; 0x28
 801acb6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801acba:	0412      	lsls	r2, r2, #16
 801acbc:	ea4b 0000 	orr.w	r0, fp, r0
 801acc0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801acc4:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801acc8:	fb03 c000 	mla	r0, r3, r0, ip
 801accc:	ea42 0b0b 	orr.w	fp, r2, fp
 801acd0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801acd4:	fb03 000b 	mla	r0, r3, fp, r0
 801acd8:	0d43      	lsrs	r3, r0, #21
 801acda:	0940      	lsrs	r0, r0, #5
 801acdc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ace0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ace4:	4318      	orrs	r0, r3
 801ace6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ace8:	f82a 0b02 	strh.w	r0, [sl], #2
 801acec:	441c      	add	r4, r3
 801acee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801acf0:	f109 39ff 	add.w	r9, r9, #4294967295
 801acf4:	441e      	add	r6, r3
 801acf6:	e73c      	b.n	801ab72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801acf8:	b00f      	add	sp, #60	; 0x3c
 801acfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801acfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801acfe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad02:	b085      	sub	sp, #20
 801ad04:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801ad08:	9102      	str	r1, [sp, #8]
 801ad0a:	2c00      	cmp	r4, #0
 801ad0c:	fb04 7103 	mla	r1, r4, r3, r7
 801ad10:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801ad14:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801ad18:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801ad1c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801ad20:	f2c0 811b 	blt.w	801af5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ad24:	45a6      	cmp	lr, r4
 801ad26:	f340 8118 	ble.w	801af5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ad2a:	2f00      	cmp	r7, #0
 801ad2c:	f2c0 8113 	blt.w	801af56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801ad30:	42bb      	cmp	r3, r7
 801ad32:	f340 8110 	ble.w	801af56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801ad36:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801ad3a:	1c7a      	adds	r2, r7, #1
 801ad3c:	f100 8110 	bmi.w	801af60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801ad40:	4293      	cmp	r3, r2
 801ad42:	f340 810d 	ble.w	801af60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801ad46:	2e00      	cmp	r6, #0
 801ad48:	f000 810c 	beq.w	801af64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801ad4c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801ad50:	3401      	adds	r4, #1
 801ad52:	f100 810b 	bmi.w	801af6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801ad56:	45a6      	cmp	lr, r4
 801ad58:	f340 8108 	ble.w	801af6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801ad5c:	2800      	cmp	r0, #0
 801ad5e:	f000 8108 	beq.w	801af72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801ad62:	2f00      	cmp	r7, #0
 801ad64:	f2c0 8100 	blt.w	801af68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801ad68:	42bb      	cmp	r3, r7
 801ad6a:	f340 80fd 	ble.w	801af68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801ad6e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801ad72:	3701      	adds	r7, #1
 801ad74:	f100 8100 	bmi.w	801af78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801ad78:	42bb      	cmp	r3, r7
 801ad7a:	f340 80fd 	ble.w	801af78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801ad7e:	2e00      	cmp	r6, #0
 801ad80:	f000 80fc 	beq.w	801af7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801ad84:	3301      	adds	r3, #1
 801ad86:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801ad8a:	b2b6      	uxth	r6, r6
 801ad8c:	b280      	uxth	r0, r0
 801ad8e:	fb00 fe06 	mul.w	lr, r0, r6
 801ad92:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ad96:	0136      	lsls	r6, r6, #4
 801ad98:	eba6 070e 	sub.w	r7, r6, lr
 801ad9c:	b280      	uxth	r0, r0
 801ad9e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801ada2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ada6:	b2bf      	uxth	r7, r7
 801ada8:	1a1b      	subs	r3, r3, r0
 801adaa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801adae:	b29b      	uxth	r3, r3
 801adb0:	fb0a f607 	mul.w	r6, sl, r7
 801adb4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801adb8:	fb0b 6603 	mla	r6, fp, r3, r6
 801adbc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801adc0:	fb00 6609 	mla	r6, r0, r9, r6
 801adc4:	fb0e 6608 	mla	r6, lr, r8, r6
 801adc8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801adcc:	9600      	str	r6, [sp, #0]
 801adce:	2e00      	cmp	r6, #0
 801add0:	f000 80be 	beq.w	801af50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801add4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801add8:	fb0b fc0c 	mul.w	ip, fp, ip
 801addc:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801ade0:	fb0b f505 	mul.w	r5, fp, r5
 801ade4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ade8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801adec:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801adf0:	44dc      	add	ip, fp
 801adf2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801adf6:	9501      	str	r5, [sp, #4]
 801adf8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801adfc:	9503      	str	r5, [sp, #12]
 801adfe:	9d01      	ldr	r5, [sp, #4]
 801ae00:	9e02      	ldr	r6, [sp, #8]
 801ae02:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801ae06:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ae0a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ae0e:	fb0a fc0c 	mul.w	ip, sl, ip
 801ae12:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ae16:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ae1a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ae1e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ae22:	4465      	add	r5, ip
 801ae24:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ae28:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ae2c:	fb09 fc0c 	mul.w	ip, r9, ip
 801ae30:	fb09 f904 	mul.w	r9, r9, r4
 801ae34:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ae38:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ae3c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ae40:	fb08 f404 	mul.w	r4, r8, r4
 801ae44:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ae48:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ae4c:	fb08 f802 	mul.w	r8, r8, r2
 801ae50:	fb0a fa01 	mul.w	sl, sl, r1
 801ae54:	0a22      	lsrs	r2, r4, #8
 801ae56:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ae5a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ae5e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ae62:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ae66:	4414      	add	r4, r2
 801ae68:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ae6c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ae70:	0a2d      	lsrs	r5, r5, #8
 801ae72:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ae76:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ae7a:	9a03      	ldr	r2, [sp, #12]
 801ae7c:	8836      	ldrh	r6, [r6, #0]
 801ae7e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ae82:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ae86:	437d      	muls	r5, r7
 801ae88:	4461      	add	r1, ip
 801ae8a:	0a24      	lsrs	r4, r4, #8
 801ae8c:	fb02 5503 	mla	r5, r2, r3, r5
 801ae90:	0a09      	lsrs	r1, r1, #8
 801ae92:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ae96:	fb04 540e 	mla	r4, r4, lr, r5
 801ae9a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ae9e:	fb01 4100 	mla	r1, r1, r0, r4
 801aea2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aea6:	0a09      	lsrs	r1, r1, #8
 801aea8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aeac:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801aeb0:	fb07 f70a 	mul.w	r7, r7, sl
 801aeb4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801aeb8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801aebc:	fb03 7101 	mla	r1, r3, r1, r7
 801aec0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801aec4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801aec8:	fb0e 1e08 	mla	lr, lr, r8, r1
 801aecc:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801aed0:	fb00 e101 	mla	r1, r0, r1, lr
 801aed4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801aed8:	9a00      	ldr	r2, [sp, #0]
 801aeda:	b287      	uxth	r7, r0
 801aedc:	437a      	muls	r2, r7
 801aede:	0a09      	lsrs	r1, r1, #8
 801aee0:	1c53      	adds	r3, r2, #1
 801aee2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801aee6:	4321      	orrs	r1, r4
 801aee8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801aeec:	1235      	asrs	r5, r6, #8
 801aeee:	0c0a      	lsrs	r2, r1, #16
 801aef0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801aef4:	b2db      	uxtb	r3, r3
 801aef6:	fb12 f207 	smulbb	r2, r2, r7
 801aefa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801aefe:	fb05 2503 	mla	r5, r5, r3, r2
 801af02:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801af06:	10f2      	asrs	r2, r6, #3
 801af08:	b2c8      	uxtb	r0, r1
 801af0a:	00f6      	lsls	r6, r6, #3
 801af0c:	fb14 f407 	smulbb	r4, r4, r7
 801af10:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801af14:	b2f6      	uxtb	r6, r6
 801af16:	fb10 f007 	smulbb	r0, r0, r7
 801af1a:	fb02 4203 	mla	r2, r2, r3, r4
 801af1e:	b2ad      	uxth	r5, r5
 801af20:	fb06 0303 	mla	r3, r6, r3, r0
 801af24:	b299      	uxth	r1, r3
 801af26:	b294      	uxth	r4, r2
 801af28:	1c6b      	adds	r3, r5, #1
 801af2a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801af2e:	1c62      	adds	r2, r4, #1
 801af30:	1c4b      	adds	r3, r1, #1
 801af32:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801af36:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801af3a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801af3e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801af42:	0952      	lsrs	r2, r2, #5
 801af44:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801af48:	432b      	orrs	r3, r5
 801af4a:	4313      	orrs	r3, r2
 801af4c:	9a02      	ldr	r2, [sp, #8]
 801af4e:	8013      	strh	r3, [r2, #0]
 801af50:	b005      	add	sp, #20
 801af52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af56:	2500      	movs	r5, #0
 801af58:	e6ef      	b.n	801ad3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801af5a:	2100      	movs	r1, #0
 801af5c:	460d      	mov	r5, r1
 801af5e:	e6f7      	b.n	801ad50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801af60:	2100      	movs	r1, #0
 801af62:	e6f5      	b.n	801ad50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801af64:	4631      	mov	r1, r6
 801af66:	e6f3      	b.n	801ad50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801af68:	2400      	movs	r4, #0
 801af6a:	e702      	b.n	801ad72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801af6c:	2200      	movs	r2, #0
 801af6e:	4614      	mov	r4, r2
 801af70:	e70b      	b.n	801ad8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801af72:	4602      	mov	r2, r0
 801af74:	4604      	mov	r4, r0
 801af76:	e708      	b.n	801ad8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801af78:	2200      	movs	r2, #0
 801af7a:	e706      	b.n	801ad8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801af7c:	4632      	mov	r2, r6
 801af7e:	e704      	b.n	801ad8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801af80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801af80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af84:	b09d      	sub	sp, #116	; 0x74
 801af86:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801af8a:	9219      	str	r2, [sp, #100]	; 0x64
 801af8c:	9307      	str	r3, [sp, #28]
 801af8e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801af90:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801af94:	931a      	str	r3, [sp, #104]	; 0x68
 801af96:	9117      	str	r1, [sp, #92]	; 0x5c
 801af98:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801af9c:	901b      	str	r0, [sp, #108]	; 0x6c
 801af9e:	6850      	ldr	r0, [r2, #4]
 801afa0:	6812      	ldr	r2, [r2, #0]
 801afa2:	fb00 1303 	mla	r3, r0, r3, r1
 801afa6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801afaa:	930a      	str	r3, [sp, #40]	; 0x28
 801afac:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801afae:	681b      	ldr	r3, [r3, #0]
 801afb0:	9310      	str	r3, [sp, #64]	; 0x40
 801afb2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801afb6:	930b      	str	r3, [sp, #44]	; 0x2c
 801afb8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801afba:	2b00      	cmp	r3, #0
 801afbc:	dc03      	bgt.n	801afc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801afbe:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801afc0:	2b00      	cmp	r3, #0
 801afc2:	f340 8375 	ble.w	801b6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801afc6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801afc8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801afcc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801afd0:	1e48      	subs	r0, r1, #1
 801afd2:	1e57      	subs	r7, r2, #1
 801afd4:	9b07      	ldr	r3, [sp, #28]
 801afd6:	2b00      	cmp	r3, #0
 801afd8:	f340 818e 	ble.w	801b2f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801afdc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801afe0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801afe4:	d406      	bmi.n	801aff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801afe6:	4584      	cmp	ip, r0
 801afe8:	da04      	bge.n	801aff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801afea:	2b00      	cmp	r3, #0
 801afec:	db02      	blt.n	801aff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801afee:	42bb      	cmp	r3, r7
 801aff0:	f2c0 8183 	blt.w	801b2fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801aff4:	f11c 0c01 	adds.w	ip, ip, #1
 801aff8:	f100 8173 	bmi.w	801b2e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801affc:	4561      	cmp	r1, ip
 801affe:	f2c0 8170 	blt.w	801b2e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b002:	3301      	adds	r3, #1
 801b004:	f100 816d 	bmi.w	801b2e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b008:	429a      	cmp	r2, r3
 801b00a:	f2c0 816a 	blt.w	801b2e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b00e:	9b07      	ldr	r3, [sp, #28]
 801b010:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b012:	9318      	str	r3, [sp, #96]	; 0x60
 801b014:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b016:	2b00      	cmp	r3, #0
 801b018:	f340 818c 	ble.w	801b334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801b01c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801b01e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801b020:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b024:	689b      	ldr	r3, [r3, #8]
 801b026:	1422      	asrs	r2, r4, #16
 801b028:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801b02c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b030:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b034:	f100 81cd 	bmi.w	801b3d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b038:	f103 38ff 	add.w	r8, r3, #4294967295
 801b03c:	4542      	cmp	r2, r8
 801b03e:	f280 81c8 	bge.w	801b3d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b042:	f1bc 0f00 	cmp.w	ip, #0
 801b046:	f2c0 81c4 	blt.w	801b3d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b04a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b04e:	45c4      	cmp	ip, r8
 801b050:	f280 81bf 	bge.w	801b3d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b054:	b21b      	sxth	r3, r3
 801b056:	fb0c 2203 	mla	r2, ip, r3, r2
 801b05a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b05c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801b060:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801b064:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801b068:	2800      	cmp	r0, #0
 801b06a:	f000 81a9 	beq.w	801b3c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801b06e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b072:	950c      	str	r5, [sp, #48]	; 0x30
 801b074:	0e2d      	lsrs	r5, r5, #24
 801b076:	9513      	str	r5, [sp, #76]	; 0x4c
 801b078:	b181      	cbz	r1, 801b09c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b07a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801b07e:	3b01      	subs	r3, #1
 801b080:	009b      	lsls	r3, r3, #2
 801b082:	3304      	adds	r3, #4
 801b084:	eb08 0c03 	add.w	ip, r8, r3
 801b088:	f858 3003 	ldr.w	r3, [r8, r3]
 801b08c:	9308      	str	r3, [sp, #32]
 801b08e:	0e1b      	lsrs	r3, r3, #24
 801b090:	9311      	str	r3, [sp, #68]	; 0x44
 801b092:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801b096:	930d      	str	r3, [sp, #52]	; 0x34
 801b098:	0e1b      	lsrs	r3, r3, #24
 801b09a:	9314      	str	r3, [sp, #80]	; 0x50
 801b09c:	b280      	uxth	r0, r0
 801b09e:	b289      	uxth	r1, r1
 801b0a0:	fb00 f901 	mul.w	r9, r0, r1
 801b0a4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b0a8:	0100      	lsls	r0, r0, #4
 801b0aa:	eba0 0809 	sub.w	r8, r0, r9
 801b0ae:	b289      	uxth	r1, r1
 801b0b0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801b0b4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b0b6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b0b8:	fa1f f888 	uxth.w	r8, r8
 801b0bc:	1a5b      	subs	r3, r3, r1
 801b0be:	b29b      	uxth	r3, r3
 801b0c0:	fb08 f000 	mul.w	r0, r8, r0
 801b0c4:	fb03 000e 	mla	r0, r3, lr, r0
 801b0c8:	fb01 0005 	mla	r0, r1, r5, r0
 801b0cc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b0ce:	fb09 0005 	mla	r0, r9, r5, r0
 801b0d2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b0d6:	2800      	cmp	r0, #0
 801b0d8:	f000 80fa 	beq.w	801b2d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b0dc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b0e0:	d01b      	beq.n	801b11a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b0e2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801b0e6:	fb0e fa0a 	mul.w	sl, lr, sl
 801b0ea:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b0ee:	fb0e fe02 	mul.w	lr, lr, r2
 801b0f2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801b0f6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b0fa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b0fe:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b102:	4452      	add	r2, sl
 801b104:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b108:	0a12      	lsrs	r2, r2, #8
 801b10a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b10e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b112:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b116:	ea42 020c 	orr.w	r2, r2, ip
 801b11a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b11c:	2dff      	cmp	r5, #255	; 0xff
 801b11e:	d021      	beq.n	801b164 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801b120:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b122:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b126:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b128:	fb05 fb0b 	mul.w	fp, r5, fp
 801b12c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b12e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b132:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b134:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b138:	fb05 fa0a 	mul.w	sl, r5, sl
 801b13c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b140:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b144:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b148:	44de      	add	lr, fp
 801b14a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b14e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b152:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b156:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b15a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b15e:	ea4e 050a 	orr.w	r5, lr, sl
 801b162:	950c      	str	r5, [sp, #48]	; 0x30
 801b164:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b166:	2dff      	cmp	r5, #255	; 0xff
 801b168:	d021      	beq.n	801b1ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801b16a:	9d08      	ldr	r5, [sp, #32]
 801b16c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b170:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b172:	fb05 fb0b 	mul.w	fp, r5, fp
 801b176:	9d08      	ldr	r5, [sp, #32]
 801b178:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b17c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b17e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b182:	fb05 fa0a 	mul.w	sl, r5, sl
 801b186:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b18a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b18e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b192:	44de      	add	lr, fp
 801b194:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b198:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b19c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b1a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b1a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b1a8:	ea4e 050a 	orr.w	r5, lr, sl
 801b1ac:	9508      	str	r5, [sp, #32]
 801b1ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b1b0:	2dff      	cmp	r5, #255	; 0xff
 801b1b2:	d021      	beq.n	801b1f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801b1b4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b1b6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b1ba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b1bc:	fb05 fb0b 	mul.w	fp, r5, fp
 801b1c0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b1c2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b1c6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b1c8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b1cc:	fb05 fa0a 	mul.w	sl, r5, sl
 801b1d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b1d4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b1d8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b1dc:	44de      	add	lr, fp
 801b1de:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b1e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b1e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b1ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b1ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b1f2:	ea4e 050a 	orr.w	r5, lr, sl
 801b1f6:	950d      	str	r5, [sp, #52]	; 0x34
 801b1f8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b1fa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b1fe:	9d08      	ldr	r5, [sp, #32]
 801b200:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801b204:	fb08 fc0c 	mul.w	ip, r8, ip
 801b208:	fb03 cc0e 	mla	ip, r3, lr, ip
 801b20c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801b210:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b212:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b216:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801b21a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b21c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b220:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801b224:	fb08 f80e 	mul.w	r8, r8, lr
 801b228:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b22c:	fb03 8202 	mla	r2, r3, r2, r8
 801b230:	9b08      	ldr	r3, [sp, #32]
 801b232:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b234:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801b238:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b23a:	fb01 220a 	mla	r2, r1, sl, r2
 801b23e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801b242:	fb09 2901 	mla	r9, r9, r1, r2
 801b246:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b248:	883b      	ldrh	r3, [r7, #0]
 801b24a:	4342      	muls	r2, r0
 801b24c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b250:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b254:	1c50      	adds	r0, r2, #1
 801b256:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b25a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b25e:	ea4c 0c09 	orr.w	ip, ip, r9
 801b262:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b266:	1219      	asrs	r1, r3, #8
 801b268:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b26c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b270:	b2c0      	uxtb	r0, r0
 801b272:	fb12 f205 	smulbb	r2, r2, r5
 801b276:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b27a:	fb01 2100 	mla	r1, r1, r0, r2
 801b27e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b282:	10da      	asrs	r2, r3, #3
 801b284:	fa5f fc8c 	uxtb.w	ip, ip
 801b288:	00db      	lsls	r3, r3, #3
 801b28a:	fb1c fc05 	smulbb	ip, ip, r5
 801b28e:	b2db      	uxtb	r3, r3
 801b290:	b289      	uxth	r1, r1
 801b292:	fb03 c300 	mla	r3, r3, r0, ip
 801b296:	fa1f fc83 	uxth.w	ip, r3
 801b29a:	1c4b      	adds	r3, r1, #1
 801b29c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b2a0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b2a4:	fb1e fe05 	smulbb	lr, lr, r5
 801b2a8:	f10c 0301 	add.w	r3, ip, #1
 801b2ac:	fb02 e200 	mla	r2, r2, r0, lr
 801b2b0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b2b4:	b292      	uxth	r2, r2
 801b2b6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b2ba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b2be:	430b      	orrs	r3, r1
 801b2c0:	1c51      	adds	r1, r2, #1
 801b2c2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b2c6:	0952      	lsrs	r2, r2, #5
 801b2c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b2cc:	4313      	orrs	r3, r2
 801b2ce:	803b      	strh	r3, [r7, #0]
 801b2d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b2d2:	441c      	add	r4, r3
 801b2d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b2d6:	441e      	add	r6, r3
 801b2d8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b2da:	3b01      	subs	r3, #1
 801b2dc:	3702      	adds	r7, #2
 801b2de:	9318      	str	r3, [sp, #96]	; 0x60
 801b2e0:	e698      	b.n	801b014 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b2e2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b2e4:	441c      	add	r4, r3
 801b2e6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b2e8:	441e      	add	r6, r3
 801b2ea:	9b07      	ldr	r3, [sp, #28]
 801b2ec:	3b01      	subs	r3, #1
 801b2ee:	9307      	str	r3, [sp, #28]
 801b2f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b2f2:	3302      	adds	r3, #2
 801b2f4:	930a      	str	r3, [sp, #40]	; 0x28
 801b2f6:	e66d      	b.n	801afd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b2f8:	d023      	beq.n	801b342 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b2fa:	9b07      	ldr	r3, [sp, #28]
 801b2fc:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801b2fe:	3b01      	subs	r3, #1
 801b300:	fb00 4003 	mla	r0, r0, r3, r4
 801b304:	1400      	asrs	r0, r0, #16
 801b306:	f53f ae82 	bmi.w	801b00e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b30a:	3901      	subs	r1, #1
 801b30c:	4288      	cmp	r0, r1
 801b30e:	f6bf ae7e 	bge.w	801b00e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b312:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801b314:	fb01 6303 	mla	r3, r1, r3, r6
 801b318:	141b      	asrs	r3, r3, #16
 801b31a:	f53f ae78 	bmi.w	801b00e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b31e:	3a01      	subs	r2, #1
 801b320:	4293      	cmp	r3, r2
 801b322:	f6bf ae74 	bge.w	801b00e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b326:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b32a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801b32e:	f1bb 0f00 	cmp.w	fp, #0
 801b332:	dc6c      	bgt.n	801b40e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801b334:	9b07      	ldr	r3, [sp, #28]
 801b336:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b33a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b33c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801b340:	930a      	str	r3, [sp, #40]	; 0x28
 801b342:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b344:	2b00      	cmp	r3, #0
 801b346:	f340 81b3 	ble.w	801b6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b34a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b34e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b352:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b356:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b358:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b35c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b360:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b364:	eef0 6a62 	vmov.f32	s13, s5
 801b368:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b36c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b370:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b374:	ee16 4a90 	vmov	r4, s13
 801b378:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b37c:	eef0 6a43 	vmov.f32	s13, s6
 801b380:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b384:	ee12 2a90 	vmov	r2, s5
 801b388:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b38c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b390:	ee13 2a10 	vmov	r2, s6
 801b394:	9329      	str	r3, [sp, #164]	; 0xa4
 801b396:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b398:	fb92 f3f3 	sdiv	r3, r2, r3
 801b39c:	932a      	str	r3, [sp, #168]	; 0xa8
 801b39e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b3a0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801b3a2:	3b01      	subs	r3, #1
 801b3a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b3a8:	9317      	str	r3, [sp, #92]	; 0x5c
 801b3aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b3ac:	bf08      	it	eq
 801b3ae:	4613      	moveq	r3, r2
 801b3b0:	ee16 6a90 	vmov	r6, s13
 801b3b4:	9307      	str	r3, [sp, #28]
 801b3b6:	eeb0 3a67 	vmov.f32	s6, s15
 801b3ba:	eef0 2a47 	vmov.f32	s5, s14
 801b3be:	e5fb      	b.n	801afb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b3c0:	2900      	cmp	r1, #0
 801b3c2:	f43f ae6b 	beq.w	801b09c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b3c6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801b3ca:	9308      	str	r3, [sp, #32]
 801b3cc:	0e1b      	lsrs	r3, r3, #24
 801b3ce:	9311      	str	r3, [sp, #68]	; 0x44
 801b3d0:	e664      	b.n	801b09c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b3d2:	f112 0801 	adds.w	r8, r2, #1
 801b3d6:	f53f af7b 	bmi.w	801b2d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b3da:	4543      	cmp	r3, r8
 801b3dc:	f6ff af78 	blt.w	801b2d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b3e0:	f11c 0801 	adds.w	r8, ip, #1
 801b3e4:	f53f af74 	bmi.w	801b2d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b3e8:	45c6      	cmp	lr, r8
 801b3ea:	f6ff af71 	blt.w	801b2d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b3ee:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801b3f0:	9201      	str	r2, [sp, #4]
 801b3f2:	fa0f f28e 	sxth.w	r2, lr
 801b3f6:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801b3fa:	e9cd c002 	strd	ip, r0, [sp, #8]
 801b3fe:	9200      	str	r2, [sp, #0]
 801b400:	b21b      	sxth	r3, r3
 801b402:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b404:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801b406:	4639      	mov	r1, r7
 801b408:	f7ff fc79 	bl	801acfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801b40c:	e760      	b.n	801b2d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b40e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801b410:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b412:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b416:	1427      	asrs	r7, r4, #16
 801b418:	1433      	asrs	r3, r6, #16
 801b41a:	fb01 7303 	mla	r3, r1, r3, r7
 801b41e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801b422:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801b426:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b42a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b42e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b432:	2a00      	cmp	r2, #0
 801b434:	f000 8133 	beq.w	801b69e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801b438:	687d      	ldr	r5, [r7, #4]
 801b43a:	950e      	str	r5, [sp, #56]	; 0x38
 801b43c:	0e2d      	lsrs	r5, r5, #24
 801b43e:	9515      	str	r5, [sp, #84]	; 0x54
 801b440:	b178      	cbz	r0, 801b462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801b442:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801b446:	3901      	subs	r1, #1
 801b448:	0089      	lsls	r1, r1, #2
 801b44a:	3104      	adds	r1, #4
 801b44c:	eb07 0e01 	add.w	lr, r7, r1
 801b450:	5879      	ldr	r1, [r7, r1]
 801b452:	9109      	str	r1, [sp, #36]	; 0x24
 801b454:	0e09      	lsrs	r1, r1, #24
 801b456:	9112      	str	r1, [sp, #72]	; 0x48
 801b458:	f8de 1004 	ldr.w	r1, [lr, #4]
 801b45c:	910f      	str	r1, [sp, #60]	; 0x3c
 801b45e:	0e09      	lsrs	r1, r1, #24
 801b460:	9116      	str	r1, [sp, #88]	; 0x58
 801b462:	b292      	uxth	r2, r2
 801b464:	b280      	uxth	r0, r0
 801b466:	fb02 f800 	mul.w	r8, r2, r0
 801b46a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b46e:	0112      	lsls	r2, r2, #4
 801b470:	eba2 0e08 	sub.w	lr, r2, r8
 801b474:	b280      	uxth	r0, r0
 801b476:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b47a:	9915      	ldr	r1, [sp, #84]	; 0x54
 801b47c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b47e:	fa1f fe8e 	uxth.w	lr, lr
 801b482:	1a12      	subs	r2, r2, r0
 801b484:	b292      	uxth	r2, r2
 801b486:	fb0e f101 	mul.w	r1, lr, r1
 801b48a:	fb02 110c 	mla	r1, r2, ip, r1
 801b48e:	fb00 1105 	mla	r1, r0, r5, r1
 801b492:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b494:	fb08 1105 	mla	r1, r8, r5, r1
 801b498:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b49c:	2900      	cmp	r1, #0
 801b49e:	f000 80f5 	beq.w	801b68c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801b4a2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b4a6:	d019      	beq.n	801b4dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801b4a8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b4ac:	fb0c fa0a 	mul.w	sl, ip, sl
 801b4b0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b4b4:	fb0c fc03 	mul.w	ip, ip, r3
 801b4b8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b4bc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b4c0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b4c4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b4c8:	4453      	add	r3, sl
 801b4ca:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b4ce:	0a1b      	lsrs	r3, r3, #8
 801b4d0:	0a3f      	lsrs	r7, r7, #8
 801b4d2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b4d6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b4da:	433b      	orrs	r3, r7
 801b4dc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b4de:	2dff      	cmp	r5, #255	; 0xff
 801b4e0:	d020      	beq.n	801b524 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801b4e2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b4e4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b4e8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b4ea:	436f      	muls	r7, r5
 801b4ec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b4ee:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b4f2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b4f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b4f8:	fb05 fa0a 	mul.w	sl, r5, sl
 801b4fc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b500:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b504:	44bc      	add	ip, r7
 801b506:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b50a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b50e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b512:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b516:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b51a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b51e:	ea4c 050a 	orr.w	r5, ip, sl
 801b522:	950e      	str	r5, [sp, #56]	; 0x38
 801b524:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b526:	2dff      	cmp	r5, #255	; 0xff
 801b528:	d020      	beq.n	801b56c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801b52a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b52c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b530:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b532:	436f      	muls	r7, r5
 801b534:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b536:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b53a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b53c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b540:	fb05 fa0a 	mul.w	sl, r5, sl
 801b544:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b548:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b54c:	44bc      	add	ip, r7
 801b54e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b552:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b556:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b55a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b55e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b562:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b566:	ea4c 050a 	orr.w	r5, ip, sl
 801b56a:	9509      	str	r5, [sp, #36]	; 0x24
 801b56c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b56e:	2dff      	cmp	r5, #255	; 0xff
 801b570:	d020      	beq.n	801b5b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801b572:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b574:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b578:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b57a:	436f      	muls	r7, r5
 801b57c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b57e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b582:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b584:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b588:	fb05 fa0a 	mul.w	sl, r5, sl
 801b58c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b590:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b594:	44bc      	add	ip, r7
 801b596:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b59a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b59e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b5a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b5a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b5aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b5ae:	ea4c 050a 	orr.w	r5, ip, sl
 801b5b2:	950f      	str	r5, [sp, #60]	; 0x3c
 801b5b4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b5b6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b5ba:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b5bc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b5c0:	fb0e f707 	mul.w	r7, lr, r7
 801b5c4:	fb02 770c 	mla	r7, r2, ip, r7
 801b5c8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b5cc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b5ce:	fb00 770c 	mla	r7, r0, ip, r7
 801b5d2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b5d6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b5d8:	fb08 770c 	mla	r7, r8, ip, r7
 801b5dc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801b5e0:	fb0e fe0c 	mul.w	lr, lr, ip
 801b5e4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b5e8:	fb02 e303 	mla	r3, r2, r3, lr
 801b5ec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b5ee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b5f0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b5f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b5f6:	fb00 330a 	mla	r3, r0, sl, r3
 801b5fa:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b5fe:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b602:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b604:	f8b9 0000 	ldrh.w	r0, [r9]
 801b608:	4359      	muls	r1, r3
 801b60a:	0a3f      	lsrs	r7, r7, #8
 801b60c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b610:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b614:	1c4b      	adds	r3, r1, #1
 801b616:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b61a:	ea47 070c 	orr.w	r7, r7, ip
 801b61e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b622:	1202      	asrs	r2, r0, #8
 801b624:	0c3b      	lsrs	r3, r7, #16
 801b626:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b62a:	b2c9      	uxtb	r1, r1
 801b62c:	fb13 f305 	smulbb	r3, r3, r5
 801b630:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b634:	fb02 3201 	mla	r2, r2, r1, r3
 801b638:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b63c:	10c3      	asrs	r3, r0, #3
 801b63e:	b2ff      	uxtb	r7, r7
 801b640:	00c0      	lsls	r0, r0, #3
 801b642:	b2c0      	uxtb	r0, r0
 801b644:	fb17 f705 	smulbb	r7, r7, r5
 801b648:	fb00 7001 	mla	r0, r0, r1, r7
 801b64c:	b292      	uxth	r2, r2
 801b64e:	fb1c fc05 	smulbb	ip, ip, r5
 801b652:	b280      	uxth	r0, r0
 801b654:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b658:	fb03 c301 	mla	r3, r3, r1, ip
 801b65c:	1c51      	adds	r1, r2, #1
 801b65e:	f100 0c01 	add.w	ip, r0, #1
 801b662:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b666:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801b66a:	b29b      	uxth	r3, r3
 801b66c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b670:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b674:	ea4c 0202 	orr.w	r2, ip, r2
 801b678:	f103 0c01 	add.w	ip, r3, #1
 801b67c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b680:	095b      	lsrs	r3, r3, #5
 801b682:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b686:	431a      	orrs	r2, r3
 801b688:	f8a9 2000 	strh.w	r2, [r9]
 801b68c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b68e:	441c      	add	r4, r3
 801b690:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b692:	f109 0902 	add.w	r9, r9, #2
 801b696:	441e      	add	r6, r3
 801b698:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b69c:	e647      	b.n	801b32e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801b69e:	2800      	cmp	r0, #0
 801b6a0:	f43f aedf 	beq.w	801b462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801b6a4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801b6a8:	9109      	str	r1, [sp, #36]	; 0x24
 801b6aa:	0e09      	lsrs	r1, r1, #24
 801b6ac:	9112      	str	r1, [sp, #72]	; 0x48
 801b6ae:	e6d8      	b.n	801b462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801b6b0:	b01d      	add	sp, #116	; 0x74
 801b6b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b6b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801b6b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6ba:	b085      	sub	sp, #20
 801b6bc:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801b6c0:	9102      	str	r1, [sp, #8]
 801b6c2:	2c00      	cmp	r4, #0
 801b6c4:	fb04 7103 	mla	r1, r4, r3, r7
 801b6c8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801b6cc:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801b6d0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801b6d4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801b6d8:	f2c0 810c 	blt.w	801b8f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801b6dc:	45a6      	cmp	lr, r4
 801b6de:	f340 8109 	ble.w	801b8f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801b6e2:	2f00      	cmp	r7, #0
 801b6e4:	f2c0 8104 	blt.w	801b8f0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801b6e8:	42bb      	cmp	r3, r7
 801b6ea:	f340 8101 	ble.w	801b8f0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801b6ee:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801b6f2:	1c7a      	adds	r2, r7, #1
 801b6f4:	f100 8101 	bmi.w	801b8fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801b6f8:	4293      	cmp	r3, r2
 801b6fa:	f340 80fe 	ble.w	801b8fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801b6fe:	2e00      	cmp	r6, #0
 801b700:	f000 80fd 	beq.w	801b8fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801b704:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801b708:	3401      	adds	r4, #1
 801b70a:	f100 80fc 	bmi.w	801b906 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801b70e:	45a6      	cmp	lr, r4
 801b710:	f340 80f9 	ble.w	801b906 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801b714:	2800      	cmp	r0, #0
 801b716:	f000 80f9 	beq.w	801b90c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801b71a:	2f00      	cmp	r7, #0
 801b71c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801b720:	f2c0 80ef 	blt.w	801b902 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801b724:	42bb      	cmp	r3, r7
 801b726:	f340 80ec 	ble.w	801b902 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801b72a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801b72e:	3701      	adds	r7, #1
 801b730:	f100 80ef 	bmi.w	801b912 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801b734:	42bb      	cmp	r3, r7
 801b736:	f340 80ec 	ble.w	801b912 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801b73a:	2e00      	cmp	r6, #0
 801b73c:	f000 80eb 	beq.w	801b916 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801b740:	6852      	ldr	r2, [r2, #4]
 801b742:	b2b6      	uxth	r6, r6
 801b744:	b280      	uxth	r0, r0
 801b746:	fb00 fe06 	mul.w	lr, r0, r6
 801b74a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801b74e:	0136      	lsls	r6, r6, #4
 801b750:	eba6 070e 	sub.w	r7, r6, lr
 801b754:	b280      	uxth	r0, r0
 801b756:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801b75a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801b75e:	b2bf      	uxth	r7, r7
 801b760:	1a1b      	subs	r3, r3, r0
 801b762:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801b766:	b29b      	uxth	r3, r3
 801b768:	fb07 f60a 	mul.w	r6, r7, sl
 801b76c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b770:	fb0b 6603 	mla	r6, fp, r3, r6
 801b774:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801b778:	fb00 6609 	mla	r6, r0, r9, r6
 801b77c:	fb0e 6608 	mla	r6, lr, r8, r6
 801b780:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b784:	9600      	str	r6, [sp, #0]
 801b786:	2e00      	cmp	r6, #0
 801b788:	f000 80af 	beq.w	801b8ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801b78c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b790:	fb0b fc0c 	mul.w	ip, fp, ip
 801b794:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801b798:	fb0b f505 	mul.w	r5, fp, r5
 801b79c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801b7a0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801b7a4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b7a8:	44dc      	add	ip, fp
 801b7aa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b7ae:	9501      	str	r5, [sp, #4]
 801b7b0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801b7b4:	9503      	str	r5, [sp, #12]
 801b7b6:	9d01      	ldr	r5, [sp, #4]
 801b7b8:	9e02      	ldr	r6, [sp, #8]
 801b7ba:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801b7be:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b7c2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801b7c6:	fb0a fc0c 	mul.w	ip, sl, ip
 801b7ca:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801b7ce:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801b7d2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b7d6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b7da:	4465      	add	r5, ip
 801b7dc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b7e0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b7e4:	fb09 fc0c 	mul.w	ip, r9, ip
 801b7e8:	fb09 f904 	mul.w	r9, r9, r4
 801b7ec:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801b7f0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801b7f4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801b7f8:	fb08 f404 	mul.w	r4, r8, r4
 801b7fc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b800:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b804:	fb08 f802 	mul.w	r8, r8, r2
 801b808:	fb0a fa01 	mul.w	sl, sl, r1
 801b80c:	0a22      	lsrs	r2, r4, #8
 801b80e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801b812:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b816:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801b81a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801b81e:	4414      	add	r4, r2
 801b820:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801b824:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801b828:	0a2d      	lsrs	r5, r5, #8
 801b82a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b82e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b832:	9a03      	ldr	r2, [sp, #12]
 801b834:	8836      	ldrh	r6, [r6, #0]
 801b836:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801b83a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b83e:	437d      	muls	r5, r7
 801b840:	4461      	add	r1, ip
 801b842:	0a24      	lsrs	r4, r4, #8
 801b844:	fb02 5503 	mla	r5, r2, r3, r5
 801b848:	0a09      	lsrs	r1, r1, #8
 801b84a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b84e:	fb04 540e 	mla	r4, r4, lr, r5
 801b852:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801b856:	fb01 4100 	mla	r1, r1, r0, r4
 801b85a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b85e:	0a09      	lsrs	r1, r1, #8
 801b860:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b864:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801b868:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b86c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801b870:	fb07 f70a 	mul.w	r7, r7, sl
 801b874:	fb03 7101 	mla	r1, r3, r1, r7
 801b878:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b87c:	9b00      	ldr	r3, [sp, #0]
 801b87e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801b882:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b886:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801b88a:	fb00 e101 	mla	r1, r0, r1, lr
 801b88e:	43da      	mvns	r2, r3
 801b890:	1233      	asrs	r3, r6, #8
 801b892:	b2d2      	uxtb	r2, r2
 801b894:	10f0      	asrs	r0, r6, #3
 801b896:	0a09      	lsrs	r1, r1, #8
 801b898:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801b89c:	00f6      	lsls	r6, r6, #3
 801b89e:	4353      	muls	r3, r2
 801b8a0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b8a4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b8a8:	b2f6      	uxtb	r6, r6
 801b8aa:	4321      	orrs	r1, r4
 801b8ac:	4350      	muls	r0, r2
 801b8ae:	4356      	muls	r6, r2
 801b8b0:	1c5a      	adds	r2, r3, #1
 801b8b2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b8b6:	0c0b      	lsrs	r3, r1, #16
 801b8b8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b8bc:	1c42      	adds	r2, r0, #1
 801b8be:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b8c2:	0a0a      	lsrs	r2, r1, #8
 801b8c4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b8c8:	021b      	lsls	r3, r3, #8
 801b8ca:	00d2      	lsls	r2, r2, #3
 801b8cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b8d0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801b8d4:	4313      	orrs	r3, r2
 801b8d6:	1c72      	adds	r2, r6, #1
 801b8d8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801b8dc:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801b8e0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801b8e4:	4319      	orrs	r1, r3
 801b8e6:	9b02      	ldr	r3, [sp, #8]
 801b8e8:	8019      	strh	r1, [r3, #0]
 801b8ea:	b005      	add	sp, #20
 801b8ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b8f0:	2500      	movs	r5, #0
 801b8f2:	e6fe      	b.n	801b6f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801b8f4:	2100      	movs	r1, #0
 801b8f6:	460d      	mov	r5, r1
 801b8f8:	e706      	b.n	801b708 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801b8fa:	2100      	movs	r1, #0
 801b8fc:	e704      	b.n	801b708 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801b8fe:	4631      	mov	r1, r6
 801b900:	e702      	b.n	801b708 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801b902:	2400      	movs	r4, #0
 801b904:	e713      	b.n	801b72e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801b906:	2200      	movs	r2, #0
 801b908:	4614      	mov	r4, r2
 801b90a:	e71a      	b.n	801b742 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801b90c:	4602      	mov	r2, r0
 801b90e:	4604      	mov	r4, r0
 801b910:	e717      	b.n	801b742 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801b912:	2200      	movs	r2, #0
 801b914:	e715      	b.n	801b742 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801b916:	4632      	mov	r2, r6
 801b918:	e713      	b.n	801b742 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801b91c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b91c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b920:	b09b      	sub	sp, #108	; 0x6c
 801b922:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801b926:	9218      	str	r2, [sp, #96]	; 0x60
 801b928:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b92a:	9116      	str	r1, [sp, #88]	; 0x58
 801b92c:	9307      	str	r3, [sp, #28]
 801b92e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b932:	9019      	str	r0, [sp, #100]	; 0x64
 801b934:	6850      	ldr	r0, [r2, #4]
 801b936:	6812      	ldr	r2, [r2, #0]
 801b938:	fb00 1303 	mla	r3, r0, r3, r1
 801b93c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b940:	930a      	str	r3, [sp, #40]	; 0x28
 801b942:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b944:	681b      	ldr	r3, [r3, #0]
 801b946:	930f      	str	r3, [sp, #60]	; 0x3c
 801b948:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b94a:	2b00      	cmp	r3, #0
 801b94c:	dc03      	bgt.n	801b956 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b94e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b950:	2b00      	cmp	r3, #0
 801b952:	f340 8386 	ble.w	801c062 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b956:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b958:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b95c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b960:	1e48      	subs	r0, r1, #1
 801b962:	1e57      	subs	r7, r2, #1
 801b964:	9b07      	ldr	r3, [sp, #28]
 801b966:	2b00      	cmp	r3, #0
 801b968:	f340 8166 	ble.w	801bc38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b96c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b970:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b974:	d406      	bmi.n	801b984 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b976:	4584      	cmp	ip, r0
 801b978:	da04      	bge.n	801b984 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b97a:	2b00      	cmp	r3, #0
 801b97c:	db02      	blt.n	801b984 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b97e:	42bb      	cmp	r3, r7
 801b980:	f2c0 815b 	blt.w	801bc3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801b984:	f11c 0c01 	adds.w	ip, ip, #1
 801b988:	f100 814b 	bmi.w	801bc22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801b98c:	4561      	cmp	r1, ip
 801b98e:	f2c0 8148 	blt.w	801bc22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801b992:	3301      	adds	r3, #1
 801b994:	f100 8145 	bmi.w	801bc22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801b998:	429a      	cmp	r2, r3
 801b99a:	f2c0 8142 	blt.w	801bc22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801b99e:	9b07      	ldr	r3, [sp, #28]
 801b9a0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b9a2:	9317      	str	r3, [sp, #92]	; 0x5c
 801b9a4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b9a6:	2b00      	cmp	r3, #0
 801b9a8:	f340 8165 	ble.w	801bc76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b9ac:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801b9ae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b9b0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b9b4:	689b      	ldr	r3, [r3, #8]
 801b9b6:	1422      	asrs	r2, r4, #16
 801b9b8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801b9bc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801b9c0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b9c4:	f100 81d5 	bmi.w	801bd72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801b9c8:	f103 38ff 	add.w	r8, r3, #4294967295
 801b9cc:	4542      	cmp	r2, r8
 801b9ce:	f280 81d0 	bge.w	801bd72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801b9d2:	f1bc 0f00 	cmp.w	ip, #0
 801b9d6:	f2c0 81cc 	blt.w	801bd72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801b9da:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b9de:	45c4      	cmp	ip, r8
 801b9e0:	f280 81c7 	bge.w	801bd72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801b9e4:	b21b      	sxth	r3, r3
 801b9e6:	fb0c 2203 	mla	r2, ip, r3, r2
 801b9ea:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b9ec:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801b9f0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801b9f4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801b9f8:	2900      	cmp	r1, #0
 801b9fa:	f000 8182 	beq.w	801bd02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801b9fe:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ba02:	950b      	str	r5, [sp, #44]	; 0x2c
 801ba04:	0e2d      	lsrs	r5, r5, #24
 801ba06:	9512      	str	r5, [sp, #72]	; 0x48
 801ba08:	b180      	cbz	r0, 801ba2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ba0a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801ba0e:	3b01      	subs	r3, #1
 801ba10:	009b      	lsls	r3, r3, #2
 801ba12:	3304      	adds	r3, #4
 801ba14:	eb08 0c03 	add.w	ip, r8, r3
 801ba18:	f858 3003 	ldr.w	r3, [r8, r3]
 801ba1c:	9308      	str	r3, [sp, #32]
 801ba1e:	0e1b      	lsrs	r3, r3, #24
 801ba20:	9310      	str	r3, [sp, #64]	; 0x40
 801ba22:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801ba26:	930c      	str	r3, [sp, #48]	; 0x30
 801ba28:	0e1b      	lsrs	r3, r3, #24
 801ba2a:	9313      	str	r3, [sp, #76]	; 0x4c
 801ba2c:	b289      	uxth	r1, r1
 801ba2e:	b280      	uxth	r0, r0
 801ba30:	fb01 f900 	mul.w	r9, r1, r0
 801ba34:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ba38:	0109      	lsls	r1, r1, #4
 801ba3a:	eba1 0809 	sub.w	r8, r1, r9
 801ba3e:	b280      	uxth	r0, r0
 801ba40:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801ba44:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ba46:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ba48:	fa1f f888 	uxth.w	r8, r8
 801ba4c:	1a09      	subs	r1, r1, r0
 801ba4e:	b289      	uxth	r1, r1
 801ba50:	fb08 f303 	mul.w	r3, r8, r3
 801ba54:	fb01 330e 	mla	r3, r1, lr, r3
 801ba58:	fb00 3305 	mla	r3, r0, r5, r3
 801ba5c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ba5e:	fb09 3305 	mla	r3, r9, r5, r3
 801ba62:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ba66:	2b00      	cmp	r3, #0
 801ba68:	f000 80d2 	beq.w	801bc10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ba6c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ba70:	d01b      	beq.n	801baaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801ba72:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801ba76:	fb0e fa0a 	mul.w	sl, lr, sl
 801ba7a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ba7e:	fb0e fe02 	mul.w	lr, lr, r2
 801ba82:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801ba86:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ba8a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ba8e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ba92:	4452      	add	r2, sl
 801ba94:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ba98:	0a12      	lsrs	r2, r2, #8
 801ba9a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba9e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801baa2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801baa6:	ea42 020c 	orr.w	r2, r2, ip
 801baaa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801baac:	2dff      	cmp	r5, #255	; 0xff
 801baae:	d021      	beq.n	801baf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801bab0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801bab2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801bab6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bab8:	fb05 fb0b 	mul.w	fp, r5, fp
 801babc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801babe:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801bac2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bac4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bac8:	fb05 fa0a 	mul.w	sl, r5, sl
 801bacc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bad0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bad4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bad8:	44de      	add	lr, fp
 801bada:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bade:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bae2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bae6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801baea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801baee:	ea4e 050a 	orr.w	r5, lr, sl
 801baf2:	950b      	str	r5, [sp, #44]	; 0x2c
 801baf4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801baf6:	2dff      	cmp	r5, #255	; 0xff
 801baf8:	d021      	beq.n	801bb3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801bafa:	9d08      	ldr	r5, [sp, #32]
 801bafc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801bb00:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801bb02:	fb05 fb0b 	mul.w	fp, r5, fp
 801bb06:	9d08      	ldr	r5, [sp, #32]
 801bb08:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801bb0c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801bb0e:	fb05 fa0e 	mul.w	sl, r5, lr
 801bb12:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bb16:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bb1a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bb1e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bb22:	44de      	add	lr, fp
 801bb24:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bb28:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bb2c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb30:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bb34:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bb38:	ea4e 050a 	orr.w	r5, lr, sl
 801bb3c:	9508      	str	r5, [sp, #32]
 801bb3e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bb40:	2dff      	cmp	r5, #255	; 0xff
 801bb42:	d021      	beq.n	801bb88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801bb44:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801bb46:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801bb4a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bb4c:	fb05 fb0b 	mul.w	fp, r5, fp
 801bb50:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801bb52:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801bb56:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bb58:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bb5c:	fb05 fa0a 	mul.w	sl, r5, sl
 801bb60:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bb64:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bb68:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bb6c:	44de      	add	lr, fp
 801bb6e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bb72:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bb76:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb7a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bb7e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bb82:	ea4e 050a 	orr.w	r5, lr, sl
 801bb86:	950c      	str	r5, [sp, #48]	; 0x30
 801bb88:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801bb8a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801bb8e:	9d08      	ldr	r5, [sp, #32]
 801bb90:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801bb94:	fb08 fc0c 	mul.w	ip, r8, ip
 801bb98:	fb01 cc0e 	mla	ip, r1, lr, ip
 801bb9c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801bba0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801bba2:	fb00 cc0e 	mla	ip, r0, lr, ip
 801bba6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801bbaa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801bbac:	fb09 cc0e 	mla	ip, r9, lr, ip
 801bbb0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801bbb4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801bbb8:	fb08 f80e 	mul.w	r8, r8, lr
 801bbbc:	fb01 8202 	mla	r2, r1, r2, r8
 801bbc0:	9908      	ldr	r1, [sp, #32]
 801bbc2:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801bbc6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801bbc8:	fb00 220a 	mla	r2, r0, sl, r2
 801bbcc:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801bbd0:	fb09 2900 	mla	r9, r9, r0, r2
 801bbd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bbd8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bbdc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bbe0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801bbe4:	ea4c 0c09 	orr.w	ip, ip, r9
 801bbe8:	2bff      	cmp	r3, #255	; 0xff
 801bbea:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801bbee:	f040 8091 	bne.w	801bd14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801bbf2:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801bbf6:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801bbfa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bbfe:	f022 0207 	bic.w	r2, r2, #7
 801bc02:	431a      	orrs	r2, r3
 801bc04:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801bc08:	ea4c 0c02 	orr.w	ip, ip, r2
 801bc0c:	f8a7 c000 	strh.w	ip, [r7]
 801bc10:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bc12:	441c      	add	r4, r3
 801bc14:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bc16:	441e      	add	r6, r3
 801bc18:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801bc1a:	3b01      	subs	r3, #1
 801bc1c:	3702      	adds	r7, #2
 801bc1e:	9317      	str	r3, [sp, #92]	; 0x5c
 801bc20:	e6c0      	b.n	801b9a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bc22:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bc24:	441c      	add	r4, r3
 801bc26:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bc28:	441e      	add	r6, r3
 801bc2a:	9b07      	ldr	r3, [sp, #28]
 801bc2c:	3b01      	subs	r3, #1
 801bc2e:	9307      	str	r3, [sp, #28]
 801bc30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bc32:	3302      	adds	r3, #2
 801bc34:	930a      	str	r3, [sp, #40]	; 0x28
 801bc36:	e695      	b.n	801b964 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bc38:	d024      	beq.n	801bc84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801bc3a:	9b07      	ldr	r3, [sp, #28]
 801bc3c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801bc3e:	3b01      	subs	r3, #1
 801bc40:	fb00 4003 	mla	r0, r0, r3, r4
 801bc44:	1400      	asrs	r0, r0, #16
 801bc46:	f53f aeaa 	bmi.w	801b99e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801bc4a:	3901      	subs	r1, #1
 801bc4c:	4288      	cmp	r0, r1
 801bc4e:	f6bf aea6 	bge.w	801b99e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801bc52:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801bc54:	fb01 6303 	mla	r3, r1, r3, r6
 801bc58:	141b      	asrs	r3, r3, #16
 801bc5a:	f53f aea0 	bmi.w	801b99e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801bc5e:	3a01      	subs	r2, #1
 801bc60:	4293      	cmp	r3, r2
 801bc62:	f6bf ae9c 	bge.w	801b99e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801bc66:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801bc6a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801bc6e:	f1bb 0f00 	cmp.w	fp, #0
 801bc72:	f300 809a 	bgt.w	801bdaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801bc76:	9b07      	ldr	r3, [sp, #28]
 801bc78:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801bc7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bc7e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801bc82:	930a      	str	r3, [sp, #40]	; 0x28
 801bc84:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bc86:	2b00      	cmp	r3, #0
 801bc88:	f340 81eb 	ble.w	801c062 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801bc8c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bc90:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bc94:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bc98:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bc9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bc9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bca2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bca6:	eef0 6a62 	vmov.f32	s13, s5
 801bcaa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bcae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bcb2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bcb6:	ee16 4a90 	vmov	r4, s13
 801bcba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bcbe:	eef0 6a43 	vmov.f32	s13, s6
 801bcc2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bcc6:	ee12 2a90 	vmov	r2, s5
 801bcca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bcce:	fb92 f3f3 	sdiv	r3, r2, r3
 801bcd2:	ee13 2a10 	vmov	r2, s6
 801bcd6:	9327      	str	r3, [sp, #156]	; 0x9c
 801bcd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bcda:	fb92 f3f3 	sdiv	r3, r2, r3
 801bcde:	9328      	str	r3, [sp, #160]	; 0xa0
 801bce0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bce2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801bce4:	3b01      	subs	r3, #1
 801bce6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bcea:	9316      	str	r3, [sp, #88]	; 0x58
 801bcec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bcee:	bf08      	it	eq
 801bcf0:	4613      	moveq	r3, r2
 801bcf2:	ee16 6a90 	vmov	r6, s13
 801bcf6:	9307      	str	r3, [sp, #28]
 801bcf8:	eeb0 3a67 	vmov.f32	s6, s15
 801bcfc:	eef0 2a47 	vmov.f32	s5, s14
 801bd00:	e622      	b.n	801b948 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801bd02:	2800      	cmp	r0, #0
 801bd04:	f43f ae92 	beq.w	801ba2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801bd08:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801bd0c:	9308      	str	r3, [sp, #32]
 801bd0e:	0e1b      	lsrs	r3, r3, #24
 801bd10:	9310      	str	r3, [sp, #64]	; 0x40
 801bd12:	e68b      	b.n	801ba2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801bd14:	8839      	ldrh	r1, [r7, #0]
 801bd16:	4dd4      	ldr	r5, [pc, #848]	; (801c068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801bd18:	43db      	mvns	r3, r3
 801bd1a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801bd1e:	fa5f f883 	uxtb.w	r8, r3
 801bd22:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bd26:	fb0e fe08 	mul.w	lr, lr, r8
 801bd2a:	10c8      	asrs	r0, r1, #3
 801bd2c:	00cb      	lsls	r3, r1, #3
 801bd2e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801bd32:	f10e 0101 	add.w	r1, lr, #1
 801bd36:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801bd3a:	fb00 f008 	mul.w	r0, r0, r8
 801bd3e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801bd42:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801bd46:	f100 0e01 	add.w	lr, r0, #1
 801bd4a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801bd4e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801bd52:	b2db      	uxtb	r3, r3
 801bd54:	b2c9      	uxtb	r1, r1
 801bd56:	00d2      	lsls	r2, r2, #3
 801bd58:	fb03 f308 	mul.w	r3, r3, r8
 801bd5c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801bd60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bd64:	430a      	orrs	r2, r1
 801bd66:	1c59      	adds	r1, r3, #1
 801bd68:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801bd6c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801bd70:	e748      	b.n	801bc04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801bd72:	f112 0801 	adds.w	r8, r2, #1
 801bd76:	f53f af4b 	bmi.w	801bc10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801bd7a:	4543      	cmp	r3, r8
 801bd7c:	f6ff af48 	blt.w	801bc10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801bd80:	f11c 0801 	adds.w	r8, ip, #1
 801bd84:	f53f af44 	bmi.w	801bc10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801bd88:	45c6      	cmp	lr, r8
 801bd8a:	f6ff af41 	blt.w	801bc10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801bd8e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801bd92:	fa0f f28e 	sxth.w	r2, lr
 801bd96:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801bd9a:	9200      	str	r2, [sp, #0]
 801bd9c:	b21b      	sxth	r3, r3
 801bd9e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bda0:	9819      	ldr	r0, [sp, #100]	; 0x64
 801bda2:	4639      	mov	r1, r7
 801bda4:	f7ff fc87 	bl	801b6b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801bda8:	e732      	b.n	801bc10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801bdaa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bdac:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801bdae:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801bdb2:	1421      	asrs	r1, r4, #16
 801bdb4:	1433      	asrs	r3, r6, #16
 801bdb6:	fb07 1303 	mla	r3, r7, r3, r1
 801bdba:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801bdbc:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801bdc0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801bdc4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801bdc8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801bdcc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bdd0:	2a00      	cmp	r2, #0
 801bdd2:	f000 8107 	beq.w	801bfe4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801bdd6:	684d      	ldr	r5, [r1, #4]
 801bdd8:	950d      	str	r5, [sp, #52]	; 0x34
 801bdda:	0e2d      	lsrs	r5, r5, #24
 801bddc:	9514      	str	r5, [sp, #80]	; 0x50
 801bdde:	b178      	cbz	r0, 801be00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801bde0:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801bde4:	3f01      	subs	r7, #1
 801bde6:	00bf      	lsls	r7, r7, #2
 801bde8:	3704      	adds	r7, #4
 801bdea:	eb01 0e07 	add.w	lr, r1, r7
 801bdee:	59c9      	ldr	r1, [r1, r7]
 801bdf0:	9109      	str	r1, [sp, #36]	; 0x24
 801bdf2:	0e09      	lsrs	r1, r1, #24
 801bdf4:	9111      	str	r1, [sp, #68]	; 0x44
 801bdf6:	f8de 1004 	ldr.w	r1, [lr, #4]
 801bdfa:	910e      	str	r1, [sp, #56]	; 0x38
 801bdfc:	0e09      	lsrs	r1, r1, #24
 801bdfe:	9115      	str	r1, [sp, #84]	; 0x54
 801be00:	b292      	uxth	r2, r2
 801be02:	b280      	uxth	r0, r0
 801be04:	fb02 f900 	mul.w	r9, r2, r0
 801be08:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801be0c:	0112      	lsls	r2, r2, #4
 801be0e:	eba2 0e09 	sub.w	lr, r2, r9
 801be12:	b280      	uxth	r0, r0
 801be14:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801be18:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801be1a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801be1c:	fa1f fe8e 	uxth.w	lr, lr
 801be20:	1a09      	subs	r1, r1, r0
 801be22:	b289      	uxth	r1, r1
 801be24:	fb0e f202 	mul.w	r2, lr, r2
 801be28:	fb01 220c 	mla	r2, r1, ip, r2
 801be2c:	fb00 2205 	mla	r2, r0, r5, r2
 801be30:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801be32:	fb09 2205 	mla	r2, r9, r5, r2
 801be36:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801be3a:	2a00      	cmp	r2, #0
 801be3c:	f000 80c9 	beq.w	801bfd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801be40:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801be44:	d019      	beq.n	801be7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801be46:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801be4a:	fb0c fa0a 	mul.w	sl, ip, sl
 801be4e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801be52:	fb0c fc03 	mul.w	ip, ip, r3
 801be56:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801be5a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801be5e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801be62:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801be66:	4453      	add	r3, sl
 801be68:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801be6c:	0a1b      	lsrs	r3, r3, #8
 801be6e:	0a3f      	lsrs	r7, r7, #8
 801be70:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801be74:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801be78:	433b      	orrs	r3, r7
 801be7a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801be7c:	2dff      	cmp	r5, #255	; 0xff
 801be7e:	d020      	beq.n	801bec2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801be80:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801be82:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801be86:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801be88:	436f      	muls	r7, r5
 801be8a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801be8c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801be90:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801be92:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801be96:	fb05 fa0a 	mul.w	sl, r5, sl
 801be9a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801be9e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bea2:	44bc      	add	ip, r7
 801bea4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bea8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801beac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801beb0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801beb4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801beb8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bebc:	ea4c 050a 	orr.w	r5, ip, sl
 801bec0:	950d      	str	r5, [sp, #52]	; 0x34
 801bec2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bec4:	2dff      	cmp	r5, #255	; 0xff
 801bec6:	d020      	beq.n	801bf0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801bec8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801beca:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801bece:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bed0:	436f      	muls	r7, r5
 801bed2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801bed4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801bed8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801beda:	fb05 fa0c 	mul.w	sl, r5, ip
 801bede:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bee2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bee6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801beea:	44bc      	add	ip, r7
 801beec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bef0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bef4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bef8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801befc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bf00:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bf04:	ea4c 050a 	orr.w	r5, ip, sl
 801bf08:	9509      	str	r5, [sp, #36]	; 0x24
 801bf0a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801bf0c:	2dff      	cmp	r5, #255	; 0xff
 801bf0e:	d020      	beq.n	801bf52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801bf10:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801bf12:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801bf16:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801bf18:	436f      	muls	r7, r5
 801bf1a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801bf1c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801bf20:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801bf22:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bf26:	fb05 fa0a 	mul.w	sl, r5, sl
 801bf2a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bf2e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bf32:	44bc      	add	ip, r7
 801bf34:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bf38:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bf3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bf40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bf44:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bf48:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bf4c:	ea4c 050a 	orr.w	r5, ip, sl
 801bf50:	950e      	str	r5, [sp, #56]	; 0x38
 801bf52:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801bf54:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801bf58:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801bf5a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801bf5e:	fb0e f707 	mul.w	r7, lr, r7
 801bf62:	fb01 770c 	mla	r7, r1, ip, r7
 801bf66:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801bf6a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801bf6c:	fb00 770c 	mla	r7, r0, ip, r7
 801bf70:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801bf74:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801bf76:	fb09 770c 	mla	r7, r9, ip, r7
 801bf7a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801bf7e:	fb0e fe0c 	mul.w	lr, lr, ip
 801bf82:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bf86:	fb01 e303 	mla	r3, r1, r3, lr
 801bf8a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bf8c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801bf90:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bf92:	fb00 330a 	mla	r3, r0, sl, r3
 801bf96:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801bf9a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801bf9e:	0a3f      	lsrs	r7, r7, #8
 801bfa0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bfa4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801bfa8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bfac:	ea47 070c 	orr.w	r7, r7, ip
 801bfb0:	2aff      	cmp	r2, #255	; 0xff
 801bfb2:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801bfb6:	d11e      	bne.n	801bff6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801bfb8:	097a      	lsrs	r2, r7, #5
 801bfba:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801bfbe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bfc2:	f023 0307 	bic.w	r3, r3, #7
 801bfc6:	4313      	orrs	r3, r2
 801bfc8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801bfcc:	431f      	orrs	r7, r3
 801bfce:	f8a8 7000 	strh.w	r7, [r8]
 801bfd2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bfd4:	441c      	add	r4, r3
 801bfd6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bfd8:	f108 0802 	add.w	r8, r8, #2
 801bfdc:	441e      	add	r6, r3
 801bfde:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bfe2:	e644      	b.n	801bc6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801bfe4:	2800      	cmp	r0, #0
 801bfe6:	f43f af0b 	beq.w	801be00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801bfea:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801bfee:	9109      	str	r1, [sp, #36]	; 0x24
 801bff0:	0e09      	lsrs	r1, r1, #24
 801bff2:	9111      	str	r1, [sp, #68]	; 0x44
 801bff4:	e704      	b.n	801be00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801bff6:	f8b8 1000 	ldrh.w	r1, [r8]
 801bffa:	43d2      	mvns	r2, r2
 801bffc:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801c000:	fa5f fe82 	uxtb.w	lr, r2
 801c004:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c008:	fb0c fc0e 	mul.w	ip, ip, lr
 801c00c:	10c8      	asrs	r0, r1, #3
 801c00e:	00ca      	lsls	r2, r1, #3
 801c010:	f10c 0101 	add.w	r1, ip, #1
 801c014:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c018:	0c39      	lsrs	r1, r7, #16
 801c01a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c01e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c022:	4911      	ldr	r1, [pc, #68]	; (801c068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801c024:	fb00 f00e 	mul.w	r0, r0, lr
 801c028:	fa5f fc8c 	uxtb.w	ip, ip
 801c02c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801c030:	b2d2      	uxtb	r2, r2
 801c032:	1c41      	adds	r1, r0, #1
 801c034:	fb02 f20e 	mul.w	r2, r2, lr
 801c038:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c03c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c040:	1c51      	adds	r1, r2, #1
 801c042:	00c0      	lsls	r0, r0, #3
 801c044:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c048:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c04c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c050:	ea4c 0c00 	orr.w	ip, ip, r0
 801c054:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801c058:	ea47 0c0c 	orr.w	ip, r7, ip
 801c05c:	f8a8 c000 	strh.w	ip, [r8]
 801c060:	e7b7      	b.n	801bfd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801c062:	b01b      	add	sp, #108	; 0x6c
 801c064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c068:	fffff800 	.word	0xfffff800

0801c06c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801c06c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c070:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801c074:	2d00      	cmp	r5, #0
 801c076:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801c07a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801c07e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801c082:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801c086:	fb05 0e03 	mla	lr, r5, r3, r0
 801c08a:	f2c0 808c 	blt.w	801c1a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801c08e:	45a9      	cmp	r9, r5
 801c090:	f340 8089 	ble.w	801c1a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801c094:	2800      	cmp	r0, #0
 801c096:	f2c0 8084 	blt.w	801c1a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801c09a:	4580      	cmp	r8, r0
 801c09c:	f340 8081 	ble.w	801c1a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801c0a0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801c0a4:	f01e 0f01 	tst.w	lr, #1
 801c0a8:	5d16      	ldrb	r6, [r2, r4]
 801c0aa:	bf0c      	ite	eq
 801c0ac:	f006 060f 	andeq.w	r6, r6, #15
 801c0b0:	1136      	asrne	r6, r6, #4
 801c0b2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801c0b6:	b2f6      	uxtb	r6, r6
 801c0b8:	1c44      	adds	r4, r0, #1
 801c0ba:	d477      	bmi.n	801c1ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801c0bc:	45a0      	cmp	r8, r4
 801c0be:	dd75      	ble.n	801c1ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801c0c0:	2f00      	cmp	r7, #0
 801c0c2:	d075      	beq.n	801c1b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801c0c4:	f10e 0a01 	add.w	sl, lr, #1
 801c0c8:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801c0cc:	f01a 0f01 	tst.w	sl, #1
 801c0d0:	5d14      	ldrb	r4, [r2, r4]
 801c0d2:	bf0c      	ite	eq
 801c0d4:	f004 040f 	andeq.w	r4, r4, #15
 801c0d8:	1124      	asrne	r4, r4, #4
 801c0da:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801c0de:	b2e4      	uxtb	r4, r4
 801c0e0:	3501      	adds	r5, #1
 801c0e2:	d469      	bmi.n	801c1b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801c0e4:	45a9      	cmp	r9, r5
 801c0e6:	dd67      	ble.n	801c1b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801c0e8:	f1bc 0f00 	cmp.w	ip, #0
 801c0ec:	d067      	beq.n	801c1be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801c0ee:	2800      	cmp	r0, #0
 801c0f0:	db60      	blt.n	801c1b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801c0f2:	4580      	cmp	r8, r0
 801c0f4:	dd5e      	ble.n	801c1b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801c0f6:	eb03 090e 	add.w	r9, r3, lr
 801c0fa:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801c0fe:	f019 0f01 	tst.w	r9, #1
 801c102:	5d55      	ldrb	r5, [r2, r5]
 801c104:	bf0c      	ite	eq
 801c106:	f005 050f 	andeq.w	r5, r5, #15
 801c10a:	112d      	asrne	r5, r5, #4
 801c10c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801c110:	b2ed      	uxtb	r5, r5
 801c112:	3001      	adds	r0, #1
 801c114:	d456      	bmi.n	801c1c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801c116:	4580      	cmp	r8, r0
 801c118:	dd54      	ble.n	801c1c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801c11a:	2f00      	cmp	r7, #0
 801c11c:	d054      	beq.n	801c1c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801c11e:	3301      	adds	r3, #1
 801c120:	449e      	add	lr, r3
 801c122:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801c126:	f01e 0f01 	tst.w	lr, #1
 801c12a:	5cd0      	ldrb	r0, [r2, r3]
 801c12c:	bf0c      	ite	eq
 801c12e:	f000 000f 	andeq.w	r0, r0, #15
 801c132:	1100      	asrne	r0, r0, #4
 801c134:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c138:	b2c3      	uxtb	r3, r0
 801c13a:	b2ba      	uxth	r2, r7
 801c13c:	fa1f fc8c 	uxth.w	ip, ip
 801c140:	fb02 f00c 	mul.w	r0, r2, ip
 801c144:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801c148:	0112      	lsls	r2, r2, #4
 801c14a:	fa1f fc8c 	uxth.w	ip, ip
 801c14e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801c152:	1a12      	subs	r2, r2, r0
 801c154:	eba7 070c 	sub.w	r7, r7, ip
 801c158:	b292      	uxth	r2, r2
 801c15a:	b2bf      	uxth	r7, r7
 801c15c:	4362      	muls	r2, r4
 801c15e:	fb06 2207 	mla	r2, r6, r7, r2
 801c162:	fb0c 2505 	mla	r5, ip, r5, r2
 801c166:	fb00 5303 	mla	r3, r0, r3, r5
 801c16a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c16e:	b1b3      	cbz	r3, 801c19e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801c170:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801c174:	435a      	muls	r2, r3
 801c176:	1c53      	adds	r3, r2, #1
 801c178:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c17c:	4a2d      	ldr	r2, [pc, #180]	; (801c234 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801c17e:	121b      	asrs	r3, r3, #8
 801c180:	6812      	ldr	r2, [r2, #0]
 801c182:	2bff      	cmp	r3, #255	; 0xff
 801c184:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801c188:	d120      	bne.n	801c1cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801c18a:	4b2b      	ldr	r3, [pc, #172]	; (801c238 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801c18c:	0950      	lsrs	r0, r2, #5
 801c18e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c192:	4033      	ands	r3, r6
 801c194:	4318      	orrs	r0, r3
 801c196:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c19a:	4302      	orrs	r2, r0
 801c19c:	800a      	strh	r2, [r1, #0]
 801c19e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c1a2:	2600      	movs	r6, #0
 801c1a4:	e788      	b.n	801c0b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801c1a6:	2400      	movs	r4, #0
 801c1a8:	4626      	mov	r6, r4
 801c1aa:	e799      	b.n	801c0e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801c1ac:	2400      	movs	r4, #0
 801c1ae:	e797      	b.n	801c0e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801c1b0:	463c      	mov	r4, r7
 801c1b2:	e795      	b.n	801c0e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801c1b4:	2500      	movs	r5, #0
 801c1b6:	e7ac      	b.n	801c112 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801c1b8:	2300      	movs	r3, #0
 801c1ba:	461d      	mov	r5, r3
 801c1bc:	e7bd      	b.n	801c13a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801c1be:	4663      	mov	r3, ip
 801c1c0:	4665      	mov	r5, ip
 801c1c2:	e7ba      	b.n	801c13a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801c1c4:	2300      	movs	r3, #0
 801c1c6:	e7b8      	b.n	801c13a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801c1c8:	463b      	mov	r3, r7
 801c1ca:	e7b6      	b.n	801c13a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801c1cc:	880d      	ldrh	r5, [r1, #0]
 801c1ce:	b29f      	uxth	r7, r3
 801c1d0:	122c      	asrs	r4, r5, #8
 801c1d2:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801c1d6:	43db      	mvns	r3, r3
 801c1d8:	b2db      	uxtb	r3, r3
 801c1da:	fb10 f007 	smulbb	r0, r0, r7
 801c1de:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c1e2:	fb04 0403 	mla	r4, r4, r3, r0
 801c1e6:	b2f6      	uxtb	r6, r6
 801c1e8:	10e8      	asrs	r0, r5, #3
 801c1ea:	b2d2      	uxtb	r2, r2
 801c1ec:	00ed      	lsls	r5, r5, #3
 801c1ee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c1f2:	fb12 f207 	smulbb	r2, r2, r7
 801c1f6:	fb16 f607 	smulbb	r6, r6, r7
 801c1fa:	b2ed      	uxtb	r5, r5
 801c1fc:	b2a4      	uxth	r4, r4
 801c1fe:	fb00 6603 	mla	r6, r0, r3, r6
 801c202:	fb05 2303 	mla	r3, r5, r3, r2
 801c206:	b29a      	uxth	r2, r3
 801c208:	1c63      	adds	r3, r4, #1
 801c20a:	b2b0      	uxth	r0, r6
 801c20c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801c210:	1c53      	adds	r3, r2, #1
 801c212:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c216:	1c42      	adds	r2, r0, #1
 801c218:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c21c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c220:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c224:	0940      	lsrs	r0, r0, #5
 801c226:	4323      	orrs	r3, r4
 801c228:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c22c:	4303      	orrs	r3, r0
 801c22e:	800b      	strh	r3, [r1, #0]
 801c230:	e7b5      	b.n	801c19e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801c232:	bf00      	nop
 801c234:	2001264c 	.word	0x2001264c
 801c238:	00fff800 	.word	0x00fff800

0801c23c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c23c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c240:	b097      	sub	sp, #92	; 0x5c
 801c242:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801c246:	9214      	str	r2, [sp, #80]	; 0x50
 801c248:	9309      	str	r3, [sp, #36]	; 0x24
 801c24a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c24c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c250:	910d      	str	r1, [sp, #52]	; 0x34
 801c252:	930f      	str	r3, [sp, #60]	; 0x3c
 801c254:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801c258:	9015      	str	r0, [sp, #84]	; 0x54
 801c25a:	6850      	ldr	r0, [r2, #4]
 801c25c:	6812      	ldr	r2, [r2, #0]
 801c25e:	fb00 1303 	mla	r3, r0, r3, r1
 801c262:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801c266:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c268:	689b      	ldr	r3, [r3, #8]
 801c26a:	3301      	adds	r3, #1
 801c26c:	f023 0301 	bic.w	r3, r3, #1
 801c270:	930a      	str	r3, [sp, #40]	; 0x28
 801c272:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c274:	681f      	ldr	r7, [r3, #0]
 801c276:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c278:	2b00      	cmp	r3, #0
 801c27a:	dc03      	bgt.n	801c284 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c27c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c27e:	2b00      	cmp	r3, #0
 801c280:	f340 8287 	ble.w	801c792 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801c284:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c286:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c28a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c28e:	1e48      	subs	r0, r1, #1
 801c290:	f102 3cff 	add.w	ip, r2, #4294967295
 801c294:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c296:	2b00      	cmp	r3, #0
 801c298:	f340 80c4 	ble.w	801c424 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801c29c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c2a0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c2a4:	d406      	bmi.n	801c2b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c2a6:	4586      	cmp	lr, r0
 801c2a8:	da04      	bge.n	801c2b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c2aa:	2b00      	cmp	r3, #0
 801c2ac:	db02      	blt.n	801c2b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c2ae:	4563      	cmp	r3, ip
 801c2b0:	f2c0 80b9 	blt.w	801c426 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801c2b4:	f11e 0e01 	adds.w	lr, lr, #1
 801c2b8:	f100 80aa 	bmi.w	801c410 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c2bc:	4571      	cmp	r1, lr
 801c2be:	f2c0 80a7 	blt.w	801c410 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c2c2:	3301      	adds	r3, #1
 801c2c4:	f100 80a4 	bmi.w	801c410 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c2c8:	429a      	cmp	r2, r3
 801c2ca:	f2c0 80a1 	blt.w	801c410 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c2ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c2d0:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801c2d4:	930e      	str	r3, [sp, #56]	; 0x38
 801c2d6:	46c8      	mov	r8, r9
 801c2d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c2da:	2b00      	cmp	r3, #0
 801c2dc:	f340 80c3 	ble.w	801c466 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c2e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c2e2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801c2e6:	1423      	asrs	r3, r4, #16
 801c2e8:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c2ec:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c2f0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c2f4:	f100 814d 	bmi.w	801c592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c2f8:	f10c 3bff 	add.w	fp, ip, #4294967295
 801c2fc:	455b      	cmp	r3, fp
 801c2fe:	f280 8148 	bge.w	801c592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c302:	2800      	cmp	r0, #0
 801c304:	f2c0 8145 	blt.w	801c592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c308:	f10e 3bff 	add.w	fp, lr, #4294967295
 801c30c:	4558      	cmp	r0, fp
 801c30e:	f280 8140 	bge.w	801c592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c312:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c314:	fb00 3305 	mla	r3, r0, r5, r3
 801c318:	0858      	lsrs	r0, r3, #1
 801c31a:	07dd      	lsls	r5, r3, #31
 801c31c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801c320:	bf54      	ite	pl
 801c322:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c326:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c32a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c32e:	fa5f fc8c 	uxtb.w	ip, ip
 801c332:	2a00      	cmp	r2, #0
 801c334:	f000 80db 	beq.w	801c4ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801c338:	1c58      	adds	r0, r3, #1
 801c33a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801c33e:	07c0      	lsls	r0, r0, #31
 801c340:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c344:	bf54      	ite	pl
 801c346:	f00e 0e0f 	andpl.w	lr, lr, #15
 801c34a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801c34e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801c352:	fa5f f08e 	uxtb.w	r0, lr
 801c356:	9010      	str	r0, [sp, #64]	; 0x40
 801c358:	b1c9      	cbz	r1, 801c38e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c35a:	4453      	add	r3, sl
 801c35c:	0858      	lsrs	r0, r3, #1
 801c35e:	07dd      	lsls	r5, r3, #31
 801c360:	5c38      	ldrb	r0, [r7, r0]
 801c362:	bf54      	ite	pl
 801c364:	f000 000f 	andpl.w	r0, r0, #15
 801c368:	1100      	asrmi	r0, r0, #4
 801c36a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c36e:	3301      	adds	r3, #1
 801c370:	b2c0      	uxtb	r0, r0
 801c372:	900b      	str	r0, [sp, #44]	; 0x2c
 801c374:	0858      	lsrs	r0, r3, #1
 801c376:	07dd      	lsls	r5, r3, #31
 801c378:	f817 e000 	ldrb.w	lr, [r7, r0]
 801c37c:	bf54      	ite	pl
 801c37e:	f00e 030f 	andpl.w	r3, lr, #15
 801c382:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801c386:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c38a:	b2db      	uxtb	r3, r3
 801c38c:	9311      	str	r3, [sp, #68]	; 0x44
 801c38e:	b292      	uxth	r2, r2
 801c390:	b289      	uxth	r1, r1
 801c392:	fb02 f301 	mul.w	r3, r2, r1
 801c396:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801c39a:	0112      	lsls	r2, r2, #4
 801c39c:	b289      	uxth	r1, r1
 801c39e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801c3a2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c3a4:	1ad2      	subs	r2, r2, r3
 801c3a6:	1a40      	subs	r0, r0, r1
 801c3a8:	b292      	uxth	r2, r2
 801c3aa:	436a      	muls	r2, r5
 801c3ac:	b280      	uxth	r0, r0
 801c3ae:	fb0c 2c00 	mla	ip, ip, r0, r2
 801c3b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c3b4:	fb01 c102 	mla	r1, r1, r2, ip
 801c3b8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c3ba:	fb03 1302 	mla	r3, r3, r2, r1
 801c3be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c3c2:	b1db      	cbz	r3, 801c3fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c3c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c3c6:	4353      	muls	r3, r2
 801c3c8:	1c5a      	adds	r2, r3, #1
 801c3ca:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c3ce:	4ac6      	ldr	r2, [pc, #792]	; (801c6e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801c3d0:	121b      	asrs	r3, r3, #8
 801c3d2:	6812      	ldr	r2, [r2, #0]
 801c3d4:	2bff      	cmp	r3, #255	; 0xff
 801c3d6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801c3da:	f040 8099 	bne.w	801c510 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801c3de:	0953      	lsrs	r3, r2, #5
 801c3e0:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801c3e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c3e8:	f02c 0c07 	bic.w	ip, ip, #7
 801c3ec:	ea43 0c0c 	orr.w	ip, r3, ip
 801c3f0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c3f4:	ea4c 0202 	orr.w	r2, ip, r2
 801c3f8:	f8a8 2000 	strh.w	r2, [r8]
 801c3fc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801c3fe:	441c      	add	r4, r3
 801c400:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c402:	441e      	add	r6, r3
 801c404:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c406:	3b01      	subs	r3, #1
 801c408:	f108 0802 	add.w	r8, r8, #2
 801c40c:	930e      	str	r3, [sp, #56]	; 0x38
 801c40e:	e763      	b.n	801c2d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801c410:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801c412:	441c      	add	r4, r3
 801c414:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c416:	441e      	add	r6, r3
 801c418:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c41a:	3b01      	subs	r3, #1
 801c41c:	9309      	str	r3, [sp, #36]	; 0x24
 801c41e:	f109 0902 	add.w	r9, r9, #2
 801c422:	e737      	b.n	801c294 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c424:	d024      	beq.n	801c470 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c426:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c428:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c42a:	3b01      	subs	r3, #1
 801c42c:	fb00 4003 	mla	r0, r0, r3, r4
 801c430:	1400      	asrs	r0, r0, #16
 801c432:	f53f af4c 	bmi.w	801c2ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c436:	3901      	subs	r1, #1
 801c438:	4288      	cmp	r0, r1
 801c43a:	f6bf af48 	bge.w	801c2ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c43e:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c440:	fb01 6303 	mla	r3, r1, r3, r6
 801c444:	141b      	asrs	r3, r3, #16
 801c446:	f53f af42 	bmi.w	801c2ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c44a:	3a01      	subs	r2, #1
 801c44c:	4293      	cmp	r3, r2
 801c44e:	f6bf af3e 	bge.w	801c2ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c452:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c456:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801c45a:	930e      	str	r3, [sp, #56]	; 0x38
 801c45c:	46c8      	mov	r8, r9
 801c45e:	f1bb 0f00 	cmp.w	fp, #0
 801c462:	f300 80b7 	bgt.w	801c5d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801c466:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c468:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801c46c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801c470:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c472:	2b00      	cmp	r3, #0
 801c474:	f340 818d 	ble.w	801c792 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801c478:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c47c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c480:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c484:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c486:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c48a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c48e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c492:	eef0 6a62 	vmov.f32	s13, s5
 801c496:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c49a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c49e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c4a2:	ee16 4a90 	vmov	r4, s13
 801c4a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c4aa:	eef0 6a43 	vmov.f32	s13, s6
 801c4ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c4b2:	ee12 2a90 	vmov	r2, s5
 801c4b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c4ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4be:	ee13 2a10 	vmov	r2, s6
 801c4c2:	9323      	str	r3, [sp, #140]	; 0x8c
 801c4c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c4c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4ca:	9324      	str	r3, [sp, #144]	; 0x90
 801c4cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c4ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c4d0:	3b01      	subs	r3, #1
 801c4d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c4d6:	930d      	str	r3, [sp, #52]	; 0x34
 801c4d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c4da:	bf08      	it	eq
 801c4dc:	4613      	moveq	r3, r2
 801c4de:	ee16 6a90 	vmov	r6, s13
 801c4e2:	9309      	str	r3, [sp, #36]	; 0x24
 801c4e4:	eeb0 3a67 	vmov.f32	s6, s15
 801c4e8:	eef0 2a47 	vmov.f32	s5, s14
 801c4ec:	e6c3      	b.n	801c276 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c4ee:	2900      	cmp	r1, #0
 801c4f0:	f43f af4d 	beq.w	801c38e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c4f4:	eb0a 0003 	add.w	r0, sl, r3
 801c4f8:	0843      	lsrs	r3, r0, #1
 801c4fa:	07c0      	lsls	r0, r0, #31
 801c4fc:	5cfb      	ldrb	r3, [r7, r3]
 801c4fe:	bf54      	ite	pl
 801c500:	f003 030f 	andpl.w	r3, r3, #15
 801c504:	111b      	asrmi	r3, r3, #4
 801c506:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c50a:	b2db      	uxtb	r3, r3
 801c50c:	930b      	str	r3, [sp, #44]	; 0x2c
 801c50e:	e73e      	b.n	801c38e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c510:	f8b8 e000 	ldrh.w	lr, [r8]
 801c514:	fa1f fb83 	uxth.w	fp, r3
 801c518:	ea4f 202e 	mov.w	r0, lr, asr #8
 801c51c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c520:	43db      	mvns	r3, r3
 801c522:	b2db      	uxtb	r3, r3
 801c524:	fb11 f10b 	smulbb	r1, r1, fp
 801c528:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c52c:	fb00 1003 	mla	r0, r0, r3, r1
 801c530:	fa5f fc8c 	uxtb.w	ip, ip
 801c534:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801c538:	b2d2      	uxtb	r2, r2
 801c53a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c53e:	b280      	uxth	r0, r0
 801c540:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c544:	fb1c fc0b 	smulbb	ip, ip, fp
 801c548:	fa5f fe8e 	uxtb.w	lr, lr
 801c54c:	fb12 fb0b 	smulbb	fp, r2, fp
 801c550:	fb01 cc03 	mla	ip, r1, r3, ip
 801c554:	fb0e bb03 	mla	fp, lr, r3, fp
 801c558:	1c43      	adds	r3, r0, #1
 801c55a:	fa1f fc8c 	uxth.w	ip, ip
 801c55e:	fa1f fb8b 	uxth.w	fp, fp
 801c562:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c566:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801c56a:	f10c 0101 	add.w	r1, ip, #1
 801c56e:	f10b 0001 	add.w	r0, fp, #1
 801c572:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801c576:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c57a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801c57e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c582:	4318      	orrs	r0, r3
 801c584:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c588:	ea40 000c 	orr.w	r0, r0, ip
 801c58c:	f8a8 0000 	strh.w	r0, [r8]
 801c590:	e734      	b.n	801c3fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c592:	f113 0b01 	adds.w	fp, r3, #1
 801c596:	f53f af31 	bmi.w	801c3fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c59a:	45dc      	cmp	ip, fp
 801c59c:	f6ff af2e 	blt.w	801c3fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c5a0:	f110 0b01 	adds.w	fp, r0, #1
 801c5a4:	f53f af2a 	bmi.w	801c3fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c5a8:	45de      	cmp	lr, fp
 801c5aa:	f6ff af27 	blt.w	801c3fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c5ae:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c5b0:	9302      	str	r3, [sp, #8]
 801c5b2:	fa0f f38e 	sxth.w	r3, lr
 801c5b6:	9301      	str	r3, [sp, #4]
 801c5b8:	fa0f f38c 	sxth.w	r3, ip
 801c5bc:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801c5c0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801c5c4:	9300      	str	r3, [sp, #0]
 801c5c6:	463a      	mov	r2, r7
 801c5c8:	4653      	mov	r3, sl
 801c5ca:	4641      	mov	r1, r8
 801c5cc:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c5ce:	f7ff fd4d 	bl	801c06c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801c5d2:	e713      	b.n	801c3fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c5d4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c5d6:	1422      	asrs	r2, r4, #16
 801c5d8:	1433      	asrs	r3, r6, #16
 801c5da:	fb05 2303 	mla	r3, r5, r3, r2
 801c5de:	085a      	lsrs	r2, r3, #1
 801c5e0:	07dd      	lsls	r5, r3, #31
 801c5e2:	5cba      	ldrb	r2, [r7, r2]
 801c5e4:	bf54      	ite	pl
 801c5e6:	f002 020f 	andpl.w	r2, r2, #15
 801c5ea:	1112      	asrmi	r2, r2, #4
 801c5ec:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c5f0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801c5f4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c5f8:	b2d2      	uxtb	r2, r2
 801c5fa:	2900      	cmp	r1, #0
 801c5fc:	d076      	beq.n	801c6ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c5fe:	f103 0e01 	add.w	lr, r3, #1
 801c602:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801c606:	f01e 0f01 	tst.w	lr, #1
 801c60a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c60e:	bf0c      	ite	eq
 801c610:	f00c 0c0f 	andeq.w	ip, ip, #15
 801c614:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801c618:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c61c:	fa5f f58c 	uxtb.w	r5, ip
 801c620:	9512      	str	r5, [sp, #72]	; 0x48
 801c622:	b300      	cbz	r0, 801c666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801c624:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c626:	442b      	add	r3, r5
 801c628:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c62c:	07dd      	lsls	r5, r3, #31
 801c62e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c632:	bf54      	ite	pl
 801c634:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c638:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c63c:	3301      	adds	r3, #1
 801c63e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c642:	fa5f f58c 	uxtb.w	r5, ip
 801c646:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c64a:	950c      	str	r5, [sp, #48]	; 0x30
 801c64c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c650:	07dd      	lsls	r5, r3, #31
 801c652:	bf54      	ite	pl
 801c654:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c658:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c65c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c660:	fa5f f38c 	uxtb.w	r3, ip
 801c664:	9313      	str	r3, [sp, #76]	; 0x4c
 801c666:	b289      	uxth	r1, r1
 801c668:	b280      	uxth	r0, r0
 801c66a:	fb01 f300 	mul.w	r3, r1, r0
 801c66e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801c672:	0109      	lsls	r1, r1, #4
 801c674:	b280      	uxth	r0, r0
 801c676:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801c67a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c67c:	1ac9      	subs	r1, r1, r3
 801c67e:	ebac 0c00 	sub.w	ip, ip, r0
 801c682:	b289      	uxth	r1, r1
 801c684:	4369      	muls	r1, r5
 801c686:	fa1f fc8c 	uxth.w	ip, ip
 801c68a:	fb02 120c 	mla	r2, r2, ip, r1
 801c68e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c690:	fb00 2001 	mla	r0, r0, r1, r2
 801c694:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c696:	fb03 0302 	mla	r3, r3, r2, r0
 801c69a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c69e:	b1d3      	cbz	r3, 801c6d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801c6a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c6a2:	4353      	muls	r3, r2
 801c6a4:	1c5a      	adds	r2, r3, #1
 801c6a6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c6aa:	4a0f      	ldr	r2, [pc, #60]	; (801c6e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801c6ac:	121b      	asrs	r3, r3, #8
 801c6ae:	6812      	ldr	r2, [r2, #0]
 801c6b0:	2bff      	cmp	r3, #255	; 0xff
 801c6b2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801c6b6:	d12d      	bne.n	801c714 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801c6b8:	0953      	lsrs	r3, r2, #5
 801c6ba:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801c6be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c6c2:	f02c 0c07 	bic.w	ip, ip, #7
 801c6c6:	ea43 0c0c 	orr.w	ip, r3, ip
 801c6ca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c6ce:	ea4c 0202 	orr.w	r2, ip, r2
 801c6d2:	f8a8 2000 	strh.w	r2, [r8]
 801c6d6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801c6d8:	441c      	add	r4, r3
 801c6da:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c6dc:	f108 0802 	add.w	r8, r8, #2
 801c6e0:	441e      	add	r6, r3
 801c6e2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c6e6:	e6ba      	b.n	801c45e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801c6e8:	2001264c 	.word	0x2001264c
 801c6ec:	2800      	cmp	r0, #0
 801c6ee:	d0ba      	beq.n	801c666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801c6f0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c6f2:	442b      	add	r3, r5
 801c6f4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c6f8:	07db      	lsls	r3, r3, #31
 801c6fa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c6fe:	bf54      	ite	pl
 801c700:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c704:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c708:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c70c:	fa5f f38c 	uxtb.w	r3, ip
 801c710:	930c      	str	r3, [sp, #48]	; 0x30
 801c712:	e7a8      	b.n	801c666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801c714:	f8b8 e000 	ldrh.w	lr, [r8]
 801c718:	fa1f fa83 	uxth.w	sl, r3
 801c71c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801c720:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c724:	43db      	mvns	r3, r3
 801c726:	b2db      	uxtb	r3, r3
 801c728:	fb11 f10a 	smulbb	r1, r1, sl
 801c72c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c730:	fb00 1003 	mla	r0, r0, r3, r1
 801c734:	b2d2      	uxtb	r2, r2
 801c736:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801c73a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c73e:	fa5f fe8e 	uxtb.w	lr, lr
 801c742:	fb12 f20a 	smulbb	r2, r2, sl
 801c746:	fb0e 2203 	mla	r2, lr, r3, r2
 801c74a:	fa5f fc8c 	uxtb.w	ip, ip
 801c74e:	b280      	uxth	r0, r0
 801c750:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c754:	b292      	uxth	r2, r2
 801c756:	fb1c fc0a 	smulbb	ip, ip, sl
 801c75a:	fb01 cc03 	mla	ip, r1, r3, ip
 801c75e:	1c43      	adds	r3, r0, #1
 801c760:	1c51      	adds	r1, r2, #1
 801c762:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c766:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801c76a:	fa1f fc8c 	uxth.w	ip, ip
 801c76e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801c772:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801c776:	4308      	orrs	r0, r1
 801c778:	f10c 0101 	add.w	r1, ip, #1
 801c77c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c780:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c784:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c788:	ea40 000c 	orr.w	r0, r0, ip
 801c78c:	f8a8 0000 	strh.w	r0, [r8]
 801c790:	e7a1      	b.n	801c6d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801c792:	b017      	add	sp, #92	; 0x5c
 801c794:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c798 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801c798:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c79c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801c7a0:	2d00      	cmp	r5, #0
 801c7a2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801c7a6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801c7aa:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801c7ae:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801c7b2:	fb05 0e03 	mla	lr, r5, r3, r0
 801c7b6:	f2c0 80b0 	blt.w	801c91a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801c7ba:	45a9      	cmp	r9, r5
 801c7bc:	f340 80ad 	ble.w	801c91a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801c7c0:	2800      	cmp	r0, #0
 801c7c2:	f2c0 80a8 	blt.w	801c916 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801c7c6:	4580      	cmp	r8, r0
 801c7c8:	f340 80a5 	ble.w	801c916 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801c7cc:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801c7d0:	f01e 0f01 	tst.w	lr, #1
 801c7d4:	5d16      	ldrb	r6, [r2, r4]
 801c7d6:	bf0c      	ite	eq
 801c7d8:	f006 060f 	andeq.w	r6, r6, #15
 801c7dc:	1136      	asrne	r6, r6, #4
 801c7de:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801c7e2:	b2f6      	uxtb	r6, r6
 801c7e4:	1c44      	adds	r4, r0, #1
 801c7e6:	f100 809b 	bmi.w	801c920 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801c7ea:	45a0      	cmp	r8, r4
 801c7ec:	f340 8098 	ble.w	801c920 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801c7f0:	2f00      	cmp	r7, #0
 801c7f2:	f000 8097 	beq.w	801c924 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801c7f6:	f10e 0a01 	add.w	sl, lr, #1
 801c7fa:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801c7fe:	f01a 0f01 	tst.w	sl, #1
 801c802:	5d14      	ldrb	r4, [r2, r4]
 801c804:	bf0c      	ite	eq
 801c806:	f004 040f 	andeq.w	r4, r4, #15
 801c80a:	1124      	asrne	r4, r4, #4
 801c80c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801c810:	b2e4      	uxtb	r4, r4
 801c812:	3501      	adds	r5, #1
 801c814:	f100 808a 	bmi.w	801c92c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801c818:	45a9      	cmp	r9, r5
 801c81a:	f340 8087 	ble.w	801c92c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801c81e:	f1bc 0f00 	cmp.w	ip, #0
 801c822:	f000 8086 	beq.w	801c932 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801c826:	2800      	cmp	r0, #0
 801c828:	db7e      	blt.n	801c928 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801c82a:	4580      	cmp	r8, r0
 801c82c:	dd7c      	ble.n	801c928 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801c82e:	eb03 090e 	add.w	r9, r3, lr
 801c832:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801c836:	f019 0f01 	tst.w	r9, #1
 801c83a:	5d55      	ldrb	r5, [r2, r5]
 801c83c:	bf0c      	ite	eq
 801c83e:	f005 050f 	andeq.w	r5, r5, #15
 801c842:	112d      	asrne	r5, r5, #4
 801c844:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801c848:	b2ed      	uxtb	r5, r5
 801c84a:	3001      	adds	r0, #1
 801c84c:	d474      	bmi.n	801c938 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801c84e:	4580      	cmp	r8, r0
 801c850:	dd72      	ble.n	801c938 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801c852:	2f00      	cmp	r7, #0
 801c854:	d072      	beq.n	801c93c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801c856:	3301      	adds	r3, #1
 801c858:	449e      	add	lr, r3
 801c85a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801c85e:	f01e 0f01 	tst.w	lr, #1
 801c862:	5cd0      	ldrb	r0, [r2, r3]
 801c864:	bf0c      	ite	eq
 801c866:	f000 000f 	andeq.w	r0, r0, #15
 801c86a:	1100      	asrne	r0, r0, #4
 801c86c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c870:	b2c3      	uxtb	r3, r0
 801c872:	b2ba      	uxth	r2, r7
 801c874:	fa1f fc8c 	uxth.w	ip, ip
 801c878:	fb02 f00c 	mul.w	r0, r2, ip
 801c87c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801c880:	0112      	lsls	r2, r2, #4
 801c882:	fa1f fc8c 	uxth.w	ip, ip
 801c886:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801c88a:	1a12      	subs	r2, r2, r0
 801c88c:	eba7 070c 	sub.w	r7, r7, ip
 801c890:	b292      	uxth	r2, r2
 801c892:	b2bf      	uxth	r7, r7
 801c894:	4362      	muls	r2, r4
 801c896:	fb06 2207 	mla	r2, r6, r7, r2
 801c89a:	fb0c 2505 	mla	r5, ip, r5, r2
 801c89e:	fb00 5303 	mla	r3, r0, r3, r5
 801c8a2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c8a6:	b3a3      	cbz	r3, 801c912 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801c8a8:	4a25      	ldr	r2, [pc, #148]	; (801c940 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801c8aa:	880e      	ldrh	r6, [r1, #0]
 801c8ac:	6815      	ldr	r5, [r2, #0]
 801c8ae:	1234      	asrs	r4, r6, #8
 801c8b0:	b29a      	uxth	r2, r3
 801c8b2:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801c8b6:	43db      	mvns	r3, r3
 801c8b8:	b2db      	uxtb	r3, r3
 801c8ba:	fb10 f002 	smulbb	r0, r0, r2
 801c8be:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c8c2:	fb04 0403 	mla	r4, r4, r3, r0
 801c8c6:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801c8ca:	10f0      	asrs	r0, r6, #3
 801c8cc:	b2ed      	uxtb	r5, r5
 801c8ce:	00f6      	lsls	r6, r6, #3
 801c8d0:	fb17 f702 	smulbb	r7, r7, r2
 801c8d4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c8d8:	fb15 f202 	smulbb	r2, r5, r2
 801c8dc:	b2f6      	uxtb	r6, r6
 801c8de:	b2a4      	uxth	r4, r4
 801c8e0:	fb00 7003 	mla	r0, r0, r3, r7
 801c8e4:	fb06 2303 	mla	r3, r6, r3, r2
 801c8e8:	b29a      	uxth	r2, r3
 801c8ea:	1c63      	adds	r3, r4, #1
 801c8ec:	b280      	uxth	r0, r0
 801c8ee:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801c8f2:	1c53      	adds	r3, r2, #1
 801c8f4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c8f8:	1c42      	adds	r2, r0, #1
 801c8fa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c8fe:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c902:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c906:	0940      	lsrs	r0, r0, #5
 801c908:	4323      	orrs	r3, r4
 801c90a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c90e:	4303      	orrs	r3, r0
 801c910:	800b      	strh	r3, [r1, #0]
 801c912:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c916:	2600      	movs	r6, #0
 801c918:	e764      	b.n	801c7e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801c91a:	2400      	movs	r4, #0
 801c91c:	4626      	mov	r6, r4
 801c91e:	e778      	b.n	801c812 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801c920:	2400      	movs	r4, #0
 801c922:	e776      	b.n	801c812 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801c924:	463c      	mov	r4, r7
 801c926:	e774      	b.n	801c812 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801c928:	2500      	movs	r5, #0
 801c92a:	e78e      	b.n	801c84a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801c92c:	2300      	movs	r3, #0
 801c92e:	461d      	mov	r5, r3
 801c930:	e79f      	b.n	801c872 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801c932:	4663      	mov	r3, ip
 801c934:	4665      	mov	r5, ip
 801c936:	e79c      	b.n	801c872 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801c938:	2300      	movs	r3, #0
 801c93a:	e79a      	b.n	801c872 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801c93c:	463b      	mov	r3, r7
 801c93e:	e798      	b.n	801c872 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801c940:	2001264c 	.word	0x2001264c

0801c944 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c948:	b093      	sub	sp, #76	; 0x4c
 801c94a:	461d      	mov	r5, r3
 801c94c:	920c      	str	r2, [sp, #48]	; 0x30
 801c94e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801c950:	9107      	str	r1, [sp, #28]
 801c952:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801c956:	9011      	str	r0, [sp, #68]	; 0x44
 801c958:	6850      	ldr	r0, [r2, #4]
 801c95a:	6812      	ldr	r2, [r2, #0]
 801c95c:	fb00 1303 	mla	r3, r0, r3, r1
 801c960:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801c964:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c966:	689b      	ldr	r3, [r3, #8]
 801c968:	3301      	adds	r3, #1
 801c96a:	f023 0301 	bic.w	r3, r3, #1
 801c96e:	9306      	str	r3, [sp, #24]
 801c970:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c972:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801c976:	681f      	ldr	r7, [r3, #0]
 801c978:	9b07      	ldr	r3, [sp, #28]
 801c97a:	2b00      	cmp	r3, #0
 801c97c:	dc03      	bgt.n	801c986 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801c97e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c980:	2b00      	cmp	r3, #0
 801c982:	f340 8267 	ble.w	801ce54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801c986:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c988:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c98c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c990:	1e48      	subs	r0, r1, #1
 801c992:	f102 3cff 	add.w	ip, r2, #4294967295
 801c996:	2d00      	cmp	r5, #0
 801c998:	f340 80b8 	ble.w	801cb0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c99c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c9a0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c9a4:	d406      	bmi.n	801c9b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c9a6:	4586      	cmp	lr, r0
 801c9a8:	da04      	bge.n	801c9b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c9aa:	2b00      	cmp	r3, #0
 801c9ac:	db02      	blt.n	801c9b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c9ae:	4563      	cmp	r3, ip
 801c9b0:	f2c0 80ad 	blt.w	801cb0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801c9b4:	f11e 0e01 	adds.w	lr, lr, #1
 801c9b8:	f100 80a0 	bmi.w	801cafc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801c9bc:	4571      	cmp	r1, lr
 801c9be:	f2c0 809d 	blt.w	801cafc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801c9c2:	3301      	adds	r3, #1
 801c9c4:	f100 809a 	bmi.w	801cafc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801c9c8:	429a      	cmp	r2, r3
 801c9ca:	f2c0 8097 	blt.w	801cafc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801c9ce:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801c9d2:	9509      	str	r5, [sp, #36]	; 0x24
 801c9d4:	46c8      	mov	r8, r9
 801c9d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c9d8:	2b00      	cmp	r3, #0
 801c9da:	f340 80b6 	ble.w	801cb4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801c9de:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801c9e2:	9308      	str	r3, [sp, #32]
 801c9e4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c9e6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801c9ea:	1423      	asrs	r3, r4, #16
 801c9ec:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c9f0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c9f4:	f100 813e 	bmi.w	801cc74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801c9f8:	f10c 3bff 	add.w	fp, ip, #4294967295
 801c9fc:	455b      	cmp	r3, fp
 801c9fe:	f280 8139 	bge.w	801cc74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801ca02:	2800      	cmp	r0, #0
 801ca04:	f2c0 8136 	blt.w	801cc74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801ca08:	f10e 3bff 	add.w	fp, lr, #4294967295
 801ca0c:	4558      	cmp	r0, fp
 801ca0e:	f280 8131 	bge.w	801cc74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801ca12:	9a06      	ldr	r2, [sp, #24]
 801ca14:	fb00 3302 	mla	r3, r0, r2, r3
 801ca18:	0858      	lsrs	r0, r3, #1
 801ca1a:	07da      	lsls	r2, r3, #31
 801ca1c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801ca20:	9a08      	ldr	r2, [sp, #32]
 801ca22:	bf54      	ite	pl
 801ca24:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ca28:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ca2c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ca30:	fa5f fc8c 	uxtb.w	ip, ip
 801ca34:	2a00      	cmp	r2, #0
 801ca36:	f000 80cb 	beq.w	801cbd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ca3a:	1c58      	adds	r0, r3, #1
 801ca3c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801ca40:	07c0      	lsls	r0, r0, #31
 801ca42:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ca46:	bf54      	ite	pl
 801ca48:	f00e 0e0f 	andpl.w	lr, lr, #15
 801ca4c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801ca50:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801ca54:	fa5f fe8e 	uxtb.w	lr, lr
 801ca58:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801ca5c:	b1b9      	cbz	r1, 801ca8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801ca5e:	4453      	add	r3, sl
 801ca60:	0858      	lsrs	r0, r3, #1
 801ca62:	07da      	lsls	r2, r3, #31
 801ca64:	5c38      	ldrb	r0, [r7, r0]
 801ca66:	bf54      	ite	pl
 801ca68:	f000 000f 	andpl.w	r0, r0, #15
 801ca6c:	1100      	asrmi	r0, r0, #4
 801ca6e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ca72:	b2c0      	uxtb	r0, r0
 801ca74:	900a      	str	r0, [sp, #40]	; 0x28
 801ca76:	1c58      	adds	r0, r3, #1
 801ca78:	0843      	lsrs	r3, r0, #1
 801ca7a:	07c2      	lsls	r2, r0, #31
 801ca7c:	5cfb      	ldrb	r3, [r7, r3]
 801ca7e:	bf54      	ite	pl
 801ca80:	f003 030f 	andpl.w	r3, r3, #15
 801ca84:	111b      	asrmi	r3, r3, #4
 801ca86:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ca8a:	b2db      	uxtb	r3, r3
 801ca8c:	930e      	str	r3, [sp, #56]	; 0x38
 801ca8e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ca92:	b289      	uxth	r1, r1
 801ca94:	fb02 f301 	mul.w	r3, r2, r1
 801ca98:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ca9c:	0112      	lsls	r2, r2, #4
 801ca9e:	b289      	uxth	r1, r1
 801caa0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801caa4:	1a40      	subs	r0, r0, r1
 801caa6:	fa1f fe80 	uxth.w	lr, r0
 801caaa:	1ad2      	subs	r2, r2, r3
 801caac:	980d      	ldr	r0, [sp, #52]	; 0x34
 801caae:	b292      	uxth	r2, r2
 801cab0:	4342      	muls	r2, r0
 801cab2:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801cab6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801cab8:	fb01 c102 	mla	r1, r1, r2, ip
 801cabc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801cabe:	fb03 1302 	mla	r3, r3, r2, r1
 801cac2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cac6:	2bff      	cmp	r3, #255	; 0xff
 801cac8:	f040 8093 	bne.w	801cbf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801cacc:	4bbe      	ldr	r3, [pc, #760]	; (801cdc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801cace:	681a      	ldr	r2, [r3, #0]
 801cad0:	4bbe      	ldr	r3, [pc, #760]	; (801cdcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801cad2:	0951      	lsrs	r1, r2, #5
 801cad4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801cad8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cadc:	430b      	orrs	r3, r1
 801cade:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cae2:	4313      	orrs	r3, r2
 801cae4:	f8a8 3000 	strh.w	r3, [r8]
 801cae8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801caea:	441c      	add	r4, r3
 801caec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801caee:	441e      	add	r6, r3
 801caf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801caf2:	3b01      	subs	r3, #1
 801caf4:	f108 0802 	add.w	r8, r8, #2
 801caf8:	9309      	str	r3, [sp, #36]	; 0x24
 801cafa:	e76c      	b.n	801c9d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cafc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801cafe:	441c      	add	r4, r3
 801cb00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cb02:	3d01      	subs	r5, #1
 801cb04:	441e      	add	r6, r3
 801cb06:	f109 0902 	add.w	r9, r9, #2
 801cb0a:	e744      	b.n	801c996 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801cb0c:	d021      	beq.n	801cb52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801cb0e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801cb10:	1e6b      	subs	r3, r5, #1
 801cb12:	fb00 4003 	mla	r0, r0, r3, r4
 801cb16:	1400      	asrs	r0, r0, #16
 801cb18:	f53f af59 	bmi.w	801c9ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cb1c:	3901      	subs	r1, #1
 801cb1e:	4288      	cmp	r0, r1
 801cb20:	f6bf af55 	bge.w	801c9ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cb24:	9920      	ldr	r1, [sp, #128]	; 0x80
 801cb26:	fb01 6303 	mla	r3, r1, r3, r6
 801cb2a:	141b      	asrs	r3, r3, #16
 801cb2c:	f53f af4f 	bmi.w	801c9ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cb30:	3a01      	subs	r2, #1
 801cb32:	4293      	cmp	r3, r2
 801cb34:	f6bf af4b 	bge.w	801c9ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cb38:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801cb3c:	9308      	str	r3, [sp, #32]
 801cb3e:	46a8      	mov	r8, r5
 801cb40:	46ce      	mov	lr, r9
 801cb42:	f1b8 0f00 	cmp.w	r8, #0
 801cb46:	f300 80b5 	bgt.w	801ccb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801cb4a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801cb4e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801cb52:	9b07      	ldr	r3, [sp, #28]
 801cb54:	2b00      	cmp	r3, #0
 801cb56:	f340 817d 	ble.w	801ce54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801cb5a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cb5e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cb62:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cb66:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cb68:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cb6c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cb70:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cb74:	eef0 6a62 	vmov.f32	s13, s5
 801cb78:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cb7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb80:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cb84:	ee16 4a90 	vmov	r4, s13
 801cb88:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cb8c:	eef0 6a43 	vmov.f32	s13, s6
 801cb90:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cb94:	ee12 2a90 	vmov	r2, s5
 801cb98:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cb9c:	fb92 f3f3 	sdiv	r3, r2, r3
 801cba0:	ee13 2a10 	vmov	r2, s6
 801cba4:	931f      	str	r3, [sp, #124]	; 0x7c
 801cba6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cba8:	fb92 f3f3 	sdiv	r3, r2, r3
 801cbac:	9320      	str	r3, [sp, #128]	; 0x80
 801cbae:	9b07      	ldr	r3, [sp, #28]
 801cbb0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801cbb2:	3b01      	subs	r3, #1
 801cbb4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cbb8:	9307      	str	r3, [sp, #28]
 801cbba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cbbc:	ee16 6a90 	vmov	r6, s13
 801cbc0:	bf14      	ite	ne
 801cbc2:	461d      	movne	r5, r3
 801cbc4:	4615      	moveq	r5, r2
 801cbc6:	eeb0 3a67 	vmov.f32	s6, s15
 801cbca:	eef0 2a47 	vmov.f32	s5, s14
 801cbce:	e6d3      	b.n	801c978 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801cbd0:	2900      	cmp	r1, #0
 801cbd2:	f43f af5c 	beq.w	801ca8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801cbd6:	eb0a 0003 	add.w	r0, sl, r3
 801cbda:	0843      	lsrs	r3, r0, #1
 801cbdc:	07c0      	lsls	r0, r0, #31
 801cbde:	5cfb      	ldrb	r3, [r7, r3]
 801cbe0:	bf54      	ite	pl
 801cbe2:	f003 030f 	andpl.w	r3, r3, #15
 801cbe6:	111b      	asrmi	r3, r3, #4
 801cbe8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801cbec:	b2db      	uxtb	r3, r3
 801cbee:	930a      	str	r3, [sp, #40]	; 0x28
 801cbf0:	e74d      	b.n	801ca8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801cbf2:	2b00      	cmp	r3, #0
 801cbf4:	f43f af78 	beq.w	801cae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cbf8:	4a73      	ldr	r2, [pc, #460]	; (801cdc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801cbfa:	f8b8 c000 	ldrh.w	ip, [r8]
 801cbfe:	6810      	ldr	r0, [r2, #0]
 801cc00:	fa1f fe83 	uxth.w	lr, r3
 801cc04:	ea4f 212c 	mov.w	r1, ip, asr #8
 801cc08:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801cc0c:	43db      	mvns	r3, r3
 801cc0e:	b2db      	uxtb	r3, r3
 801cc10:	fb12 f20e 	smulbb	r2, r2, lr
 801cc14:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801cc18:	fb01 2103 	mla	r1, r1, r3, r2
 801cc1c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801cc20:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801cc24:	b2c0      	uxtb	r0, r0
 801cc26:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cc2a:	fb1b fb0e 	smulbb	fp, fp, lr
 801cc2e:	b289      	uxth	r1, r1
 801cc30:	fb10 fe0e 	smulbb	lr, r0, lr
 801cc34:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801cc38:	fa5f fc8c 	uxtb.w	ip, ip
 801cc3c:	fb02 b203 	mla	r2, r2, r3, fp
 801cc40:	1c48      	adds	r0, r1, #1
 801cc42:	fb0c e303 	mla	r3, ip, r3, lr
 801cc46:	b292      	uxth	r2, r2
 801cc48:	b29b      	uxth	r3, r3
 801cc4a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801cc4e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801cc52:	f102 0b01 	add.w	fp, r2, #1
 801cc56:	1c59      	adds	r1, r3, #1
 801cc58:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801cc5c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801cc60:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801cc64:	0952      	lsrs	r2, r2, #5
 801cc66:	4301      	orrs	r1, r0
 801cc68:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cc6c:	4311      	orrs	r1, r2
 801cc6e:	f8a8 1000 	strh.w	r1, [r8]
 801cc72:	e739      	b.n	801cae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cc74:	f113 0b01 	adds.w	fp, r3, #1
 801cc78:	f53f af36 	bmi.w	801cae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cc7c:	45dc      	cmp	ip, fp
 801cc7e:	f6ff af33 	blt.w	801cae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cc82:	f110 0b01 	adds.w	fp, r0, #1
 801cc86:	f53f af2f 	bmi.w	801cae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cc8a:	45de      	cmp	lr, fp
 801cc8c:	f6ff af2c 	blt.w	801cae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cc90:	9a08      	ldr	r2, [sp, #32]
 801cc92:	9302      	str	r3, [sp, #8]
 801cc94:	fa0f f38e 	sxth.w	r3, lr
 801cc98:	9301      	str	r3, [sp, #4]
 801cc9a:	fa0f f38c 	sxth.w	r3, ip
 801cc9e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801cca2:	9105      	str	r1, [sp, #20]
 801cca4:	9300      	str	r3, [sp, #0]
 801cca6:	463a      	mov	r2, r7
 801cca8:	4653      	mov	r3, sl
 801ccaa:	4641      	mov	r1, r8
 801ccac:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ccae:	f7ff fd73 	bl	801c798 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801ccb2:	e719      	b.n	801cae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ccb4:	9906      	ldr	r1, [sp, #24]
 801ccb6:	1422      	asrs	r2, r4, #16
 801ccb8:	1433      	asrs	r3, r6, #16
 801ccba:	fb01 2303 	mla	r3, r1, r3, r2
 801ccbe:	085a      	lsrs	r2, r3, #1
 801ccc0:	07d9      	lsls	r1, r3, #31
 801ccc2:	5cba      	ldrb	r2, [r7, r2]
 801ccc4:	bf54      	ite	pl
 801ccc6:	f002 020f 	andpl.w	r2, r2, #15
 801ccca:	1112      	asrmi	r2, r2, #4
 801cccc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ccd0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ccd4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801ccd8:	b2d2      	uxtb	r2, r2
 801ccda:	2800      	cmp	r0, #0
 801ccdc:	d062      	beq.n	801cda4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801ccde:	f103 0a01 	add.w	sl, r3, #1
 801cce2:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801cce6:	f01a 0f01 	tst.w	sl, #1
 801ccea:	5c79      	ldrb	r1, [r7, r1]
 801ccec:	bf0c      	ite	eq
 801ccee:	f001 010f 	andeq.w	r1, r1, #15
 801ccf2:	1109      	asrne	r1, r1, #4
 801ccf4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ccf8:	b2c9      	uxtb	r1, r1
 801ccfa:	910f      	str	r1, [sp, #60]	; 0x3c
 801ccfc:	f1bc 0f00 	cmp.w	ip, #0
 801cd00:	d019      	beq.n	801cd36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801cd02:	9908      	ldr	r1, [sp, #32]
 801cd04:	440b      	add	r3, r1
 801cd06:	0859      	lsrs	r1, r3, #1
 801cd08:	f013 0f01 	tst.w	r3, #1
 801cd0c:	5c79      	ldrb	r1, [r7, r1]
 801cd0e:	bf0c      	ite	eq
 801cd10:	f001 010f 	andeq.w	r1, r1, #15
 801cd14:	1109      	asrne	r1, r1, #4
 801cd16:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cd1a:	b2c9      	uxtb	r1, r1
 801cd1c:	3301      	adds	r3, #1
 801cd1e:	910b      	str	r1, [sp, #44]	; 0x2c
 801cd20:	0859      	lsrs	r1, r3, #1
 801cd22:	07db      	lsls	r3, r3, #31
 801cd24:	5c79      	ldrb	r1, [r7, r1]
 801cd26:	bf54      	ite	pl
 801cd28:	f001 010f 	andpl.w	r1, r1, #15
 801cd2c:	1109      	asrmi	r1, r1, #4
 801cd2e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cd32:	b2c9      	uxtb	r1, r1
 801cd34:	9110      	str	r1, [sp, #64]	; 0x40
 801cd36:	b280      	uxth	r0, r0
 801cd38:	fa1f fc8c 	uxth.w	ip, ip
 801cd3c:	fb00 f30c 	mul.w	r3, r0, ip
 801cd40:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801cd44:	0100      	lsls	r0, r0, #4
 801cd46:	fa1f fc8c 	uxth.w	ip, ip
 801cd4a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801cd4e:	eba1 010c 	sub.w	r1, r1, ip
 801cd52:	fa1f fa81 	uxth.w	sl, r1
 801cd56:	1ac0      	subs	r0, r0, r3
 801cd58:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801cd5a:	b280      	uxth	r0, r0
 801cd5c:	4348      	muls	r0, r1
 801cd5e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801cd60:	fb02 020a 	mla	r2, r2, sl, r0
 801cd64:	fb0c 2c01 	mla	ip, ip, r1, r2
 801cd68:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cd6a:	fb03 c302 	mla	r3, r3, r2, ip
 801cd6e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cd72:	2bff      	cmp	r3, #255	; 0xff
 801cd74:	d12c      	bne.n	801cdd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801cd76:	4b14      	ldr	r3, [pc, #80]	; (801cdc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801cd78:	681a      	ldr	r2, [r3, #0]
 801cd7a:	4b14      	ldr	r3, [pc, #80]	; (801cdcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801cd7c:	0951      	lsrs	r1, r2, #5
 801cd7e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801cd82:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cd86:	430b      	orrs	r3, r1
 801cd88:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cd8c:	4313      	orrs	r3, r2
 801cd8e:	f8ae 3000 	strh.w	r3, [lr]
 801cd92:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801cd94:	441c      	add	r4, r3
 801cd96:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cd98:	f10e 0e02 	add.w	lr, lr, #2
 801cd9c:	441e      	add	r6, r3
 801cd9e:	f108 38ff 	add.w	r8, r8, #4294967295
 801cda2:	e6ce      	b.n	801cb42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801cda4:	f1bc 0f00 	cmp.w	ip, #0
 801cda8:	d0c5      	beq.n	801cd36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801cdaa:	9908      	ldr	r1, [sp, #32]
 801cdac:	440b      	add	r3, r1
 801cdae:	0859      	lsrs	r1, r3, #1
 801cdb0:	07db      	lsls	r3, r3, #31
 801cdb2:	5c79      	ldrb	r1, [r7, r1]
 801cdb4:	bf54      	ite	pl
 801cdb6:	f001 010f 	andpl.w	r1, r1, #15
 801cdba:	1109      	asrmi	r1, r1, #4
 801cdbc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cdc0:	b2c9      	uxtb	r1, r1
 801cdc2:	910b      	str	r1, [sp, #44]	; 0x2c
 801cdc4:	e7b7      	b.n	801cd36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801cdc6:	bf00      	nop
 801cdc8:	2001264c 	.word	0x2001264c
 801cdcc:	fffff800 	.word	0xfffff800
 801cdd0:	2b00      	cmp	r3, #0
 801cdd2:	d0de      	beq.n	801cd92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801cdd4:	4a21      	ldr	r2, [pc, #132]	; (801ce5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801cdd6:	f8be c000 	ldrh.w	ip, [lr]
 801cdda:	6810      	ldr	r0, [r2, #0]
 801cddc:	fa1f fa83 	uxth.w	sl, r3
 801cde0:	ea4f 212c 	mov.w	r1, ip, asr #8
 801cde4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801cde8:	43db      	mvns	r3, r3
 801cdea:	b2db      	uxtb	r3, r3
 801cdec:	fb12 f20a 	smulbb	r2, r2, sl
 801cdf0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801cdf4:	fb01 2103 	mla	r1, r1, r3, r2
 801cdf8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801cdfc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ce00:	b2c0      	uxtb	r0, r0
 801ce02:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ce06:	fa5f fc8c 	uxtb.w	ip, ip
 801ce0a:	fb10 f00a 	smulbb	r0, r0, sl
 801ce0e:	fb0c 0003 	mla	r0, ip, r3, r0
 801ce12:	b289      	uxth	r1, r1
 801ce14:	fb1b fb0a 	smulbb	fp, fp, sl
 801ce18:	b280      	uxth	r0, r0
 801ce1a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ce1e:	fb02 b203 	mla	r2, r2, r3, fp
 801ce22:	1c4b      	adds	r3, r1, #1
 801ce24:	f100 0b01 	add.w	fp, r0, #1
 801ce28:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ce2c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801ce30:	b292      	uxth	r2, r2
 801ce32:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801ce36:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ce3a:	ea4b 0101 	orr.w	r1, fp, r1
 801ce3e:	f102 0b01 	add.w	fp, r2, #1
 801ce42:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801ce46:	0952      	lsrs	r2, r2, #5
 801ce48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ce4c:	4311      	orrs	r1, r2
 801ce4e:	f8ae 1000 	strh.w	r1, [lr]
 801ce52:	e79e      	b.n	801cd92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801ce54:	b013      	add	sp, #76	; 0x4c
 801ce56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce5a:	bf00      	nop
 801ce5c:	2001264c 	.word	0x2001264c

0801ce60 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 801ce60:	b570      	push	{r4, r5, r6, lr}
 801ce62:	1208      	asrs	r0, r1, #8
 801ce64:	b29e      	uxth	r6, r3
 801ce66:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801ce6a:	1213      	asrs	r3, r2, #8
 801ce6c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ce70:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801ce74:	fb13 f305 	smulbb	r3, r3, r5
 801ce78:	fb10 f006 	smulbb	r0, r0, r6
 801ce7c:	4418      	add	r0, r3
 801ce7e:	10cc      	asrs	r4, r1, #3
 801ce80:	10d3      	asrs	r3, r2, #3
 801ce82:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801ce86:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801ce8a:	fb13 f305 	smulbb	r3, r3, r5
 801ce8e:	fb14 f406 	smulbb	r4, r4, r6
 801ce92:	00c9      	lsls	r1, r1, #3
 801ce94:	00d2      	lsls	r2, r2, #3
 801ce96:	441c      	add	r4, r3
 801ce98:	b2d2      	uxtb	r2, r2
 801ce9a:	b2cb      	uxtb	r3, r1
 801ce9c:	fb12 f205 	smulbb	r2, r2, r5
 801cea0:	b280      	uxth	r0, r0
 801cea2:	fb13 f306 	smulbb	r3, r3, r6
 801cea6:	4413      	add	r3, r2
 801cea8:	1c42      	adds	r2, r0, #1
 801ceaa:	b29b      	uxth	r3, r3
 801ceac:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ceb0:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 801ceb4:	1c58      	adds	r0, r3, #1
 801ceb6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ceba:	b2a4      	uxth	r4, r4
 801cebc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801cec0:	4310      	orrs	r0, r2
 801cec2:	1c62      	adds	r2, r4, #1
 801cec4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801cec8:	0964      	lsrs	r4, r4, #5
 801ceca:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801cece:	4320      	orrs	r0, r4
 801ced0:	bd70      	pop	{r4, r5, r6, pc}
	...

0801ced4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801ced4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ced8:	b08f      	sub	sp, #60	; 0x3c
 801ceda:	461c      	mov	r4, r3
 801cedc:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 801cee0:	9004      	str	r0, [sp, #16]
 801cee2:	460d      	mov	r5, r1
 801cee4:	4616      	mov	r6, r2
 801cee6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801cee8:	2f00      	cmp	r7, #0
 801ceea:	f000 80f6 	beq.w	801d0da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801ceee:	6820      	ldr	r0, [r4, #0]
 801cef0:	6861      	ldr	r1, [r4, #4]
 801cef2:	aa0a      	add	r2, sp, #40	; 0x28
 801cef4:	c203      	stmia	r2!, {r0, r1}
 801cef6:	6818      	ldr	r0, [r3, #0]
 801cef8:	6859      	ldr	r1, [r3, #4]
 801cefa:	aa0c      	add	r2, sp, #48	; 0x30
 801cefc:	c203      	stmia	r2!, {r0, r1}
 801cefe:	a80a      	add	r0, sp, #40	; 0x28
 801cf00:	f7ef fde2 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf04:	4621      	mov	r1, r4
 801cf06:	a80c      	add	r0, sp, #48	; 0x30
 801cf08:	f7ef fe06 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf0c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801cf10:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 801cf14:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801cf18:	f002 0301 	and.w	r3, r2, #1
 801cf1c:	9306      	str	r3, [sp, #24]
 801cf1e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801cf22:	f003 0101 	and.w	r1, r3, #1
 801cf26:	9105      	str	r1, [sp, #20]
 801cf28:	9805      	ldr	r0, [sp, #20]
 801cf2a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801cf2e:	4403      	add	r3, r0
 801cf30:	fb01 2303 	mla	r3, r1, r3, r2
 801cf34:	f04f 0802 	mov.w	r8, #2
 801cf38:	fb93 f3f8 	sdiv	r3, r3, r8
 801cf3c:	441d      	add	r5, r3
 801cf3e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801cf42:	441a      	add	r2, r3
 801cf44:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801cf48:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801cf4c:	4419      	add	r1, r3
 801cf4e:	4b64      	ldr	r3, [pc, #400]	; (801d0e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801cf50:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 801cf54:	6818      	ldr	r0, [r3, #0]
 801cf56:	6803      	ldr	r3, [r0, #0]
 801cf58:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf5a:	4798      	blx	r3
 801cf5c:	4a61      	ldr	r2, [pc, #388]	; (801d0e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 801cf5e:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 801cf62:	8813      	ldrh	r3, [r2, #0]
 801cf64:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 801cf68:	2fff      	cmp	r7, #255	; 0xff
 801cf6a:	fb03 a404 	mla	r4, r3, r4, sl
 801cf6e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801cf72:	f106 0604 	add.w	r6, r6, #4
 801cf76:	4611      	mov	r1, r2
 801cf78:	fb03 fb0b 	mul.w	fp, r3, fp
 801cf7c:	d06b      	beq.n	801d056 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 801cf7e:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 801cf82:	9303      	str	r3, [sp, #12]
 801cf84:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 801cf88:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801cf8c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 801cf90:	9b07      	ldr	r3, [sp, #28]
 801cf92:	42a3      	cmp	r3, r4
 801cf94:	f240 809c 	bls.w	801d0d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801cf98:	9b06      	ldr	r3, [sp, #24]
 801cf9a:	2b00      	cmp	r3, #0
 801cf9c:	d039      	beq.n	801d012 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 801cf9e:	782b      	ldrb	r3, [r5, #0]
 801cfa0:	8822      	ldrh	r2, [r4, #0]
 801cfa2:	9804      	ldr	r0, [sp, #16]
 801cfa4:	f003 030f 	and.w	r3, r3, #15
 801cfa8:	f105 0801 	add.w	r8, r5, #1
 801cfac:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801cfb0:	9b03      	ldr	r3, [sp, #12]
 801cfb2:	9300      	str	r3, [sp, #0]
 801cfb4:	463b      	mov	r3, r7
 801cfb6:	f7ff ff53 	bl	801ce60 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801cfba:	f824 0b02 	strh.w	r0, [r4], #2
 801cfbe:	f109 3bff 	add.w	fp, r9, #4294967295
 801cfc2:	f1bb 0f01 	cmp.w	fp, #1
 801cfc6:	46a2      	mov	sl, r4
 801cfc8:	f104 0404 	add.w	r4, r4, #4
 801cfcc:	dd24      	ble.n	801d018 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 801cfce:	f898 3000 	ldrb.w	r3, [r8]
 801cfd2:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801cfd6:	9804      	ldr	r0, [sp, #16]
 801cfd8:	091b      	lsrs	r3, r3, #4
 801cfda:	f1ab 0b02 	sub.w	fp, fp, #2
 801cfde:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801cfe2:	9b03      	ldr	r3, [sp, #12]
 801cfe4:	9300      	str	r3, [sp, #0]
 801cfe6:	463b      	mov	r3, r7
 801cfe8:	f7ff ff3a 	bl	801ce60 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801cfec:	f824 0c04 	strh.w	r0, [r4, #-4]
 801cff0:	f818 3b01 	ldrb.w	r3, [r8], #1
 801cff4:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801cff8:	9804      	ldr	r0, [sp, #16]
 801cffa:	f003 030f 	and.w	r3, r3, #15
 801cffe:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801d002:	9b03      	ldr	r3, [sp, #12]
 801d004:	9300      	str	r3, [sp, #0]
 801d006:	463b      	mov	r3, r7
 801d008:	f7ff ff2a 	bl	801ce60 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801d00c:	f824 0c02 	strh.w	r0, [r4, #-2]
 801d010:	e7d7      	b.n	801cfc2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 801d012:	46a8      	mov	r8, r5
 801d014:	46cb      	mov	fp, r9
 801d016:	e7d4      	b.n	801cfc2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 801d018:	d10e      	bne.n	801d038 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 801d01a:	f898 3000 	ldrb.w	r3, [r8]
 801d01e:	f8ba 2000 	ldrh.w	r2, [sl]
 801d022:	9804      	ldr	r0, [sp, #16]
 801d024:	091b      	lsrs	r3, r3, #4
 801d026:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801d02a:	9b03      	ldr	r3, [sp, #12]
 801d02c:	9300      	str	r3, [sp, #0]
 801d02e:	463b      	mov	r3, r7
 801d030:	f7ff ff16 	bl	801ce60 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801d034:	f82a 0b02 	strh.w	r0, [sl], #2
 801d038:	9b08      	ldr	r3, [sp, #32]
 801d03a:	9a05      	ldr	r2, [sp, #20]
 801d03c:	881c      	ldrh	r4, [r3, #0]
 801d03e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801d042:	eba4 0409 	sub.w	r4, r4, r9
 801d046:	4413      	add	r3, r2
 801d048:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801d04c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d04e:	fb93 f3f2 	sdiv	r3, r3, r2
 801d052:	441d      	add	r5, r3
 801d054:	e79c      	b.n	801cf90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 801d056:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 801d05a:	45a3      	cmp	fp, r4
 801d05c:	d938      	bls.n	801d0d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801d05e:	9b06      	ldr	r3, [sp, #24]
 801d060:	b1f3      	cbz	r3, 801d0a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 801d062:	782b      	ldrb	r3, [r5, #0]
 801d064:	f003 030f 	and.w	r3, r3, #15
 801d068:	1c6a      	adds	r2, r5, #1
 801d06a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d06e:	8023      	strh	r3, [r4, #0]
 801d070:	f109 30ff 	add.w	r0, r9, #4294967295
 801d074:	3402      	adds	r4, #2
 801d076:	2801      	cmp	r0, #1
 801d078:	4623      	mov	r3, r4
 801d07a:	f104 0404 	add.w	r4, r4, #4
 801d07e:	dd12      	ble.n	801d0a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 801d080:	7813      	ldrb	r3, [r2, #0]
 801d082:	091b      	lsrs	r3, r3, #4
 801d084:	3802      	subs	r0, #2
 801d086:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d08a:	f824 3c04 	strh.w	r3, [r4, #-4]
 801d08e:	f812 3b01 	ldrb.w	r3, [r2], #1
 801d092:	f003 030f 	and.w	r3, r3, #15
 801d096:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d09a:	f824 3c02 	strh.w	r3, [r4, #-2]
 801d09e:	e7ea      	b.n	801d076 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801d0a0:	462a      	mov	r2, r5
 801d0a2:	4648      	mov	r0, r9
 801d0a4:	e7e7      	b.n	801d076 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801d0a6:	d106      	bne.n	801d0b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 801d0a8:	7812      	ldrb	r2, [r2, #0]
 801d0aa:	0912      	lsrs	r2, r2, #4
 801d0ac:	3302      	adds	r3, #2
 801d0ae:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801d0b2:	f823 2c02 	strh.w	r2, [r3, #-2]
 801d0b6:	880c      	ldrh	r4, [r1, #0]
 801d0b8:	9a05      	ldr	r2, [sp, #20]
 801d0ba:	eba4 0409 	sub.w	r4, r4, r9
 801d0be:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801d0c2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801d0c6:	4413      	add	r3, r2
 801d0c8:	fb93 f3f8 	sdiv	r3, r3, r8
 801d0cc:	441d      	add	r5, r3
 801d0ce:	e7c4      	b.n	801d05a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801d0d0:	4b03      	ldr	r3, [pc, #12]	; (801d0e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801d0d2:	6818      	ldr	r0, [r3, #0]
 801d0d4:	6803      	ldr	r3, [r0, #0]
 801d0d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d0d8:	4798      	blx	r3
 801d0da:	b00f      	add	sp, #60	; 0x3c
 801d0dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d0e0:	20012644 	.word	0x20012644
 801d0e4:	2001263e 	.word	0x2001263e

0801d0e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 801d0e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d0ea:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d0ee:	2dff      	cmp	r5, #255	; 0xff
 801d0f0:	ea4f 2711 	mov.w	r7, r1, lsr #8
 801d0f4:	d10c      	bne.n	801d110 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 801d0f6:	2bff      	cmp	r3, #255	; 0xff
 801d0f8:	d10a      	bne.n	801d110 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 801d0fa:	4b25      	ldr	r3, [pc, #148]	; (801d190 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 801d0fc:	0948      	lsrs	r0, r1, #5
 801d0fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d102:	403b      	ands	r3, r7
 801d104:	4318      	orrs	r0, r3
 801d106:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801d10a:	4308      	orrs	r0, r1
 801d10c:	b280      	uxth	r0, r0
 801d10e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d110:	fb15 f503 	smulbb	r5, r5, r3
 801d114:	b2ab      	uxth	r3, r5
 801d116:	1c5d      	adds	r5, r3, #1
 801d118:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 801d11c:	1214      	asrs	r4, r2, #8
 801d11e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801d122:	fa1f fc85 	uxth.w	ip, r5
 801d126:	10d6      	asrs	r6, r2, #3
 801d128:	00d0      	lsls	r0, r2, #3
 801d12a:	43ed      	mvns	r5, r5
 801d12c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801d130:	f3c1 4207 	ubfx	r2, r1, #16, #8
 801d134:	b2eb      	uxtb	r3, r5
 801d136:	b2c0      	uxtb	r0, r0
 801d138:	fb12 f20c 	smulbb	r2, r2, ip
 801d13c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d140:	fb04 2403 	mla	r4, r4, r3, r2
 801d144:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 801d148:	b2c8      	uxtb	r0, r1
 801d14a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d14e:	b2fd      	uxtb	r5, r7
 801d150:	fb10 f00c 	smulbb	r0, r0, ip
 801d154:	b2a4      	uxth	r4, r4
 801d156:	fb02 0003 	mla	r0, r2, r3, r0
 801d15a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d15e:	fb15 f50c 	smulbb	r5, r5, ip
 801d162:	fb06 5503 	mla	r5, r6, r3, r5
 801d166:	b283      	uxth	r3, r0
 801d168:	1c60      	adds	r0, r4, #1
 801d16a:	b2ad      	uxth	r5, r5
 801d16c:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 801d170:	1c58      	adds	r0, r3, #1
 801d172:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801d176:	1c6b      	adds	r3, r5, #1
 801d178:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d17c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801d180:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801d184:	096d      	lsrs	r5, r5, #5
 801d186:	4320      	orrs	r0, r4
 801d188:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d18c:	4328      	orrs	r0, r5
 801d18e:	e7be      	b.n	801d10e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 801d190:	00fff800 	.word	0x00fff800

0801d194 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d198:	461c      	mov	r4, r3
 801d19a:	b08d      	sub	sp, #52	; 0x34
 801d19c:	460d      	mov	r5, r1
 801d19e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801d1a0:	6861      	ldr	r1, [r4, #4]
 801d1a2:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 801d1a6:	4680      	mov	r8, r0
 801d1a8:	6820      	ldr	r0, [r4, #0]
 801d1aa:	4616      	mov	r6, r2
 801d1ac:	aa08      	add	r2, sp, #32
 801d1ae:	c203      	stmia	r2!, {r0, r1}
 801d1b0:	6818      	ldr	r0, [r3, #0]
 801d1b2:	6859      	ldr	r1, [r3, #4]
 801d1b4:	aa0a      	add	r2, sp, #40	; 0x28
 801d1b6:	c203      	stmia	r2!, {r0, r1}
 801d1b8:	a808      	add	r0, sp, #32
 801d1ba:	f7ef fc85 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d1be:	4621      	mov	r1, r4
 801d1c0:	a80a      	add	r0, sp, #40	; 0x28
 801d1c2:	f7ef fca9 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d1c6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801d1ca:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 801d1ce:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801d1d2:	f002 0301 	and.w	r3, r2, #1
 801d1d6:	9303      	str	r3, [sp, #12]
 801d1d8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801d1dc:	f003 0101 	and.w	r1, r3, #1
 801d1e0:	9102      	str	r1, [sp, #8]
 801d1e2:	9802      	ldr	r0, [sp, #8]
 801d1e4:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801d1e8:	4403      	add	r3, r0
 801d1ea:	fb01 2303 	mla	r3, r1, r3, r2
 801d1ee:	f04f 0a02 	mov.w	sl, #2
 801d1f2:	fb93 f3fa 	sdiv	r3, r3, sl
 801d1f6:	441d      	add	r5, r3
 801d1f8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801d1fc:	441a      	add	r2, r3
 801d1fe:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d202:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801d206:	4a3f      	ldr	r2, [pc, #252]	; (801d304 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 801d208:	9205      	str	r2, [sp, #20]
 801d20a:	4419      	add	r1, r3
 801d20c:	6810      	ldr	r0, [r2, #0]
 801d20e:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 801d212:	6803      	ldr	r3, [r0, #0]
 801d214:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d216:	4798      	blx	r3
 801d218:	4b3b      	ldr	r3, [pc, #236]	; (801d308 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 801d21a:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 801d21e:	8819      	ldrh	r1, [r3, #0]
 801d220:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 801d224:	fb01 c404 	mla	r4, r1, r4, ip
 801d228:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d22c:	434f      	muls	r7, r1
 801d22e:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 801d232:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 801d236:	3604      	adds	r6, #4
 801d238:	9204      	str	r2, [sp, #16]
 801d23a:	9b04      	ldr	r3, [sp, #16]
 801d23c:	429c      	cmp	r4, r3
 801d23e:	d258      	bcs.n	801d2f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 801d240:	9b03      	ldr	r3, [sp, #12]
 801d242:	2b00      	cmp	r3, #0
 801d244:	d034      	beq.n	801d2b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 801d246:	782b      	ldrb	r3, [r5, #0]
 801d248:	f003 030f 	and.w	r3, r3, #15
 801d24c:	1c6f      	adds	r7, r5, #1
 801d24e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801d252:	0e0b      	lsrs	r3, r1, #24
 801d254:	d006      	beq.n	801d264 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 801d256:	8822      	ldrh	r2, [r4, #0]
 801d258:	9300      	str	r3, [sp, #0]
 801d25a:	4640      	mov	r0, r8
 801d25c:	464b      	mov	r3, r9
 801d25e:	f7ff ff43 	bl	801d0e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801d262:	8020      	strh	r0, [r4, #0]
 801d264:	3402      	adds	r4, #2
 801d266:	f10b 3aff 	add.w	sl, fp, #4294967295
 801d26a:	f1ba 0f01 	cmp.w	sl, #1
 801d26e:	dd22      	ble.n	801d2b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801d270:	783b      	ldrb	r3, [r7, #0]
 801d272:	091b      	lsrs	r3, r3, #4
 801d274:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801d278:	0e0b      	lsrs	r3, r1, #24
 801d27a:	d006      	beq.n	801d28a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 801d27c:	8822      	ldrh	r2, [r4, #0]
 801d27e:	9300      	str	r3, [sp, #0]
 801d280:	4640      	mov	r0, r8
 801d282:	464b      	mov	r3, r9
 801d284:	f7ff ff30 	bl	801d0e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801d288:	8020      	strh	r0, [r4, #0]
 801d28a:	f817 3b01 	ldrb.w	r3, [r7], #1
 801d28e:	f003 030f 	and.w	r3, r3, #15
 801d292:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801d296:	0e0b      	lsrs	r3, r1, #24
 801d298:	d006      	beq.n	801d2a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 801d29a:	8862      	ldrh	r2, [r4, #2]
 801d29c:	9300      	str	r3, [sp, #0]
 801d29e:	4640      	mov	r0, r8
 801d2a0:	464b      	mov	r3, r9
 801d2a2:	f7ff ff21 	bl	801d0e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801d2a6:	8060      	strh	r0, [r4, #2]
 801d2a8:	3404      	adds	r4, #4
 801d2aa:	f1aa 0a02 	sub.w	sl, sl, #2
 801d2ae:	e7dc      	b.n	801d26a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801d2b0:	462f      	mov	r7, r5
 801d2b2:	46da      	mov	sl, fp
 801d2b4:	e7d9      	b.n	801d26a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801d2b6:	d10d      	bne.n	801d2d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 801d2b8:	783b      	ldrb	r3, [r7, #0]
 801d2ba:	091b      	lsrs	r3, r3, #4
 801d2bc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801d2c0:	0e0b      	lsrs	r3, r1, #24
 801d2c2:	d006      	beq.n	801d2d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 801d2c4:	8822      	ldrh	r2, [r4, #0]
 801d2c6:	9300      	str	r3, [sp, #0]
 801d2c8:	4640      	mov	r0, r8
 801d2ca:	464b      	mov	r3, r9
 801d2cc:	f7ff ff0c 	bl	801d0e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801d2d0:	8020      	strh	r0, [r4, #0]
 801d2d2:	3402      	adds	r4, #2
 801d2d4:	9b06      	ldr	r3, [sp, #24]
 801d2d6:	9a02      	ldr	r2, [sp, #8]
 801d2d8:	881b      	ldrh	r3, [r3, #0]
 801d2da:	eba3 030b 	sub.w	r3, r3, fp
 801d2de:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d2e2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801d2e6:	4413      	add	r3, r2
 801d2e8:	9a07      	ldr	r2, [sp, #28]
 801d2ea:	fb93 f3f2 	sdiv	r3, r3, r2
 801d2ee:	441d      	add	r5, r3
 801d2f0:	e7a3      	b.n	801d23a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 801d2f2:	9b05      	ldr	r3, [sp, #20]
 801d2f4:	6818      	ldr	r0, [r3, #0]
 801d2f6:	6803      	ldr	r3, [r0, #0]
 801d2f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d2fa:	4798      	blx	r3
 801d2fc:	b00d      	add	sp, #52	; 0x34
 801d2fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d302:	bf00      	nop
 801d304:	20012644 	.word	0x20012644
 801d308:	2001263e 	.word	0x2001263e

0801d30c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 801d30c:	b570      	push	{r4, r5, r6, lr}
 801d30e:	1214      	asrs	r4, r2, #8
 801d310:	788d      	ldrb	r5, [r1, #2]
 801d312:	f89d 6010 	ldrb.w	r6, [sp, #16]
 801d316:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801d31a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d31e:	fb15 f503 	smulbb	r5, r5, r3
 801d322:	fb04 5506 	mla	r5, r4, r6, r5
 801d326:	10d0      	asrs	r0, r2, #3
 801d328:	784c      	ldrb	r4, [r1, #1]
 801d32a:	7809      	ldrb	r1, [r1, #0]
 801d32c:	00d2      	lsls	r2, r2, #3
 801d32e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801d332:	b2d2      	uxtb	r2, r2
 801d334:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 801d338:	fb14 f403 	smulbb	r4, r4, r3
 801d33c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d340:	fb11 f303 	smulbb	r3, r1, r3
 801d344:	fb00 4406 	mla	r4, r0, r6, r4
 801d348:	fb02 3306 	mla	r3, r2, r6, r3
 801d34c:	b2ad      	uxth	r5, r5
 801d34e:	b29b      	uxth	r3, r3
 801d350:	b2a4      	uxth	r4, r4
 801d352:	1c68      	adds	r0, r5, #1
 801d354:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801d358:	1c62      	adds	r2, r4, #1
 801d35a:	1c58      	adds	r0, r3, #1
 801d35c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801d360:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801d364:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d368:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801d36c:	0964      	lsrs	r4, r4, #5
 801d36e:	4328      	orrs	r0, r5
 801d370:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d374:	4320      	orrs	r0, r4
 801d376:	bd70      	pop	{r4, r5, r6, pc}

0801d378 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d37c:	b08f      	sub	sp, #60	; 0x3c
 801d37e:	461c      	mov	r4, r3
 801d380:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 801d384:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d386:	4682      	mov	sl, r0
 801d388:	460e      	mov	r6, r1
 801d38a:	4615      	mov	r5, r2
 801d38c:	2f00      	cmp	r7, #0
 801d38e:	f000 8142 	beq.w	801d616 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 801d392:	6820      	ldr	r0, [r4, #0]
 801d394:	6861      	ldr	r1, [r4, #4]
 801d396:	aa0a      	add	r2, sp, #40	; 0x28
 801d398:	c203      	stmia	r2!, {r0, r1}
 801d39a:	6818      	ldr	r0, [r3, #0]
 801d39c:	6859      	ldr	r1, [r3, #4]
 801d39e:	aa0c      	add	r2, sp, #48	; 0x30
 801d3a0:	c203      	stmia	r2!, {r0, r1}
 801d3a2:	a80a      	add	r0, sp, #40	; 0x28
 801d3a4:	f7ef fb90 	bl	800cac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d3a8:	4621      	mov	r1, r4
 801d3aa:	a80c      	add	r0, sp, #48	; 0x30
 801d3ac:	f7ef fbb4 	bl	800cb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d3b0:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801d3b4:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 801d3b8:	f002 0301 	and.w	r3, r2, #1
 801d3bc:	9306      	str	r3, [sp, #24]
 801d3be:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801d3c2:	f003 0101 	and.w	r1, r3, #1
 801d3c6:	9105      	str	r1, [sp, #20]
 801d3c8:	9805      	ldr	r0, [sp, #20]
 801d3ca:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801d3ce:	4403      	add	r3, r0
 801d3d0:	fb01 2303 	mla	r3, r1, r3, r2
 801d3d4:	f04f 0802 	mov.w	r8, #2
 801d3d8:	fb93 f3f8 	sdiv	r3, r3, r8
 801d3dc:	441e      	add	r6, r3
 801d3de:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d3e2:	441a      	add	r2, r3
 801d3e4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801d3e8:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801d3ec:	4419      	add	r1, r3
 801d3ee:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d3f2:	9303      	str	r3, [sp, #12]
 801d3f4:	4b89      	ldr	r3, [pc, #548]	; (801d61c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801d3f6:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 801d3fa:	6818      	ldr	r0, [r3, #0]
 801d3fc:	6803      	ldr	r3, [r0, #0]
 801d3fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d400:	4798      	blx	r3
 801d402:	4a87      	ldr	r2, [pc, #540]	; (801d620 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 801d404:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 801d408:	8813      	ldrh	r3, [r2, #0]
 801d40a:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 801d40e:	2fff      	cmp	r7, #255	; 0xff
 801d410:	fb03 9404 	mla	r4, r3, r4, r9
 801d414:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d418:	f105 0504 	add.w	r5, r5, #4
 801d41c:	4694      	mov	ip, r2
 801d41e:	fb03 f30b 	mul.w	r3, r3, fp
 801d422:	d071      	beq.n	801d508 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801d424:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d428:	43f9      	mvns	r1, r7
 801d42a:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801d42e:	b2c9      	uxtb	r1, r1
 801d430:	9104      	str	r1, [sp, #16]
 801d432:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 801d436:	9b07      	ldr	r3, [sp, #28]
 801d438:	42a3      	cmp	r3, r4
 801d43a:	f240 80e7 	bls.w	801d60c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 801d43e:	9b06      	ldr	r3, [sp, #24]
 801d440:	2b00      	cmp	r3, #0
 801d442:	d03d      	beq.n	801d4c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 801d444:	7831      	ldrb	r1, [r6, #0]
 801d446:	9b04      	ldr	r3, [sp, #16]
 801d448:	8822      	ldrh	r2, [r4, #0]
 801d44a:	9300      	str	r3, [sp, #0]
 801d44c:	f001 010f 	and.w	r1, r1, #15
 801d450:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d454:	463b      	mov	r3, r7
 801d456:	4429      	add	r1, r5
 801d458:	4650      	mov	r0, sl
 801d45a:	f7ff ff57 	bl	801d30c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801d45e:	9b03      	ldr	r3, [sp, #12]
 801d460:	f824 0b02 	strh.w	r0, [r4], #2
 801d464:	f106 0801 	add.w	r8, r6, #1
 801d468:	f103 3bff 	add.w	fp, r3, #4294967295
 801d46c:	f1bb 0f01 	cmp.w	fp, #1
 801d470:	46a1      	mov	r9, r4
 801d472:	f104 0404 	add.w	r4, r4, #4
 801d476:	dd27      	ble.n	801d4c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 801d478:	f898 1000 	ldrb.w	r1, [r8]
 801d47c:	9b04      	ldr	r3, [sp, #16]
 801d47e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801d482:	9300      	str	r3, [sp, #0]
 801d484:	0909      	lsrs	r1, r1, #4
 801d486:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d48a:	463b      	mov	r3, r7
 801d48c:	4429      	add	r1, r5
 801d48e:	4650      	mov	r0, sl
 801d490:	f7ff ff3c 	bl	801d30c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801d494:	f824 0c04 	strh.w	r0, [r4, #-4]
 801d498:	f818 1b01 	ldrb.w	r1, [r8], #1
 801d49c:	9b04      	ldr	r3, [sp, #16]
 801d49e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801d4a2:	9300      	str	r3, [sp, #0]
 801d4a4:	f001 010f 	and.w	r1, r1, #15
 801d4a8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d4ac:	463b      	mov	r3, r7
 801d4ae:	4429      	add	r1, r5
 801d4b0:	4650      	mov	r0, sl
 801d4b2:	f7ff ff2b 	bl	801d30c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801d4b6:	f1ab 0b02 	sub.w	fp, fp, #2
 801d4ba:	f824 0c02 	strh.w	r0, [r4, #-2]
 801d4be:	e7d5      	b.n	801d46c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d4c0:	46b0      	mov	r8, r6
 801d4c2:	f8dd b00c 	ldr.w	fp, [sp, #12]
 801d4c6:	e7d1      	b.n	801d46c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d4c8:	d10f      	bne.n	801d4ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 801d4ca:	f898 1000 	ldrb.w	r1, [r8]
 801d4ce:	9b04      	ldr	r3, [sp, #16]
 801d4d0:	f8b9 2000 	ldrh.w	r2, [r9]
 801d4d4:	9300      	str	r3, [sp, #0]
 801d4d6:	0909      	lsrs	r1, r1, #4
 801d4d8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d4dc:	463b      	mov	r3, r7
 801d4de:	4429      	add	r1, r5
 801d4e0:	4650      	mov	r0, sl
 801d4e2:	f7ff ff13 	bl	801d30c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801d4e6:	f829 0b02 	strh.w	r0, [r9], #2
 801d4ea:	9b08      	ldr	r3, [sp, #32]
 801d4ec:	9a05      	ldr	r2, [sp, #20]
 801d4ee:	881c      	ldrh	r4, [r3, #0]
 801d4f0:	9b03      	ldr	r3, [sp, #12]
 801d4f2:	1ae4      	subs	r4, r4, r3
 801d4f4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801d4f8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d4fc:	4413      	add	r3, r2
 801d4fe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d500:	fb93 f3f2 	sdiv	r3, r3, r2
 801d504:	441e      	add	r6, r3
 801d506:	e796      	b.n	801d436 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 801d508:	4f46      	ldr	r7, [pc, #280]	; (801d624 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 801d50a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d50e:	42a3      	cmp	r3, r4
 801d510:	d97c      	bls.n	801d60c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 801d512:	9a06      	ldr	r2, [sp, #24]
 801d514:	2a00      	cmp	r2, #0
 801d516:	d054      	beq.n	801d5c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801d518:	7830      	ldrb	r0, [r6, #0]
 801d51a:	f000 000f 	and.w	r0, r0, #15
 801d51e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d522:	eb05 0e00 	add.w	lr, r5, r0
 801d526:	5c28      	ldrb	r0, [r5, r0]
 801d528:	f89e 2002 	ldrb.w	r2, [lr, #2]
 801d52c:	f89e e001 	ldrb.w	lr, [lr, #1]
 801d530:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d534:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801d538:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801d53c:	ea42 020e 	orr.w	r2, r2, lr
 801d540:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 801d544:	f824 2b02 	strh.w	r2, [r4], #2
 801d548:	9a03      	ldr	r2, [sp, #12]
 801d54a:	1c71      	adds	r1, r6, #1
 801d54c:	f102 3eff 	add.w	lr, r2, #4294967295
 801d550:	f1be 0f01 	cmp.w	lr, #1
 801d554:	4620      	mov	r0, r4
 801d556:	f104 0404 	add.w	r4, r4, #4
 801d55a:	dd36      	ble.n	801d5ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 801d55c:	7808      	ldrb	r0, [r1, #0]
 801d55e:	0900      	lsrs	r0, r0, #4
 801d560:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d564:	eb05 0a00 	add.w	sl, r5, r0
 801d568:	f1ae 0e02 	sub.w	lr, lr, #2
 801d56c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d570:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d574:	00d2      	lsls	r2, r2, #3
 801d576:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801d57a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d57e:	ea49 0202 	orr.w	r2, r9, r2
 801d582:	f815 9000 	ldrb.w	r9, [r5, r0]
 801d586:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d58a:	f824 2c04 	strh.w	r2, [r4, #-4]
 801d58e:	f811 0b01 	ldrb.w	r0, [r1], #1
 801d592:	f000 000f 	and.w	r0, r0, #15
 801d596:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d59a:	eb05 0a00 	add.w	sl, r5, r0
 801d59e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d5a2:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d5a6:	00d2      	lsls	r2, r2, #3
 801d5a8:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801d5ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d5b0:	ea49 0202 	orr.w	r2, r9, r2
 801d5b4:	f815 9000 	ldrb.w	r9, [r5, r0]
 801d5b8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d5bc:	f824 2c02 	strh.w	r2, [r4, #-2]
 801d5c0:	e7c6      	b.n	801d550 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 801d5c2:	4631      	mov	r1, r6
 801d5c4:	f8dd e00c 	ldr.w	lr, [sp, #12]
 801d5c8:	e7c2      	b.n	801d550 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 801d5ca:	d111      	bne.n	801d5f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 801d5cc:	7809      	ldrb	r1, [r1, #0]
 801d5ce:	0909      	lsrs	r1, r1, #4
 801d5d0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d5d4:	186c      	adds	r4, r5, r1
 801d5d6:	5c69      	ldrb	r1, [r5, r1]
 801d5d8:	78a2      	ldrb	r2, [r4, #2]
 801d5da:	7864      	ldrb	r4, [r4, #1]
 801d5dc:	00e4      	lsls	r4, r4, #3
 801d5de:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801d5e2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d5e6:	4322      	orrs	r2, r4
 801d5e8:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 801d5ec:	f820 2b02 	strh.w	r2, [r0], #2
 801d5f0:	9a03      	ldr	r2, [sp, #12]
 801d5f2:	f8bc 4000 	ldrh.w	r4, [ip]
 801d5f6:	9905      	ldr	r1, [sp, #20]
 801d5f8:	1aa4      	subs	r4, r4, r2
 801d5fa:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801d5fe:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d602:	440a      	add	r2, r1
 801d604:	fb92 f2f8 	sdiv	r2, r2, r8
 801d608:	4416      	add	r6, r2
 801d60a:	e780      	b.n	801d50e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 801d60c:	4b03      	ldr	r3, [pc, #12]	; (801d61c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801d60e:	6818      	ldr	r0, [r3, #0]
 801d610:	6803      	ldr	r3, [r0, #0]
 801d612:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d614:	4798      	blx	r3
 801d616:	b00f      	add	sp, #60	; 0x3c
 801d618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d61c:	20012644 	.word	0x20012644
 801d620:	2001263e 	.word	0x2001263e
 801d624:	fffff800 	.word	0xfffff800

0801d628 <CRC_Lock>:
 801d628:	b530      	push	{r4, r5, lr}
 801d62a:	4a20      	ldr	r2, [pc, #128]	; (801d6ac <CRC_Lock+0x84>)
 801d62c:	6813      	ldr	r3, [r2, #0]
 801d62e:	f023 0301 	bic.w	r3, r3, #1
 801d632:	6013      	str	r3, [r2, #0]
 801d634:	4b1e      	ldr	r3, [pc, #120]	; (801d6b0 <CRC_Lock+0x88>)
 801d636:	681a      	ldr	r2, [r3, #0]
 801d638:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801d63c:	4022      	ands	r2, r4
 801d63e:	f24c 2540 	movw	r5, #49728	; 0xc240
 801d642:	42aa      	cmp	r2, r5
 801d644:	d005      	beq.n	801d652 <CRC_Lock+0x2a>
 801d646:	681b      	ldr	r3, [r3, #0]
 801d648:	f24c 2270 	movw	r2, #49776	; 0xc270
 801d64c:	4023      	ands	r3, r4
 801d64e:	4293      	cmp	r3, r2
 801d650:	d124      	bne.n	801d69c <CRC_Lock+0x74>
 801d652:	4b18      	ldr	r3, [pc, #96]	; (801d6b4 <CRC_Lock+0x8c>)
 801d654:	681b      	ldr	r3, [r3, #0]
 801d656:	bb0b      	cbnz	r3, 801d69c <CRC_Lock+0x74>
 801d658:	4b17      	ldr	r3, [pc, #92]	; (801d6b8 <CRC_Lock+0x90>)
 801d65a:	681a      	ldr	r2, [r3, #0]
 801d65c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801d660:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801d664:	d00d      	beq.n	801d682 <CRC_Lock+0x5a>
 801d666:	681a      	ldr	r2, [r3, #0]
 801d668:	f240 4483 	movw	r4, #1155	; 0x483
 801d66c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801d670:	42a2      	cmp	r2, r4
 801d672:	d006      	beq.n	801d682 <CRC_Lock+0x5a>
 801d674:	681b      	ldr	r3, [r3, #0]
 801d676:	f240 4285 	movw	r2, #1157	; 0x485
 801d67a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801d67e:	4293      	cmp	r3, r2
 801d680:	d10c      	bne.n	801d69c <CRC_Lock+0x74>
 801d682:	4b0e      	ldr	r3, [pc, #56]	; (801d6bc <CRC_Lock+0x94>)
 801d684:	2201      	movs	r2, #1
 801d686:	601a      	str	r2, [r3, #0]
 801d688:	681a      	ldr	r2, [r3, #0]
 801d68a:	2a00      	cmp	r2, #0
 801d68c:	d1fc      	bne.n	801d688 <CRC_Lock+0x60>
 801d68e:	4b0c      	ldr	r3, [pc, #48]	; (801d6c0 <CRC_Lock+0x98>)
 801d690:	6018      	str	r0, [r3, #0]
 801d692:	6818      	ldr	r0, [r3, #0]
 801d694:	1a43      	subs	r3, r0, r1
 801d696:	4258      	negs	r0, r3
 801d698:	4158      	adcs	r0, r3
 801d69a:	bd30      	pop	{r4, r5, pc}
 801d69c:	4b09      	ldr	r3, [pc, #36]	; (801d6c4 <CRC_Lock+0x9c>)
 801d69e:	2201      	movs	r2, #1
 801d6a0:	601a      	str	r2, [r3, #0]
 801d6a2:	681a      	ldr	r2, [r3, #0]
 801d6a4:	2a00      	cmp	r2, #0
 801d6a6:	d1fc      	bne.n	801d6a2 <CRC_Lock+0x7a>
 801d6a8:	4b07      	ldr	r3, [pc, #28]	; (801d6c8 <CRC_Lock+0xa0>)
 801d6aa:	e7f1      	b.n	801d690 <CRC_Lock+0x68>
 801d6ac:	e0002000 	.word	0xe0002000
 801d6b0:	e000ed00 	.word	0xe000ed00
 801d6b4:	e0042000 	.word	0xe0042000
 801d6b8:	5c001000 	.word	0x5c001000
 801d6bc:	58024c08 	.word	0x58024c08
 801d6c0:	58024c00 	.word	0x58024c00
 801d6c4:	40023008 	.word	0x40023008
 801d6c8:	40023000 	.word	0x40023000

0801d6cc <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801d6cc:	6101      	str	r1, [r0, #16]
 801d6ce:	4770      	bx	lr

0801d6d0 <_ZN8touchgfx8Gestures4tickEv>:
 801d6d0:	7b83      	ldrb	r3, [r0, #14]
 801d6d2:	b14b      	cbz	r3, 801d6e8 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801d6d4:	8903      	ldrh	r3, [r0, #8]
 801d6d6:	3301      	adds	r3, #1
 801d6d8:	b29b      	uxth	r3, r3
 801d6da:	2b07      	cmp	r3, #7
 801d6dc:	8103      	strh	r3, [r0, #8]
 801d6de:	bf81      	itttt	hi
 801d6e0:	2300      	movhi	r3, #0
 801d6e2:	8143      	strhhi	r3, [r0, #10]
 801d6e4:	8183      	strhhi	r3, [r0, #12]
 801d6e6:	7383      	strbhi	r3, [r0, #14]
 801d6e8:	4770      	bx	lr
	...

0801d6ec <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801d6ec:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801d6f0:	4698      	mov	r8, r3
 801d6f2:	8883      	ldrh	r3, [r0, #4]
 801d6f4:	f8ad 3006 	strh.w	r3, [sp, #6]
 801d6f8:	eba8 0303 	sub.w	r3, r8, r3
 801d6fc:	b21b      	sxth	r3, r3
 801d6fe:	4604      	mov	r4, r0
 801d700:	2b00      	cmp	r3, #0
 801d702:	4617      	mov	r7, r2
 801d704:	4a18      	ldr	r2, [pc, #96]	; (801d768 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801d706:	9200      	str	r2, [sp, #0]
 801d708:	bfb8      	it	lt
 801d70a:	425b      	neglt	r3, r3
 801d70c:	8aa2      	ldrh	r2, [r4, #20]
 801d70e:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801d712:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d716:	b21b      	sxth	r3, r3
 801d718:	460e      	mov	r6, r1
 801d71a:	4293      	cmp	r3, r2
 801d71c:	88c1      	ldrh	r1, [r0, #6]
 801d71e:	f8ad 1008 	strh.w	r1, [sp, #8]
 801d722:	f04f 0000 	mov.w	r0, #0
 801d726:	f88d 0004 	strb.w	r0, [sp, #4]
 801d72a:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d72e:	dc07      	bgt.n	801d740 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801d730:	1a69      	subs	r1, r5, r1
 801d732:	b209      	sxth	r1, r1
 801d734:	2900      	cmp	r1, #0
 801d736:	bfb8      	it	lt
 801d738:	4249      	neglt	r1, r1
 801d73a:	b209      	sxth	r1, r1
 801d73c:	428a      	cmp	r2, r1
 801d73e:	da10      	bge.n	801d762 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801d740:	6920      	ldr	r0, [r4, #16]
 801d742:	6803      	ldr	r3, [r0, #0]
 801d744:	4669      	mov	r1, sp
 801d746:	685b      	ldr	r3, [r3, #4]
 801d748:	4798      	blx	r3
 801d74a:	eba8 0606 	sub.w	r6, r8, r6
 801d74e:	2300      	movs	r3, #0
 801d750:	1bef      	subs	r7, r5, r7
 801d752:	2001      	movs	r0, #1
 801d754:	8123      	strh	r3, [r4, #8]
 801d756:	8166      	strh	r6, [r4, #10]
 801d758:	81a7      	strh	r7, [r4, #12]
 801d75a:	f8a4 8004 	strh.w	r8, [r4, #4]
 801d75e:	80e5      	strh	r5, [r4, #6]
 801d760:	73a0      	strb	r0, [r4, #14]
 801d762:	b004      	add	sp, #16
 801d764:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d768:	0802072c 	.word	0x0802072c

0801d76c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801d76c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d76e:	461e      	mov	r6, r3
 801d770:	1e4b      	subs	r3, r1, #1
 801d772:	2b01      	cmp	r3, #1
 801d774:	b085      	sub	sp, #20
 801d776:	4604      	mov	r4, r0
 801d778:	460d      	mov	r5, r1
 801d77a:	4617      	mov	r7, r2
 801d77c:	d84b      	bhi.n	801d816 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801d77e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801d782:	1cd3      	adds	r3, r2, #3
 801d784:	b29b      	uxth	r3, r3
 801d786:	2b06      	cmp	r3, #6
 801d788:	d916      	bls.n	801d7b8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801d78a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801d82c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801d78e:	f8cd c004 	str.w	ip, [sp, #4]
 801d792:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d796:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801d79a:	6900      	ldr	r0, [r0, #16]
 801d79c:	f8ad 100c 	strh.w	r1, [sp, #12]
 801d7a0:	f04f 0c00 	mov.w	ip, #0
 801d7a4:	f88d c008 	strb.w	ip, [sp, #8]
 801d7a8:	f8ad 200a 	strh.w	r2, [sp, #10]
 801d7ac:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d7b0:	6803      	ldr	r3, [r0, #0]
 801d7b2:	a901      	add	r1, sp, #4
 801d7b4:	689b      	ldr	r3, [r3, #8]
 801d7b6:	4798      	blx	r3
 801d7b8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801d7bc:	1cd3      	adds	r3, r2, #3
 801d7be:	b29b      	uxth	r3, r3
 801d7c0:	2b06      	cmp	r3, #6
 801d7c2:	d916      	bls.n	801d7f2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d7c4:	f8df c064 	ldr.w	ip, [pc, #100]	; 801d82c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801d7c8:	f8cd c004 	str.w	ip, [sp, #4]
 801d7cc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d7d0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801d7d4:	6920      	ldr	r0, [r4, #16]
 801d7d6:	f8ad 100c 	strh.w	r1, [sp, #12]
 801d7da:	f04f 0c01 	mov.w	ip, #1
 801d7de:	f88d c008 	strb.w	ip, [sp, #8]
 801d7e2:	f8ad 200a 	strh.w	r2, [sp, #10]
 801d7e6:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d7ea:	6803      	ldr	r3, [r0, #0]
 801d7ec:	a901      	add	r1, sp, #4
 801d7ee:	689b      	ldr	r3, [r3, #8]
 801d7f0:	4798      	blx	r3
 801d7f2:	4b0d      	ldr	r3, [pc, #52]	; (801d828 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801d7f4:	9301      	str	r3, [sp, #4]
 801d7f6:	6920      	ldr	r0, [r4, #16]
 801d7f8:	f88d 5008 	strb.w	r5, [sp, #8]
 801d7fc:	2300      	movs	r3, #0
 801d7fe:	f8ad 700a 	strh.w	r7, [sp, #10]
 801d802:	f8ad 600c 	strh.w	r6, [sp, #12]
 801d806:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d80a:	6803      	ldr	r3, [r0, #0]
 801d80c:	a901      	add	r1, sp, #4
 801d80e:	681b      	ldr	r3, [r3, #0]
 801d810:	4798      	blx	r3
 801d812:	b005      	add	sp, #20
 801d814:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d816:	2900      	cmp	r1, #0
 801d818:	d1eb      	bne.n	801d7f2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d81a:	80a2      	strh	r2, [r4, #4]
 801d81c:	80c6      	strh	r6, [r0, #6]
 801d81e:	60a1      	str	r1, [r4, #8]
 801d820:	81a1      	strh	r1, [r4, #12]
 801d822:	73a1      	strb	r1, [r4, #14]
 801d824:	e7e5      	b.n	801d7f2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d826:	bf00      	nop
 801d828:	08020718 	.word	0x08020718
 801d82c:	08020740 	.word	0x08020740

0801d830 <__aeabi_atexit>:
 801d830:	460b      	mov	r3, r1
 801d832:	4601      	mov	r1, r0
 801d834:	4618      	mov	r0, r3
 801d836:	f000 b853 	b.w	801d8e0 <__cxa_atexit>

0801d83a <_ZdlPvj>:
 801d83a:	f000 b812 	b.w	801d862 <_ZdlPv>

0801d83e <__cxa_guard_acquire>:
 801d83e:	6803      	ldr	r3, [r0, #0]
 801d840:	07db      	lsls	r3, r3, #31
 801d842:	d406      	bmi.n	801d852 <__cxa_guard_acquire+0x14>
 801d844:	7843      	ldrb	r3, [r0, #1]
 801d846:	b103      	cbz	r3, 801d84a <__cxa_guard_acquire+0xc>
 801d848:	deff      	udf	#255	; 0xff
 801d84a:	2301      	movs	r3, #1
 801d84c:	7043      	strb	r3, [r0, #1]
 801d84e:	4618      	mov	r0, r3
 801d850:	4770      	bx	lr
 801d852:	2000      	movs	r0, #0
 801d854:	4770      	bx	lr

0801d856 <__cxa_guard_release>:
 801d856:	2301      	movs	r3, #1
 801d858:	6003      	str	r3, [r0, #0]
 801d85a:	4770      	bx	lr

0801d85c <__cxa_pure_virtual>:
 801d85c:	b508      	push	{r3, lr}
 801d85e:	f000 f80f 	bl	801d880 <_ZSt9terminatev>

0801d862 <_ZdlPv>:
 801d862:	f000 b88f 	b.w	801d984 <free>

0801d866 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801d866:	b508      	push	{r3, lr}
 801d868:	4780      	blx	r0
 801d86a:	f000 f80e 	bl	801d88a <abort>
	...

0801d870 <_ZSt13get_terminatev>:
 801d870:	4b02      	ldr	r3, [pc, #8]	; (801d87c <_ZSt13get_terminatev+0xc>)
 801d872:	6818      	ldr	r0, [r3, #0]
 801d874:	f3bf 8f5b 	dmb	ish
 801d878:	4770      	bx	lr
 801d87a:	bf00      	nop
 801d87c:	20000100 	.word	0x20000100

0801d880 <_ZSt9terminatev>:
 801d880:	b508      	push	{r3, lr}
 801d882:	f7ff fff5 	bl	801d870 <_ZSt13get_terminatev>
 801d886:	f7ff ffee 	bl	801d866 <_ZN10__cxxabiv111__terminateEPFvvE>

0801d88a <abort>:
 801d88a:	b508      	push	{r3, lr}
 801d88c:	2006      	movs	r0, #6
 801d88e:	f000 fc9d 	bl	801e1cc <raise>
 801d892:	2001      	movs	r0, #1
 801d894:	f7e4 fbda 	bl	800204c <_exit>

0801d898 <__assert_func>:
 801d898:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801d89a:	4614      	mov	r4, r2
 801d89c:	461a      	mov	r2, r3
 801d89e:	4b09      	ldr	r3, [pc, #36]	; (801d8c4 <__assert_func+0x2c>)
 801d8a0:	681b      	ldr	r3, [r3, #0]
 801d8a2:	4605      	mov	r5, r0
 801d8a4:	68d8      	ldr	r0, [r3, #12]
 801d8a6:	b14c      	cbz	r4, 801d8bc <__assert_func+0x24>
 801d8a8:	4b07      	ldr	r3, [pc, #28]	; (801d8c8 <__assert_func+0x30>)
 801d8aa:	9100      	str	r1, [sp, #0]
 801d8ac:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801d8b0:	4906      	ldr	r1, [pc, #24]	; (801d8cc <__assert_func+0x34>)
 801d8b2:	462b      	mov	r3, r5
 801d8b4:	f000 f828 	bl	801d908 <fiprintf>
 801d8b8:	f7ff ffe7 	bl	801d88a <abort>
 801d8bc:	4b04      	ldr	r3, [pc, #16]	; (801d8d0 <__assert_func+0x38>)
 801d8be:	461c      	mov	r4, r3
 801d8c0:	e7f3      	b.n	801d8aa <__assert_func+0x12>
 801d8c2:	bf00      	nop
 801d8c4:	20000104 	.word	0x20000104
 801d8c8:	08020a5c 	.word	0x08020a5c
 801d8cc:	08020a69 	.word	0x08020a69
 801d8d0:	08020a97 	.word	0x08020a97

0801d8d4 <atexit>:
 801d8d4:	2300      	movs	r3, #0
 801d8d6:	4601      	mov	r1, r0
 801d8d8:	461a      	mov	r2, r3
 801d8da:	4618      	mov	r0, r3
 801d8dc:	f000 bd52 	b.w	801e384 <__register_exitproc>

0801d8e0 <__cxa_atexit>:
 801d8e0:	b510      	push	{r4, lr}
 801d8e2:	4c05      	ldr	r4, [pc, #20]	; (801d8f8 <__cxa_atexit+0x18>)
 801d8e4:	4613      	mov	r3, r2
 801d8e6:	b12c      	cbz	r4, 801d8f4 <__cxa_atexit+0x14>
 801d8e8:	460a      	mov	r2, r1
 801d8ea:	4601      	mov	r1, r0
 801d8ec:	2002      	movs	r0, #2
 801d8ee:	f000 fd49 	bl	801e384 <__register_exitproc>
 801d8f2:	bd10      	pop	{r4, pc}
 801d8f4:	4620      	mov	r0, r4
 801d8f6:	e7fc      	b.n	801d8f2 <__cxa_atexit+0x12>
 801d8f8:	0801e385 	.word	0x0801e385

0801d8fc <__errno>:
 801d8fc:	4b01      	ldr	r3, [pc, #4]	; (801d904 <__errno+0x8>)
 801d8fe:	6818      	ldr	r0, [r3, #0]
 801d900:	4770      	bx	lr
 801d902:	bf00      	nop
 801d904:	20000104 	.word	0x20000104

0801d908 <fiprintf>:
 801d908:	b40e      	push	{r1, r2, r3}
 801d90a:	b503      	push	{r0, r1, lr}
 801d90c:	4601      	mov	r1, r0
 801d90e:	ab03      	add	r3, sp, #12
 801d910:	4805      	ldr	r0, [pc, #20]	; (801d928 <fiprintf+0x20>)
 801d912:	f853 2b04 	ldr.w	r2, [r3], #4
 801d916:	6800      	ldr	r0, [r0, #0]
 801d918:	9301      	str	r3, [sp, #4]
 801d91a:	f000 f95b 	bl	801dbd4 <_vfiprintf_r>
 801d91e:	b002      	add	sp, #8
 801d920:	f85d eb04 	ldr.w	lr, [sp], #4
 801d924:	b003      	add	sp, #12
 801d926:	4770      	bx	lr
 801d928:	20000104 	.word	0x20000104

0801d92c <__libc_init_array>:
 801d92c:	b570      	push	{r4, r5, r6, lr}
 801d92e:	4d0d      	ldr	r5, [pc, #52]	; (801d964 <__libc_init_array+0x38>)
 801d930:	4c0d      	ldr	r4, [pc, #52]	; (801d968 <__libc_init_array+0x3c>)
 801d932:	1b64      	subs	r4, r4, r5
 801d934:	10a4      	asrs	r4, r4, #2
 801d936:	2600      	movs	r6, #0
 801d938:	42a6      	cmp	r6, r4
 801d93a:	d109      	bne.n	801d950 <__libc_init_array+0x24>
 801d93c:	4d0b      	ldr	r5, [pc, #44]	; (801d96c <__libc_init_array+0x40>)
 801d93e:	4c0c      	ldr	r4, [pc, #48]	; (801d970 <__libc_init_array+0x44>)
 801d940:	f001 f85a 	bl	801e9f8 <_init>
 801d944:	1b64      	subs	r4, r4, r5
 801d946:	10a4      	asrs	r4, r4, #2
 801d948:	2600      	movs	r6, #0
 801d94a:	42a6      	cmp	r6, r4
 801d94c:	d105      	bne.n	801d95a <__libc_init_array+0x2e>
 801d94e:	bd70      	pop	{r4, r5, r6, pc}
 801d950:	f855 3b04 	ldr.w	r3, [r5], #4
 801d954:	4798      	blx	r3
 801d956:	3601      	adds	r6, #1
 801d958:	e7ee      	b.n	801d938 <__libc_init_array+0xc>
 801d95a:	f855 3b04 	ldr.w	r3, [r5], #4
 801d95e:	4798      	blx	r3
 801d960:	3601      	adds	r6, #1
 801d962:	e7f2      	b.n	801d94a <__libc_init_array+0x1e>
 801d964:	0806e67c 	.word	0x0806e67c
 801d968:	0806e67c 	.word	0x0806e67c
 801d96c:	0806e67c 	.word	0x0806e67c
 801d970:	0806e690 	.word	0x0806e690

0801d974 <malloc>:
 801d974:	4b02      	ldr	r3, [pc, #8]	; (801d980 <malloc+0xc>)
 801d976:	4601      	mov	r1, r0
 801d978:	6818      	ldr	r0, [r3, #0]
 801d97a:	f000 b88d 	b.w	801da98 <_malloc_r>
 801d97e:	bf00      	nop
 801d980:	20000104 	.word	0x20000104

0801d984 <free>:
 801d984:	4b02      	ldr	r3, [pc, #8]	; (801d990 <free+0xc>)
 801d986:	4601      	mov	r1, r0
 801d988:	6818      	ldr	r0, [r3, #0]
 801d98a:	f000 b819 	b.w	801d9c0 <_free_r>
 801d98e:	bf00      	nop
 801d990:	20000104 	.word	0x20000104

0801d994 <memcpy>:
 801d994:	440a      	add	r2, r1
 801d996:	4291      	cmp	r1, r2
 801d998:	f100 33ff 	add.w	r3, r0, #4294967295
 801d99c:	d100      	bne.n	801d9a0 <memcpy+0xc>
 801d99e:	4770      	bx	lr
 801d9a0:	b510      	push	{r4, lr}
 801d9a2:	f811 4b01 	ldrb.w	r4, [r1], #1
 801d9a6:	f803 4f01 	strb.w	r4, [r3, #1]!
 801d9aa:	4291      	cmp	r1, r2
 801d9ac:	d1f9      	bne.n	801d9a2 <memcpy+0xe>
 801d9ae:	bd10      	pop	{r4, pc}

0801d9b0 <memset>:
 801d9b0:	4402      	add	r2, r0
 801d9b2:	4603      	mov	r3, r0
 801d9b4:	4293      	cmp	r3, r2
 801d9b6:	d100      	bne.n	801d9ba <memset+0xa>
 801d9b8:	4770      	bx	lr
 801d9ba:	f803 1b01 	strb.w	r1, [r3], #1
 801d9be:	e7f9      	b.n	801d9b4 <memset+0x4>

0801d9c0 <_free_r>:
 801d9c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801d9c2:	2900      	cmp	r1, #0
 801d9c4:	d044      	beq.n	801da50 <_free_r+0x90>
 801d9c6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801d9ca:	9001      	str	r0, [sp, #4]
 801d9cc:	2b00      	cmp	r3, #0
 801d9ce:	f1a1 0404 	sub.w	r4, r1, #4
 801d9d2:	bfb8      	it	lt
 801d9d4:	18e4      	addlt	r4, r4, r3
 801d9d6:	f000 ff57 	bl	801e888 <__malloc_lock>
 801d9da:	4a1e      	ldr	r2, [pc, #120]	; (801da54 <_free_r+0x94>)
 801d9dc:	9801      	ldr	r0, [sp, #4]
 801d9de:	6813      	ldr	r3, [r2, #0]
 801d9e0:	b933      	cbnz	r3, 801d9f0 <_free_r+0x30>
 801d9e2:	6063      	str	r3, [r4, #4]
 801d9e4:	6014      	str	r4, [r2, #0]
 801d9e6:	b003      	add	sp, #12
 801d9e8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801d9ec:	f000 bf52 	b.w	801e894 <__malloc_unlock>
 801d9f0:	42a3      	cmp	r3, r4
 801d9f2:	d908      	bls.n	801da06 <_free_r+0x46>
 801d9f4:	6825      	ldr	r5, [r4, #0]
 801d9f6:	1961      	adds	r1, r4, r5
 801d9f8:	428b      	cmp	r3, r1
 801d9fa:	bf01      	itttt	eq
 801d9fc:	6819      	ldreq	r1, [r3, #0]
 801d9fe:	685b      	ldreq	r3, [r3, #4]
 801da00:	1949      	addeq	r1, r1, r5
 801da02:	6021      	streq	r1, [r4, #0]
 801da04:	e7ed      	b.n	801d9e2 <_free_r+0x22>
 801da06:	461a      	mov	r2, r3
 801da08:	685b      	ldr	r3, [r3, #4]
 801da0a:	b10b      	cbz	r3, 801da10 <_free_r+0x50>
 801da0c:	42a3      	cmp	r3, r4
 801da0e:	d9fa      	bls.n	801da06 <_free_r+0x46>
 801da10:	6811      	ldr	r1, [r2, #0]
 801da12:	1855      	adds	r5, r2, r1
 801da14:	42a5      	cmp	r5, r4
 801da16:	d10b      	bne.n	801da30 <_free_r+0x70>
 801da18:	6824      	ldr	r4, [r4, #0]
 801da1a:	4421      	add	r1, r4
 801da1c:	1854      	adds	r4, r2, r1
 801da1e:	42a3      	cmp	r3, r4
 801da20:	6011      	str	r1, [r2, #0]
 801da22:	d1e0      	bne.n	801d9e6 <_free_r+0x26>
 801da24:	681c      	ldr	r4, [r3, #0]
 801da26:	685b      	ldr	r3, [r3, #4]
 801da28:	6053      	str	r3, [r2, #4]
 801da2a:	4421      	add	r1, r4
 801da2c:	6011      	str	r1, [r2, #0]
 801da2e:	e7da      	b.n	801d9e6 <_free_r+0x26>
 801da30:	d902      	bls.n	801da38 <_free_r+0x78>
 801da32:	230c      	movs	r3, #12
 801da34:	6003      	str	r3, [r0, #0]
 801da36:	e7d6      	b.n	801d9e6 <_free_r+0x26>
 801da38:	6825      	ldr	r5, [r4, #0]
 801da3a:	1961      	adds	r1, r4, r5
 801da3c:	428b      	cmp	r3, r1
 801da3e:	bf04      	itt	eq
 801da40:	6819      	ldreq	r1, [r3, #0]
 801da42:	685b      	ldreq	r3, [r3, #4]
 801da44:	6063      	str	r3, [r4, #4]
 801da46:	bf04      	itt	eq
 801da48:	1949      	addeq	r1, r1, r5
 801da4a:	6021      	streq	r1, [r4, #0]
 801da4c:	6054      	str	r4, [r2, #4]
 801da4e:	e7ca      	b.n	801d9e6 <_free_r+0x26>
 801da50:	b003      	add	sp, #12
 801da52:	bd30      	pop	{r4, r5, pc}
 801da54:	20012f90 	.word	0x20012f90

0801da58 <sbrk_aligned>:
 801da58:	b570      	push	{r4, r5, r6, lr}
 801da5a:	4e0e      	ldr	r6, [pc, #56]	; (801da94 <sbrk_aligned+0x3c>)
 801da5c:	460c      	mov	r4, r1
 801da5e:	6831      	ldr	r1, [r6, #0]
 801da60:	4605      	mov	r5, r0
 801da62:	b911      	cbnz	r1, 801da6a <sbrk_aligned+0x12>
 801da64:	f000 fb7a 	bl	801e15c <_sbrk_r>
 801da68:	6030      	str	r0, [r6, #0]
 801da6a:	4621      	mov	r1, r4
 801da6c:	4628      	mov	r0, r5
 801da6e:	f000 fb75 	bl	801e15c <_sbrk_r>
 801da72:	1c43      	adds	r3, r0, #1
 801da74:	d00a      	beq.n	801da8c <sbrk_aligned+0x34>
 801da76:	1cc4      	adds	r4, r0, #3
 801da78:	f024 0403 	bic.w	r4, r4, #3
 801da7c:	42a0      	cmp	r0, r4
 801da7e:	d007      	beq.n	801da90 <sbrk_aligned+0x38>
 801da80:	1a21      	subs	r1, r4, r0
 801da82:	4628      	mov	r0, r5
 801da84:	f000 fb6a 	bl	801e15c <_sbrk_r>
 801da88:	3001      	adds	r0, #1
 801da8a:	d101      	bne.n	801da90 <sbrk_aligned+0x38>
 801da8c:	f04f 34ff 	mov.w	r4, #4294967295
 801da90:	4620      	mov	r0, r4
 801da92:	bd70      	pop	{r4, r5, r6, pc}
 801da94:	20012f94 	.word	0x20012f94

0801da98 <_malloc_r>:
 801da98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801da9c:	1ccd      	adds	r5, r1, #3
 801da9e:	f025 0503 	bic.w	r5, r5, #3
 801daa2:	3508      	adds	r5, #8
 801daa4:	2d0c      	cmp	r5, #12
 801daa6:	bf38      	it	cc
 801daa8:	250c      	movcc	r5, #12
 801daaa:	2d00      	cmp	r5, #0
 801daac:	4607      	mov	r7, r0
 801daae:	db01      	blt.n	801dab4 <_malloc_r+0x1c>
 801dab0:	42a9      	cmp	r1, r5
 801dab2:	d905      	bls.n	801dac0 <_malloc_r+0x28>
 801dab4:	230c      	movs	r3, #12
 801dab6:	603b      	str	r3, [r7, #0]
 801dab8:	2600      	movs	r6, #0
 801daba:	4630      	mov	r0, r6
 801dabc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801dac0:	4e2e      	ldr	r6, [pc, #184]	; (801db7c <_malloc_r+0xe4>)
 801dac2:	f000 fee1 	bl	801e888 <__malloc_lock>
 801dac6:	6833      	ldr	r3, [r6, #0]
 801dac8:	461c      	mov	r4, r3
 801daca:	bb34      	cbnz	r4, 801db1a <_malloc_r+0x82>
 801dacc:	4629      	mov	r1, r5
 801dace:	4638      	mov	r0, r7
 801dad0:	f7ff ffc2 	bl	801da58 <sbrk_aligned>
 801dad4:	1c43      	adds	r3, r0, #1
 801dad6:	4604      	mov	r4, r0
 801dad8:	d14d      	bne.n	801db76 <_malloc_r+0xde>
 801dada:	6834      	ldr	r4, [r6, #0]
 801dadc:	4626      	mov	r6, r4
 801dade:	2e00      	cmp	r6, #0
 801dae0:	d140      	bne.n	801db64 <_malloc_r+0xcc>
 801dae2:	6823      	ldr	r3, [r4, #0]
 801dae4:	4631      	mov	r1, r6
 801dae6:	4638      	mov	r0, r7
 801dae8:	eb04 0803 	add.w	r8, r4, r3
 801daec:	f000 fb36 	bl	801e15c <_sbrk_r>
 801daf0:	4580      	cmp	r8, r0
 801daf2:	d13a      	bne.n	801db6a <_malloc_r+0xd2>
 801daf4:	6821      	ldr	r1, [r4, #0]
 801daf6:	3503      	adds	r5, #3
 801daf8:	1a6d      	subs	r5, r5, r1
 801dafa:	f025 0503 	bic.w	r5, r5, #3
 801dafe:	3508      	adds	r5, #8
 801db00:	2d0c      	cmp	r5, #12
 801db02:	bf38      	it	cc
 801db04:	250c      	movcc	r5, #12
 801db06:	4629      	mov	r1, r5
 801db08:	4638      	mov	r0, r7
 801db0a:	f7ff ffa5 	bl	801da58 <sbrk_aligned>
 801db0e:	3001      	adds	r0, #1
 801db10:	d02b      	beq.n	801db6a <_malloc_r+0xd2>
 801db12:	6823      	ldr	r3, [r4, #0]
 801db14:	442b      	add	r3, r5
 801db16:	6023      	str	r3, [r4, #0]
 801db18:	e00e      	b.n	801db38 <_malloc_r+0xa0>
 801db1a:	6822      	ldr	r2, [r4, #0]
 801db1c:	1b52      	subs	r2, r2, r5
 801db1e:	d41e      	bmi.n	801db5e <_malloc_r+0xc6>
 801db20:	2a0b      	cmp	r2, #11
 801db22:	d916      	bls.n	801db52 <_malloc_r+0xba>
 801db24:	1961      	adds	r1, r4, r5
 801db26:	42a3      	cmp	r3, r4
 801db28:	6025      	str	r5, [r4, #0]
 801db2a:	bf18      	it	ne
 801db2c:	6059      	strne	r1, [r3, #4]
 801db2e:	6863      	ldr	r3, [r4, #4]
 801db30:	bf08      	it	eq
 801db32:	6031      	streq	r1, [r6, #0]
 801db34:	5162      	str	r2, [r4, r5]
 801db36:	604b      	str	r3, [r1, #4]
 801db38:	4638      	mov	r0, r7
 801db3a:	f104 060b 	add.w	r6, r4, #11
 801db3e:	f000 fea9 	bl	801e894 <__malloc_unlock>
 801db42:	f026 0607 	bic.w	r6, r6, #7
 801db46:	1d23      	adds	r3, r4, #4
 801db48:	1af2      	subs	r2, r6, r3
 801db4a:	d0b6      	beq.n	801daba <_malloc_r+0x22>
 801db4c:	1b9b      	subs	r3, r3, r6
 801db4e:	50a3      	str	r3, [r4, r2]
 801db50:	e7b3      	b.n	801daba <_malloc_r+0x22>
 801db52:	6862      	ldr	r2, [r4, #4]
 801db54:	42a3      	cmp	r3, r4
 801db56:	bf0c      	ite	eq
 801db58:	6032      	streq	r2, [r6, #0]
 801db5a:	605a      	strne	r2, [r3, #4]
 801db5c:	e7ec      	b.n	801db38 <_malloc_r+0xa0>
 801db5e:	4623      	mov	r3, r4
 801db60:	6864      	ldr	r4, [r4, #4]
 801db62:	e7b2      	b.n	801daca <_malloc_r+0x32>
 801db64:	4634      	mov	r4, r6
 801db66:	6876      	ldr	r6, [r6, #4]
 801db68:	e7b9      	b.n	801dade <_malloc_r+0x46>
 801db6a:	230c      	movs	r3, #12
 801db6c:	603b      	str	r3, [r7, #0]
 801db6e:	4638      	mov	r0, r7
 801db70:	f000 fe90 	bl	801e894 <__malloc_unlock>
 801db74:	e7a1      	b.n	801daba <_malloc_r+0x22>
 801db76:	6025      	str	r5, [r4, #0]
 801db78:	e7de      	b.n	801db38 <_malloc_r+0xa0>
 801db7a:	bf00      	nop
 801db7c:	20012f90 	.word	0x20012f90

0801db80 <__sfputc_r>:
 801db80:	6893      	ldr	r3, [r2, #8]
 801db82:	3b01      	subs	r3, #1
 801db84:	2b00      	cmp	r3, #0
 801db86:	b410      	push	{r4}
 801db88:	6093      	str	r3, [r2, #8]
 801db8a:	da08      	bge.n	801db9e <__sfputc_r+0x1e>
 801db8c:	6994      	ldr	r4, [r2, #24]
 801db8e:	42a3      	cmp	r3, r4
 801db90:	db01      	blt.n	801db96 <__sfputc_r+0x16>
 801db92:	290a      	cmp	r1, #10
 801db94:	d103      	bne.n	801db9e <__sfputc_r+0x1e>
 801db96:	f85d 4b04 	ldr.w	r4, [sp], #4
 801db9a:	f000 bb33 	b.w	801e204 <__swbuf_r>
 801db9e:	6813      	ldr	r3, [r2, #0]
 801dba0:	1c58      	adds	r0, r3, #1
 801dba2:	6010      	str	r0, [r2, #0]
 801dba4:	7019      	strb	r1, [r3, #0]
 801dba6:	4608      	mov	r0, r1
 801dba8:	f85d 4b04 	ldr.w	r4, [sp], #4
 801dbac:	4770      	bx	lr

0801dbae <__sfputs_r>:
 801dbae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dbb0:	4606      	mov	r6, r0
 801dbb2:	460f      	mov	r7, r1
 801dbb4:	4614      	mov	r4, r2
 801dbb6:	18d5      	adds	r5, r2, r3
 801dbb8:	42ac      	cmp	r4, r5
 801dbba:	d101      	bne.n	801dbc0 <__sfputs_r+0x12>
 801dbbc:	2000      	movs	r0, #0
 801dbbe:	e007      	b.n	801dbd0 <__sfputs_r+0x22>
 801dbc0:	f814 1b01 	ldrb.w	r1, [r4], #1
 801dbc4:	463a      	mov	r2, r7
 801dbc6:	4630      	mov	r0, r6
 801dbc8:	f7ff ffda 	bl	801db80 <__sfputc_r>
 801dbcc:	1c43      	adds	r3, r0, #1
 801dbce:	d1f3      	bne.n	801dbb8 <__sfputs_r+0xa>
 801dbd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801dbd4 <_vfiprintf_r>:
 801dbd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dbd8:	460d      	mov	r5, r1
 801dbda:	b09d      	sub	sp, #116	; 0x74
 801dbdc:	4614      	mov	r4, r2
 801dbde:	4698      	mov	r8, r3
 801dbe0:	4606      	mov	r6, r0
 801dbe2:	b118      	cbz	r0, 801dbec <_vfiprintf_r+0x18>
 801dbe4:	6983      	ldr	r3, [r0, #24]
 801dbe6:	b90b      	cbnz	r3, 801dbec <_vfiprintf_r+0x18>
 801dbe8:	f000 fd48 	bl	801e67c <__sinit>
 801dbec:	4b89      	ldr	r3, [pc, #548]	; (801de14 <_vfiprintf_r+0x240>)
 801dbee:	429d      	cmp	r5, r3
 801dbf0:	d11b      	bne.n	801dc2a <_vfiprintf_r+0x56>
 801dbf2:	6875      	ldr	r5, [r6, #4]
 801dbf4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801dbf6:	07d9      	lsls	r1, r3, #31
 801dbf8:	d405      	bmi.n	801dc06 <_vfiprintf_r+0x32>
 801dbfa:	89ab      	ldrh	r3, [r5, #12]
 801dbfc:	059a      	lsls	r2, r3, #22
 801dbfe:	d402      	bmi.n	801dc06 <_vfiprintf_r+0x32>
 801dc00:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801dc02:	f000 fdd9 	bl	801e7b8 <__retarget_lock_acquire_recursive>
 801dc06:	89ab      	ldrh	r3, [r5, #12]
 801dc08:	071b      	lsls	r3, r3, #28
 801dc0a:	d501      	bpl.n	801dc10 <_vfiprintf_r+0x3c>
 801dc0c:	692b      	ldr	r3, [r5, #16]
 801dc0e:	b9eb      	cbnz	r3, 801dc4c <_vfiprintf_r+0x78>
 801dc10:	4629      	mov	r1, r5
 801dc12:	4630      	mov	r0, r6
 801dc14:	f000 fb48 	bl	801e2a8 <__swsetup_r>
 801dc18:	b1c0      	cbz	r0, 801dc4c <_vfiprintf_r+0x78>
 801dc1a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801dc1c:	07dc      	lsls	r4, r3, #31
 801dc1e:	d50e      	bpl.n	801dc3e <_vfiprintf_r+0x6a>
 801dc20:	f04f 30ff 	mov.w	r0, #4294967295
 801dc24:	b01d      	add	sp, #116	; 0x74
 801dc26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc2a:	4b7b      	ldr	r3, [pc, #492]	; (801de18 <_vfiprintf_r+0x244>)
 801dc2c:	429d      	cmp	r5, r3
 801dc2e:	d101      	bne.n	801dc34 <_vfiprintf_r+0x60>
 801dc30:	68b5      	ldr	r5, [r6, #8]
 801dc32:	e7df      	b.n	801dbf4 <_vfiprintf_r+0x20>
 801dc34:	4b79      	ldr	r3, [pc, #484]	; (801de1c <_vfiprintf_r+0x248>)
 801dc36:	429d      	cmp	r5, r3
 801dc38:	bf08      	it	eq
 801dc3a:	68f5      	ldreq	r5, [r6, #12]
 801dc3c:	e7da      	b.n	801dbf4 <_vfiprintf_r+0x20>
 801dc3e:	89ab      	ldrh	r3, [r5, #12]
 801dc40:	0598      	lsls	r0, r3, #22
 801dc42:	d4ed      	bmi.n	801dc20 <_vfiprintf_r+0x4c>
 801dc44:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801dc46:	f000 fdb9 	bl	801e7bc <__retarget_lock_release_recursive>
 801dc4a:	e7e9      	b.n	801dc20 <_vfiprintf_r+0x4c>
 801dc4c:	2300      	movs	r3, #0
 801dc4e:	9309      	str	r3, [sp, #36]	; 0x24
 801dc50:	2320      	movs	r3, #32
 801dc52:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801dc56:	f8cd 800c 	str.w	r8, [sp, #12]
 801dc5a:	2330      	movs	r3, #48	; 0x30
 801dc5c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801de20 <_vfiprintf_r+0x24c>
 801dc60:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801dc64:	f04f 0901 	mov.w	r9, #1
 801dc68:	4623      	mov	r3, r4
 801dc6a:	469a      	mov	sl, r3
 801dc6c:	f813 2b01 	ldrb.w	r2, [r3], #1
 801dc70:	b10a      	cbz	r2, 801dc76 <_vfiprintf_r+0xa2>
 801dc72:	2a25      	cmp	r2, #37	; 0x25
 801dc74:	d1f9      	bne.n	801dc6a <_vfiprintf_r+0x96>
 801dc76:	ebba 0b04 	subs.w	fp, sl, r4
 801dc7a:	d00b      	beq.n	801dc94 <_vfiprintf_r+0xc0>
 801dc7c:	465b      	mov	r3, fp
 801dc7e:	4622      	mov	r2, r4
 801dc80:	4629      	mov	r1, r5
 801dc82:	4630      	mov	r0, r6
 801dc84:	f7ff ff93 	bl	801dbae <__sfputs_r>
 801dc88:	3001      	adds	r0, #1
 801dc8a:	f000 80aa 	beq.w	801dde2 <_vfiprintf_r+0x20e>
 801dc8e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dc90:	445a      	add	r2, fp
 801dc92:	9209      	str	r2, [sp, #36]	; 0x24
 801dc94:	f89a 3000 	ldrb.w	r3, [sl]
 801dc98:	2b00      	cmp	r3, #0
 801dc9a:	f000 80a2 	beq.w	801dde2 <_vfiprintf_r+0x20e>
 801dc9e:	2300      	movs	r3, #0
 801dca0:	f04f 32ff 	mov.w	r2, #4294967295
 801dca4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801dca8:	f10a 0a01 	add.w	sl, sl, #1
 801dcac:	9304      	str	r3, [sp, #16]
 801dcae:	9307      	str	r3, [sp, #28]
 801dcb0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801dcb4:	931a      	str	r3, [sp, #104]	; 0x68
 801dcb6:	4654      	mov	r4, sl
 801dcb8:	2205      	movs	r2, #5
 801dcba:	f814 1b01 	ldrb.w	r1, [r4], #1
 801dcbe:	4858      	ldr	r0, [pc, #352]	; (801de20 <_vfiprintf_r+0x24c>)
 801dcc0:	f7e2 fa96 	bl	80001f0 <memchr>
 801dcc4:	9a04      	ldr	r2, [sp, #16]
 801dcc6:	b9d8      	cbnz	r0, 801dd00 <_vfiprintf_r+0x12c>
 801dcc8:	06d1      	lsls	r1, r2, #27
 801dcca:	bf44      	itt	mi
 801dccc:	2320      	movmi	r3, #32
 801dcce:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801dcd2:	0713      	lsls	r3, r2, #28
 801dcd4:	bf44      	itt	mi
 801dcd6:	232b      	movmi	r3, #43	; 0x2b
 801dcd8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801dcdc:	f89a 3000 	ldrb.w	r3, [sl]
 801dce0:	2b2a      	cmp	r3, #42	; 0x2a
 801dce2:	d015      	beq.n	801dd10 <_vfiprintf_r+0x13c>
 801dce4:	9a07      	ldr	r2, [sp, #28]
 801dce6:	4654      	mov	r4, sl
 801dce8:	2000      	movs	r0, #0
 801dcea:	f04f 0c0a 	mov.w	ip, #10
 801dcee:	4621      	mov	r1, r4
 801dcf0:	f811 3b01 	ldrb.w	r3, [r1], #1
 801dcf4:	3b30      	subs	r3, #48	; 0x30
 801dcf6:	2b09      	cmp	r3, #9
 801dcf8:	d94e      	bls.n	801dd98 <_vfiprintf_r+0x1c4>
 801dcfa:	b1b0      	cbz	r0, 801dd2a <_vfiprintf_r+0x156>
 801dcfc:	9207      	str	r2, [sp, #28]
 801dcfe:	e014      	b.n	801dd2a <_vfiprintf_r+0x156>
 801dd00:	eba0 0308 	sub.w	r3, r0, r8
 801dd04:	fa09 f303 	lsl.w	r3, r9, r3
 801dd08:	4313      	orrs	r3, r2
 801dd0a:	9304      	str	r3, [sp, #16]
 801dd0c:	46a2      	mov	sl, r4
 801dd0e:	e7d2      	b.n	801dcb6 <_vfiprintf_r+0xe2>
 801dd10:	9b03      	ldr	r3, [sp, #12]
 801dd12:	1d19      	adds	r1, r3, #4
 801dd14:	681b      	ldr	r3, [r3, #0]
 801dd16:	9103      	str	r1, [sp, #12]
 801dd18:	2b00      	cmp	r3, #0
 801dd1a:	bfbb      	ittet	lt
 801dd1c:	425b      	neglt	r3, r3
 801dd1e:	f042 0202 	orrlt.w	r2, r2, #2
 801dd22:	9307      	strge	r3, [sp, #28]
 801dd24:	9307      	strlt	r3, [sp, #28]
 801dd26:	bfb8      	it	lt
 801dd28:	9204      	strlt	r2, [sp, #16]
 801dd2a:	7823      	ldrb	r3, [r4, #0]
 801dd2c:	2b2e      	cmp	r3, #46	; 0x2e
 801dd2e:	d10c      	bne.n	801dd4a <_vfiprintf_r+0x176>
 801dd30:	7863      	ldrb	r3, [r4, #1]
 801dd32:	2b2a      	cmp	r3, #42	; 0x2a
 801dd34:	d135      	bne.n	801dda2 <_vfiprintf_r+0x1ce>
 801dd36:	9b03      	ldr	r3, [sp, #12]
 801dd38:	1d1a      	adds	r2, r3, #4
 801dd3a:	681b      	ldr	r3, [r3, #0]
 801dd3c:	9203      	str	r2, [sp, #12]
 801dd3e:	2b00      	cmp	r3, #0
 801dd40:	bfb8      	it	lt
 801dd42:	f04f 33ff 	movlt.w	r3, #4294967295
 801dd46:	3402      	adds	r4, #2
 801dd48:	9305      	str	r3, [sp, #20]
 801dd4a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801de30 <_vfiprintf_r+0x25c>
 801dd4e:	7821      	ldrb	r1, [r4, #0]
 801dd50:	2203      	movs	r2, #3
 801dd52:	4650      	mov	r0, sl
 801dd54:	f7e2 fa4c 	bl	80001f0 <memchr>
 801dd58:	b140      	cbz	r0, 801dd6c <_vfiprintf_r+0x198>
 801dd5a:	2340      	movs	r3, #64	; 0x40
 801dd5c:	eba0 000a 	sub.w	r0, r0, sl
 801dd60:	fa03 f000 	lsl.w	r0, r3, r0
 801dd64:	9b04      	ldr	r3, [sp, #16]
 801dd66:	4303      	orrs	r3, r0
 801dd68:	3401      	adds	r4, #1
 801dd6a:	9304      	str	r3, [sp, #16]
 801dd6c:	f814 1b01 	ldrb.w	r1, [r4], #1
 801dd70:	482c      	ldr	r0, [pc, #176]	; (801de24 <_vfiprintf_r+0x250>)
 801dd72:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801dd76:	2206      	movs	r2, #6
 801dd78:	f7e2 fa3a 	bl	80001f0 <memchr>
 801dd7c:	2800      	cmp	r0, #0
 801dd7e:	d03f      	beq.n	801de00 <_vfiprintf_r+0x22c>
 801dd80:	4b29      	ldr	r3, [pc, #164]	; (801de28 <_vfiprintf_r+0x254>)
 801dd82:	bb1b      	cbnz	r3, 801ddcc <_vfiprintf_r+0x1f8>
 801dd84:	9b03      	ldr	r3, [sp, #12]
 801dd86:	3307      	adds	r3, #7
 801dd88:	f023 0307 	bic.w	r3, r3, #7
 801dd8c:	3308      	adds	r3, #8
 801dd8e:	9303      	str	r3, [sp, #12]
 801dd90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dd92:	443b      	add	r3, r7
 801dd94:	9309      	str	r3, [sp, #36]	; 0x24
 801dd96:	e767      	b.n	801dc68 <_vfiprintf_r+0x94>
 801dd98:	fb0c 3202 	mla	r2, ip, r2, r3
 801dd9c:	460c      	mov	r4, r1
 801dd9e:	2001      	movs	r0, #1
 801dda0:	e7a5      	b.n	801dcee <_vfiprintf_r+0x11a>
 801dda2:	2300      	movs	r3, #0
 801dda4:	3401      	adds	r4, #1
 801dda6:	9305      	str	r3, [sp, #20]
 801dda8:	4619      	mov	r1, r3
 801ddaa:	f04f 0c0a 	mov.w	ip, #10
 801ddae:	4620      	mov	r0, r4
 801ddb0:	f810 2b01 	ldrb.w	r2, [r0], #1
 801ddb4:	3a30      	subs	r2, #48	; 0x30
 801ddb6:	2a09      	cmp	r2, #9
 801ddb8:	d903      	bls.n	801ddc2 <_vfiprintf_r+0x1ee>
 801ddba:	2b00      	cmp	r3, #0
 801ddbc:	d0c5      	beq.n	801dd4a <_vfiprintf_r+0x176>
 801ddbe:	9105      	str	r1, [sp, #20]
 801ddc0:	e7c3      	b.n	801dd4a <_vfiprintf_r+0x176>
 801ddc2:	fb0c 2101 	mla	r1, ip, r1, r2
 801ddc6:	4604      	mov	r4, r0
 801ddc8:	2301      	movs	r3, #1
 801ddca:	e7f0      	b.n	801ddae <_vfiprintf_r+0x1da>
 801ddcc:	ab03      	add	r3, sp, #12
 801ddce:	9300      	str	r3, [sp, #0]
 801ddd0:	462a      	mov	r2, r5
 801ddd2:	4b16      	ldr	r3, [pc, #88]	; (801de2c <_vfiprintf_r+0x258>)
 801ddd4:	a904      	add	r1, sp, #16
 801ddd6:	4630      	mov	r0, r6
 801ddd8:	f3af 8000 	nop.w
 801dddc:	4607      	mov	r7, r0
 801ddde:	1c78      	adds	r0, r7, #1
 801dde0:	d1d6      	bne.n	801dd90 <_vfiprintf_r+0x1bc>
 801dde2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801dde4:	07d9      	lsls	r1, r3, #31
 801dde6:	d405      	bmi.n	801ddf4 <_vfiprintf_r+0x220>
 801dde8:	89ab      	ldrh	r3, [r5, #12]
 801ddea:	059a      	lsls	r2, r3, #22
 801ddec:	d402      	bmi.n	801ddf4 <_vfiprintf_r+0x220>
 801ddee:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801ddf0:	f000 fce4 	bl	801e7bc <__retarget_lock_release_recursive>
 801ddf4:	89ab      	ldrh	r3, [r5, #12]
 801ddf6:	065b      	lsls	r3, r3, #25
 801ddf8:	f53f af12 	bmi.w	801dc20 <_vfiprintf_r+0x4c>
 801ddfc:	9809      	ldr	r0, [sp, #36]	; 0x24
 801ddfe:	e711      	b.n	801dc24 <_vfiprintf_r+0x50>
 801de00:	ab03      	add	r3, sp, #12
 801de02:	9300      	str	r3, [sp, #0]
 801de04:	462a      	mov	r2, r5
 801de06:	4b09      	ldr	r3, [pc, #36]	; (801de2c <_vfiprintf_r+0x258>)
 801de08:	a904      	add	r1, sp, #16
 801de0a:	4630      	mov	r0, r6
 801de0c:	f000 f880 	bl	801df10 <_printf_i>
 801de10:	e7e4      	b.n	801dddc <_vfiprintf_r+0x208>
 801de12:	bf00      	nop
 801de14:	08020af4 	.word	0x08020af4
 801de18:	08020b14 	.word	0x08020b14
 801de1c:	08020ad4 	.word	0x08020ad4
 801de20:	08020a9c 	.word	0x08020a9c
 801de24:	08020aa6 	.word	0x08020aa6
 801de28:	00000000 	.word	0x00000000
 801de2c:	0801dbaf 	.word	0x0801dbaf
 801de30:	08020aa2 	.word	0x08020aa2

0801de34 <_printf_common>:
 801de34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801de38:	4616      	mov	r6, r2
 801de3a:	4699      	mov	r9, r3
 801de3c:	688a      	ldr	r2, [r1, #8]
 801de3e:	690b      	ldr	r3, [r1, #16]
 801de40:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801de44:	4293      	cmp	r3, r2
 801de46:	bfb8      	it	lt
 801de48:	4613      	movlt	r3, r2
 801de4a:	6033      	str	r3, [r6, #0]
 801de4c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801de50:	4607      	mov	r7, r0
 801de52:	460c      	mov	r4, r1
 801de54:	b10a      	cbz	r2, 801de5a <_printf_common+0x26>
 801de56:	3301      	adds	r3, #1
 801de58:	6033      	str	r3, [r6, #0]
 801de5a:	6823      	ldr	r3, [r4, #0]
 801de5c:	0699      	lsls	r1, r3, #26
 801de5e:	bf42      	ittt	mi
 801de60:	6833      	ldrmi	r3, [r6, #0]
 801de62:	3302      	addmi	r3, #2
 801de64:	6033      	strmi	r3, [r6, #0]
 801de66:	6825      	ldr	r5, [r4, #0]
 801de68:	f015 0506 	ands.w	r5, r5, #6
 801de6c:	d106      	bne.n	801de7c <_printf_common+0x48>
 801de6e:	f104 0a19 	add.w	sl, r4, #25
 801de72:	68e3      	ldr	r3, [r4, #12]
 801de74:	6832      	ldr	r2, [r6, #0]
 801de76:	1a9b      	subs	r3, r3, r2
 801de78:	42ab      	cmp	r3, r5
 801de7a:	dc26      	bgt.n	801deca <_printf_common+0x96>
 801de7c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801de80:	1e13      	subs	r3, r2, #0
 801de82:	6822      	ldr	r2, [r4, #0]
 801de84:	bf18      	it	ne
 801de86:	2301      	movne	r3, #1
 801de88:	0692      	lsls	r2, r2, #26
 801de8a:	d42b      	bmi.n	801dee4 <_printf_common+0xb0>
 801de8c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801de90:	4649      	mov	r1, r9
 801de92:	4638      	mov	r0, r7
 801de94:	47c0      	blx	r8
 801de96:	3001      	adds	r0, #1
 801de98:	d01e      	beq.n	801ded8 <_printf_common+0xa4>
 801de9a:	6823      	ldr	r3, [r4, #0]
 801de9c:	68e5      	ldr	r5, [r4, #12]
 801de9e:	6832      	ldr	r2, [r6, #0]
 801dea0:	f003 0306 	and.w	r3, r3, #6
 801dea4:	2b04      	cmp	r3, #4
 801dea6:	bf08      	it	eq
 801dea8:	1aad      	subeq	r5, r5, r2
 801deaa:	68a3      	ldr	r3, [r4, #8]
 801deac:	6922      	ldr	r2, [r4, #16]
 801deae:	bf0c      	ite	eq
 801deb0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801deb4:	2500      	movne	r5, #0
 801deb6:	4293      	cmp	r3, r2
 801deb8:	bfc4      	itt	gt
 801deba:	1a9b      	subgt	r3, r3, r2
 801debc:	18ed      	addgt	r5, r5, r3
 801debe:	2600      	movs	r6, #0
 801dec0:	341a      	adds	r4, #26
 801dec2:	42b5      	cmp	r5, r6
 801dec4:	d11a      	bne.n	801defc <_printf_common+0xc8>
 801dec6:	2000      	movs	r0, #0
 801dec8:	e008      	b.n	801dedc <_printf_common+0xa8>
 801deca:	2301      	movs	r3, #1
 801decc:	4652      	mov	r2, sl
 801dece:	4649      	mov	r1, r9
 801ded0:	4638      	mov	r0, r7
 801ded2:	47c0      	blx	r8
 801ded4:	3001      	adds	r0, #1
 801ded6:	d103      	bne.n	801dee0 <_printf_common+0xac>
 801ded8:	f04f 30ff 	mov.w	r0, #4294967295
 801dedc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dee0:	3501      	adds	r5, #1
 801dee2:	e7c6      	b.n	801de72 <_printf_common+0x3e>
 801dee4:	18e1      	adds	r1, r4, r3
 801dee6:	1c5a      	adds	r2, r3, #1
 801dee8:	2030      	movs	r0, #48	; 0x30
 801deea:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801deee:	4422      	add	r2, r4
 801def0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801def4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801def8:	3302      	adds	r3, #2
 801defa:	e7c7      	b.n	801de8c <_printf_common+0x58>
 801defc:	2301      	movs	r3, #1
 801defe:	4622      	mov	r2, r4
 801df00:	4649      	mov	r1, r9
 801df02:	4638      	mov	r0, r7
 801df04:	47c0      	blx	r8
 801df06:	3001      	adds	r0, #1
 801df08:	d0e6      	beq.n	801ded8 <_printf_common+0xa4>
 801df0a:	3601      	adds	r6, #1
 801df0c:	e7d9      	b.n	801dec2 <_printf_common+0x8e>
	...

0801df10 <_printf_i>:
 801df10:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801df14:	7e0f      	ldrb	r7, [r1, #24]
 801df16:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801df18:	2f78      	cmp	r7, #120	; 0x78
 801df1a:	4691      	mov	r9, r2
 801df1c:	4680      	mov	r8, r0
 801df1e:	460c      	mov	r4, r1
 801df20:	469a      	mov	sl, r3
 801df22:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801df26:	d807      	bhi.n	801df38 <_printf_i+0x28>
 801df28:	2f62      	cmp	r7, #98	; 0x62
 801df2a:	d80a      	bhi.n	801df42 <_printf_i+0x32>
 801df2c:	2f00      	cmp	r7, #0
 801df2e:	f000 80d8 	beq.w	801e0e2 <_printf_i+0x1d2>
 801df32:	2f58      	cmp	r7, #88	; 0x58
 801df34:	f000 80a3 	beq.w	801e07e <_printf_i+0x16e>
 801df38:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801df3c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801df40:	e03a      	b.n	801dfb8 <_printf_i+0xa8>
 801df42:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801df46:	2b15      	cmp	r3, #21
 801df48:	d8f6      	bhi.n	801df38 <_printf_i+0x28>
 801df4a:	a101      	add	r1, pc, #4	; (adr r1, 801df50 <_printf_i+0x40>)
 801df4c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801df50:	0801dfa9 	.word	0x0801dfa9
 801df54:	0801dfbd 	.word	0x0801dfbd
 801df58:	0801df39 	.word	0x0801df39
 801df5c:	0801df39 	.word	0x0801df39
 801df60:	0801df39 	.word	0x0801df39
 801df64:	0801df39 	.word	0x0801df39
 801df68:	0801dfbd 	.word	0x0801dfbd
 801df6c:	0801df39 	.word	0x0801df39
 801df70:	0801df39 	.word	0x0801df39
 801df74:	0801df39 	.word	0x0801df39
 801df78:	0801df39 	.word	0x0801df39
 801df7c:	0801e0c9 	.word	0x0801e0c9
 801df80:	0801dfed 	.word	0x0801dfed
 801df84:	0801e0ab 	.word	0x0801e0ab
 801df88:	0801df39 	.word	0x0801df39
 801df8c:	0801df39 	.word	0x0801df39
 801df90:	0801e0eb 	.word	0x0801e0eb
 801df94:	0801df39 	.word	0x0801df39
 801df98:	0801dfed 	.word	0x0801dfed
 801df9c:	0801df39 	.word	0x0801df39
 801dfa0:	0801df39 	.word	0x0801df39
 801dfa4:	0801e0b3 	.word	0x0801e0b3
 801dfa8:	682b      	ldr	r3, [r5, #0]
 801dfaa:	1d1a      	adds	r2, r3, #4
 801dfac:	681b      	ldr	r3, [r3, #0]
 801dfae:	602a      	str	r2, [r5, #0]
 801dfb0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801dfb4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801dfb8:	2301      	movs	r3, #1
 801dfba:	e0a3      	b.n	801e104 <_printf_i+0x1f4>
 801dfbc:	6820      	ldr	r0, [r4, #0]
 801dfbe:	6829      	ldr	r1, [r5, #0]
 801dfc0:	0606      	lsls	r6, r0, #24
 801dfc2:	f101 0304 	add.w	r3, r1, #4
 801dfc6:	d50a      	bpl.n	801dfde <_printf_i+0xce>
 801dfc8:	680e      	ldr	r6, [r1, #0]
 801dfca:	602b      	str	r3, [r5, #0]
 801dfcc:	2e00      	cmp	r6, #0
 801dfce:	da03      	bge.n	801dfd8 <_printf_i+0xc8>
 801dfd0:	232d      	movs	r3, #45	; 0x2d
 801dfd2:	4276      	negs	r6, r6
 801dfd4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801dfd8:	485e      	ldr	r0, [pc, #376]	; (801e154 <_printf_i+0x244>)
 801dfda:	230a      	movs	r3, #10
 801dfdc:	e019      	b.n	801e012 <_printf_i+0x102>
 801dfde:	680e      	ldr	r6, [r1, #0]
 801dfe0:	602b      	str	r3, [r5, #0]
 801dfe2:	f010 0f40 	tst.w	r0, #64	; 0x40
 801dfe6:	bf18      	it	ne
 801dfe8:	b236      	sxthne	r6, r6
 801dfea:	e7ef      	b.n	801dfcc <_printf_i+0xbc>
 801dfec:	682b      	ldr	r3, [r5, #0]
 801dfee:	6820      	ldr	r0, [r4, #0]
 801dff0:	1d19      	adds	r1, r3, #4
 801dff2:	6029      	str	r1, [r5, #0]
 801dff4:	0601      	lsls	r1, r0, #24
 801dff6:	d501      	bpl.n	801dffc <_printf_i+0xec>
 801dff8:	681e      	ldr	r6, [r3, #0]
 801dffa:	e002      	b.n	801e002 <_printf_i+0xf2>
 801dffc:	0646      	lsls	r6, r0, #25
 801dffe:	d5fb      	bpl.n	801dff8 <_printf_i+0xe8>
 801e000:	881e      	ldrh	r6, [r3, #0]
 801e002:	4854      	ldr	r0, [pc, #336]	; (801e154 <_printf_i+0x244>)
 801e004:	2f6f      	cmp	r7, #111	; 0x6f
 801e006:	bf0c      	ite	eq
 801e008:	2308      	moveq	r3, #8
 801e00a:	230a      	movne	r3, #10
 801e00c:	2100      	movs	r1, #0
 801e00e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801e012:	6865      	ldr	r5, [r4, #4]
 801e014:	60a5      	str	r5, [r4, #8]
 801e016:	2d00      	cmp	r5, #0
 801e018:	bfa2      	ittt	ge
 801e01a:	6821      	ldrge	r1, [r4, #0]
 801e01c:	f021 0104 	bicge.w	r1, r1, #4
 801e020:	6021      	strge	r1, [r4, #0]
 801e022:	b90e      	cbnz	r6, 801e028 <_printf_i+0x118>
 801e024:	2d00      	cmp	r5, #0
 801e026:	d04d      	beq.n	801e0c4 <_printf_i+0x1b4>
 801e028:	4615      	mov	r5, r2
 801e02a:	fbb6 f1f3 	udiv	r1, r6, r3
 801e02e:	fb03 6711 	mls	r7, r3, r1, r6
 801e032:	5dc7      	ldrb	r7, [r0, r7]
 801e034:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801e038:	4637      	mov	r7, r6
 801e03a:	42bb      	cmp	r3, r7
 801e03c:	460e      	mov	r6, r1
 801e03e:	d9f4      	bls.n	801e02a <_printf_i+0x11a>
 801e040:	2b08      	cmp	r3, #8
 801e042:	d10b      	bne.n	801e05c <_printf_i+0x14c>
 801e044:	6823      	ldr	r3, [r4, #0]
 801e046:	07de      	lsls	r6, r3, #31
 801e048:	d508      	bpl.n	801e05c <_printf_i+0x14c>
 801e04a:	6923      	ldr	r3, [r4, #16]
 801e04c:	6861      	ldr	r1, [r4, #4]
 801e04e:	4299      	cmp	r1, r3
 801e050:	bfde      	ittt	le
 801e052:	2330      	movle	r3, #48	; 0x30
 801e054:	f805 3c01 	strble.w	r3, [r5, #-1]
 801e058:	f105 35ff 	addle.w	r5, r5, #4294967295
 801e05c:	1b52      	subs	r2, r2, r5
 801e05e:	6122      	str	r2, [r4, #16]
 801e060:	f8cd a000 	str.w	sl, [sp]
 801e064:	464b      	mov	r3, r9
 801e066:	aa03      	add	r2, sp, #12
 801e068:	4621      	mov	r1, r4
 801e06a:	4640      	mov	r0, r8
 801e06c:	f7ff fee2 	bl	801de34 <_printf_common>
 801e070:	3001      	adds	r0, #1
 801e072:	d14c      	bne.n	801e10e <_printf_i+0x1fe>
 801e074:	f04f 30ff 	mov.w	r0, #4294967295
 801e078:	b004      	add	sp, #16
 801e07a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e07e:	4835      	ldr	r0, [pc, #212]	; (801e154 <_printf_i+0x244>)
 801e080:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801e084:	6829      	ldr	r1, [r5, #0]
 801e086:	6823      	ldr	r3, [r4, #0]
 801e088:	f851 6b04 	ldr.w	r6, [r1], #4
 801e08c:	6029      	str	r1, [r5, #0]
 801e08e:	061d      	lsls	r5, r3, #24
 801e090:	d514      	bpl.n	801e0bc <_printf_i+0x1ac>
 801e092:	07df      	lsls	r7, r3, #31
 801e094:	bf44      	itt	mi
 801e096:	f043 0320 	orrmi.w	r3, r3, #32
 801e09a:	6023      	strmi	r3, [r4, #0]
 801e09c:	b91e      	cbnz	r6, 801e0a6 <_printf_i+0x196>
 801e09e:	6823      	ldr	r3, [r4, #0]
 801e0a0:	f023 0320 	bic.w	r3, r3, #32
 801e0a4:	6023      	str	r3, [r4, #0]
 801e0a6:	2310      	movs	r3, #16
 801e0a8:	e7b0      	b.n	801e00c <_printf_i+0xfc>
 801e0aa:	6823      	ldr	r3, [r4, #0]
 801e0ac:	f043 0320 	orr.w	r3, r3, #32
 801e0b0:	6023      	str	r3, [r4, #0]
 801e0b2:	2378      	movs	r3, #120	; 0x78
 801e0b4:	4828      	ldr	r0, [pc, #160]	; (801e158 <_printf_i+0x248>)
 801e0b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801e0ba:	e7e3      	b.n	801e084 <_printf_i+0x174>
 801e0bc:	0659      	lsls	r1, r3, #25
 801e0be:	bf48      	it	mi
 801e0c0:	b2b6      	uxthmi	r6, r6
 801e0c2:	e7e6      	b.n	801e092 <_printf_i+0x182>
 801e0c4:	4615      	mov	r5, r2
 801e0c6:	e7bb      	b.n	801e040 <_printf_i+0x130>
 801e0c8:	682b      	ldr	r3, [r5, #0]
 801e0ca:	6826      	ldr	r6, [r4, #0]
 801e0cc:	6961      	ldr	r1, [r4, #20]
 801e0ce:	1d18      	adds	r0, r3, #4
 801e0d0:	6028      	str	r0, [r5, #0]
 801e0d2:	0635      	lsls	r5, r6, #24
 801e0d4:	681b      	ldr	r3, [r3, #0]
 801e0d6:	d501      	bpl.n	801e0dc <_printf_i+0x1cc>
 801e0d8:	6019      	str	r1, [r3, #0]
 801e0da:	e002      	b.n	801e0e2 <_printf_i+0x1d2>
 801e0dc:	0670      	lsls	r0, r6, #25
 801e0de:	d5fb      	bpl.n	801e0d8 <_printf_i+0x1c8>
 801e0e0:	8019      	strh	r1, [r3, #0]
 801e0e2:	2300      	movs	r3, #0
 801e0e4:	6123      	str	r3, [r4, #16]
 801e0e6:	4615      	mov	r5, r2
 801e0e8:	e7ba      	b.n	801e060 <_printf_i+0x150>
 801e0ea:	682b      	ldr	r3, [r5, #0]
 801e0ec:	1d1a      	adds	r2, r3, #4
 801e0ee:	602a      	str	r2, [r5, #0]
 801e0f0:	681d      	ldr	r5, [r3, #0]
 801e0f2:	6862      	ldr	r2, [r4, #4]
 801e0f4:	2100      	movs	r1, #0
 801e0f6:	4628      	mov	r0, r5
 801e0f8:	f7e2 f87a 	bl	80001f0 <memchr>
 801e0fc:	b108      	cbz	r0, 801e102 <_printf_i+0x1f2>
 801e0fe:	1b40      	subs	r0, r0, r5
 801e100:	6060      	str	r0, [r4, #4]
 801e102:	6863      	ldr	r3, [r4, #4]
 801e104:	6123      	str	r3, [r4, #16]
 801e106:	2300      	movs	r3, #0
 801e108:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801e10c:	e7a8      	b.n	801e060 <_printf_i+0x150>
 801e10e:	6923      	ldr	r3, [r4, #16]
 801e110:	462a      	mov	r2, r5
 801e112:	4649      	mov	r1, r9
 801e114:	4640      	mov	r0, r8
 801e116:	47d0      	blx	sl
 801e118:	3001      	adds	r0, #1
 801e11a:	d0ab      	beq.n	801e074 <_printf_i+0x164>
 801e11c:	6823      	ldr	r3, [r4, #0]
 801e11e:	079b      	lsls	r3, r3, #30
 801e120:	d413      	bmi.n	801e14a <_printf_i+0x23a>
 801e122:	68e0      	ldr	r0, [r4, #12]
 801e124:	9b03      	ldr	r3, [sp, #12]
 801e126:	4298      	cmp	r0, r3
 801e128:	bfb8      	it	lt
 801e12a:	4618      	movlt	r0, r3
 801e12c:	e7a4      	b.n	801e078 <_printf_i+0x168>
 801e12e:	2301      	movs	r3, #1
 801e130:	4632      	mov	r2, r6
 801e132:	4649      	mov	r1, r9
 801e134:	4640      	mov	r0, r8
 801e136:	47d0      	blx	sl
 801e138:	3001      	adds	r0, #1
 801e13a:	d09b      	beq.n	801e074 <_printf_i+0x164>
 801e13c:	3501      	adds	r5, #1
 801e13e:	68e3      	ldr	r3, [r4, #12]
 801e140:	9903      	ldr	r1, [sp, #12]
 801e142:	1a5b      	subs	r3, r3, r1
 801e144:	42ab      	cmp	r3, r5
 801e146:	dcf2      	bgt.n	801e12e <_printf_i+0x21e>
 801e148:	e7eb      	b.n	801e122 <_printf_i+0x212>
 801e14a:	2500      	movs	r5, #0
 801e14c:	f104 0619 	add.w	r6, r4, #25
 801e150:	e7f5      	b.n	801e13e <_printf_i+0x22e>
 801e152:	bf00      	nop
 801e154:	08020aad 	.word	0x08020aad
 801e158:	08020abe 	.word	0x08020abe

0801e15c <_sbrk_r>:
 801e15c:	b538      	push	{r3, r4, r5, lr}
 801e15e:	4d06      	ldr	r5, [pc, #24]	; (801e178 <_sbrk_r+0x1c>)
 801e160:	2300      	movs	r3, #0
 801e162:	4604      	mov	r4, r0
 801e164:	4608      	mov	r0, r1
 801e166:	602b      	str	r3, [r5, #0]
 801e168:	f7e3 ff9e 	bl	80020a8 <_sbrk>
 801e16c:	1c43      	adds	r3, r0, #1
 801e16e:	d102      	bne.n	801e176 <_sbrk_r+0x1a>
 801e170:	682b      	ldr	r3, [r5, #0]
 801e172:	b103      	cbz	r3, 801e176 <_sbrk_r+0x1a>
 801e174:	6023      	str	r3, [r4, #0]
 801e176:	bd38      	pop	{r3, r4, r5, pc}
 801e178:	20013134 	.word	0x20013134

0801e17c <_raise_r>:
 801e17c:	291f      	cmp	r1, #31
 801e17e:	b538      	push	{r3, r4, r5, lr}
 801e180:	4604      	mov	r4, r0
 801e182:	460d      	mov	r5, r1
 801e184:	d904      	bls.n	801e190 <_raise_r+0x14>
 801e186:	2316      	movs	r3, #22
 801e188:	6003      	str	r3, [r0, #0]
 801e18a:	f04f 30ff 	mov.w	r0, #4294967295
 801e18e:	bd38      	pop	{r3, r4, r5, pc}
 801e190:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801e192:	b112      	cbz	r2, 801e19a <_raise_r+0x1e>
 801e194:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801e198:	b94b      	cbnz	r3, 801e1ae <_raise_r+0x32>
 801e19a:	4620      	mov	r0, r4
 801e19c:	f000 f830 	bl	801e200 <_getpid_r>
 801e1a0:	462a      	mov	r2, r5
 801e1a2:	4601      	mov	r1, r0
 801e1a4:	4620      	mov	r0, r4
 801e1a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801e1aa:	f000 b817 	b.w	801e1dc <_kill_r>
 801e1ae:	2b01      	cmp	r3, #1
 801e1b0:	d00a      	beq.n	801e1c8 <_raise_r+0x4c>
 801e1b2:	1c59      	adds	r1, r3, #1
 801e1b4:	d103      	bne.n	801e1be <_raise_r+0x42>
 801e1b6:	2316      	movs	r3, #22
 801e1b8:	6003      	str	r3, [r0, #0]
 801e1ba:	2001      	movs	r0, #1
 801e1bc:	e7e7      	b.n	801e18e <_raise_r+0x12>
 801e1be:	2400      	movs	r4, #0
 801e1c0:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801e1c4:	4628      	mov	r0, r5
 801e1c6:	4798      	blx	r3
 801e1c8:	2000      	movs	r0, #0
 801e1ca:	e7e0      	b.n	801e18e <_raise_r+0x12>

0801e1cc <raise>:
 801e1cc:	4b02      	ldr	r3, [pc, #8]	; (801e1d8 <raise+0xc>)
 801e1ce:	4601      	mov	r1, r0
 801e1d0:	6818      	ldr	r0, [r3, #0]
 801e1d2:	f7ff bfd3 	b.w	801e17c <_raise_r>
 801e1d6:	bf00      	nop
 801e1d8:	20000104 	.word	0x20000104

0801e1dc <_kill_r>:
 801e1dc:	b538      	push	{r3, r4, r5, lr}
 801e1de:	4d07      	ldr	r5, [pc, #28]	; (801e1fc <_kill_r+0x20>)
 801e1e0:	2300      	movs	r3, #0
 801e1e2:	4604      	mov	r4, r0
 801e1e4:	4608      	mov	r0, r1
 801e1e6:	4611      	mov	r1, r2
 801e1e8:	602b      	str	r3, [r5, #0]
 801e1ea:	f7e3 ff27 	bl	800203c <_kill>
 801e1ee:	1c43      	adds	r3, r0, #1
 801e1f0:	d102      	bne.n	801e1f8 <_kill_r+0x1c>
 801e1f2:	682b      	ldr	r3, [r5, #0]
 801e1f4:	b103      	cbz	r3, 801e1f8 <_kill_r+0x1c>
 801e1f6:	6023      	str	r3, [r4, #0]
 801e1f8:	bd38      	pop	{r3, r4, r5, pc}
 801e1fa:	bf00      	nop
 801e1fc:	20013134 	.word	0x20013134

0801e200 <_getpid_r>:
 801e200:	f7e3 bf1a 	b.w	8002038 <_getpid>

0801e204 <__swbuf_r>:
 801e204:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e206:	460e      	mov	r6, r1
 801e208:	4614      	mov	r4, r2
 801e20a:	4605      	mov	r5, r0
 801e20c:	b118      	cbz	r0, 801e216 <__swbuf_r+0x12>
 801e20e:	6983      	ldr	r3, [r0, #24]
 801e210:	b90b      	cbnz	r3, 801e216 <__swbuf_r+0x12>
 801e212:	f000 fa33 	bl	801e67c <__sinit>
 801e216:	4b21      	ldr	r3, [pc, #132]	; (801e29c <__swbuf_r+0x98>)
 801e218:	429c      	cmp	r4, r3
 801e21a:	d12b      	bne.n	801e274 <__swbuf_r+0x70>
 801e21c:	686c      	ldr	r4, [r5, #4]
 801e21e:	69a3      	ldr	r3, [r4, #24]
 801e220:	60a3      	str	r3, [r4, #8]
 801e222:	89a3      	ldrh	r3, [r4, #12]
 801e224:	071a      	lsls	r2, r3, #28
 801e226:	d52f      	bpl.n	801e288 <__swbuf_r+0x84>
 801e228:	6923      	ldr	r3, [r4, #16]
 801e22a:	b36b      	cbz	r3, 801e288 <__swbuf_r+0x84>
 801e22c:	6923      	ldr	r3, [r4, #16]
 801e22e:	6820      	ldr	r0, [r4, #0]
 801e230:	1ac0      	subs	r0, r0, r3
 801e232:	6963      	ldr	r3, [r4, #20]
 801e234:	b2f6      	uxtb	r6, r6
 801e236:	4283      	cmp	r3, r0
 801e238:	4637      	mov	r7, r6
 801e23a:	dc04      	bgt.n	801e246 <__swbuf_r+0x42>
 801e23c:	4621      	mov	r1, r4
 801e23e:	4628      	mov	r0, r5
 801e240:	f000 f988 	bl	801e554 <_fflush_r>
 801e244:	bb30      	cbnz	r0, 801e294 <__swbuf_r+0x90>
 801e246:	68a3      	ldr	r3, [r4, #8]
 801e248:	3b01      	subs	r3, #1
 801e24a:	60a3      	str	r3, [r4, #8]
 801e24c:	6823      	ldr	r3, [r4, #0]
 801e24e:	1c5a      	adds	r2, r3, #1
 801e250:	6022      	str	r2, [r4, #0]
 801e252:	701e      	strb	r6, [r3, #0]
 801e254:	6963      	ldr	r3, [r4, #20]
 801e256:	3001      	adds	r0, #1
 801e258:	4283      	cmp	r3, r0
 801e25a:	d004      	beq.n	801e266 <__swbuf_r+0x62>
 801e25c:	89a3      	ldrh	r3, [r4, #12]
 801e25e:	07db      	lsls	r3, r3, #31
 801e260:	d506      	bpl.n	801e270 <__swbuf_r+0x6c>
 801e262:	2e0a      	cmp	r6, #10
 801e264:	d104      	bne.n	801e270 <__swbuf_r+0x6c>
 801e266:	4621      	mov	r1, r4
 801e268:	4628      	mov	r0, r5
 801e26a:	f000 f973 	bl	801e554 <_fflush_r>
 801e26e:	b988      	cbnz	r0, 801e294 <__swbuf_r+0x90>
 801e270:	4638      	mov	r0, r7
 801e272:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801e274:	4b0a      	ldr	r3, [pc, #40]	; (801e2a0 <__swbuf_r+0x9c>)
 801e276:	429c      	cmp	r4, r3
 801e278:	d101      	bne.n	801e27e <__swbuf_r+0x7a>
 801e27a:	68ac      	ldr	r4, [r5, #8]
 801e27c:	e7cf      	b.n	801e21e <__swbuf_r+0x1a>
 801e27e:	4b09      	ldr	r3, [pc, #36]	; (801e2a4 <__swbuf_r+0xa0>)
 801e280:	429c      	cmp	r4, r3
 801e282:	bf08      	it	eq
 801e284:	68ec      	ldreq	r4, [r5, #12]
 801e286:	e7ca      	b.n	801e21e <__swbuf_r+0x1a>
 801e288:	4621      	mov	r1, r4
 801e28a:	4628      	mov	r0, r5
 801e28c:	f000 f80c 	bl	801e2a8 <__swsetup_r>
 801e290:	2800      	cmp	r0, #0
 801e292:	d0cb      	beq.n	801e22c <__swbuf_r+0x28>
 801e294:	f04f 37ff 	mov.w	r7, #4294967295
 801e298:	e7ea      	b.n	801e270 <__swbuf_r+0x6c>
 801e29a:	bf00      	nop
 801e29c:	08020af4 	.word	0x08020af4
 801e2a0:	08020b14 	.word	0x08020b14
 801e2a4:	08020ad4 	.word	0x08020ad4

0801e2a8 <__swsetup_r>:
 801e2a8:	4b32      	ldr	r3, [pc, #200]	; (801e374 <__swsetup_r+0xcc>)
 801e2aa:	b570      	push	{r4, r5, r6, lr}
 801e2ac:	681d      	ldr	r5, [r3, #0]
 801e2ae:	4606      	mov	r6, r0
 801e2b0:	460c      	mov	r4, r1
 801e2b2:	b125      	cbz	r5, 801e2be <__swsetup_r+0x16>
 801e2b4:	69ab      	ldr	r3, [r5, #24]
 801e2b6:	b913      	cbnz	r3, 801e2be <__swsetup_r+0x16>
 801e2b8:	4628      	mov	r0, r5
 801e2ba:	f000 f9df 	bl	801e67c <__sinit>
 801e2be:	4b2e      	ldr	r3, [pc, #184]	; (801e378 <__swsetup_r+0xd0>)
 801e2c0:	429c      	cmp	r4, r3
 801e2c2:	d10f      	bne.n	801e2e4 <__swsetup_r+0x3c>
 801e2c4:	686c      	ldr	r4, [r5, #4]
 801e2c6:	89a3      	ldrh	r3, [r4, #12]
 801e2c8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801e2cc:	0719      	lsls	r1, r3, #28
 801e2ce:	d42c      	bmi.n	801e32a <__swsetup_r+0x82>
 801e2d0:	06dd      	lsls	r5, r3, #27
 801e2d2:	d411      	bmi.n	801e2f8 <__swsetup_r+0x50>
 801e2d4:	2309      	movs	r3, #9
 801e2d6:	6033      	str	r3, [r6, #0]
 801e2d8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801e2dc:	81a3      	strh	r3, [r4, #12]
 801e2de:	f04f 30ff 	mov.w	r0, #4294967295
 801e2e2:	e03e      	b.n	801e362 <__swsetup_r+0xba>
 801e2e4:	4b25      	ldr	r3, [pc, #148]	; (801e37c <__swsetup_r+0xd4>)
 801e2e6:	429c      	cmp	r4, r3
 801e2e8:	d101      	bne.n	801e2ee <__swsetup_r+0x46>
 801e2ea:	68ac      	ldr	r4, [r5, #8]
 801e2ec:	e7eb      	b.n	801e2c6 <__swsetup_r+0x1e>
 801e2ee:	4b24      	ldr	r3, [pc, #144]	; (801e380 <__swsetup_r+0xd8>)
 801e2f0:	429c      	cmp	r4, r3
 801e2f2:	bf08      	it	eq
 801e2f4:	68ec      	ldreq	r4, [r5, #12]
 801e2f6:	e7e6      	b.n	801e2c6 <__swsetup_r+0x1e>
 801e2f8:	0758      	lsls	r0, r3, #29
 801e2fa:	d512      	bpl.n	801e322 <__swsetup_r+0x7a>
 801e2fc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801e2fe:	b141      	cbz	r1, 801e312 <__swsetup_r+0x6a>
 801e300:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801e304:	4299      	cmp	r1, r3
 801e306:	d002      	beq.n	801e30e <__swsetup_r+0x66>
 801e308:	4630      	mov	r0, r6
 801e30a:	f7ff fb59 	bl	801d9c0 <_free_r>
 801e30e:	2300      	movs	r3, #0
 801e310:	6363      	str	r3, [r4, #52]	; 0x34
 801e312:	89a3      	ldrh	r3, [r4, #12]
 801e314:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801e318:	81a3      	strh	r3, [r4, #12]
 801e31a:	2300      	movs	r3, #0
 801e31c:	6063      	str	r3, [r4, #4]
 801e31e:	6923      	ldr	r3, [r4, #16]
 801e320:	6023      	str	r3, [r4, #0]
 801e322:	89a3      	ldrh	r3, [r4, #12]
 801e324:	f043 0308 	orr.w	r3, r3, #8
 801e328:	81a3      	strh	r3, [r4, #12]
 801e32a:	6923      	ldr	r3, [r4, #16]
 801e32c:	b94b      	cbnz	r3, 801e342 <__swsetup_r+0x9a>
 801e32e:	89a3      	ldrh	r3, [r4, #12]
 801e330:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801e334:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801e338:	d003      	beq.n	801e342 <__swsetup_r+0x9a>
 801e33a:	4621      	mov	r1, r4
 801e33c:	4630      	mov	r0, r6
 801e33e:	f000 fa63 	bl	801e808 <__smakebuf_r>
 801e342:	89a0      	ldrh	r0, [r4, #12]
 801e344:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801e348:	f010 0301 	ands.w	r3, r0, #1
 801e34c:	d00a      	beq.n	801e364 <__swsetup_r+0xbc>
 801e34e:	2300      	movs	r3, #0
 801e350:	60a3      	str	r3, [r4, #8]
 801e352:	6963      	ldr	r3, [r4, #20]
 801e354:	425b      	negs	r3, r3
 801e356:	61a3      	str	r3, [r4, #24]
 801e358:	6923      	ldr	r3, [r4, #16]
 801e35a:	b943      	cbnz	r3, 801e36e <__swsetup_r+0xc6>
 801e35c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801e360:	d1ba      	bne.n	801e2d8 <__swsetup_r+0x30>
 801e362:	bd70      	pop	{r4, r5, r6, pc}
 801e364:	0781      	lsls	r1, r0, #30
 801e366:	bf58      	it	pl
 801e368:	6963      	ldrpl	r3, [r4, #20]
 801e36a:	60a3      	str	r3, [r4, #8]
 801e36c:	e7f4      	b.n	801e358 <__swsetup_r+0xb0>
 801e36e:	2000      	movs	r0, #0
 801e370:	e7f7      	b.n	801e362 <__swsetup_r+0xba>
 801e372:	bf00      	nop
 801e374:	20000104 	.word	0x20000104
 801e378:	08020af4 	.word	0x08020af4
 801e37c:	08020b14 	.word	0x08020b14
 801e380:	08020ad4 	.word	0x08020ad4

0801e384 <__register_exitproc>:
 801e384:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801e388:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801e444 <__register_exitproc+0xc0>
 801e38c:	4606      	mov	r6, r0
 801e38e:	f8d8 0000 	ldr.w	r0, [r8]
 801e392:	461f      	mov	r7, r3
 801e394:	460d      	mov	r5, r1
 801e396:	4691      	mov	r9, r2
 801e398:	f000 fa0e 	bl	801e7b8 <__retarget_lock_acquire_recursive>
 801e39c:	4b25      	ldr	r3, [pc, #148]	; (801e434 <__register_exitproc+0xb0>)
 801e39e:	681c      	ldr	r4, [r3, #0]
 801e3a0:	b934      	cbnz	r4, 801e3b0 <__register_exitproc+0x2c>
 801e3a2:	4c25      	ldr	r4, [pc, #148]	; (801e438 <__register_exitproc+0xb4>)
 801e3a4:	601c      	str	r4, [r3, #0]
 801e3a6:	4b25      	ldr	r3, [pc, #148]	; (801e43c <__register_exitproc+0xb8>)
 801e3a8:	b113      	cbz	r3, 801e3b0 <__register_exitproc+0x2c>
 801e3aa:	681b      	ldr	r3, [r3, #0]
 801e3ac:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801e3b0:	6863      	ldr	r3, [r4, #4]
 801e3b2:	2b1f      	cmp	r3, #31
 801e3b4:	dd07      	ble.n	801e3c6 <__register_exitproc+0x42>
 801e3b6:	f8d8 0000 	ldr.w	r0, [r8]
 801e3ba:	f000 f9ff 	bl	801e7bc <__retarget_lock_release_recursive>
 801e3be:	f04f 30ff 	mov.w	r0, #4294967295
 801e3c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801e3c6:	b34e      	cbz	r6, 801e41c <__register_exitproc+0x98>
 801e3c8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801e3cc:	b988      	cbnz	r0, 801e3f2 <__register_exitproc+0x6e>
 801e3ce:	4b1c      	ldr	r3, [pc, #112]	; (801e440 <__register_exitproc+0xbc>)
 801e3d0:	b923      	cbnz	r3, 801e3dc <__register_exitproc+0x58>
 801e3d2:	f8d8 0000 	ldr.w	r0, [r8]
 801e3d6:	f000 f9f0 	bl	801e7ba <__retarget_lock_release>
 801e3da:	e7f0      	b.n	801e3be <__register_exitproc+0x3a>
 801e3dc:	f44f 7084 	mov.w	r0, #264	; 0x108
 801e3e0:	f7ff fac8 	bl	801d974 <malloc>
 801e3e4:	2800      	cmp	r0, #0
 801e3e6:	d0f4      	beq.n	801e3d2 <__register_exitproc+0x4e>
 801e3e8:	2300      	movs	r3, #0
 801e3ea:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801e3ee:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801e3f2:	6863      	ldr	r3, [r4, #4]
 801e3f4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801e3f8:	2201      	movs	r2, #1
 801e3fa:	409a      	lsls	r2, r3
 801e3fc:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801e400:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801e404:	4313      	orrs	r3, r2
 801e406:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801e40a:	2e02      	cmp	r6, #2
 801e40c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801e410:	bf02      	ittt	eq
 801e412:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801e416:	4313      	orreq	r3, r2
 801e418:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801e41c:	6863      	ldr	r3, [r4, #4]
 801e41e:	f8d8 0000 	ldr.w	r0, [r8]
 801e422:	1c5a      	adds	r2, r3, #1
 801e424:	3302      	adds	r3, #2
 801e426:	6062      	str	r2, [r4, #4]
 801e428:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801e42c:	f000 f9c6 	bl	801e7bc <__retarget_lock_release_recursive>
 801e430:	2000      	movs	r0, #0
 801e432:	e7c6      	b.n	801e3c2 <__register_exitproc+0x3e>
 801e434:	2001312c 	.word	0x2001312c
 801e438:	200130a0 	.word	0x200130a0
 801e43c:	08020ad0 	.word	0x08020ad0
 801e440:	0801d975 	.word	0x0801d975
 801e444:	20000168 	.word	0x20000168

0801e448 <__sflush_r>:
 801e448:	898a      	ldrh	r2, [r1, #12]
 801e44a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e44e:	4605      	mov	r5, r0
 801e450:	0710      	lsls	r0, r2, #28
 801e452:	460c      	mov	r4, r1
 801e454:	d458      	bmi.n	801e508 <__sflush_r+0xc0>
 801e456:	684b      	ldr	r3, [r1, #4]
 801e458:	2b00      	cmp	r3, #0
 801e45a:	dc05      	bgt.n	801e468 <__sflush_r+0x20>
 801e45c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801e45e:	2b00      	cmp	r3, #0
 801e460:	dc02      	bgt.n	801e468 <__sflush_r+0x20>
 801e462:	2000      	movs	r0, #0
 801e464:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e468:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801e46a:	2e00      	cmp	r6, #0
 801e46c:	d0f9      	beq.n	801e462 <__sflush_r+0x1a>
 801e46e:	2300      	movs	r3, #0
 801e470:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801e474:	682f      	ldr	r7, [r5, #0]
 801e476:	602b      	str	r3, [r5, #0]
 801e478:	d032      	beq.n	801e4e0 <__sflush_r+0x98>
 801e47a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801e47c:	89a3      	ldrh	r3, [r4, #12]
 801e47e:	075a      	lsls	r2, r3, #29
 801e480:	d505      	bpl.n	801e48e <__sflush_r+0x46>
 801e482:	6863      	ldr	r3, [r4, #4]
 801e484:	1ac0      	subs	r0, r0, r3
 801e486:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801e488:	b10b      	cbz	r3, 801e48e <__sflush_r+0x46>
 801e48a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801e48c:	1ac0      	subs	r0, r0, r3
 801e48e:	2300      	movs	r3, #0
 801e490:	4602      	mov	r2, r0
 801e492:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801e494:	6a21      	ldr	r1, [r4, #32]
 801e496:	4628      	mov	r0, r5
 801e498:	47b0      	blx	r6
 801e49a:	1c43      	adds	r3, r0, #1
 801e49c:	89a3      	ldrh	r3, [r4, #12]
 801e49e:	d106      	bne.n	801e4ae <__sflush_r+0x66>
 801e4a0:	6829      	ldr	r1, [r5, #0]
 801e4a2:	291d      	cmp	r1, #29
 801e4a4:	d82c      	bhi.n	801e500 <__sflush_r+0xb8>
 801e4a6:	4a2a      	ldr	r2, [pc, #168]	; (801e550 <__sflush_r+0x108>)
 801e4a8:	40ca      	lsrs	r2, r1
 801e4aa:	07d6      	lsls	r6, r2, #31
 801e4ac:	d528      	bpl.n	801e500 <__sflush_r+0xb8>
 801e4ae:	2200      	movs	r2, #0
 801e4b0:	6062      	str	r2, [r4, #4]
 801e4b2:	04d9      	lsls	r1, r3, #19
 801e4b4:	6922      	ldr	r2, [r4, #16]
 801e4b6:	6022      	str	r2, [r4, #0]
 801e4b8:	d504      	bpl.n	801e4c4 <__sflush_r+0x7c>
 801e4ba:	1c42      	adds	r2, r0, #1
 801e4bc:	d101      	bne.n	801e4c2 <__sflush_r+0x7a>
 801e4be:	682b      	ldr	r3, [r5, #0]
 801e4c0:	b903      	cbnz	r3, 801e4c4 <__sflush_r+0x7c>
 801e4c2:	6560      	str	r0, [r4, #84]	; 0x54
 801e4c4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801e4c6:	602f      	str	r7, [r5, #0]
 801e4c8:	2900      	cmp	r1, #0
 801e4ca:	d0ca      	beq.n	801e462 <__sflush_r+0x1a>
 801e4cc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801e4d0:	4299      	cmp	r1, r3
 801e4d2:	d002      	beq.n	801e4da <__sflush_r+0x92>
 801e4d4:	4628      	mov	r0, r5
 801e4d6:	f7ff fa73 	bl	801d9c0 <_free_r>
 801e4da:	2000      	movs	r0, #0
 801e4dc:	6360      	str	r0, [r4, #52]	; 0x34
 801e4de:	e7c1      	b.n	801e464 <__sflush_r+0x1c>
 801e4e0:	6a21      	ldr	r1, [r4, #32]
 801e4e2:	2301      	movs	r3, #1
 801e4e4:	4628      	mov	r0, r5
 801e4e6:	47b0      	blx	r6
 801e4e8:	1c41      	adds	r1, r0, #1
 801e4ea:	d1c7      	bne.n	801e47c <__sflush_r+0x34>
 801e4ec:	682b      	ldr	r3, [r5, #0]
 801e4ee:	2b00      	cmp	r3, #0
 801e4f0:	d0c4      	beq.n	801e47c <__sflush_r+0x34>
 801e4f2:	2b1d      	cmp	r3, #29
 801e4f4:	d001      	beq.n	801e4fa <__sflush_r+0xb2>
 801e4f6:	2b16      	cmp	r3, #22
 801e4f8:	d101      	bne.n	801e4fe <__sflush_r+0xb6>
 801e4fa:	602f      	str	r7, [r5, #0]
 801e4fc:	e7b1      	b.n	801e462 <__sflush_r+0x1a>
 801e4fe:	89a3      	ldrh	r3, [r4, #12]
 801e500:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801e504:	81a3      	strh	r3, [r4, #12]
 801e506:	e7ad      	b.n	801e464 <__sflush_r+0x1c>
 801e508:	690f      	ldr	r7, [r1, #16]
 801e50a:	2f00      	cmp	r7, #0
 801e50c:	d0a9      	beq.n	801e462 <__sflush_r+0x1a>
 801e50e:	0793      	lsls	r3, r2, #30
 801e510:	680e      	ldr	r6, [r1, #0]
 801e512:	bf08      	it	eq
 801e514:	694b      	ldreq	r3, [r1, #20]
 801e516:	600f      	str	r7, [r1, #0]
 801e518:	bf18      	it	ne
 801e51a:	2300      	movne	r3, #0
 801e51c:	eba6 0807 	sub.w	r8, r6, r7
 801e520:	608b      	str	r3, [r1, #8]
 801e522:	f1b8 0f00 	cmp.w	r8, #0
 801e526:	dd9c      	ble.n	801e462 <__sflush_r+0x1a>
 801e528:	6a21      	ldr	r1, [r4, #32]
 801e52a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801e52c:	4643      	mov	r3, r8
 801e52e:	463a      	mov	r2, r7
 801e530:	4628      	mov	r0, r5
 801e532:	47b0      	blx	r6
 801e534:	2800      	cmp	r0, #0
 801e536:	dc06      	bgt.n	801e546 <__sflush_r+0xfe>
 801e538:	89a3      	ldrh	r3, [r4, #12]
 801e53a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801e53e:	81a3      	strh	r3, [r4, #12]
 801e540:	f04f 30ff 	mov.w	r0, #4294967295
 801e544:	e78e      	b.n	801e464 <__sflush_r+0x1c>
 801e546:	4407      	add	r7, r0
 801e548:	eba8 0800 	sub.w	r8, r8, r0
 801e54c:	e7e9      	b.n	801e522 <__sflush_r+0xda>
 801e54e:	bf00      	nop
 801e550:	20400001 	.word	0x20400001

0801e554 <_fflush_r>:
 801e554:	b538      	push	{r3, r4, r5, lr}
 801e556:	690b      	ldr	r3, [r1, #16]
 801e558:	4605      	mov	r5, r0
 801e55a:	460c      	mov	r4, r1
 801e55c:	b913      	cbnz	r3, 801e564 <_fflush_r+0x10>
 801e55e:	2500      	movs	r5, #0
 801e560:	4628      	mov	r0, r5
 801e562:	bd38      	pop	{r3, r4, r5, pc}
 801e564:	b118      	cbz	r0, 801e56e <_fflush_r+0x1a>
 801e566:	6983      	ldr	r3, [r0, #24]
 801e568:	b90b      	cbnz	r3, 801e56e <_fflush_r+0x1a>
 801e56a:	f000 f887 	bl	801e67c <__sinit>
 801e56e:	4b14      	ldr	r3, [pc, #80]	; (801e5c0 <_fflush_r+0x6c>)
 801e570:	429c      	cmp	r4, r3
 801e572:	d11b      	bne.n	801e5ac <_fflush_r+0x58>
 801e574:	686c      	ldr	r4, [r5, #4]
 801e576:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e57a:	2b00      	cmp	r3, #0
 801e57c:	d0ef      	beq.n	801e55e <_fflush_r+0xa>
 801e57e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801e580:	07d0      	lsls	r0, r2, #31
 801e582:	d404      	bmi.n	801e58e <_fflush_r+0x3a>
 801e584:	0599      	lsls	r1, r3, #22
 801e586:	d402      	bmi.n	801e58e <_fflush_r+0x3a>
 801e588:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801e58a:	f000 f915 	bl	801e7b8 <__retarget_lock_acquire_recursive>
 801e58e:	4628      	mov	r0, r5
 801e590:	4621      	mov	r1, r4
 801e592:	f7ff ff59 	bl	801e448 <__sflush_r>
 801e596:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801e598:	07da      	lsls	r2, r3, #31
 801e59a:	4605      	mov	r5, r0
 801e59c:	d4e0      	bmi.n	801e560 <_fflush_r+0xc>
 801e59e:	89a3      	ldrh	r3, [r4, #12]
 801e5a0:	059b      	lsls	r3, r3, #22
 801e5a2:	d4dd      	bmi.n	801e560 <_fflush_r+0xc>
 801e5a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801e5a6:	f000 f909 	bl	801e7bc <__retarget_lock_release_recursive>
 801e5aa:	e7d9      	b.n	801e560 <_fflush_r+0xc>
 801e5ac:	4b05      	ldr	r3, [pc, #20]	; (801e5c4 <_fflush_r+0x70>)
 801e5ae:	429c      	cmp	r4, r3
 801e5b0:	d101      	bne.n	801e5b6 <_fflush_r+0x62>
 801e5b2:	68ac      	ldr	r4, [r5, #8]
 801e5b4:	e7df      	b.n	801e576 <_fflush_r+0x22>
 801e5b6:	4b04      	ldr	r3, [pc, #16]	; (801e5c8 <_fflush_r+0x74>)
 801e5b8:	429c      	cmp	r4, r3
 801e5ba:	bf08      	it	eq
 801e5bc:	68ec      	ldreq	r4, [r5, #12]
 801e5be:	e7da      	b.n	801e576 <_fflush_r+0x22>
 801e5c0:	08020af4 	.word	0x08020af4
 801e5c4:	08020b14 	.word	0x08020b14
 801e5c8:	08020ad4 	.word	0x08020ad4

0801e5cc <std>:
 801e5cc:	2300      	movs	r3, #0
 801e5ce:	b510      	push	{r4, lr}
 801e5d0:	4604      	mov	r4, r0
 801e5d2:	e9c0 3300 	strd	r3, r3, [r0]
 801e5d6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801e5da:	6083      	str	r3, [r0, #8]
 801e5dc:	8181      	strh	r1, [r0, #12]
 801e5de:	6643      	str	r3, [r0, #100]	; 0x64
 801e5e0:	81c2      	strh	r2, [r0, #14]
 801e5e2:	6183      	str	r3, [r0, #24]
 801e5e4:	4619      	mov	r1, r3
 801e5e6:	2208      	movs	r2, #8
 801e5e8:	305c      	adds	r0, #92	; 0x5c
 801e5ea:	f7ff f9e1 	bl	801d9b0 <memset>
 801e5ee:	4b05      	ldr	r3, [pc, #20]	; (801e604 <std+0x38>)
 801e5f0:	6263      	str	r3, [r4, #36]	; 0x24
 801e5f2:	4b05      	ldr	r3, [pc, #20]	; (801e608 <std+0x3c>)
 801e5f4:	62a3      	str	r3, [r4, #40]	; 0x28
 801e5f6:	4b05      	ldr	r3, [pc, #20]	; (801e60c <std+0x40>)
 801e5f8:	62e3      	str	r3, [r4, #44]	; 0x2c
 801e5fa:	4b05      	ldr	r3, [pc, #20]	; (801e610 <std+0x44>)
 801e5fc:	6224      	str	r4, [r4, #32]
 801e5fe:	6323      	str	r3, [r4, #48]	; 0x30
 801e600:	bd10      	pop	{r4, pc}
 801e602:	bf00      	nop
 801e604:	0801e8a1 	.word	0x0801e8a1
 801e608:	0801e8c3 	.word	0x0801e8c3
 801e60c:	0801e8fb 	.word	0x0801e8fb
 801e610:	0801e91f 	.word	0x0801e91f

0801e614 <_cleanup_r>:
 801e614:	4901      	ldr	r1, [pc, #4]	; (801e61c <_cleanup_r+0x8>)
 801e616:	f000 b8af 	b.w	801e778 <_fwalk_reent>
 801e61a:	bf00      	nop
 801e61c:	0801e555 	.word	0x0801e555

0801e620 <__sfmoreglue>:
 801e620:	b570      	push	{r4, r5, r6, lr}
 801e622:	2268      	movs	r2, #104	; 0x68
 801e624:	1e4d      	subs	r5, r1, #1
 801e626:	4355      	muls	r5, r2
 801e628:	460e      	mov	r6, r1
 801e62a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801e62e:	f7ff fa33 	bl	801da98 <_malloc_r>
 801e632:	4604      	mov	r4, r0
 801e634:	b140      	cbz	r0, 801e648 <__sfmoreglue+0x28>
 801e636:	2100      	movs	r1, #0
 801e638:	e9c0 1600 	strd	r1, r6, [r0]
 801e63c:	300c      	adds	r0, #12
 801e63e:	60a0      	str	r0, [r4, #8]
 801e640:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801e644:	f7ff f9b4 	bl	801d9b0 <memset>
 801e648:	4620      	mov	r0, r4
 801e64a:	bd70      	pop	{r4, r5, r6, pc}

0801e64c <__sfp_lock_acquire>:
 801e64c:	4801      	ldr	r0, [pc, #4]	; (801e654 <__sfp_lock_acquire+0x8>)
 801e64e:	f000 b8b3 	b.w	801e7b8 <__retarget_lock_acquire_recursive>
 801e652:	bf00      	nop
 801e654:	20013132 	.word	0x20013132

0801e658 <__sfp_lock_release>:
 801e658:	4801      	ldr	r0, [pc, #4]	; (801e660 <__sfp_lock_release+0x8>)
 801e65a:	f000 b8af 	b.w	801e7bc <__retarget_lock_release_recursive>
 801e65e:	bf00      	nop
 801e660:	20013132 	.word	0x20013132

0801e664 <__sinit_lock_acquire>:
 801e664:	4801      	ldr	r0, [pc, #4]	; (801e66c <__sinit_lock_acquire+0x8>)
 801e666:	f000 b8a7 	b.w	801e7b8 <__retarget_lock_acquire_recursive>
 801e66a:	bf00      	nop
 801e66c:	20013133 	.word	0x20013133

0801e670 <__sinit_lock_release>:
 801e670:	4801      	ldr	r0, [pc, #4]	; (801e678 <__sinit_lock_release+0x8>)
 801e672:	f000 b8a3 	b.w	801e7bc <__retarget_lock_release_recursive>
 801e676:	bf00      	nop
 801e678:	20013133 	.word	0x20013133

0801e67c <__sinit>:
 801e67c:	b510      	push	{r4, lr}
 801e67e:	4604      	mov	r4, r0
 801e680:	f7ff fff0 	bl	801e664 <__sinit_lock_acquire>
 801e684:	69a3      	ldr	r3, [r4, #24]
 801e686:	b11b      	cbz	r3, 801e690 <__sinit+0x14>
 801e688:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e68c:	f7ff bff0 	b.w	801e670 <__sinit_lock_release>
 801e690:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801e694:	6523      	str	r3, [r4, #80]	; 0x50
 801e696:	4b13      	ldr	r3, [pc, #76]	; (801e6e4 <__sinit+0x68>)
 801e698:	4a13      	ldr	r2, [pc, #76]	; (801e6e8 <__sinit+0x6c>)
 801e69a:	681b      	ldr	r3, [r3, #0]
 801e69c:	62a2      	str	r2, [r4, #40]	; 0x28
 801e69e:	42a3      	cmp	r3, r4
 801e6a0:	bf04      	itt	eq
 801e6a2:	2301      	moveq	r3, #1
 801e6a4:	61a3      	streq	r3, [r4, #24]
 801e6a6:	4620      	mov	r0, r4
 801e6a8:	f000 f820 	bl	801e6ec <__sfp>
 801e6ac:	6060      	str	r0, [r4, #4]
 801e6ae:	4620      	mov	r0, r4
 801e6b0:	f000 f81c 	bl	801e6ec <__sfp>
 801e6b4:	60a0      	str	r0, [r4, #8]
 801e6b6:	4620      	mov	r0, r4
 801e6b8:	f000 f818 	bl	801e6ec <__sfp>
 801e6bc:	2200      	movs	r2, #0
 801e6be:	60e0      	str	r0, [r4, #12]
 801e6c0:	2104      	movs	r1, #4
 801e6c2:	6860      	ldr	r0, [r4, #4]
 801e6c4:	f7ff ff82 	bl	801e5cc <std>
 801e6c8:	68a0      	ldr	r0, [r4, #8]
 801e6ca:	2201      	movs	r2, #1
 801e6cc:	2109      	movs	r1, #9
 801e6ce:	f7ff ff7d 	bl	801e5cc <std>
 801e6d2:	68e0      	ldr	r0, [r4, #12]
 801e6d4:	2202      	movs	r2, #2
 801e6d6:	2112      	movs	r1, #18
 801e6d8:	f7ff ff78 	bl	801e5cc <std>
 801e6dc:	2301      	movs	r3, #1
 801e6de:	61a3      	str	r3, [r4, #24]
 801e6e0:	e7d2      	b.n	801e688 <__sinit+0xc>
 801e6e2:	bf00      	nop
 801e6e4:	08020a98 	.word	0x08020a98
 801e6e8:	0801e615 	.word	0x0801e615

0801e6ec <__sfp>:
 801e6ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e6ee:	4607      	mov	r7, r0
 801e6f0:	f7ff ffac 	bl	801e64c <__sfp_lock_acquire>
 801e6f4:	4b1e      	ldr	r3, [pc, #120]	; (801e770 <__sfp+0x84>)
 801e6f6:	681e      	ldr	r6, [r3, #0]
 801e6f8:	69b3      	ldr	r3, [r6, #24]
 801e6fa:	b913      	cbnz	r3, 801e702 <__sfp+0x16>
 801e6fc:	4630      	mov	r0, r6
 801e6fe:	f7ff ffbd 	bl	801e67c <__sinit>
 801e702:	3648      	adds	r6, #72	; 0x48
 801e704:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801e708:	3b01      	subs	r3, #1
 801e70a:	d503      	bpl.n	801e714 <__sfp+0x28>
 801e70c:	6833      	ldr	r3, [r6, #0]
 801e70e:	b30b      	cbz	r3, 801e754 <__sfp+0x68>
 801e710:	6836      	ldr	r6, [r6, #0]
 801e712:	e7f7      	b.n	801e704 <__sfp+0x18>
 801e714:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801e718:	b9d5      	cbnz	r5, 801e750 <__sfp+0x64>
 801e71a:	4b16      	ldr	r3, [pc, #88]	; (801e774 <__sfp+0x88>)
 801e71c:	60e3      	str	r3, [r4, #12]
 801e71e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801e722:	6665      	str	r5, [r4, #100]	; 0x64
 801e724:	f000 f847 	bl	801e7b6 <__retarget_lock_init_recursive>
 801e728:	f7ff ff96 	bl	801e658 <__sfp_lock_release>
 801e72c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801e730:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801e734:	6025      	str	r5, [r4, #0]
 801e736:	61a5      	str	r5, [r4, #24]
 801e738:	2208      	movs	r2, #8
 801e73a:	4629      	mov	r1, r5
 801e73c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801e740:	f7ff f936 	bl	801d9b0 <memset>
 801e744:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801e748:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801e74c:	4620      	mov	r0, r4
 801e74e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801e750:	3468      	adds	r4, #104	; 0x68
 801e752:	e7d9      	b.n	801e708 <__sfp+0x1c>
 801e754:	2104      	movs	r1, #4
 801e756:	4638      	mov	r0, r7
 801e758:	f7ff ff62 	bl	801e620 <__sfmoreglue>
 801e75c:	4604      	mov	r4, r0
 801e75e:	6030      	str	r0, [r6, #0]
 801e760:	2800      	cmp	r0, #0
 801e762:	d1d5      	bne.n	801e710 <__sfp+0x24>
 801e764:	f7ff ff78 	bl	801e658 <__sfp_lock_release>
 801e768:	230c      	movs	r3, #12
 801e76a:	603b      	str	r3, [r7, #0]
 801e76c:	e7ee      	b.n	801e74c <__sfp+0x60>
 801e76e:	bf00      	nop
 801e770:	08020a98 	.word	0x08020a98
 801e774:	ffff0001 	.word	0xffff0001

0801e778 <_fwalk_reent>:
 801e778:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801e77c:	4606      	mov	r6, r0
 801e77e:	4688      	mov	r8, r1
 801e780:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801e784:	2700      	movs	r7, #0
 801e786:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801e78a:	f1b9 0901 	subs.w	r9, r9, #1
 801e78e:	d505      	bpl.n	801e79c <_fwalk_reent+0x24>
 801e790:	6824      	ldr	r4, [r4, #0]
 801e792:	2c00      	cmp	r4, #0
 801e794:	d1f7      	bne.n	801e786 <_fwalk_reent+0xe>
 801e796:	4638      	mov	r0, r7
 801e798:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801e79c:	89ab      	ldrh	r3, [r5, #12]
 801e79e:	2b01      	cmp	r3, #1
 801e7a0:	d907      	bls.n	801e7b2 <_fwalk_reent+0x3a>
 801e7a2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801e7a6:	3301      	adds	r3, #1
 801e7a8:	d003      	beq.n	801e7b2 <_fwalk_reent+0x3a>
 801e7aa:	4629      	mov	r1, r5
 801e7ac:	4630      	mov	r0, r6
 801e7ae:	47c0      	blx	r8
 801e7b0:	4307      	orrs	r7, r0
 801e7b2:	3568      	adds	r5, #104	; 0x68
 801e7b4:	e7e9      	b.n	801e78a <_fwalk_reent+0x12>

0801e7b6 <__retarget_lock_init_recursive>:
 801e7b6:	4770      	bx	lr

0801e7b8 <__retarget_lock_acquire_recursive>:
 801e7b8:	4770      	bx	lr

0801e7ba <__retarget_lock_release>:
 801e7ba:	4770      	bx	lr

0801e7bc <__retarget_lock_release_recursive>:
 801e7bc:	4770      	bx	lr

0801e7be <__swhatbuf_r>:
 801e7be:	b570      	push	{r4, r5, r6, lr}
 801e7c0:	460e      	mov	r6, r1
 801e7c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e7c6:	2900      	cmp	r1, #0
 801e7c8:	b096      	sub	sp, #88	; 0x58
 801e7ca:	4614      	mov	r4, r2
 801e7cc:	461d      	mov	r5, r3
 801e7ce:	da08      	bge.n	801e7e2 <__swhatbuf_r+0x24>
 801e7d0:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801e7d4:	2200      	movs	r2, #0
 801e7d6:	602a      	str	r2, [r5, #0]
 801e7d8:	061a      	lsls	r2, r3, #24
 801e7da:	d410      	bmi.n	801e7fe <__swhatbuf_r+0x40>
 801e7dc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801e7e0:	e00e      	b.n	801e800 <__swhatbuf_r+0x42>
 801e7e2:	466a      	mov	r2, sp
 801e7e4:	f000 f8c2 	bl	801e96c <_fstat_r>
 801e7e8:	2800      	cmp	r0, #0
 801e7ea:	dbf1      	blt.n	801e7d0 <__swhatbuf_r+0x12>
 801e7ec:	9a01      	ldr	r2, [sp, #4]
 801e7ee:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801e7f2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801e7f6:	425a      	negs	r2, r3
 801e7f8:	415a      	adcs	r2, r3
 801e7fa:	602a      	str	r2, [r5, #0]
 801e7fc:	e7ee      	b.n	801e7dc <__swhatbuf_r+0x1e>
 801e7fe:	2340      	movs	r3, #64	; 0x40
 801e800:	2000      	movs	r0, #0
 801e802:	6023      	str	r3, [r4, #0]
 801e804:	b016      	add	sp, #88	; 0x58
 801e806:	bd70      	pop	{r4, r5, r6, pc}

0801e808 <__smakebuf_r>:
 801e808:	898b      	ldrh	r3, [r1, #12]
 801e80a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801e80c:	079d      	lsls	r5, r3, #30
 801e80e:	4606      	mov	r6, r0
 801e810:	460c      	mov	r4, r1
 801e812:	d507      	bpl.n	801e824 <__smakebuf_r+0x1c>
 801e814:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801e818:	6023      	str	r3, [r4, #0]
 801e81a:	6123      	str	r3, [r4, #16]
 801e81c:	2301      	movs	r3, #1
 801e81e:	6163      	str	r3, [r4, #20]
 801e820:	b002      	add	sp, #8
 801e822:	bd70      	pop	{r4, r5, r6, pc}
 801e824:	ab01      	add	r3, sp, #4
 801e826:	466a      	mov	r2, sp
 801e828:	f7ff ffc9 	bl	801e7be <__swhatbuf_r>
 801e82c:	9900      	ldr	r1, [sp, #0]
 801e82e:	4605      	mov	r5, r0
 801e830:	4630      	mov	r0, r6
 801e832:	f7ff f931 	bl	801da98 <_malloc_r>
 801e836:	b948      	cbnz	r0, 801e84c <__smakebuf_r+0x44>
 801e838:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e83c:	059a      	lsls	r2, r3, #22
 801e83e:	d4ef      	bmi.n	801e820 <__smakebuf_r+0x18>
 801e840:	f023 0303 	bic.w	r3, r3, #3
 801e844:	f043 0302 	orr.w	r3, r3, #2
 801e848:	81a3      	strh	r3, [r4, #12]
 801e84a:	e7e3      	b.n	801e814 <__smakebuf_r+0xc>
 801e84c:	4b0d      	ldr	r3, [pc, #52]	; (801e884 <__smakebuf_r+0x7c>)
 801e84e:	62b3      	str	r3, [r6, #40]	; 0x28
 801e850:	89a3      	ldrh	r3, [r4, #12]
 801e852:	6020      	str	r0, [r4, #0]
 801e854:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801e858:	81a3      	strh	r3, [r4, #12]
 801e85a:	9b00      	ldr	r3, [sp, #0]
 801e85c:	6163      	str	r3, [r4, #20]
 801e85e:	9b01      	ldr	r3, [sp, #4]
 801e860:	6120      	str	r0, [r4, #16]
 801e862:	b15b      	cbz	r3, 801e87c <__smakebuf_r+0x74>
 801e864:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801e868:	4630      	mov	r0, r6
 801e86a:	f000 f891 	bl	801e990 <_isatty_r>
 801e86e:	b128      	cbz	r0, 801e87c <__smakebuf_r+0x74>
 801e870:	89a3      	ldrh	r3, [r4, #12]
 801e872:	f023 0303 	bic.w	r3, r3, #3
 801e876:	f043 0301 	orr.w	r3, r3, #1
 801e87a:	81a3      	strh	r3, [r4, #12]
 801e87c:	89a0      	ldrh	r0, [r4, #12]
 801e87e:	4305      	orrs	r5, r0
 801e880:	81a5      	strh	r5, [r4, #12]
 801e882:	e7cd      	b.n	801e820 <__smakebuf_r+0x18>
 801e884:	0801e615 	.word	0x0801e615

0801e888 <__malloc_lock>:
 801e888:	4801      	ldr	r0, [pc, #4]	; (801e890 <__malloc_lock+0x8>)
 801e88a:	f7ff bf95 	b.w	801e7b8 <__retarget_lock_acquire_recursive>
 801e88e:	bf00      	nop
 801e890:	20013131 	.word	0x20013131

0801e894 <__malloc_unlock>:
 801e894:	4801      	ldr	r0, [pc, #4]	; (801e89c <__malloc_unlock+0x8>)
 801e896:	f7ff bf91 	b.w	801e7bc <__retarget_lock_release_recursive>
 801e89a:	bf00      	nop
 801e89c:	20013131 	.word	0x20013131

0801e8a0 <__sread>:
 801e8a0:	b510      	push	{r4, lr}
 801e8a2:	460c      	mov	r4, r1
 801e8a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e8a8:	f000 f894 	bl	801e9d4 <_read_r>
 801e8ac:	2800      	cmp	r0, #0
 801e8ae:	bfab      	itete	ge
 801e8b0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801e8b2:	89a3      	ldrhlt	r3, [r4, #12]
 801e8b4:	181b      	addge	r3, r3, r0
 801e8b6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801e8ba:	bfac      	ite	ge
 801e8bc:	6563      	strge	r3, [r4, #84]	; 0x54
 801e8be:	81a3      	strhlt	r3, [r4, #12]
 801e8c0:	bd10      	pop	{r4, pc}

0801e8c2 <__swrite>:
 801e8c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e8c6:	461f      	mov	r7, r3
 801e8c8:	898b      	ldrh	r3, [r1, #12]
 801e8ca:	05db      	lsls	r3, r3, #23
 801e8cc:	4605      	mov	r5, r0
 801e8ce:	460c      	mov	r4, r1
 801e8d0:	4616      	mov	r6, r2
 801e8d2:	d505      	bpl.n	801e8e0 <__swrite+0x1e>
 801e8d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e8d8:	2302      	movs	r3, #2
 801e8da:	2200      	movs	r2, #0
 801e8dc:	f000 f868 	bl	801e9b0 <_lseek_r>
 801e8e0:	89a3      	ldrh	r3, [r4, #12]
 801e8e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801e8e6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801e8ea:	81a3      	strh	r3, [r4, #12]
 801e8ec:	4632      	mov	r2, r6
 801e8ee:	463b      	mov	r3, r7
 801e8f0:	4628      	mov	r0, r5
 801e8f2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801e8f6:	f000 b817 	b.w	801e928 <_write_r>

0801e8fa <__sseek>:
 801e8fa:	b510      	push	{r4, lr}
 801e8fc:	460c      	mov	r4, r1
 801e8fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e902:	f000 f855 	bl	801e9b0 <_lseek_r>
 801e906:	1c43      	adds	r3, r0, #1
 801e908:	89a3      	ldrh	r3, [r4, #12]
 801e90a:	bf15      	itete	ne
 801e90c:	6560      	strne	r0, [r4, #84]	; 0x54
 801e90e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801e912:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801e916:	81a3      	strheq	r3, [r4, #12]
 801e918:	bf18      	it	ne
 801e91a:	81a3      	strhne	r3, [r4, #12]
 801e91c:	bd10      	pop	{r4, pc}

0801e91e <__sclose>:
 801e91e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e922:	f000 b813 	b.w	801e94c <_close_r>
	...

0801e928 <_write_r>:
 801e928:	b538      	push	{r3, r4, r5, lr}
 801e92a:	4d07      	ldr	r5, [pc, #28]	; (801e948 <_write_r+0x20>)
 801e92c:	4604      	mov	r4, r0
 801e92e:	4608      	mov	r0, r1
 801e930:	4611      	mov	r1, r2
 801e932:	2200      	movs	r2, #0
 801e934:	602a      	str	r2, [r5, #0]
 801e936:	461a      	mov	r2, r3
 801e938:	f7e3 fb9c 	bl	8002074 <_write>
 801e93c:	1c43      	adds	r3, r0, #1
 801e93e:	d102      	bne.n	801e946 <_write_r+0x1e>
 801e940:	682b      	ldr	r3, [r5, #0]
 801e942:	b103      	cbz	r3, 801e946 <_write_r+0x1e>
 801e944:	6023      	str	r3, [r4, #0]
 801e946:	bd38      	pop	{r3, r4, r5, pc}
 801e948:	20013134 	.word	0x20013134

0801e94c <_close_r>:
 801e94c:	b538      	push	{r3, r4, r5, lr}
 801e94e:	4d06      	ldr	r5, [pc, #24]	; (801e968 <_close_r+0x1c>)
 801e950:	2300      	movs	r3, #0
 801e952:	4604      	mov	r4, r0
 801e954:	4608      	mov	r0, r1
 801e956:	602b      	str	r3, [r5, #0]
 801e958:	f7e3 fb9a 	bl	8002090 <_close>
 801e95c:	1c43      	adds	r3, r0, #1
 801e95e:	d102      	bne.n	801e966 <_close_r+0x1a>
 801e960:	682b      	ldr	r3, [r5, #0]
 801e962:	b103      	cbz	r3, 801e966 <_close_r+0x1a>
 801e964:	6023      	str	r3, [r4, #0]
 801e966:	bd38      	pop	{r3, r4, r5, pc}
 801e968:	20013134 	.word	0x20013134

0801e96c <_fstat_r>:
 801e96c:	b538      	push	{r3, r4, r5, lr}
 801e96e:	4d07      	ldr	r5, [pc, #28]	; (801e98c <_fstat_r+0x20>)
 801e970:	2300      	movs	r3, #0
 801e972:	4604      	mov	r4, r0
 801e974:	4608      	mov	r0, r1
 801e976:	4611      	mov	r1, r2
 801e978:	602b      	str	r3, [r5, #0]
 801e97a:	f7e3 fb8c 	bl	8002096 <_fstat>
 801e97e:	1c43      	adds	r3, r0, #1
 801e980:	d102      	bne.n	801e988 <_fstat_r+0x1c>
 801e982:	682b      	ldr	r3, [r5, #0]
 801e984:	b103      	cbz	r3, 801e988 <_fstat_r+0x1c>
 801e986:	6023      	str	r3, [r4, #0]
 801e988:	bd38      	pop	{r3, r4, r5, pc}
 801e98a:	bf00      	nop
 801e98c:	20013134 	.word	0x20013134

0801e990 <_isatty_r>:
 801e990:	b538      	push	{r3, r4, r5, lr}
 801e992:	4d06      	ldr	r5, [pc, #24]	; (801e9ac <_isatty_r+0x1c>)
 801e994:	2300      	movs	r3, #0
 801e996:	4604      	mov	r4, r0
 801e998:	4608      	mov	r0, r1
 801e99a:	602b      	str	r3, [r5, #0]
 801e99c:	f7e3 fb80 	bl	80020a0 <_isatty>
 801e9a0:	1c43      	adds	r3, r0, #1
 801e9a2:	d102      	bne.n	801e9aa <_isatty_r+0x1a>
 801e9a4:	682b      	ldr	r3, [r5, #0]
 801e9a6:	b103      	cbz	r3, 801e9aa <_isatty_r+0x1a>
 801e9a8:	6023      	str	r3, [r4, #0]
 801e9aa:	bd38      	pop	{r3, r4, r5, pc}
 801e9ac:	20013134 	.word	0x20013134

0801e9b0 <_lseek_r>:
 801e9b0:	b538      	push	{r3, r4, r5, lr}
 801e9b2:	4d07      	ldr	r5, [pc, #28]	; (801e9d0 <_lseek_r+0x20>)
 801e9b4:	4604      	mov	r4, r0
 801e9b6:	4608      	mov	r0, r1
 801e9b8:	4611      	mov	r1, r2
 801e9ba:	2200      	movs	r2, #0
 801e9bc:	602a      	str	r2, [r5, #0]
 801e9be:	461a      	mov	r2, r3
 801e9c0:	f7e3 fb70 	bl	80020a4 <_lseek>
 801e9c4:	1c43      	adds	r3, r0, #1
 801e9c6:	d102      	bne.n	801e9ce <_lseek_r+0x1e>
 801e9c8:	682b      	ldr	r3, [r5, #0]
 801e9ca:	b103      	cbz	r3, 801e9ce <_lseek_r+0x1e>
 801e9cc:	6023      	str	r3, [r4, #0]
 801e9ce:	bd38      	pop	{r3, r4, r5, pc}
 801e9d0:	20013134 	.word	0x20013134

0801e9d4 <_read_r>:
 801e9d4:	b538      	push	{r3, r4, r5, lr}
 801e9d6:	4d07      	ldr	r5, [pc, #28]	; (801e9f4 <_read_r+0x20>)
 801e9d8:	4604      	mov	r4, r0
 801e9da:	4608      	mov	r0, r1
 801e9dc:	4611      	mov	r1, r2
 801e9de:	2200      	movs	r2, #0
 801e9e0:	602a      	str	r2, [r5, #0]
 801e9e2:	461a      	mov	r2, r3
 801e9e4:	f7e3 fb38 	bl	8002058 <_read>
 801e9e8:	1c43      	adds	r3, r0, #1
 801e9ea:	d102      	bne.n	801e9f2 <_read_r+0x1e>
 801e9ec:	682b      	ldr	r3, [r5, #0]
 801e9ee:	b103      	cbz	r3, 801e9f2 <_read_r+0x1e>
 801e9f0:	6023      	str	r3, [r4, #0]
 801e9f2:	bd38      	pop	{r3, r4, r5, pc}
 801e9f4:	20013134 	.word	0x20013134

0801e9f8 <_init>:
 801e9f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e9fa:	bf00      	nop
 801e9fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801e9fe:	bc08      	pop	{r3}
 801ea00:	469e      	mov	lr, r3
 801ea02:	4770      	bx	lr

0801ea04 <_fini>:
 801ea04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ea06:	bf00      	nop
 801ea08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801ea0a:	bc08      	pop	{r3}
 801ea0c:	469e      	mov	lr, r3
 801ea0e:	4770      	bx	lr
